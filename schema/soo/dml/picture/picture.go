//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package picture

import (
	_e "encoding/xml"

	_bg "github.com/gou-jjjj/unioffice"
	_b "github.com/gou-jjjj/unioffice/common/logger"
	_a "github.com/gou-jjjj/unioffice/schema/soo/dml"
)

func (_eb *CT_Picture) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_f := _e.StartElement{Name: _e.Name{Local: "p\u0069\u0063\u003a\u006e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_eb.NvPicPr, _f)
	_fg := _e.StartElement{Name: _e.Name{Local: "\u0070\u0069\u0063:\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_eb.BlipFill, _fg)
	_c := _e.StartElement{Name: _e.Name{Local: "\u0070\u0069\u0063\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_eb.SpPr, _c)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Pic and its children
func (_dcb *Pic) Validate() error { return _dcb.ValidateWithPath("\u0050\u0069\u0063") }

// Validate validates the CT_Picture and its children
func (_ga *CT_Picture) Validate() error {
	return _ga.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

type Pic struct{ CT_Picture }

func (_bdd *Pic) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070\u0069c"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070i\u0063\u003a\u0070\u0069\u0063"
	return _bdd.CT_Picture.MarshalXML(e, start)
}
func (_cb *Pic) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cb.CT_Picture = *NewCT_Picture()
_cg:
	for {
		_ad, _af := d.Token()
		if _af != nil {
			return _af
		}
		switch _bdf := _ad.(type) {
		case _e.StartElement:
			switch _bdf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _gf := d.DecodeElement(_cb.NvPicPr, &_bdf); _gf != nil {
					return _gf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _ddg := d.DecodeElement(_cb.BlipFill, &_bdf); _ddg != nil {
					return _ddg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}:
				if _ef := d.DecodeElement(_cb.SpPr, &_bdf); _ef != nil {
					return _ef
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0050i\u0063\u0020\u0025\u0076", _bdf.Name)
				if _ge := d.Skip(); _ge != nil {
					return _ge
				}
			}
		case _e.EndElement:
			break _cg
		case _e.CharData:
		}
	}
	return nil
}
func (_bda *CT_PictureNonVisual) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_gb := _e.StartElement{Name: _e.Name{Local: "\u0070i\u0063\u003a\u0063\u004e\u0076\u0050r"}}
	e.EncodeElement(_bda.CNvPr, _gb)
	_bbg := _e.StartElement{Name: _e.Name{Local: "\u0070\u0069\u0063:\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_bda.CNvPicPr, _bbg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_gc *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _aae := _gc.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aae != nil {
		return _aae
	}
	if _ca := _gc.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _ca != nil {
		return _ca
	}
	return nil
}
func (_bga *CT_PictureNonVisual) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bga.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_bga.CNvPicPr = _a.NewCT_NonVisualPictureProperties()
_eg:
	for {
		_gac, _ead := d.Token()
		if _ead != nil {
			return _ead
		}
		switch _aa := _gac.(type) {
		case _e.StartElement:
			switch _aa.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0063\u004e\u0076P\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cc := d.DecodeElement(_bga.CNvPr, &_aa); _cc != nil {
					return _cc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _ee := d.DecodeElement(_bga.CNvPicPr, &_aa); _ee != nil {
					return _ee
				}
			default:
				_b.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _aa.Name)
				if _fa := d.Skip(); _fa != nil {
					return _fa
				}
			}
		case _e.EndElement:
			break _eg
		case _e.CharData:
		}
	}
	return nil
}

type CT_PictureNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_a.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_a.CT_NonVisualPictureProperties
}
type CT_Picture struct {

	// Non-Visual Picture Properties
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_a.CT_BlipFillProperties

	// Shape Properties
	SpPr *_a.CT_ShapeProperties
}

func NewPic() *Pic { _fgae := &Pic{}; _fgae.CT_Picture = *NewCT_Picture(); return _fgae }

// Validate validates the CT_PictureNonVisual and its children
func (_dd *CT_PictureNonVisual) Validate() error {
	return _dd.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_Picture() *CT_Picture {
	_bb := &CT_Picture{}
	_bb.NvPicPr = NewCT_PictureNonVisual()
	_bb.BlipFill = _a.NewCT_BlipFillProperties()
	_bb.SpPr = _a.NewCT_ShapeProperties()
	return _bb
}
func (_g *CT_Picture) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_g.NvPicPr = NewCT_PictureNonVisual()
	_g.BlipFill = _a.NewCT_BlipFillProperties()
	_g.SpPr = _a.NewCT_ShapeProperties()
_da:
	for {
		_ea, _fga := d.Token()
		if _fga != nil {
			return _fga
		}
		switch _fe := _ea.(type) {
		case _e.StartElement:
			switch _fe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _eba := d.DecodeElement(_g.NvPicPr, &_fe); _eba != nil {
					return _eba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _cd := d.DecodeElement(_g.BlipFill, &_fe); _cd != nil {
					return _cd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}, _e.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070\u0075r\u006c\u002e\u006fc\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006fxm\u006c\u002f\u0064r\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0070i\u0063\u0074u\u0072\u0065", Local: "\u0073\u0070\u0050\u0072"}:
				if _dc := d.DecodeElement(_g.SpPr, &_fe); _dc != nil {
					return _dc
				}
			default:
				_b.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _fe.Name)
				if _fd := d.Skip(); _fd != nil {
					return _fd
				}
			}
		case _e.EndElement:
			break _da
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_bd *CT_Picture) ValidateWithPath(path string) error {
	if _gd := _bd.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _gd != nil {
		return _gd
	}
	if _ed := _bd.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ed != nil {
		return _ed
	}
	if _fec := _bd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _fec != nil {
		return _fec
	}
	return nil
}
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_fda := &CT_PictureNonVisual{}
	_fda.CNvPr = _a.NewCT_NonVisualDrawingProps()
	_fda.CNvPicPr = _a.NewCT_NonVisualPictureProperties()
	return _fda
}

// ValidateWithPath validates the Pic and its children, prefixing error messages with path
func (_bde *Pic) ValidateWithPath(path string) error {
	if _bbf := _bde.CT_Picture.ValidateWithPath(path); _bbf != nil {
		return _bbf
	}
	return nil
}
func init() {
	_bg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_bg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_bg.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068e\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006frg\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0070\u0069\u0063\u0074\u0075\u0072\u0065", "\u0070\u0069\u0063", NewPic)
}
