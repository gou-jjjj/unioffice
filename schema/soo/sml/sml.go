//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sml

import (
	_a "encoding/xml"
	_fd "fmt"
	_dd "strconv"
	_d "strings"
	_g "time"
	_ff "unioffice"
	_ae "unioffice/common/logger"
	_fc "unioffice/schema/soo/dml/spreadsheetDrawing"
	_b "unioffice/schema/soo/ofc/sharedTypes"
)

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_bcbed *CT_ExternalBook) ValidateWithPath(path string) error {
	if _bcbed.SheetNames != nil {
		if _eacgb := _bcbed.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _eacgb != nil {
			return _eacgb
		}
	}
	if _bcbed.DefinedNames != nil {
		if _fceb := _bcbed.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _fceb != nil {
			return _fceb
		}
	}
	if _bcbed.SheetDataSet != nil {
		if _dfegg := _bcbed.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _dfegg != nil {
			return _dfegg
		}
	}
	return nil
}
func (_fdbb *CT_ConditionalFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdbb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fdbb.CountAttr)})
	}
	e.EncodeToken(start)
	_bgdfa := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063on\u0064i\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074"}}
	for _, _cfaf := range _fdbb.ConditionalFormat {
		e.EncodeElement(_cfaf, _bgdfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Members and its children
func (_cgfdd *CT_Members) Validate() error {
	return _cgfdd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}

// Validate validates the CT_Metadata and its children
func (_acfbd *CT_Metadata) Validate() error {
	return _acfbd.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}
func (_facde *Worksheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0077\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _facde.CT_Worksheet.MarshalXML(e, start)
}

// Validate validates the CT_ConditionalFormatting and its children
func (_cgfa *CT_ConditionalFormatting) Validate() error {
	return _cgfa.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}

type ST_PivotFilterType byte

func (_eeebc *CT_DdeLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdfc := range start.Attr {
		if _fdfc.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_aecaf := _fdfc.Value
			_eeebc.DdeServiceAttr = _aecaf
			continue
		}
		if _fdfc.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_ffgbg := _fdfc.Value
			_eeebc.DdeTopicAttr = _ffgbg
			continue
		}
	}
_fddfd:
	for {
		_ddgbc, _aedd := d.Token()
		if _aedd != nil {
			return _aedd
		}
		switch _gdbd := _ddgbc.(type) {
		case _a.StartElement:
			switch _gdbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_eeebc.DdeItems = NewCT_DdeItems()
				if _eecff := d.DecodeElement(_eeebc.DdeItems, &_gdbd); _eecff != nil {
					return _eecff
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _gdbd.Name)
				if _fdbdg := d.Skip(); _fdbdg != nil {
					return _fdbdg
				}
			}
		case _a.EndElement:
			break _fddfd
		case _a.CharData:
		}
	}
	return nil
}
func (_affgd *CT_PCDKPIs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dagdb := range start.Attr {
		if _dagdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abegd, _bgfde := _dd.ParseUint(_dagdb.Value, 10, 32)
			if _bgfde != nil {
				return _bgfde
			}
			_edcged := uint32(_abegd)
			_affgd.CountAttr = &_edcged
			continue
		}
	}
_gbbcg:
	for {
		_ddaga, _ddgda := d.Token()
		if _ddgda != nil {
			return _ddgda
		}
		switch _bgdgae := _ddaga.(type) {
		case _a.StartElement:
			switch _bgdgae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_dgdd := NewCT_PCDKPI()
				if _ebaf := d.DecodeElement(_dgdd, &_bgdgae); _ebaf != nil {
					return _ebaf
				}
				_affgd.Kpi = append(_affgd.Kpi, _dgdd)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _bgdgae.Name)
				if _acccc := d.Skip(); _acccc != nil {
					return _acccc
				}
			}
		case _a.EndElement:
			break _gbbcg
		case _a.CharData:
		}
	}
	return nil
}
func (_ceage *ST_WebSourceType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cbcde, _fadebe := d.Token()
	if _fadebe != nil {
		return _fadebe
	}
	if _decdbf, _dbdba := _cbcde.(_a.EndElement); _dbdba && _decdbf.Name == start.Name {
		*_ceage = 1
		return nil
	}
	if _baaagg, _bdceac := _cbcde.(_a.CharData); !_bdceac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbcde)
	} else {
		switch string(_baaagg) {
		case "":
			*_ceage = 0
		case "\u0073\u0068\u0065e\u0074":
			*_ceage = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_ceage = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_ceage = 3
		case "\u0072\u0061\u006eg\u0065":
			*_ceage = 4
		case "\u0063\u0068\u0061r\u0074":
			*_ceage = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_ceage = 6
		case "\u0071\u0075\u0065r\u0079":
			*_ceage = 7
		case "\u006c\u0061\u0062e\u006c":
			*_ceage = 8
		}
	}
	_cbcde, _fadebe = d.Token()
	if _fadebe != nil {
		return _fadebe
	}
	if _dedgc, _eecgaf := _cbcde.(_a.EndElement); _eecgaf && _dedgc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbcde)
}
func (_adcfdg ST_ParameterType) Validate() error { return _adcfdg.ValidateWithPath("") }

type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

func NewCT_MeasureGroup() *CT_MeasureGroup { _eebae := &CT_MeasureGroup{}; return _eebae }
func (_cagge *CT_CustomFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgfac := range start.Attr {
		if _bgfac.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_cagge.OperatorAttr.UnmarshalXMLAttr(_bgfac)
			continue
		}
		if _bgfac.Name.Local == "\u0076\u0061\u006c" {
			_gadbb := _bgfac.Value
			_cagge.ValAttr = &_gadbb
			continue
		}
	}
	for {
		_gafgd, _cedgd := d.Token()
		if _cedgd != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _cedgd)
		}
		if _dfggg, _aeaa := _gafgd.(_a.EndElement); _aeaa && _dfggg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_gdffd *CT_GroupMembers) ValidateWithPath(path string) error {
	for _bebbgd, _ecad := range _gdffd.GroupMember {
		if _eafbg := _ecad.ValidateWithPath(_fd.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _bebbgd)); _eafbg != nil {
			return _eafbg
		}
	}
	return nil
}
func (_abbd *CT_HierarchyUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aabea := range start.Attr {
		if _aabea.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_eceda, _cbdb := _dd.ParseInt(_aabea.Value, 10, 32)
			if _cbdb != nil {
				return _cbdb
			}
			_abbd.HierarchyUsageAttr = int32(_eceda)
			continue
		}
	}
	for {
		_cgbcg, _ccebb := d.Token()
		if _ccebb != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _ccebb)
		}
		if _cebdd, _bcgbc := _cgbcg.(_a.EndElement); _bcgbc && _cebdd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DdeItem and its children
func (_bbge *CT_DdeItem) Validate() error {
	return _bbge.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_Index and its children
func (_egega *CT_Index) Validate() error {
	return _egega.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}
func (_cagag *CT_Comment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _cagag.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cagag.AuthorIdAttr)})
	if _cagag.GuidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cagag.GuidAttr)})
	}
	if _cagag.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cagag.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_aceb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_cagag.Text, _aceb)
	if _cagag.CommentPr != nil {
		_dgcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_cagag.CommentPr, _dgcg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_fggeg *CT_CommentPr) ValidateWithPath(path string) error {
	if _adaad := _fggeg.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _adaad != nil {
		return _adaad
	}
	if _aggb := _fggeg.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _aggb != nil {
		return _aggb
	}
	if _dccca := _fggeg.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _dccca != nil {
		return _dccca
	}
	return nil
}
func (_gccff *CT_Colors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cbccg:
	for {
		_fcgfd, _edbb := d.Token()
		if _edbb != nil {
			return _edbb
		}
		switch _eabd := _fcgfd.(type) {
		case _a.StartElement:
			switch _eabd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_gccff.IndexedColors = NewCT_IndexedColors()
				if _dbfa := d.DecodeElement(_gccff.IndexedColors, &_eabd); _dbfa != nil {
					return _dbfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_gccff.MruColors = NewCT_MRUColors()
				if _dfag := d.DecodeElement(_gccff.MruColors, &_eabd); _dfag != nil {
					return _dfag
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _eabd.Name)
				if _dbdb := d.Skip(); _dbdb != nil {
					return _dbdb
				}
			}
		case _a.EndElement:
			break _cbccg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_fcfca *CT_ExternalRow) ValidateWithPath(path string) error {
	for _efgag, _eegf := range _fcfca.Cell {
		if _gbgda := _eegf.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _efgag)); _gbgda != nil {
			return _gbgda
		}
	}
	return nil
}
func (_dcaac *CT_ColorFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _febg := range start.Attr {
		if _febg.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_bfbe, _dcdge := _dd.ParseUint(_febg.Value, 10, 32)
			if _dcdge != nil {
				return _dcdge
			}
			_gegc := uint32(_bfbe)
			_dcaac.DxfIdAttr = &_gegc
			continue
		}
		if _febg.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_egge, _ecfg := _dd.ParseBool(_febg.Value)
			if _ecfg != nil {
				return _ecfg
			}
			_dcaac.CellColorAttr = &_egge
			continue
		}
	}
	for {
		_cggbb, _eccgb := d.Token()
		if _eccgb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _eccgb)
		}
		if _fabb, _ddecg := _cggbb.(_a.EndElement); _ddecg && _fabb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_ebfa *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _affg := _ebfa.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _affg != nil {
		return _affg
	}
	if _ebfa.DataRefs != nil {
		if _cbabb := _ebfa.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _cbabb != nil {
			return _cbabb
		}
	}
	return nil
}

// Validate validates the CT_TableStyle and its children
func (_gecag *CT_TableStyle) Validate() error {
	return _gecag.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_DataConsolidate() *CT_DataConsolidate { _ddfdb := &CT_DataConsolidate{}; return _ddfdb }
func (_fbfdd ST_ParameterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dgbfee := _a.Attr{}
	_dgbfee.Name = name
	switch _fbfdd {
	case ST_ParameterTypeUnset:
		_dgbfee.Value = ""
	case ST_ParameterTypePrompt:
		_dgbfee.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_dgbfee.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_dgbfee.Value = "\u0063\u0065\u006c\u006c"
	}
	return _dgbfee, nil
}

type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_fcfe *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _fcfe.FieldsUsage != nil {
		if _cgcea := _fcfe.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _cgcea != nil {
			return _cgcea
		}
	}
	if _fcfe.GroupLevels != nil {
		if _ccc := _fcfe.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _ccc != nil {
			return _ccc
		}
	}
	if _fcfe.ExtLst != nil {
		if _egac := _fcfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egac != nil {
			return _egac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_bccgb *CT_I) ValidateWithPath(path string) error {
	if _bbace := _bccgb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bbace != nil {
		return _bbace
	}
	for _bgbdf, _cefb := range _bccgb.X {
		if _ggcdd := _cefb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bgbdf)); _ggcdd != nil {
			return _ggcdd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_fcga *CT_PageFields) ValidateWithPath(path string) error {
	for _bfgfgb, _acfff := range _fcga.PageField {
		if _cgebe := _acfff.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _bfgfgb)); _cgebe != nil {
			return _cgebe
		}
	}
	return nil
}
func (_aadfb *CT_CustomProperties) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_caef:
	for {
		_bbefd, _bfgb := d.Token()
		if _bfgb != nil {
			return _bfgb
		}
		switch _gfcd := _bbefd.(type) {
		case _a.StartElement:
			switch _gfcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_ffgea := NewCT_CustomProperty()
				if _abdg := d.DecodeElement(_ffgea, &_gfcd); _abdg != nil {
					return _abdg
				}
				_aadfb.CustomPr = append(_aadfb.CustomPr, _ffgea)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gfcd.Name)
				if _abbb := d.Skip(); _abbb != nil {
					return _abbb
				}
			}
		case _a.EndElement:
			break _caef
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

func NewCT_Hyperlinks() *CT_Hyperlinks {
	_gddec := &CT_Hyperlinks{}
	return _gddec
}

// Validate validates the CT_ExternalSheetName and its children
func (_accg *CT_ExternalSheetName) Validate() error {
	return _accg.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}
func (_fgeff *CT_XStringElement) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdgcge := range start.Attr {
		if _bdgcge.Name.Local == "\u0076" {
			_bgfce := _bdgcge.Value
			_fgeff.VAttr = _bgfce
			continue
		}
	}
	for {
		_ddaaf, _dgefef := d.Token()
		if _dgefef != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _dgefef)
		}
		if _baebc, _dcagd := _ddaaf.(_a.EndElement); _dcagd && _baebc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_bgcfb *CT_GroupItems) ValidateWithPath(path string) error {
	for _fgaga, _agdee := range _bgcfb.GroupItemsChoice {
		if _cead := _agdee.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fGr\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _fgaga)); _cead != nil {
			return _cead
		}
	}
	return nil
}

type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}

func NewCT_MemberProperty() *CT_MemberProperty { _eeecc := &CT_MemberProperty{}; return _eeecc }

type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bdfef *CT_FieldGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdfef.ParAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_bdfef.ParAttr)})
	}
	if _bdfef.BaseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bdfef.BaseAttr)})
	}
	e.EncodeToken(start)
	if _bdfef.RangePr != nil {
		_fddcd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_bdfef.RangePr, _fddcd)
	}
	if _bdfef.DiscretePr != nil {
		_egfgfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0069\u0073\u0063\u0072e\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_bdfef.DiscretePr, _egfgfd)
	}
	if _bdfef.GroupItems != nil {
		_abea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0067\u0072\u006f\u0075\u0070I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bdfef.GroupItems, _abea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Border and its children
func (_fgbf *CT_Border) Validate() error {
	return _fgbf.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_gbdca *CT_OutlinePr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DataValidation and its children
func (_bfafb *CT_DataValidation) Validate() error {
	return _bfafb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

type ST_DataValidationType byte

func (_gegcfe *CT_QueryTableDeletedFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gegcfe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gegcfe.CountAttr)})
	}
	e.EncodeToken(start)
	_bfbfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0064\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _aadca := range _gegcfe.DeletedField {
		e.EncodeElement(_aadca, _bfbfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ceacec ST_CellType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dcfbe := _a.Attr{}
	_dcfbe.Name = name
	switch _ceacec {
	case ST_CellTypeUnset:
		_dcfbe.Value = ""
	case ST_CellTypeB:
		_dcfbe.Value = "\u0062"
	case ST_CellTypeN:
		_dcfbe.Value = "\u006e"
	case ST_CellTypeE:
		_dcfbe.Value = "\u0065"
	case ST_CellTypeS:
		_dcfbe.Value = "\u0073"
	case ST_CellTypeStr:
		_dcfbe.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_dcfbe.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _dcfbe, nil
}

type CT_DateTime struct {

	// Value
	VAttr _g.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

func (_dcgea *CT_SheetFormatPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gafce := range start.Attr {
		if _gafce.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_fgeed, _gfgagd := _dd.ParseUint(_gafce.Value, 10, 32)
			if _gfgagd != nil {
				return _gfgagd
			}
			_ggfcf := uint32(_fgeed)
			_dcgea.BaseColWidthAttr = &_ggfcf
			continue
		}
		if _gafce.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_cdeea, _gceeedf := _dd.ParseFloat(_gafce.Value, 64)
			if _gceeedf != nil {
				return _gceeedf
			}
			_dcgea.DefaultColWidthAttr = &_cdeea
			continue
		}
		if _gafce.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gceff, _ccaba := _dd.ParseFloat(_gafce.Value, 64)
			if _ccaba != nil {
				return _ccaba
			}
			_dcgea.DefaultRowHeightAttr = _gceff
			continue
		}
		if _gafce.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_ceadb, _fdagf := _dd.ParseBool(_gafce.Value)
			if _fdagf != nil {
				return _fdagf
			}
			_dcgea.CustomHeightAttr = &_ceadb
			continue
		}
		if _gafce.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_ggbgaf, _dbbeg := _dd.ParseBool(_gafce.Value)
			if _dbbeg != nil {
				return _dbbeg
			}
			_dcgea.ZeroHeightAttr = &_ggbgaf
			continue
		}
		if _gafce.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_cecd, _ccdff := _dd.ParseBool(_gafce.Value)
			if _ccdff != nil {
				return _ccdff
			}
			_dcgea.ThickTopAttr = &_cecd
			continue
		}
		if _gafce.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_ccgbf, _cecbd := _dd.ParseBool(_gafce.Value)
			if _cecbd != nil {
				return _cecbd
			}
			_dcgea.ThickBottomAttr = &_ccgbf
			continue
		}
		if _gafce.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_ccdecf, _ededc := _dd.ParseUint(_gafce.Value, 10, 8)
			if _ededc != nil {
				return _ededc
			}
			_aabbd := uint8(_ccdecf)
			_dcgea.OutlineLevelRowAttr = &_aabbd
			continue
		}
		if _gafce.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_affgef, _fbdcg := _dd.ParseUint(_gafce.Value, 10, 8)
			if _fbdcg != nil {
				return _fbdcg
			}
			_egggc := uint8(_affgef)
			_dcgea.OutlineLevelColAttr = &_egggc
			continue
		}
	}
	for {
		_fdggf, _deffd := d.Token()
		if _deffd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _deffd)
		}
		if _dbfee, _dbegbe := _fdggf.(_a.EndElement); _dbegbe && _dbfee.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_fddd *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _fddd.TabColor != nil {
		if _agdba := _fddd.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _agdba != nil {
			return _agdba
		}
	}
	return nil
}
func NewCT_MetadataBlocks() *CT_MetadataBlocks {
	_cfdff := &CT_MetadataBlocks{}
	return _cfdff
}

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_ebfea *CT_OleItems) ValidateWithPath(path string) error {
	for _afcdg, _cfabd := range _ebfea.OleItem {
		if _dgfcea := _cfabd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _afcdg)); _dgfcea != nil {
			return _dgfcea
		}
	}
	return nil
}
func (_ecfcd *CT_DdeLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ecfcd.DdeServiceAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _fd.Sprintf("\u0025\u0076", _ecfcd.DdeTopicAttr)})
	e.EncodeToken(start)
	if _ecfcd.DdeItems != nil {
		_agag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ecfcd.DdeItems, _agag)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

func (_geccgb *MapInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_geccgb.CT_MapInfo = *NewCT_MapInfo()
	for _, _cdfcc := range start.Attr {
		if _cdfcc.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_cgedcf := _cdfcc.Value
			_geccgb.SelectionNamespacesAttr = _cgedcf
			continue
		}
	}
_egcfe:
	for {
		_geggf, _debgf := d.Token()
		if _debgf != nil {
			return _debgf
		}
		switch _dcefg := _geggf.(type) {
		case _a.StartElement:
			switch _dcefg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_eggeeg := NewCT_Schema()
				if _geada := d.DecodeElement(_eggeeg, &_dcefg); _geada != nil {
					return _geada
				}
				_geccgb.Schema = append(_geccgb.Schema, _eggeeg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_dggdc := NewCT_Map()
				if _acfdf := d.DecodeElement(_dggdc, &_dcefg); _acfdf != nil {
					return _acfdf
				}
				_geccgb.Map = append(_geccgb.Map, _dggdc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _dcefg.Name)
				if _ebcc := d.Skip(); _ebcc != nil {
					return _ebcc
				}
			}
		case _a.EndElement:
			break _egcfe
		case _a.CharData:
		}
	}
	return nil
}
func (_caeac ST_PhoneticAlignment) Validate() error { return _caeac.ValidateWithPath("") }
func NewCT_TupleCache() *CT_TupleCache {
	_bebag := &CT_TupleCache{}
	return _bebag
}
func NewCT_MdxKPI() *CT_MdxKPI {
	_aebdee := &CT_MdxKPI{}
	_aebdee.PAttr = ST_MdxKPIProperty(1)
	return _aebdee
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}

func (_cgdad *CT_Font) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	for _, _gbbaa := range _cgdad.FontChoice {
		_gbbaa.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ddacfa *CT_SheetBackgroundPicture) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ddacfa.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_gfa *CT_BookViews) ValidateWithPath(path string) error {
	for _fff, _def := range _gfa.WorkbookView {
		if _eded := _def.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _fff)); _eded != nil {
			return _eded
		}
	}
	return nil
}
func (_bcecb *CT_ExternalLinkChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbedb := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
		_bcecb.ExternalBook = NewCT_ExternalBook()
		if _egefg := d.DecodeElement(_bcecb.ExternalBook, &_gbedb); _egefg != nil {
			return _egefg
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
		_bcecb.DdeLink = NewCT_DdeLink()
		if _cdgec := d.DecodeElement(_bcecb.DdeLink, &_gbedb); _cdgec != nil {
			return _cdgec
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
		_bcecb.OleLink = NewCT_OleLink()
		if _cagf := d.DecodeElement(_bcecb.OleLink, &_gbedb); _cagf != nil {
			return _cagf
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gbedb.Name)
		if _fdadg := d.Skip(); _fdadg != nil {
			return _fdadg
		}
	}
	return nil
}

type CT_X struct {

	// Shared Items Index
	VAttr *int32
}

func NewCT_NumFmt() *CT_NumFmt { _feaf := &CT_NumFmt{}; return _feaf }

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

func (_egcgc *CT_PivotArea) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egcgc.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgc.FieldAttr)})
	}
	if _egcgc.TypeAttr != ST_PivotAreaTypeUnset {
		_cafb, _adecd := _egcgc.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _adecd != nil {
			return _adecd
		}
		start.Attr = append(start.Attr, _cafb)
	}
	if _egcgc.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.DataOnlyAttr))})
	}
	if _egcgc.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.LabelOnlyAttr))})
	}
	if _egcgc.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.GrandRowAttr))})
	}
	if _egcgc.GrandColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.GrandColAttr))})
	}
	if _egcgc.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.CacheIndexAttr))})
	}
	if _egcgc.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.OutlineAttr))})
	}
	if _egcgc.OffsetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgc.OffsetAttr)})
	}
	if _egcgc.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgc.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _egcgc.AxisAttr != ST_AxisUnset {
		_fbeec, _cdgga := _egcgc.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _cdgga != nil {
			return _cdgga
		}
		start.Attr = append(start.Attr, _fbeec)
	}
	if _egcgc.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgc.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _egcgc.References != nil {
		_ggdf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_egcgc.References, _ggdf)
	}
	if _egcgc.ExtLst != nil {
		_fdcba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egcgc.ExtLst, _fdcba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_UndoInfo() *CT_UndoInfo {
	_gafeb := &CT_UndoInfo{}
	_gafeb.ExpAttr = ST_FormulaExpression(1)
	return _gafeb
}
func (_dbgda *CT_Connection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agcecc := range start.Attr {
		if _agcecc.Name.Local == "\u0069\u0064" {
			_dbdbe, _babf := _dd.ParseUint(_agcecc.Value, 10, 32)
			if _babf != nil {
				return _babf
			}
			_dbgda.IdAttr = uint32(_dbdbe)
			continue
		}
		if _agcecc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_dedc := _agcecc.Value
			_dbgda.SourceFileAttr = &_dedc
			continue
		}
		if _agcecc.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_fadb := _agcecc.Value
			_dbgda.OdcFileAttr = &_fadb
			continue
		}
		if _agcecc.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_gcccb, _facbd := _dd.ParseBool(_agcecc.Value)
			if _facbd != nil {
				return _facbd
			}
			_dbgda.KeepAliveAttr = &_gcccb
			continue
		}
		if _agcecc.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_ebfg, _cabcf := _dd.ParseUint(_agcecc.Value, 10, 32)
			if _cabcf != nil {
				return _cabcf
			}
			_cdbag := uint32(_ebfg)
			_dbgda.IntervalAttr = &_cdbag
			continue
		}
		if _agcecc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgge := _agcecc.Value
			_dbgda.NameAttr = &_bgge
			continue
		}
		if _agcecc.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_gdgg := _agcecc.Value
			_dbgda.DescriptionAttr = &_gdgg
			continue
		}
		if _agcecc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dgcad, _aggf := _dd.ParseUint(_agcecc.Value, 10, 32)
			if _aggf != nil {
				return _aggf
			}
			_dgfg := uint32(_dgcad)
			_dbgda.TypeAttr = &_dgfg
			continue
		}
		if _agcecc.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_gggbb, _gebac := _dd.ParseUint(_agcecc.Value, 10, 32)
			if _gebac != nil {
				return _gebac
			}
			_bfaeaf := uint32(_gggbb)
			_dbgda.ReconnectionMethodAttr = &_bfaeaf
			continue
		}
		if _agcecc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_eebce, _bbecd := _dd.ParseUint(_agcecc.Value, 10, 8)
			if _bbecd != nil {
				return _bbecd
			}
			_dbgda.RefreshedVersionAttr = uint8(_eebce)
			continue
		}
		if _agcecc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_bbcb, _fcfc := _dd.ParseUint(_agcecc.Value, 10, 8)
			if _fcfc != nil {
				return _fcfc
			}
			_bbfbd := uint8(_bbcb)
			_dbgda.MinRefreshableVersionAttr = &_bbfbd
			continue
		}
		if _agcecc.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ceag, _febe := _dd.ParseBool(_agcecc.Value)
			if _febe != nil {
				return _febe
			}
			_dbgda.SavePasswordAttr = &_ceag
			continue
		}
		if _agcecc.Name.Local == "\u006e\u0065\u0077" {
			_dgbf, _dbcf := _dd.ParseBool(_agcecc.Value)
			if _dbcf != nil {
				return _dbcf
			}
			_dbgda.NewAttr = &_dgbf
			continue
		}
		if _agcecc.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_efbb, _bgaad := _dd.ParseBool(_agcecc.Value)
			if _bgaad != nil {
				return _bgaad
			}
			_dbgda.DeletedAttr = &_efbb
			continue
		}
		if _agcecc.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_ggaa, _abaea := _dd.ParseBool(_agcecc.Value)
			if _abaea != nil {
				return _abaea
			}
			_dbgda.OnlyUseConnectionFileAttr = &_ggaa
			continue
		}
		if _agcecc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_cded, _cadag := _dd.ParseBool(_agcecc.Value)
			if _cadag != nil {
				return _cadag
			}
			_dbgda.BackgroundAttr = &_cded
			continue
		}
		if _agcecc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_eefc, _abebg := _dd.ParseBool(_agcecc.Value)
			if _abebg != nil {
				return _abebg
			}
			_dbgda.RefreshOnLoadAttr = &_eefc
			continue
		}
		if _agcecc.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_aaff, _fbeef := _dd.ParseBool(_agcecc.Value)
			if _fbeef != nil {
				return _fbeef
			}
			_dbgda.SaveDataAttr = &_aaff
			continue
		}
		if _agcecc.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_dbgda.CredentialsAttr.UnmarshalXMLAttr(_agcecc)
			continue
		}
		if _agcecc.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_aggcb := _agcecc.Value
			_dbgda.SingleSignOnIdAttr = &_aggcb
			continue
		}
	}
_bffa:
	for {
		_geafa, _fbdea := d.Token()
		if _fbdea != nil {
			return _fbdea
		}
		switch _cgcfg := _geafa.(type) {
		case _a.StartElement:
			switch _cgcfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_dbgda.DbPr = NewCT_DbPr()
				if _fgbdf := d.DecodeElement(_dbgda.DbPr, &_cgcfg); _fgbdf != nil {
					return _fgbdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_dbgda.OlapPr = NewCT_OlapPr()
				if _fbdc := d.DecodeElement(_dbgda.OlapPr, &_cgcfg); _fbdc != nil {
					return _fbdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_dbgda.WebPr = NewCT_WebPr()
				if _abeg := d.DecodeElement(_dbgda.WebPr, &_cgcfg); _abeg != nil {
					return _abeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_dbgda.TextPr = NewCT_TextPr()
				if _cbbf := d.DecodeElement(_dbgda.TextPr, &_cgcfg); _cbbf != nil {
					return _cbbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_dbgda.Parameters = NewCT_Parameters()
				if _bbeed := d.DecodeElement(_dbgda.Parameters, &_cgcfg); _bbeed != nil {
					return _bbeed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbgda.ExtLst = NewCT_ExtensionList()
				if _gfgd := d.DecodeElement(_dbgda.ExtLst, &_cgcfg); _gfgd != nil {
					return _gfgd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _cgcfg.Name)
				if _defga := d.Skip(); _defga != nil {
					return _defga
				}
			}
		case _a.EndElement:
			break _bffa
		case _a.CharData:
		}
	}
	return nil
}
func (_bdcbf ST_VolDepType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bdcbf.String(), start)
}

// Validate validates the CT_Error and its children
func (_abfg *CT_Error) Validate() error {
	return _abfg.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}
func (_gafgc *CT_PageFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgbga := range start.Attr {
		if _dgbga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agbbd, _bgfbd := _dd.ParseUint(_dgbga.Value, 10, 32)
			if _bgfbd != nil {
				return _bgfbd
			}
			_eabca := uint32(_agbbd)
			_gafgc.CountAttr = &_eabca
			continue
		}
	}
_dagb:
	for {
		_gccfge, _deedbf := d.Token()
		if _deedbf != nil {
			return _deedbf
		}
		switch _dded := _gccfge.(type) {
		case _a.StartElement:
			switch _dded.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_bbdddf := NewCT_PageField()
				if _dgcfea := d.DecodeElement(_bbdddf, &_dded); _dgcfea != nil {
					return _dgcfea
				}
				_gafgc.PageField = append(_gafgc.PageField, _bbdddf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _dded.Name)
				if _debdfe := d.Skip(); _debdfe != nil {
					return _debdfe
				}
			}
		case _a.EndElement:
			break _dagb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_ecceaa *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _ecfca, _defbb := range _ecceaa.SheetName {
		if _abcbb := _defbb.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _ecfca)); _abcbb != nil {
			return _abcbb
		}
	}
	return nil
}
func (_aefeb *ST_Qualifier) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aefeb = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_aefeb = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_aefeb = 2
	case "\u006e\u006f\u006e\u0065":
		*_aefeb = 3
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _cacac := &CT_HeaderFooter{}; return _cacac }
func (_efgdae *ST_DataValidationType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_efgdae = 0
	case "\u006e\u006f\u006e\u0065":
		*_efgdae = 1
	case "\u0077\u0068\u006fl\u0065":
		*_efgdae = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_efgdae = 3
	case "\u006c\u0069\u0073\u0074":
		*_efgdae = 4
	case "\u0064\u0061\u0074\u0065":
		*_efgdae = 5
	case "\u0074\u0069\u006d\u0065":
		*_efgdae = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_efgdae = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_efgdae = 8
	}
	return nil
}

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_cdfdda *CT_SheetData) ValidateWithPath(path string) error {
	for _edbgf, _dgdeb := range _cdfdda.Row {
		if _fceace := _dgdeb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _edbgf)); _fceace != nil {
			return _fceace
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_gfbf *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_fgcf *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _bfab := _fgcf.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bfab != nil {
		return _bfab
	}
	if _fgcf.ExtLst != nil {
		if _cdbg := _fgcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdbg != nil {
			return _cdbg
		}
	}
	return nil
}

// Validate validates the CT_ColorFilter and its children
func (_ccceb *CT_ColorFilter) Validate() error {
	return _ccceb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}
func (_ffea *CT_Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dfaf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_ffea.Authors, _dfaf)
	_fddb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_ffea.CommentList, _fddb)
	if _ffea.ExtLst != nil {
		_bagfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffea.ExtLst, _bagfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fccaf *CT_DataRef) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fccaf.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_fccaf.RefAttr)})
	}
	if _fccaf.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fccaf.NameAttr)})
	}
	if _fccaf.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fccaf.SheetAttr)})
	}
	if _fccaf.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fccaf.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FillChoice and its children
func (_bfge *CT_FillChoice) Validate() error {
	return _bfge.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_gbffa *CT_CellStyles) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gedc := range start.Attr {
		if _gedc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecbc, _cdbe := _dd.ParseUint(_gedc.Value, 10, 32)
			if _cdbe != nil {
				return _cdbe
			}
			_bbefc := uint32(_ecbc)
			_gbffa.CountAttr = &_bbefc
			continue
		}
	}
_cddc:
	for {
		_caecc, _deac := d.Token()
		if _deac != nil {
			return _deac
		}
		switch _gacfd := _caecc.(type) {
		case _a.StartElement:
			switch _gacfd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_dcfc := NewCT_CellStyle()
				if _ddbe := d.DecodeElement(_dcfc, &_gacfd); _ddbe != nil {
					return _ddbe
				}
				_gbffa.CellStyle = append(_gbffa.CellStyle, _dcfc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _gacfd.Name)
				if _dcdb := d.Skip(); _dcdb != nil {
					return _dcdb
				}
			}
		case _a.EndElement:
			break _cddc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RevisionComment() *CT_RevisionComment {
	_abbaa := &CT_RevisionComment{}
	_abbaa.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _abbaa
}
func NewCT_Item() *CT_Item { _ceaec := &CT_Item{}; return _ceaec }

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_bdbc *CT_ColorScale) ValidateWithPath(path string) error {
	for _ccde, _gafe := range _bdbc.Cfvo {
		if _gaca := _gafe.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _ccde)); _gaca != nil {
			return _gaca
		}
	}
	for _bcfdb, _ddad := range _bdbc.Color {
		if _eeeb := _ddad.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _bcfdb)); _eeeb != nil {
			return _eeeb
		}
	}
	return nil
}

type ST_DvAspect byte
type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr                *bool
	RevisionRowColumnChoice []*CT_RevisionRowColumnChoice
	RIdAttr                 uint32
	UaAttr                  *bool
	RaAttr                  *bool
}

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_deeg *CT_Scenario) ValidateWithPath(path string) error {
	for _dagab, _ecebc := range _deeg.InputCells {
		if _bbgf := _ecebc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _dagab)); _bbgf != nil {
			return _bbgf
		}
	}
	return nil
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}

func (_cffda *CT_DdeItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cffda.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cffda.NameAttr)})
	}
	if _cffda.OleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cffda.OleAttr))})
	}
	if _cffda.AdviseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cffda.AdviseAttr))})
	}
	if _cffda.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cffda.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _cffda.Values != nil {
		_acdg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0076\u0061\u006c\u0075\u0065\u0073"}}
		e.EncodeElement(_cffda.Values, _acdg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}

func (_cbde *CT_Field) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fefdf := range start.Attr {
		if _fefdf.Name.Local == "\u0078" {
			_efbbgg, _egafa := _dd.ParseInt(_fefdf.Value, 10, 32)
			if _egafa != nil {
				return _egafa
			}
			_cbde.XAttr = int32(_efbbgg)
			continue
		}
	}
	for {
		_acedd, _gabff := d.Token()
		if _gabff != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _gabff)
		}
		if _afcaf, _aadef := _acedd.(_a.EndElement); _aadef && _afcaf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CustomSheetView() *CT_CustomSheetView {
	_bdcc := &CT_CustomSheetView{}
	_bdcc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _bdcc
}
func (_aab *CT_BookView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cagg := range start.Attr {
		if _cagg.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_aab.VisibilityAttr.UnmarshalXMLAttr(_cagg)
			continue
		}
		if _cagg.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_gab, _gbe := _dd.ParseBool(_cagg.Value)
			if _gbe != nil {
				return _gbe
			}
			_aab.MinimizedAttr = &_gab
			continue
		}
		if _cagg.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_aef, _gef := _dd.ParseBool(_cagg.Value)
			if _gef != nil {
				return _gef
			}
			_aab.ShowHorizontalScrollAttr = &_aef
			continue
		}
		if _cagg.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_gcd, _edf := _dd.ParseBool(_cagg.Value)
			if _edf != nil {
				return _edf
			}
			_aab.ShowVerticalScrollAttr = &_gcd
			continue
		}
		if _cagg.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_ged, _dad := _dd.ParseBool(_cagg.Value)
			if _dad != nil {
				return _dad
			}
			_aab.ShowSheetTabsAttr = &_ged
			continue
		}
		if _cagg.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_ac, _ef := _dd.ParseInt(_cagg.Value, 10, 32)
			if _ef != nil {
				return _ef
			}
			_gabc := int32(_ac)
			_aab.XWindowAttr = &_gabc
			continue
		}
		if _cagg.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_ecc, _bc := _dd.ParseInt(_cagg.Value, 10, 32)
			if _bc != nil {
				return _bc
			}
			_acf := int32(_ecc)
			_aab.YWindowAttr = &_acf
			continue
		}
		if _cagg.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_cff, _ecg := _dd.ParseUint(_cagg.Value, 10, 32)
			if _ecg != nil {
				return _ecg
			}
			_gagf := uint32(_cff)
			_aab.WindowWidthAttr = &_gagf
			continue
		}
		if _cagg.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bgf, _bff := _dd.ParseUint(_cagg.Value, 10, 32)
			if _bff != nil {
				return _bff
			}
			_agc := uint32(_bgf)
			_aab.WindowHeightAttr = &_agc
			continue
		}
		if _cagg.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_ffe, _ede := _dd.ParseUint(_cagg.Value, 10, 32)
			if _ede != nil {
				return _ede
			}
			_fdd := uint32(_ffe)
			_aab.TabRatioAttr = &_fdd
			continue
		}
		if _cagg.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_fac, _bada := _dd.ParseUint(_cagg.Value, 10, 32)
			if _bada != nil {
				return _bada
			}
			_gbd := uint32(_fac)
			_aab.FirstSheetAttr = &_gbd
			continue
		}
		if _cagg.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_agb, _efc := _dd.ParseUint(_cagg.Value, 10, 32)
			if _efc != nil {
				return _efc
			}
			_cad := uint32(_agb)
			_aab.ActiveTabAttr = &_cad
			continue
		}
		if _cagg.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_adb, _egdg := _dd.ParseBool(_cagg.Value)
			if _egdg != nil {
				return _egdg
			}
			_aab.AutoFilterDateGroupingAttr = &_adb
			continue
		}
	}
_adc:
	for {
		_gbde, _gca := d.Token()
		if _gca != nil {
			return _gca
		}
		switch _egc := _gbde.(type) {
		case _a.StartElement:
			switch _egc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aab.ExtLst = NewCT_ExtensionList()
				if _egfb := d.DecodeElement(_aab.ExtLst, &_egc); _egfb != nil {
					return _egfb
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _egc.Name)
				if _dfb := d.Skip(); _dfb != nil {
					return _dfb
				}
			}
		case _a.EndElement:
			break _adc
		case _a.CharData:
		}
	}
	return nil
}
func (_gebg *CT_ExternalSheetData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gebg.SheetIdAttr)})
	if _gebg.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gebg.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _gebg.Row != nil {
		_bdccg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u006f\u0077"}}
		for _, _bceaa := range _gebg.Row {
			e.EncodeElement(_bceaa, _bdccg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_VolType and its children
func (_cgabbc *CT_VolType) Validate() error {
	return _cgabbc.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}
func (_ebdgd *CT_RevisionFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eefca := range start.Attr {
		if _eefca.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_egffef, _abadf := _dd.ParseUint(_eefca.Value, 10, 32)
			if _abadf != nil {
				return _abadf
			}
			_ebdgd.SheetIdAttr = uint32(_egffef)
			continue
		}
		if _eefca.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_defbf, _eggfa := _dd.ParseBool(_eefca.Value)
			if _eggfa != nil {
				return _eggfa
			}
			_ebdgd.XfDxfAttr = &_defbf
			continue
		}
		if _eefca.Name.Local == "\u0073" {
			_efcfd, _baced := _dd.ParseBool(_eefca.Value)
			if _baced != nil {
				return _baced
			}
			_ebdgd.SAttr = &_efcfd
			continue
		}
		if _eefca.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_eedage, _fgbfdg := ParseSliceST_Sqref(_eefca.Value)
			if _fgbfdg != nil {
				return _fgbfdg
			}
			_ebdgd.SqrefAttr = _eedage
			continue
		}
		if _eefca.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_eadgf, _cgefb := _dd.ParseUint(_eefca.Value, 10, 32)
			if _cgefb != nil {
				return _cgefb
			}
			_gcbab := uint32(_eadgf)
			_ebdgd.StartAttr = &_gcbab
			continue
		}
		if _eefca.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_gdbeb, _bgeab := _dd.ParseUint(_eefca.Value, 10, 32)
			if _bgeab != nil {
				return _bgeab
			}
			_fgdba := uint32(_gdbeb)
			_ebdgd.LengthAttr = &_fgdba
			continue
		}
	}
_gdfcb:
	for {
		_agdbd, _fagbb := d.Token()
		if _fagbb != nil {
			return _fagbb
		}
		switch _dcagf := _agdbd.(type) {
		case _a.StartElement:
			switch _dcagf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_ebdgd.Dxf = NewCT_Dxf()
				if _gedbb := d.DecodeElement(_ebdgd.Dxf, &_dcagf); _gedbb != nil {
					return _gedbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebdgd.ExtLst = NewCT_ExtensionList()
				if _badff := d.DecodeElement(_ebdgd.ExtLst, &_dcagf); _badff != nil {
					return _badff
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _dcagf.Name)
				if _cacf := d.Skip(); _cacf != nil {
					return _cacf
				}
			}
		case _a.EndElement:
			break _gdfcb
		case _a.CharData:
		}
	}
	return nil
}
func (_bdaffb ST_PivotAreaType) String() string {
	switch _bdaffb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}

type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

func NewCT_DdeItem() *CT_DdeItem { _aecbc := &CT_DdeItem{}; return _aecbc }

// Validate validates the CT_Fonts and its children
func (_egdag *CT_Fonts) Validate() error {
	return _egdag.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}
func (_bcedbf ST_SortBy) ValidateWithPath(path string) error {
	switch _bcedbf {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcedbf))
	}
	return nil
}

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}

func (_fagag *CT_FilterColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fagag.ColIdAttr)})
	if _fagag.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagag.HiddenButtonAttr))})
	}
	if _fagag.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagag.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _fagag.FilterColumnChoice != nil {
		_fagag.FilterColumnChoice.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CalcCell() *CT_CalcCell {
	_gcea := &CT_CalcCell{}
	return _gcea
}

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_eaag *CT_CellFormula) ValidateWithPath(path string) error {
	if _ccbda := _eaag.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ccbda != nil {
		return _ccbda
	}
	return nil
}
func (_dfafag ST_Visibility) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_acaaea := _a.Attr{}
	_acaaea.Name = name
	switch _dfafag {
	case ST_VisibilityUnset:
		_acaaea.Value = ""
	case ST_VisibilityVisible:
		_acaaea.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_acaaea.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_acaaea.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _acaaea, nil
}

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

func NewCT_X() *CT_X { _ccfaae := &CT_X{}; return _ccfaae }

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_deagf *CT_QueryCache) ValidateWithPath(path string) error {
	for _cfbcgg, _aebaf := range _deagf.Query {
		if _faae := _aebaf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _cfbcgg)); _faae != nil {
			return _faae
		}
	}
	return nil
}

// Validate validates the CT_Table and its children
func (_eagddg *CT_Table) Validate() error {
	return _eagddg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

// Validate validates the CT_IntProperty and its children
func (_cgcbfa *CT_IntProperty) Validate() error {
	return _cgcbfa.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_bbddd *CT_IconSet) ValidateWithPath(path string) error {
	if _aceea := _bbddd.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _aceea != nil {
		return _aceea
	}
	for _ddaf, _gegge := range _bbddd.Cfvo {
		if _befded := _gegge.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _ddaf)); _befded != nil {
			return _befded
		}
	}
	return nil
}

type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func (_gagfa *CT_ConditionalFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aabb := range start.Attr {
		if _aabb.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_gaef, _dbgge := _dd.ParseBool(_aabb.Value)
			if _dbgge != nil {
				return _dbgge
			}
			_gagfa.PivotAttr = &_gaef
			continue
		}
		if _aabb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_afba, _dcgc := ParseSliceST_Sqref(_aabb.Value)
			if _dcgc != nil {
				return _dcgc
			}
			_gagfa.SqrefAttr = &_afba
			continue
		}
	}
_eecf:
	for {
		_bebb, _bbfe := d.Token()
		if _bbfe != nil {
			return _bbfe
		}
		switch _debag := _bebb.(type) {
		case _a.StartElement:
			switch _debag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_aagbe := NewCT_CfRule()
				if _gcac := d.DecodeElement(_aagbe, &_debag); _gcac != nil {
					return _gcac
				}
				_gagfa.CfRule = append(_gagfa.CfRule, _aagbe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gagfa.ExtLst = NewCT_ExtensionList()
				if _cbbg := d.DecodeElement(_gagfa.ExtLst, &_debag); _cbbg != nil {
					return _cbbg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _debag.Name)
				if _bbaa := d.Skip(); _bbaa != nil {
					return _bbaa
				}
			}
		case _a.EndElement:
			break _eecf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DrawingHF and its children
func (_fcdda *CT_DrawingHF) Validate() error {
	return _fcdda.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}

type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

func (_daeba *CT_InputCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _daeba.RAttr)})
	if _daeba.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_daeba.DeletedAttr))})
	}
	if _daeba.UndoneAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_daeba.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _daeba.ValAttr)})
	if _daeba.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_daeba.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gggaf ST_PhoneticType) ValidateWithPath(path string) error {
	switch _gggaf {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gggaf))
	}
	return nil
}
func NewCT_HierarchyUsage() *CT_HierarchyUsage   { _cabd := &CT_HierarchyUsage{}; return _cabd }
func (_bcebb ST_GrowShrinkType) Validate() error { return _bcebb.ValidateWithPath("") }

type ST_TableType byte

func (_gcgddd ST_TimePeriod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gcgddd.String(), start)
}

// Validate validates the CT_Drawing and its children
func (_accbc *CT_Drawing) Validate() error {
	return _accbc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func NewUsers() *Users { _cegbda := &Users{}; _cegbda.CT_Users = *NewCT_Users(); return _cegbda }

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_ebadb *CT_DateTime) ValidateWithPath(path string) error {
	for _bcfad, _adfd := range _ebadb.X {
		if _bbeeg := _adfd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bcfad)); _bbeeg != nil {
			return _bbeeg
		}
	}
	return nil
}
func (_egdbf ST_FieldSortType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_egdbf.String(), start)
}
func (_ecfgaee *CT_RevisionConflict) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcadce := range start.Attr {
		if _gcadce.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fdaca, _gaafd := _dd.ParseUint(_gcadce.Value, 10, 32)
			if _gaafd != nil {
				return _gaafd
			}
			_ddafaf := uint32(_fdaca)
			_ecfgaee.SheetIdAttr = &_ddafaf
			continue
		}
		if _gcadce.Name.Local == "\u0072\u0049\u0064" {
			_beebg, _beddc := _dd.ParseUint(_gcadce.Value, 10, 32)
			if _beddc != nil {
				return _beddc
			}
			_ecfgaee.RIdAttr = uint32(_beebg)
			continue
		}
		if _gcadce.Name.Local == "\u0075\u0061" {
			_bdfddf, _cdefg := _dd.ParseBool(_gcadce.Value)
			if _cdefg != nil {
				return _cdefg
			}
			_ecfgaee.UaAttr = &_bdfddf
			continue
		}
		if _gcadce.Name.Local == "\u0072\u0061" {
			_fffeb, _ebdef := _dd.ParseBool(_gcadce.Value)
			if _ebdef != nil {
				return _ebdef
			}
			_ecfgaee.RaAttr = &_fffeb
			continue
		}
	}
	for {
		_bdfab, _bebfa := d.Token()
		if _bebfa != nil {
			return _fd.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _bebfa)
		}
		if _edacee, _ggefc := _bdfab.(_a.EndElement); _ggefc && _edacee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eaaffa ST_FilterOperator) ValidateWithPath(path string) error {
	switch _eaaffa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaaffa))
	}
	return nil
}

// Validate validates the CT_TablePart and its children
func (_babeg *CT_TablePart) Validate() error {
	return _babeg.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}
func (_edcfa *CT_IntProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _edcfa.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gbgcd *CT_WebPublishing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gabag := range start.Attr {
		if _gabag.Name.Local == "\u0063\u0073\u0073" {
			_abcde, _cecbb := _dd.ParseBool(_gabag.Value)
			if _cecbb != nil {
				return _cecbb
			}
			_gbgcd.CssAttr = &_abcde
			continue
		}
		if _gabag.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_dcedc, _eecdc := _dd.ParseBool(_gabag.Value)
			if _eecdc != nil {
				return _eecdc
			}
			_gbgcd.ThicketAttr = &_dcedc
			continue
		}
		if _gabag.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_cdddb, _gbeca := _dd.ParseBool(_gabag.Value)
			if _gbeca != nil {
				return _gbeca
			}
			_gbgcd.LongFileNamesAttr = &_cdddb
			continue
		}
		if _gabag.Name.Local == "\u0076\u006d\u006c" {
			_ecacfe, _dabaaf := _dd.ParseBool(_gabag.Value)
			if _dabaaf != nil {
				return _dabaaf
			}
			_gbgcd.VmlAttr = &_ecacfe
			continue
		}
		if _gabag.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_gceafc, _bfaege := _dd.ParseBool(_gabag.Value)
			if _bfaege != nil {
				return _bfaege
			}
			_gbgcd.AllowPngAttr = &_gceafc
			continue
		}
		if _gabag.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_gbgcd.TargetScreenSizeAttr.UnmarshalXMLAttr(_gabag)
			continue
		}
		if _gabag.Name.Local == "\u0064\u0070\u0069" {
			_dfdcd, _dgead := _dd.ParseUint(_gabag.Value, 10, 32)
			if _dgead != nil {
				return _dgead
			}
			_dagbc := uint32(_dfdcd)
			_gbgcd.DpiAttr = &_dagbc
			continue
		}
		if _gabag.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_bgcea, _aagf := _dd.ParseUint(_gabag.Value, 10, 32)
			if _aagf != nil {
				return _aagf
			}
			_bffage := uint32(_bgcea)
			_gbgcd.CodePageAttr = &_bffage
			continue
		}
		if _gabag.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_fdaaf := _gabag.Value
			_gbgcd.CharacterSetAttr = &_fdaaf
			continue
		}
	}
	for {
		_cgbgf, _cafdd := d.Token()
		if _cafdd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _cafdd)
		}
		if _aeade, _fbeeeb := _cgbgf.(_a.EndElement); _fbeeeb && _aeade.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gbgdb *CT_Formats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbgdb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdb.CountAttr)})
	}
	e.EncodeToken(start)
	_dedb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u006f\u0072\u006d\u0061\u0074"}}
	for _, _ddbbg := range _gbgdb.Format {
		e.EncodeElement(_ddbbg, _dedb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cgga *CT_CellSmartTagPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0079"}, Value: _fd.Sprintf("\u0025\u0076", _cgga.KeyAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _cgga.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleItems and its children
func (_gddfbf *CT_OleItems) Validate() error {
	return _gddfbf.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}
func (_ggabe ST_VolDepType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gbfga := _a.Attr{}
	_gbfga.Name = name
	switch _ggabe {
	case ST_VolDepTypeUnset:
		_gbfga.Value = ""
	case ST_VolDepTypeRealTimeData:
		_gbfga.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_gbfga.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _gbfga, nil
}
func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_fedgf := &CT_WorkbookProtection{}
	return _fedgf
}
func NewCT_CalculatedItems() *CT_CalculatedItems { _dce := &CT_CalculatedItems{}; return _dce }
func (_daga *CT_ExternalSheetDataSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_egfgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _cacece := range _daga.SheetData {
		e.EncodeElement(_cacece, _egfgf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_addbce *CT_XmlPr) ValidateWithPath(path string) error {
	if _addbce.ExtLst != nil {
		if _ffdfaf := _addbce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffdfaf != nil {
			return _ffdfaf
		}
	}
	return nil
}

// Validate validates the CT_RevisionMoveChoice and its children
func (_bfabd *CT_RevisionMoveChoice) Validate() error {
	return _bfabd.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u004d\u006f\u0076e\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_ExternalDefinedNames and its children
func (_dbab *CT_ExternalDefinedNames) Validate() error {
	return _dbab.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_gfbda *CT_RangeSets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfbda.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbda.CountAttr)})
	}
	e.EncodeToken(start)
	_dgacg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _eedge := range _gfbda.RangeSet {
		e.EncodeElement(_eedge, _dgacg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_gebbf *CT_Filter) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_abgea *CT_TextPr) ValidateWithPath(path string) error {
	if _ggfbc := _abgea.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ggfbc != nil {
		return _ggfbc
	}
	if _aebaad := _abgea.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _aebaad != nil {
		return _aebaad
	}
	if _abgea.TextFields != nil {
		if _bdddc := _abgea.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _bdddc != nil {
			return _bdddc
		}
	}
	return nil
}
func NewCT_PageMargins() *CT_PageMargins {
	_feceb := &CT_PageMargins{}
	return _feceb
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

func NewCT_DbPr() *CT_DbPr { _afged := &CT_DbPr{}; return _afged }
func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_dbega := &CT_RevisionDefinedName{}
	return _dbega
}
func NewCT_IntProperty() *CT_IntProperty {
	_acgfa := &CT_IntProperty{}
	return _acgfa
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_cfdb *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _agffe, _baadb := range _cfdb.ExternalReference {
		if _adeg := _baadb.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _agffe)); _adeg != nil {
			return _adeg
		}
	}
	return nil
}
func NewCT_Worksheet() *CT_Worksheet {
	_bdaff := &CT_Worksheet{}
	_bdaff.SheetData = NewCT_SheetData()
	return _bdaff
}

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

func (_bbaee ST_Objects) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cfdffd := _a.Attr{}
	_cfdffd.Name = name
	switch _bbaee {
	case ST_ObjectsUnset:
		_cfdffd.Value = ""
	case ST_ObjectsAll:
		_cfdffd.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_cfdffd.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_cfdffd.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cfdffd, nil
}

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_afgfg *CT_DbPr) ValidateWithPath(path string) error { return nil }
func (_dfdcgf *CT_TableStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfffeb := range start.Attr {
		if _gfffeb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgace := _gfffeb.Value
			_dfdcgf.NameAttr = _bgace
			continue
		}
		if _gfffeb.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_effde, _ffgda := _dd.ParseBool(_gfffeb.Value)
			if _ffgda != nil {
				return _ffgda
			}
			_dfdcgf.PivotAttr = &_effde
			continue
		}
		if _gfffeb.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_ceede, _bccaf := _dd.ParseBool(_gfffeb.Value)
			if _bccaf != nil {
				return _bccaf
			}
			_dfdcgf.TableAttr = &_ceede
			continue
		}
		if _gfffeb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdafgd, _decc := _dd.ParseUint(_gfffeb.Value, 10, 32)
			if _decc != nil {
				return _decc
			}
			_cfccb := uint32(_bdafgd)
			_dfdcgf.CountAttr = &_cfccb
			continue
		}
	}
_fgbcg:
	for {
		_agfcd, _fdcdbc := d.Token()
		if _fdcdbc != nil {
			return _fdcdbc
		}
		switch _accedf := _agfcd.(type) {
		case _a.StartElement:
			switch _accedf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_abfdd := NewCT_TableStyleElement()
				if _afabg := d.DecodeElement(_abfdd, &_accedf); _afabg != nil {
					return _afabg
				}
				_dfdcgf.TableStyleElement = append(_dfdcgf.TableStyleElement, _abfdd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _accedf.Name)
				if _dggagc := d.Skip(); _dggagc != nil {
					return _dggagc
				}
			}
		case _a.EndElement:
			break _fgbcg
		case _a.CharData:
		}
	}
	return nil
}
func (_fbfde *CT_RecordChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fbfde.M != nil {
		_dbfba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006d"}}
		e.EncodeElement(_fbfde.M, _dbfba)
	} else if _fbfde.N != nil {
		_abgfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		e.EncodeElement(_fbfde.N, _abgfe)
	} else if _fbfde.B != nil {
		_edfga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0062"}}
		e.EncodeElement(_fbfde.B, _edfga)
	} else if _fbfde.E != nil {
		_gfffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0065"}}
		e.EncodeElement(_fbfde.E, _gfffe)
	} else if _fbfde.S != nil {
		_aacga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
		e.EncodeElement(_fbfde.S, _aacga)
	} else if _fbfde.D != nil {
		_dfbce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064"}}
		e.EncodeElement(_fbfde.D, _dfbce)
	} else if _fbfde.X != nil {
		_fbaebe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		e.EncodeElement(_fbfde.X, _fbaebe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

func (_efccc *ST_DynamicFilterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_efccc = 0
	case "\u006e\u0075\u006c\u006c":
		*_efccc = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_efccc = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_efccc = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_efccc = 4
	case "\u0074\u006f\u0064a\u0079":
		*_efccc = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_efccc = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_efccc = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_efccc = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_efccc = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_efccc = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_efccc = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_efccc = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_efccc = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_efccc = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_efccc = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_efccc = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_efccc = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_efccc = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_efccc = 19
	case "\u0051\u0031":
		*_efccc = 20
	case "\u0051\u0032":
		*_efccc = 21
	case "\u0051\u0033":
		*_efccc = 22
	case "\u0051\u0034":
		*_efccc = 23
	case "\u004d\u0031":
		*_efccc = 24
	case "\u004d\u0032":
		*_efccc = 25
	case "\u004d\u0033":
		*_efccc = 26
	case "\u004d\u0034":
		*_efccc = 27
	case "\u004d\u0035":
		*_efccc = 28
	case "\u004d\u0036":
		*_efccc = 29
	case "\u004d\u0037":
		*_efccc = 30
	case "\u004d\u0038":
		*_efccc = 31
	case "\u004d\u0039":
		*_efccc = 32
	case "\u004d\u0031\u0030":
		*_efccc = 33
	case "\u004d\u0031\u0031":
		*_efccc = 34
	case "\u004d\u0031\u0032":
		*_efccc = 35
	}
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

func (_gdfgc *QueryTable) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0071\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065"
	return _gdfgc.CT_QueryTable.MarshalXML(e, start)
}
func (_gbed *CT_ChartsheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gcgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _bdgf := range _gbed.SheetView {
		e.EncodeElement(_bdgf, _gcgd)
	}
	if _gbed.ExtLst != nil {
		_dbgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbed.ExtLst, _dbgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aeffcf *CT_TextFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gaddd := range start.Attr {
		if _gaddd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgcff, _dgecd := _dd.ParseUint(_gaddd.Value, 10, 32)
			if _dgecd != nil {
				return _dgecd
			}
			_ebcdc := uint32(_fgcff)
			_aeffcf.CountAttr = &_ebcdc
			continue
		}
	}
_eabgg:
	for {
		_bebaag, _cfdda := d.Token()
		if _cfdda != nil {
			return _cfdda
		}
		switch _efage := _bebaag.(type) {
		case _a.StartElement:
			switch _efage.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_gcaada := NewCT_TextField()
				if _gageb := d.DecodeElement(_gcaada, &_efage); _gageb != nil {
					return _gageb
				}
				_aeffcf.TextField = append(_aeffcf.TextField, _gcaada)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _efage.Name)
				if _dcdac := d.Skip(); _dcdac != nil {
					return _dcdac
				}
			}
		case _a.EndElement:
			break _eabgg
		case _a.CharData:
		}
	}
	return nil
}
func (_aaagf *CT_CellProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aaagf.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aaagf.LockedAttr))})
	}
	if _aaagf.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aaagf.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Border() *CT_Border { _eddd := &CT_Border{}; return _eddd }
func (_fcbda *CT_DdeItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dadf := range start.Attr {
		if _dadf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fedaf := _dadf.Value
			_fcbda.NameAttr = &_fedaf
			continue
		}
		if _dadf.Name.Local == "\u006f\u006c\u0065" {
			_gcbd, _eeeg := _dd.ParseBool(_dadf.Value)
			if _eeeg != nil {
				return _eeeg
			}
			_fcbda.OleAttr = &_gcbd
			continue
		}
		if _dadf.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_deddb, _dfea := _dd.ParseBool(_dadf.Value)
			if _dfea != nil {
				return _dfea
			}
			_fcbda.AdviseAttr = &_deddb
			continue
		}
		if _dadf.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_bdfdb, _dbac := _dd.ParseBool(_dadf.Value)
			if _dbac != nil {
				return _dbac
			}
			_fcbda.PreferPicAttr = &_bdfdb
			continue
		}
	}
_cgbb:
	for {
		_afbfe, _ggge := d.Token()
		if _ggge != nil {
			return _ggge
		}
		switch _fbec := _afbfe.(type) {
		case _a.StartElement:
			switch _fbec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_fcbda.Values = NewCT_DdeValues()
				if _fege := d.DecodeElement(_fcbda.Values, &_fbec); _fege != nil {
					return _fege
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _fbec.Name)
				if _bdcgc := d.Skip(); _bdcgc != nil {
					return _bdcgc
				}
			}
		case _a.EndElement:
			break _cgbb
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

type PivotCacheRecords struct{ CT_PivotCacheRecords }

func NewCT_WorkbookPr() *CT_WorkbookPr { _beabdb := &CT_WorkbookPr{}; return _beabdb }
func (_ggec *CT_Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggec.Authors = NewCT_Authors()
	_ggec.CommentList = NewCT_CommentList()
_efca:
	for {
		_bbecf, _cfde := d.Token()
		if _cfde != nil {
			return _cfde
		}
		switch _daaec := _bbecf.(type) {
		case _a.StartElement:
			switch _daaec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _egff := d.DecodeElement(_ggec.Authors, &_daaec); _egff != nil {
					return _egff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _accb := d.DecodeElement(_ggec.CommentList, &_daaec); _accb != nil {
					return _accb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggec.ExtLst = NewCT_ExtensionList()
				if _cfbc := d.DecodeElement(_ggec.ExtLst, &_daaec); _cfbc != nil {
					return _cfbc
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _daaec.Name)
				if _bbad := d.Skip(); _bbad != nil {
					return _bbad
				}
			}
		case _a.EndElement:
			break _efca
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_fdfaa *CT_TablePart) ValidateWithPath(path string) error { return nil }

type StyleSheet struct{ CT_Stylesheet }

func (_edcgeg *CT_ObjectPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edcgeg.Anchor = NewCT_ObjectAnchor()
	for _, _cbdde := range start.Attr {
		if _cbdde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cbdde.Name.Local == "\u0069\u0064" || _cbdde.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cbdde.Name.Local == "\u0069\u0064" {
			_bcgggg := _cbdde.Value
			_edcgeg.IdAttr = &_bcgggg
			continue
		}
		if _cbdde.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_cefcb, _gfede := _dd.ParseBool(_cbdde.Value)
			if _gfede != nil {
				return _gfede
			}
			_edcgeg.AutoLineAttr = &_cefcb
			continue
		}
		if _cbdde.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_eceg, _cbcge := _dd.ParseBool(_cbdde.Value)
			if _cbcge != nil {
				return _cbcge
			}
			_edcgeg.PrintAttr = &_eceg
			continue
		}
		if _cbdde.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_egegab, _afaeb := _dd.ParseBool(_cbdde.Value)
			if _afaeb != nil {
				return _afaeb
			}
			_edcgeg.DisabledAttr = &_egegab
			continue
		}
		if _cbdde.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_dacdb, _cdfgeb := _dd.ParseBool(_cbdde.Value)
			if _cdfgeb != nil {
				return _cdfgeb
			}
			_edcgeg.UiObjectAttr = &_dacdb
			continue
		}
		if _cbdde.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_acdfc, _fdfdg := _dd.ParseBool(_cbdde.Value)
			if _fdfdg != nil {
				return _fdfdg
			}
			_edcgeg.AutoFillAttr = &_acdfc
			continue
		}
		if _cbdde.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_dgba, _dbag := _dd.ParseBool(_cbdde.Value)
			if _dbag != nil {
				return _dbag
			}
			_edcgeg.LockedAttr = &_dgba
			continue
		}
		if _cbdde.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_gbeb, _fecde := _dd.ParseBool(_cbdde.Value)
			if _fecde != nil {
				return _fecde
			}
			_edcgeg.AutoPictAttr = &_gbeb
			continue
		}
		if _cbdde.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_edgbf := _cbdde.Value
			_edcgeg.MacroAttr = &_edgbf
			continue
		}
		if _cbdde.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_gaaec := _cbdde.Value
			_edcgeg.AltTextAttr = &_gaaec
			continue
		}
		if _cbdde.Name.Local == "\u0064\u0064\u0065" {
			_cbbcg, _cddef := _dd.ParseBool(_cbdde.Value)
			if _cddef != nil {
				return _cddef
			}
			_edcgeg.DdeAttr = &_cbbcg
			continue
		}
		if _cbdde.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_dcca, _eggga := _dd.ParseBool(_cbdde.Value)
			if _eggga != nil {
				return _eggga
			}
			_edcgeg.DefaultSizeAttr = &_dcca
			continue
		}
	}
_dadfbd:
	for {
		_fcgbc, _ffgbbd := d.Token()
		if _ffgbbd != nil {
			return _ffgbbd
		}
		switch _gebfb := _fcgbc.(type) {
		case _a.StartElement:
			switch _gebfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _ffcdbe := d.DecodeElement(_edcgeg.Anchor, &_gebfb); _ffcdbe != nil {
					return _ffcdbe
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _gebfb.Name)
				if _bbcag := d.Skip(); _bbcag != nil {
					return _bbcag
				}
			}
		case _a.EndElement:
			break _dadfbd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_InputCells and its children
func (_cfabbd *CT_InputCells) Validate() error {
	return _cfabbd.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}
func NewCT_TextField() *CT_TextField { _gfcfd := &CT_TextField{}; return _gfcfd }
func (_dbfac ST_TextVAlign) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bedgf := _a.Attr{}
	_bedgf.Name = name
	switch _dbfac {
	case ST_TextVAlignUnset:
		_bedgf.Value = ""
	case ST_TextVAlignTop:
		_bedgf.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_bedgf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_bedgf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_bedgf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_bedgf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _bedgf, nil
}

// Validate validates the CT_Location and its children
func (_bbdcb *CT_Location) Validate() error {
	return _bbdcb.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_ebbge *CT_Stylesheet) ValidateWithPath(path string) error {
	if _ebbge.NumFmts != nil {
		if _gecfdd := _ebbge.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _gecfdd != nil {
			return _gecfdd
		}
	}
	if _ebbge.Fonts != nil {
		if _fgecf := _ebbge.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _fgecf != nil {
			return _fgecf
		}
	}
	if _ebbge.Fills != nil {
		if _fdfda := _ebbge.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _fdfda != nil {
			return _fdfda
		}
	}
	if _ebbge.Borders != nil {
		if _facfc := _ebbge.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _facfc != nil {
			return _facfc
		}
	}
	if _ebbge.CellStyleXfs != nil {
		if _gdbdc := _ebbge.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _gdbdc != nil {
			return _gdbdc
		}
	}
	if _ebbge.CellXfs != nil {
		if _fcaccc := _ebbge.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _fcaccc != nil {
			return _fcaccc
		}
	}
	if _ebbge.CellStyles != nil {
		if _gegaf := _ebbge.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _gegaf != nil {
			return _gegaf
		}
	}
	if _ebbge.Dxfs != nil {
		if _dbefa := _ebbge.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _dbefa != nil {
			return _dbefa
		}
	}
	if _ebbge.TableStyles != nil {
		if _fcaed := _ebbge.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _fcaed != nil {
			return _fcaed
		}
	}
	if _ebbge.Colors != nil {
		if _efdb := _ebbge.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _efdb != nil {
			return _efdb
		}
	}
	if _ebbge.ExtLst != nil {
		if _daeeg := _ebbge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daeeg != nil {
			return _daeeg
		}
	}
	return nil
}
func (_ccegeb *CT_SingleXmlCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gcecb:
	for {
		_bfebg, _badadf := d.Token()
		if _badadf != nil {
			return _badadf
		}
		switch _ddfec := _bfebg.(type) {
		case _a.StartElement:
			switch _ddfec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_cabfa := NewCT_SingleXmlCell()
				if _dgfedc := d.DecodeElement(_cabfa, &_ddfec); _dgfedc != nil {
					return _dgfedc
				}
				_ccegeb.SingleXmlCell = append(_ccegeb.SingleXmlCell, _cabfa)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _ddfec.Name)
				if _cdaefd := d.Skip(); _cdaefd != nil {
					return _cdaefd
				}
			}
		case _a.EndElement:
			break _gcecb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ExternalBook and its children
func (_dgdfe *CT_ExternalBook) Validate() error {
	return _dgdfe.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}
func (_fgcab *ST_HtmlFmt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaeaa, _dfegc := d.Token()
	if _dfegc != nil {
		return _dfegc
	}
	if _dfbcee, _dadgdf := _gaeaa.(_a.EndElement); _dadgdf && _dfbcee.Name == start.Name {
		*_fgcab = 1
		return nil
	}
	if _aeebe, _fgfdg := _gaeaa.(_a.CharData); !_fgfdg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaeaa)
	} else {
		switch string(_aeebe) {
		case "":
			*_fgcab = 0
		case "\u006e\u006f\u006e\u0065":
			*_fgcab = 1
		case "\u0072\u0074\u0066":
			*_fgcab = 2
		case "\u0061\u006c\u006c":
			*_fgcab = 3
		}
	}
	_gaeaa, _dfegc = d.Token()
	if _dfegc != nil {
		return _dfegc
	}
	if _eaaac, _dcdedc := _gaeaa.(_a.EndElement); _dcdedc && _eaaac.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaeaa)
}

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}

// Validate validates the CT_FontName and its children
func (_aebba *CT_FontName) Validate() error {
	return _aebba.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}
func (_aedgf *CT_OleObjects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_defbe:
	for {
		_fabe, _gfbdc := d.Token()
		if _gfbdc != nil {
			return _gfbdc
		}
		switch _edefe := _fabe.(type) {
		case _a.StartElement:
			switch _edefe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_eddbb := NewCT_OleObject()
				if _gedfd := d.DecodeElement(_eddbb, &_edefe); _gedfd != nil {
					return _gedfd
				}
				_aedgf.OleObject = append(_aedgf.OleObject, _eddbb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _edefe.Name)
				if _abca := d.Skip(); _abca != nil {
					return _abca
				}
			}
		case _a.EndElement:
			break _defbe
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_bgadf *CT_DataField) ValidateWithPath(path string) error {
	if _bddg := _bgadf.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _bddg != nil {
		return _bddg
	}
	if _ccfba := _bgadf.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _ccfba != nil {
		return _ccfba
	}
	if _bgadf.ExtLst != nil {
		if _bgddg := _bgadf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgddg != nil {
			return _bgddg
		}
	}
	return nil
}

type ST_CredMethod byte

func (_faffd *CT_DataConsolidate) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egabe := range start.Attr {
		if _egabe.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_faffd.FunctionAttr.UnmarshalXMLAttr(_egabe)
			continue
		}
		if _egabe.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_eefcd, _dgfgb := _dd.ParseBool(_egabe.Value)
			if _dgfgb != nil {
				return _dgfgb
			}
			_faffd.StartLabelsAttr = &_eefcd
			continue
		}
		if _egabe.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_gcbegb, _fbdf := _dd.ParseBool(_egabe.Value)
			if _fbdf != nil {
				return _fbdf
			}
			_faffd.LeftLabelsAttr = &_gcbegb
			continue
		}
		if _egabe.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_efabe, _cacd := _dd.ParseBool(_egabe.Value)
			if _cacd != nil {
				return _cacd
			}
			_faffd.TopLabelsAttr = &_efabe
			continue
		}
		if _egabe.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dgacb, _fbdff := _dd.ParseBool(_egabe.Value)
			if _fbdff != nil {
				return _fbdff
			}
			_faffd.LinkAttr = &_dgacb
			continue
		}
	}
_cbcb:
	for {
		_fece, _eggf := d.Token()
		if _eggf != nil {
			return _eggf
		}
		switch _cddg := _fece.(type) {
		case _a.StartElement:
			switch _cddg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_faffd.DataRefs = NewCT_DataRefs()
				if _fffg := d.DecodeElement(_faffd.DataRefs, &_cddg); _fffg != nil {
					return _fffg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _cddg.Name)
				if _bcdga := d.Skip(); _bcdga != nil {
					return _bcdga
				}
			}
		case _a.EndElement:
			break _cbcb
		case _a.CharData:
		}
	}
	return nil
}

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func (_cbffd *CT_Items) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfabe := range start.Attr {
		if _cfabe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggbed, _cdgc := _dd.ParseUint(_cfabe.Value, 10, 32)
			if _cdgc != nil {
				return _cdgc
			}
			_gecbc := uint32(_ggbed)
			_cbffd.CountAttr = &_gecbc
			continue
		}
	}
_ceaga:
	for {
		_fedg, _ffbeba := d.Token()
		if _ffbeba != nil {
			return _ffbeba
		}
		switch _bbbgd := _fedg.(type) {
		case _a.StartElement:
			switch _bbbgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_dccbe := NewCT_Item()
				if _ecfeg := d.DecodeElement(_dccbe, &_bbbgd); _ecfeg != nil {
					return _ecfeg
				}
				_cbffd.Item = append(_cbffd.Item, _dccbe)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bbbgd.Name)
				if _abccg := d.Skip(); _abccg != nil {
					return _abccg
				}
			}
		case _a.EndElement:
			break _ceaga
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Item and its children
func (_efgg *CT_Item) Validate() error {
	return _efgg.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}
func (_gbegd *CT_PageBreak) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fged := range start.Attr {
		if _fged.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggbca, _aggcc := _dd.ParseUint(_fged.Value, 10, 32)
			if _aggcc != nil {
				return _aggcc
			}
			_bdbe := uint32(_ggbca)
			_gbegd.CountAttr = &_bdbe
			continue
		}
		if _fged.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_fcabg, _ebecg := _dd.ParseUint(_fged.Value, 10, 32)
			if _ebecg != nil {
				return _ebecg
			}
			_ceaafa := uint32(_fcabg)
			_gbegd.ManualBreakCountAttr = &_ceaafa
			continue
		}
	}
_bbbeg:
	for {
		_efcda, _cadba := d.Token()
		if _cadba != nil {
			return _cadba
		}
		switch _gefba := _efcda.(type) {
		case _a.StartElement:
			switch _gefba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_adcbf := NewCT_Break()
				if _gfbed := d.DecodeElement(_adcbf, &_gefba); _gfbed != nil {
					return _gfbed
				}
				_gbegd.Brk = append(_gbegd.Brk, _adcbf)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _gefba.Name)
				if _cbdg := d.Skip(); _cbdg != nil {
					return _cbdg
				}
			}
		case _a.EndElement:
			break _bbbeg
		case _a.CharData:
		}
	}
	return nil
}

type CT_XStringElement struct {

	// Value
	VAttr string
}

func (_dbgf *CT_Macrosheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbgf.SheetData = NewCT_SheetData()
_fbdac:
	for {
		_eccfg, _cceabg := d.Token()
		if _cceabg != nil {
			return _cceabg
		}
		switch _cdaa := _eccfg.(type) {
		case _a.StartElement:
			switch _cdaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_dbgf.SheetPr = NewCT_SheetPr()
				if _bbda := d.DecodeElement(_dbgf.SheetPr, &_cdaa); _bbda != nil {
					return _bbda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_dbgf.Dimension = NewCT_SheetDimension()
				if _abge := d.DecodeElement(_dbgf.Dimension, &_cdaa); _abge != nil {
					return _abge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dbgf.SheetViews = NewCT_SheetViews()
				if _baag := d.DecodeElement(_dbgf.SheetViews, &_cdaa); _baag != nil {
					return _baag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_dbgf.SheetFormatPr = NewCT_SheetFormatPr()
				if _caadg := d.DecodeElement(_dbgf.SheetFormatPr, &_cdaa); _caadg != nil {
					return _caadg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_fcdg := NewCT_Cols()
				if _baaed := d.DecodeElement(_fcdg, &_cdaa); _baaed != nil {
					return _baaed
				}
				_dbgf.Cols = append(_dbgf.Cols, _fcdg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _cabaeb := d.DecodeElement(_dbgf.SheetData, &_cdaa); _cabaeb != nil {
					return _cabaeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dbgf.SheetProtection = NewCT_SheetProtection()
				if _fedac := d.DecodeElement(_dbgf.SheetProtection, &_cdaa); _fedac != nil {
					return _fedac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dbgf.AutoFilter = NewCT_AutoFilter()
				if _ecgg := d.DecodeElement(_dbgf.AutoFilter, &_cdaa); _ecgg != nil {
					return _ecgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_dbgf.SortState = NewCT_SortState()
				if _fdbgf := d.DecodeElement(_dbgf.SortState, &_cdaa); _fdbgf != nil {
					return _fdbgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_dbgf.DataConsolidate = NewCT_DataConsolidate()
				if _accfb := d.DecodeElement(_dbgf.DataConsolidate, &_cdaa); _accfb != nil {
					return _accfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dbgf.CustomSheetViews = NewCT_CustomSheetViews()
				if _agdae := d.DecodeElement(_dbgf.CustomSheetViews, &_cdaa); _agdae != nil {
					return _agdae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_dbgf.PhoneticPr = NewCT_PhoneticPr()
				if _cgabee := d.DecodeElement(_dbgf.PhoneticPr, &_cdaa); _cgabee != nil {
					return _cgabee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_bebbc := NewCT_ConditionalFormatting()
				if _ggea := d.DecodeElement(_bebbc, &_cdaa); _ggea != nil {
					return _ggea
				}
				_dbgf.ConditionalFormatting = append(_dbgf.ConditionalFormatting, _bebbc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_dbgf.PrintOptions = NewCT_PrintOptions()
				if _gddee := d.DecodeElement(_dbgf.PrintOptions, &_cdaa); _gddee != nil {
					return _gddee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_dbgf.PageMargins = NewCT_PageMargins()
				if _decef := d.DecodeElement(_dbgf.PageMargins, &_cdaa); _decef != nil {
					return _decef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_dbgf.PageSetup = NewCT_PageSetup()
				if _dddbc := d.DecodeElement(_dbgf.PageSetup, &_cdaa); _dddbc != nil {
					return _dddbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dbgf.HeaderFooter = NewCT_HeaderFooter()
				if _degab := d.DecodeElement(_dbgf.HeaderFooter, &_cdaa); _degab != nil {
					return _degab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_dbgf.RowBreaks = NewCT_PageBreak()
				if _eaabb := d.DecodeElement(_dbgf.RowBreaks, &_cdaa); _eaabb != nil {
					return _eaabb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_dbgf.ColBreaks = NewCT_PageBreak()
				if _cgddb := d.DecodeElement(_dbgf.ColBreaks, &_cdaa); _cgddb != nil {
					return _cgddb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_dbgf.CustomProperties = NewCT_CustomProperties()
				if _afccb := d.DecodeElement(_dbgf.CustomProperties, &_cdaa); _afccb != nil {
					return _afccb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_dbgf.Drawing = NewCT_Drawing()
				if _fcced := d.DecodeElement(_dbgf.Drawing, &_cdaa); _fcced != nil {
					return _fcced
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_dbgf.LegacyDrawing = NewCT_LegacyDrawing()
				if _afcgb := d.DecodeElement(_dbgf.LegacyDrawing, &_cdaa); _afcgb != nil {
					return _afcgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_dbgf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _aafg := d.DecodeElement(_dbgf.LegacyDrawingHF, &_cdaa); _aafg != nil {
					return _aafg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_dbgf.DrawingHF = NewCT_DrawingHF()
				if _gfcag := d.DecodeElement(_dbgf.DrawingHF, &_cdaa); _gfcag != nil {
					return _gfcag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_dbgf.Picture = NewCT_SheetBackgroundPicture()
				if _eaacg := d.DecodeElement(_dbgf.Picture, &_cdaa); _eaacg != nil {
					return _eaacg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_dbgf.OleObjects = NewCT_OleObjects()
				if _cffbg := d.DecodeElement(_dbgf.OleObjects, &_cdaa); _cffbg != nil {
					return _cffbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbgf.ExtLst = NewCT_ExtensionList()
				if _bdfad := d.DecodeElement(_dbgf.ExtLst, &_cdaa); _bdfad != nil {
					return _bdfad
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _cdaa.Name)
				if _agbeg := d.Skip(); _agbeg != nil {
					return _agbeg
				}
			}
		case _a.EndElement:
			break _fbdac
		case _a.CharData:
		}
	}
	return nil
}

type CT_FontName struct {

	// String Value
	ValAttr string
}

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_dgbdea *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

func (_bdafad *CT_MeasureDimensionMap) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bcddf := range start.Attr {
		if _bcddf.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_gecbbg, _begf := _dd.ParseUint(_bcddf.Value, 10, 32)
			if _begf != nil {
				return _begf
			}
			_ggcba := uint32(_gecbbg)
			_bdafad.MeasureGroupAttr = &_ggcba
			continue
		}
		if _bcddf.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_ecdb, _begg := _dd.ParseUint(_bcddf.Value, 10, 32)
			if _begg != nil {
				return _begg
			}
			_cagcc := uint32(_ecdb)
			_bdafad.DimensionAttr = &_cagcc
			continue
		}
	}
	for {
		_bbea, _feeab := d.Token()
		if _feeab != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _feeab)
		}
		if _fdgaf, _dgabf := _bbea.(_a.EndElement); _dgabf && _fdgaf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Macrosheet and its children
func (_bfgbb *CT_Macrosheet) Validate() error {
	return _bfgbb.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

func (_fbbfdc *CT_SheetPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbbfdc.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.SyncHorizontalAttr))})
	}
	if _fbbfdc.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.SyncVerticalAttr))})
	}
	if _fbbfdc.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_fbbfdc.SyncRefAttr)})
	}
	if _fbbfdc.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.TransitionEvaluationAttr))})
	}
	if _fbbfdc.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.TransitionEntryAttr))})
	}
	if _fbbfdc.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.PublishedAttr))})
	}
	if _fbbfdc.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fbbfdc.CodeNameAttr)})
	}
	if _fbbfdc.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.FilterModeAttr))})
	}
	if _fbbfdc.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbbfdc.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _fbbfdc.TabColor != nil {
		_gafcea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_fbbfdc.TabColor, _gafcea)
	}
	if _fbbfdc.OutlinePr != nil {
		_gccbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_fbbfdc.OutlinePr, _gccbe)
	}
	if _fbbfdc.PageSetUpPr != nil {
		_gaaefc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_fbbfdc.PageSetUpPr, _gaaefc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RevisionHeader and its children
func (_degfd *CT_RevisionHeader) Validate() error {
	return _degfd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}
func NewCT_Dimensions() *CT_Dimensions {
	_gfaea := &CT_Dimensions{}
	return _gfaea
}

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_PhoneticAlignment byte
type CT_CellWatch struct {

	// Reference
	RAttr string
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_ggf *CT_BookView) ValidateWithPath(path string) error {
	if _ee := _ggf.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _ee != nil {
		return _ee
	}
	if _ggf.ExtLst != nil {
		if _dde := _ggf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dde != nil {
			return _dde
		}
	}
	return nil
}

// Validate validates the CT_ExternalSheetNames and its children
func (_ccaef *CT_ExternalSheetNames) Validate() error {
	return _ccaef.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}
func NewCT_SheetCalcPr() *CT_SheetCalcPr {
	_dbeccf := &CT_SheetCalcPr{}
	return _dbeccf
}

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_cffbbf *CT_Record) ValidateWithPath(path string) error {
	for _efdgd, _ffebd := range _cffbbf.RecordChoice {
		if _ccedf := _ffebd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052ec\u006f\u0072\u0064\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _efdgd)); _ccedf != nil {
			return _ccedf
		}
	}
	return nil
}
func (_deadg *CT_TablesChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _deadg.M != nil {
		_dedga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006d"}}
		e.EncodeElement(_deadg.M, _dedga)
	} else if _deadg.S != nil {
		_ebgcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
		e.EncodeElement(_deadg.S, _ebgcg)
	} else if _deadg.X != nil {
		_egffbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		e.EncodeElement(_deadg.X, _egffbg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotDimension() *CT_PivotDimension { _dfbgfb := &CT_PivotDimension{}; return _dfbgfb }

// Validate validates the CT_PivotCache and its children
func (_eaeag *CT_PivotCache) Validate() error {
	return _eaeag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}
func (_eagfac ST_SortMethod) ValidateWithPath(path string) error {
	switch _eagfac {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eagfac))
	}
	return nil
}
func (_edgfc *CT_PCDKPI) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _edgfc.UniqueNameAttr)})
	if _edgfc.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.CaptionAttr)})
	}
	if _edgfc.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.DisplayFolderAttr)})
	}
	if _edgfc.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.MeasureGroupAttr)})
	}
	if _edgfc.ParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.ParentAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _edgfc.ValueAttr)})
	if _edgfc.GoalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.GoalAttr)})
	}
	if _edgfc.StatusAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.StatusAttr)})
	}
	if _edgfc.TrendAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.TrendAttr)})
	}
	if _edgfc.WeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.WeightAttr)})
	}
	if _edgfc.TimeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_edgfc.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_adabf *ST_GradientType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cceca, _afdeg := d.Token()
	if _afdeg != nil {
		return _afdeg
	}
	if _aaddggg, _deadcb := _cceca.(_a.EndElement); _deadcb && _aaddggg.Name == start.Name {
		*_adabf = 1
		return nil
	}
	if _gcbgdf, _fafccg := _cceca.(_a.CharData); !_fafccg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cceca)
	} else {
		switch string(_gcbgdf) {
		case "":
			*_adabf = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_adabf = 1
		case "\u0070\u0061\u0074\u0068":
			*_adabf = 2
		}
	}
	_cceca, _afdeg = d.Token()
	if _afdeg != nil {
		return _afdeg
	}
	if _ccaggb, _faafb := _cceca.(_a.EndElement); _faafb && _ccaggb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cceca)
}
func NewCT_Extension() *CT_Extension { _aefac := &CT_Extension{}; return _aefac }

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_bgfbb *CT_RangePr) ValidateWithPath(path string) error {
	if _eefcdg := _bgfbb.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _eefcdg != nil {
		return _eefcdg
	}
	return nil
}
func (_cabbc *CT_RPrElt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	for _, _egggb := range _cabbc.RPrEltChoice {
		_egggb.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fgfd *CT_CfRule) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fgfd.TypeAttr != ST_CfTypeUnset {
		_egfc, _eaee := _fgfd.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _eaee != nil {
			return _eaee
		}
		start.Attr = append(start.Attr, _egfc)
	}
	if _fgfd.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgfd.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _fd.Sprintf("\u0025\u0076", _fgfd.PriorityAttr)})
	if _fgfd.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgfd.StopIfTrueAttr))})
	}
	if _fgfd.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgfd.AboveAverageAttr))})
	}
	if _fgfd.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgfd.PercentAttr))})
	}
	if _fgfd.BottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgfd.BottomAttr))})
	}
	if _fgfd.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_egbc, _cged := _fgfd.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _cged != nil {
			return _cged
		}
		start.Attr = append(start.Attr, _egbc)
	}
	if _fgfd.TextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fgfd.TextAttr)})
	}
	if _fgfd.TimePeriodAttr != ST_TimePeriodUnset {
		_acac, _dgda := _fgfd.TimePeriodAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _dgda != nil {
			return _dgda
		}
		start.Attr = append(start.Attr, _acac)
	}
	if _fgfd.RankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0076", *_fgfd.RankAttr)})
	}
	if _fgfd.StdDevAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _fd.Sprintf("\u0025\u0076", *_fgfd.StdDevAttr)})
	}
	if _fgfd.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgfd.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _fgfd.Formula != nil {
		_bgfda := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _acgf := range _fgfd.Formula {
			e.EncodeElement(_acgf, _bgfda)
		}
	}
	if _fgfd.ColorScale != nil {
		_cfaec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u006f\u0072S\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_fgfd.ColorScale, _cfaec)
	}
	if _fgfd.DataBar != nil {
		_aceec := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_fgfd.DataBar, _aceec)
	}
	if _fgfd.IconSet != nil {
		_fbbb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_fgfd.IconSet, _fbbb)
	}
	if _fgfd.ExtLst != nil {
		_dddeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgfd.ExtLst, _dddeb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gbbacc *CT_Fonts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbbacc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gbbacc.CountAttr)})
	}
	e.EncodeToken(start)
	if _gbbacc.Font != nil {
		_bgef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u006f\u006e\u0074"}}
		for _, _bfeb := range _gbbacc.Font {
			e.EncodeElement(_bfeb, _bgef)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomFilters and its children
func (_aceg *CT_CustomFilters) Validate() error {
	return _aceg.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}

// Validate validates the CT_CellStyleXfs and its children
func (_dfdge *CT_CellStyleXfs) Validate() error {
	return _dfdge.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}
func (_aff *CT_BookViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bgdb:
	for {
		_dac, _bbb := d.Token()
		if _bbb != nil {
			return _bbb
		}
		switch _gcf := _dac.(type) {
		case _a.StartElement:
			switch _gcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_cec := NewCT_BookView()
				if _adaa := d.DecodeElement(_cec, &_gcf); _adaa != nil {
					return _adaa
				}
				_aff.WorkbookView = append(_aff.WorkbookView, _cec)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gcf.Name)
				if _ccg := d.Skip(); _ccg != nil {
					return _ccg
				}
			}
		case _a.EndElement:
			break _bgdb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_IndexedColors() *CT_IndexedColors { _dfafg := &CT_IndexedColors{}; return _dfafg }

type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}

func NewCT_XStringElement() *CT_XStringElement { _bffbe := &CT_XStringElement{}; return _bffbe }

// Validate validates the CT_SmartTags and its children
func (_gbfba *CT_SmartTags) Validate() error {
	return _gbfba.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_cgbee *CT_PivotField) ValidateWithPath(path string) error {
	if _ggcbc := _cgbee.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _ggcbc != nil {
		return _ggcbc
	}
	if _gefca := _cgbee.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gefca != nil {
		return _gefca
	}
	if _cgbee.Items != nil {
		if _cabfde := _cgbee.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _cabfde != nil {
			return _cabfde
		}
	}
	if _cgbee.AutoSortScope != nil {
		if _faegcd := _cgbee.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _faegcd != nil {
			return _faegcd
		}
	}
	if _cgbee.ExtLst != nil {
		if _fdfce := _cgbee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdfce != nil {
			return _fdfce
		}
	}
	return nil
}
func (_cfdeb *ST_SheetState) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfdeb = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_cfdeb = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_cfdeb = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_cfdeb = 3
	}
	return nil
}

// Validate validates the CT_Chartsheet and its children
func (_bcdfe *CT_Chartsheet) Validate() error {
	return _bcdfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_TablesChoice and its children, prefixing error messages with path
func (_bbbab *CT_TablesChoice) ValidateWithPath(path string) error {
	if _bbbab.M != nil {
		if _ebcaef := _bbbab.M.ValidateWithPath(path + "\u002f\u004d"); _ebcaef != nil {
			return _ebcaef
		}
	}
	if _bbbab.S != nil {
		if _ecfcge := _bbbab.S.ValidateWithPath(path + "\u002f\u0053"); _ecfcge != nil {
			return _ecfcge
		}
	}
	if _bbbab.X != nil {
		if _cedgb := _bbbab.X.ValidateWithPath(path + "\u002f\u0058"); _cedgb != nil {
			return _cedgb
		}
	}
	return nil
}
func (_eabf *CT_DataRef) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcfac := range start.Attr {
		if _dcfac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcfac.Name.Local == "\u0069\u0064" || _dcfac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcfac.Name.Local == "\u0069\u0064" {
			_agcea := _dcfac.Value
			_eabf.IdAttr = &_agcea
			continue
		}
		if _dcfac.Name.Local == "\u0072\u0065\u0066" {
			_gabec := _dcfac.Value
			_eabf.RefAttr = &_gabec
			continue
		}
		if _dcfac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcdf := _dcfac.Value
			_eabf.NameAttr = &_gcdf
			continue
		}
		if _dcfac.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_fcfd := _dcfac.Value
			_eabf.SheetAttr = &_fcfd
			continue
		}
	}
	for {
		_dabeef, _fgcg := d.Token()
		if _fgcg != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _fgcg)
		}
		if _bfgge, _cagb := _dabeef.(_a.EndElement); _cagb && _bfgge.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_gafcg *CT_ExtensionList) ValidateWithPath(path string) error {
	for _dbea, _afac := range _gafcg.Ext {
		if _aebdf := _afac.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dbea)); _aebdf != nil {
			return _aebdf
		}
	}
	return nil
}
func NewCT_GradientFill() *CT_GradientFill { _aeeeb := &CT_GradientFill{}; return _aeeeb }

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func (_cgadee ST_DataValidationType) ValidateWithPath(path string) error {
	switch _cgadee {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgadee))
	}
	return nil
}
func (_bccaa *ST_Objects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cabcc, _aadbf := d.Token()
	if _aadbf != nil {
		return _aadbf
	}
	if _bdgab, _aabbb := _cabcc.(_a.EndElement); _aabbb && _bdgab.Name == start.Name {
		*_bccaa = 1
		return nil
	}
	if _acacg, _fadfe := _cabcc.(_a.CharData); !_fadfe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cabcc)
	} else {
		switch string(_acacg) {
		case "":
			*_bccaa = 0
		case "\u0061\u006c\u006c":
			*_bccaa = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_bccaa = 2
		case "\u006e\u006f\u006e\u0065":
			*_bccaa = 3
		}
	}
	_cabcc, _aadbf = d.Token()
	if _aadbf != nil {
		return _aadbf
	}
	if _bfcdae, _agadfd := _cabcc.(_a.EndElement); _agadfd && _bfcdae.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cabcc)
}
func NewPivotCacheRecords() *PivotCacheRecords {
	_fgeee := &PivotCacheRecords{}
	_fgeee.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _fgeee
}

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}
type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}

func (_gbcdb ST_VolValueType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gbcdb.String(), start)
}
func (_dfcgec *CT_GroupMember) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dfcgec.UniqueNameAttr)})
	if _dfcgec.GroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dfcgec.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_FontFamily struct{ ValAttr int64 }

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_ffbb *CT_Cell) ValidateWithPath(path string) error {
	if _bbdd := _ffbb.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bbdd != nil {
		return _bbdd
	}
	if _ffbb.F != nil {
		if _eeaf := _ffbb.F.ValidateWithPath(path + "\u002f\u0046"); _eeaf != nil {
			return _eeaf
		}
	}
	if _ffbb.Is != nil {
		if _gcee := _ffbb.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _gcee != nil {
			return _gcee
		}
	}
	if _ffbb.ExtLst != nil {
		if _bfga := _ffbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfga != nil {
			return _bfga
		}
	}
	return nil
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}
type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}
type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}

// Validate validates the CT_X and its children
func (_ageag *CT_X) Validate() error { return _ageag.ValidateWithPath("\u0043\u0054\u005f\u0058") }
func (_agfg *CT_SharedItemsChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_agbdb := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
		_agfg.M = NewCT_Missing()
		if _cgbda := d.DecodeElement(_agfg.M, &_agbdb); _cgbda != nil {
			return _cgbda
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
		_agfg.N = NewCT_Number()
		if _bgdeb := d.DecodeElement(_agfg.N, &_agbdb); _bgdeb != nil {
			return _bgdeb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
		_agfg.B = NewCT_Boolean()
		if _cgbae := d.DecodeElement(_agfg.B, &_agbdb); _cgbae != nil {
			return _cgbae
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
		_agfg.E = NewCT_Error()
		if _cgddf := d.DecodeElement(_agfg.E, &_agbdb); _cgddf != nil {
			return _cgddf
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
		_agfg.S = NewCT_String()
		if _egada := d.DecodeElement(_agfg.S, &_agbdb); _egada != nil {
			return _egada
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
		_agfg.D = NewCT_DateTime()
		if _cefee := d.DecodeElement(_agfg.D, &_agbdb); _cefee != nil {
			return _cefee
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _agbdb.Name)
		if _ebaaa := d.Skip(); _ebaaa != nil {
			return _ebaaa
		}
	}
	return nil
}
func (_fgefc *ST_UnderlineValues) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdecge, _dabga := d.Token()
	if _dabga != nil {
		return _dabga
	}
	if _dgfec, _fadbg := _bdecge.(_a.EndElement); _fadbg && _dgfec.Name == start.Name {
		*_fgefc = 1
		return nil
	}
	if _gfbff, _abeab := _bdecge.(_a.CharData); !_abeab {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdecge)
	} else {
		switch string(_gfbff) {
		case "":
			*_fgefc = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_fgefc = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_fgefc = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fgefc = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_fgefc = 4
		case "\u006e\u006f\u006e\u0065":
			*_fgefc = 5
		}
	}
	_bdecge, _dabga = d.Token()
	if _dabga != nil {
		return _dabga
	}
	if _cggef, _gggdc := _bdecge.(_a.EndElement); _gggdc && _cggef.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdecge)
}

// Validate validates the CT_CalcChain and its children
func (_dbfg *CT_CalcChain) Validate() error {
	return _dbfg.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}
func (_gfcb *CT_FileSharing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _badfb := range start.Attr {
		if _badfb.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_abffb, _agfeg := _dd.ParseBool(_badfb.Value)
			if _agfeg != nil {
				return _agfeg
			}
			_gfcb.ReadOnlyRecommendedAttr = &_abffb
			continue
		}
		if _badfb.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_fggec := _badfb.Value
			_gfcb.UserNameAttr = &_fggec
			continue
		}
		if _badfb.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bbde := _badfb.Value
			_gfcb.ReservationPasswordAttr = &_bbde
			continue
		}
		if _badfb.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_beecc := _badfb.Value
			_gfcb.AlgorithmNameAttr = &_beecc
			continue
		}
		if _badfb.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_fggeb := _badfb.Value
			_gfcb.HashValueAttr = &_fggeb
			continue
		}
		if _badfb.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_afbae := _badfb.Value
			_gfcb.SaltValueAttr = &_afbae
			continue
		}
		if _badfb.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gcegd, _gcdfc := _dd.ParseUint(_badfb.Value, 10, 32)
			if _gcdfc != nil {
				return _gcdfc
			}
			_cdcgg := uint32(_gcegd)
			_gfcb.SpinCountAttr = &_cdcgg
			continue
		}
	}
	for {
		_edebf, _dgcdb := d.Token()
		if _dgcdb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _dgcdb)
		}
		if _eafbf, _cebcd := _edebf.(_a.EndElement); _cebcd && _eafbf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PivotHierarchy() *CT_PivotHierarchy { _gabgb := &CT_PivotHierarchy{}; return _gabgb }

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

// ValidateWithPath validates the CT_RevisionMoveChoice and its children, prefixing error messages with path
func (_debcb *CT_RevisionMoveChoice) ValidateWithPath(path string) error {
	for _ecafg, _aabdc := range _debcb.Undo {
		if _cgbfd := _aabdc.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _ecafg)); _cgbfd != nil {
			return _cgbfd
		}
	}
	for _abbcbg, _cacab := range _debcb.Rcc {
		if _egbdcf := _cacab.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _abbcbg)); _egbdcf != nil {
			return _egbdcf
		}
	}
	for _bcdcc, _gcgdgg := range _debcb.Rfmt {
		if _edgfb := _gcgdgg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _bcdcc)); _edgfb != nil {
			return _edgfb
		}
	}
	return nil
}
func NewCT_CellXfs() *CT_CellXfs { _ddbef := &CT_CellXfs{}; return _ddbef }
func NewCT_Break() *CT_Break     { _gaed := &CT_Break{}; return _gaed }
func (_dgeab ST_Type) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dgeab.String(), start)
}

type ST_MdxFunctionType byte

func (_gdcfdf *Workbook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdcfdf.CT_Workbook = *NewCT_Workbook()
	for _, _ccabe := range start.Attr {
		if _ccabe.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_gdcfdf.ConformanceAttr.UnmarshalXMLAttr(_ccabe)
			continue
		}
	}
_beefgd:
	for {
		_beffg, _gffcd := d.Token()
		if _gffcd != nil {
			return _gffcd
		}
		switch _ffcfbe := _beffg.(type) {
		case _a.StartElement:
			switch _ffcfbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_gdcfdf.FileVersion = NewCT_FileVersion()
				if _ccgcec := d.DecodeElement(_gdcfdf.FileVersion, &_ffcfbe); _ccgcec != nil {
					return _ccgcec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_gdcfdf.FileSharing = NewCT_FileSharing()
				if _bbdddff := d.DecodeElement(_gdcfdf.FileSharing, &_ffcfbe); _bbdddff != nil {
					return _bbdddff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_gdcfdf.WorkbookPr = NewCT_WorkbookPr()
				if _gcegda := d.DecodeElement(_gdcfdf.WorkbookPr, &_ffcfbe); _gcegda != nil {
					return _gcegda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_gdcfdf.WorkbookProtection = NewCT_WorkbookProtection()
				if _cdbeg := d.DecodeElement(_gdcfdf.WorkbookProtection, &_ffcfbe); _cdbeg != nil {
					return _cdbeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_gdcfdf.BookViews = NewCT_BookViews()
				if _dcdcgg := d.DecodeElement(_gdcfdf.BookViews, &_ffcfbe); _dcdcgg != nil {
					return _dcdcgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _baaad := d.DecodeElement(_gdcfdf.Sheets, &_ffcfbe); _baaad != nil {
					return _baaad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_gdcfdf.FunctionGroups = NewCT_FunctionGroups()
				if _ebcff := d.DecodeElement(_gdcfdf.FunctionGroups, &_ffcfbe); _ebcff != nil {
					return _ebcff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_gdcfdf.ExternalReferences = NewCT_ExternalReferences()
				if _ecgdad := d.DecodeElement(_gdcfdf.ExternalReferences, &_ffcfbe); _ecgdad != nil {
					return _ecgdad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_gdcfdf.DefinedNames = NewCT_DefinedNames()
				if _bdedf := d.DecodeElement(_gdcfdf.DefinedNames, &_ffcfbe); _bdedf != nil {
					return _bdedf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_gdcfdf.CalcPr = NewCT_CalcPr()
				if _gbfge := d.DecodeElement(_gdcfdf.CalcPr, &_ffcfbe); _gbfge != nil {
					return _gbfge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_gdcfdf.OleSize = NewCT_OleSize()
				if _cbdbd := d.DecodeElement(_gdcfdf.OleSize, &_ffcfbe); _cbdbd != nil {
					return _cbdbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_gdcfdf.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _acfdfb := d.DecodeElement(_gdcfdf.CustomWorkbookViews, &_ffcfbe); _acfdfb != nil {
					return _acfdfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_gdcfdf.PivotCaches = NewCT_PivotCaches()
				if _gcacc := d.DecodeElement(_gdcfdf.PivotCaches, &_ffcfbe); _gcacc != nil {
					return _gcacc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_gdcfdf.SmartTagPr = NewCT_SmartTagPr()
				if _fafgbb := d.DecodeElement(_gdcfdf.SmartTagPr, &_ffcfbe); _fafgbb != nil {
					return _fafgbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_gdcfdf.SmartTagTypes = NewCT_SmartTagTypes()
				if _gfafg := d.DecodeElement(_gdcfdf.SmartTagTypes, &_ffcfbe); _gfafg != nil {
					return _gfafg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_gdcfdf.WebPublishing = NewCT_WebPublishing()
				if _dacdcc := d.DecodeElement(_gdcfdf.WebPublishing, &_ffcfbe); _dacdcc != nil {
					return _dacdcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_fedee := NewCT_FileRecoveryPr()
				if _aadccf := d.DecodeElement(_fedee, &_ffcfbe); _aadccf != nil {
					return _aadccf
				}
				_gdcfdf.FileRecoveryPr = append(_gdcfdf.FileRecoveryPr, _fedee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_gdcfdf.WebPublishObjects = NewCT_WebPublishObjects()
				if _egacba := d.DecodeElement(_gdcfdf.WebPublishObjects, &_ffcfbe); _egacba != nil {
					return _egacba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdcfdf.ExtLst = NewCT_ExtensionList()
				if _dgdag := d.DecodeElement(_gdcfdf.ExtLst, &_ffcfbe); _dgdag != nil {
					return _dgdag
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _ffcfbe.Name)
				if _gbegef := d.Skip(); _gbegef != nil {
					return _gbegef
				}
			}
		case _a.EndElement:
			break _beefgd
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_cfgbfa *CT_TupleCache) ValidateWithPath(path string) error {
	if _cfgbfa.Entries != nil {
		if _fdgcc := _cfgbfa.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _fdgcc != nil {
			return _fdgcc
		}
	}
	if _cfgbfa.Sets != nil {
		if _eacacf := _cfgbfa.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _eacacf != nil {
			return _eacacf
		}
	}
	if _cfgbfa.QueryCache != nil {
		if _dbdaf := _cfgbfa.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _dbdaf != nil {
			return _dbdaf
		}
	}
	if _cfgbfa.ServerFormats != nil {
		if _gbbfea := _cfgbfa.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _gbbfea != nil {
			return _gbbfea
		}
	}
	if _cfgbfa.ExtLst != nil {
		if _cgebd := _cfgbfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgebd != nil {
			return _cgebd
		}
	}
	return nil
}
func (_bebee *ST_Type) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bebee = 0
	case "\u006e\u006f\u006e\u0065":
		*_bebee = 1
	case "\u0061\u006c\u006c":
		*_bebee = 2
	case "\u0072\u006f\u0077":
		*_bebee = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_bebee = 4
	}
	return nil
}
func (_gfggcc *CT_XmlPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gfggcc.MapIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _fd.Sprintf("\u0025\u0076", _gfggcc.XpathAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gfggcc.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _gfggcc.ExtLst != nil {
		_bfcda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfggcc.ExtLst, _bfcda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

func NewCT_ChartFormats() *CT_ChartFormats { _gdda := &CT_ChartFormats{}; return _gdda }
func NewCT_Connections() *CT_Connections   { _ecacd := &CT_Connections{}; return _ecacd }
func (_dcge *CT_CellAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcge.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_eabc, _gdbf := _dcge.HorizontalAttr.MarshalXMLAttr(_a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _gdbf != nil {
			return _gdbf
		}
		start.Attr = append(start.Attr, _eabc)
	}
	if _dcge.VerticalAttr != ST_VerticalAlignmentUnset {
		_gdce, _aaag := _dcge.VerticalAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _aaag != nil {
			return _aaag
		}
		start.Attr = append(start.Attr, _gdce)
	}
	if _dcge.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_dcge.TextRotationAttr)})
	}
	if _dcge.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcge.WrapTextAttr))})
	}
	if _dcge.IndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dcge.IndentAttr)})
	}
	if _dcge.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dcge.RelativeIndentAttr)})
	}
	if _dcge.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcge.JustifyLastLineAttr))})
	}
	if _dcge.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcge.ShrinkToFitAttr))})
	}
	if _dcge.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_dcge.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_efbbeg ST_TimePeriod) Validate() error { return _efbbeg.ValidateWithPath("") }
func (_dcbeb *CT_IconFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_gfcffc, _gdbfc := _dcbeb.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _gdbfc != nil {
		return _gdbfc
	}
	start.Attr = append(start.Attr, _gfcffc)
	if _dcbeb.IconIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dcbeb.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Worksheet and its children
func (_geaeg *CT_Worksheet) Validate() error {
	return _geaeg.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}

type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_acdd := &CT_CustomWorkbookViews{}
	return _acdd
}

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_caca *CT_Error) ValidateWithPath(path string) error {
	if _caca.Tpls != nil {
		if _bbcac := _caca.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _bbcac != nil {
			return _bbcac
		}
	}
	for _cffdag, _eggda := range _caca.X {
		if _dcdf := _eggda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _cffdag)); _dcdf != nil {
			return _dcdf
		}
	}
	return nil
}

// Validate validates the PivotTableDefinition and its children
func (_bfbcf *PivotTableDefinition) Validate() error {
	return _bfbcf.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_egccg := &CT_CustomWorkbookView{}
	_egccg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _egccg
}

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}

func NewCT_ColFields() *CT_ColFields { _gbfgf := &CT_ColFields{}; return _gbfgf }
func (_edbfad ST_rwColActionType) String() string {
	switch _edbfad {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}

type CT_Field struct {

	// Field Index
	XAttr int32
}

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

func (_aefge *CT_QueryTableFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aefge.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aefge.CountAttr)})
	}
	e.EncodeToken(start)
	if _aefge.QueryTableField != nil {
		_ddcecc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003aqu\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _gcegf := range _aefge.QueryTableField {
			e.EncodeElement(_gcegf, _ddcecc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdbcd *CT_RevisionRowColumnChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_geede := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
		_aebfaf := NewCT_UndoInfo()
		if _dgdgd := d.DecodeElement(_aebfaf, &_geede); _dgdgd != nil {
			return _dgdgd
		}
		_gdbcd.Undo = append(_gdbcd.Undo, _aebfaf)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
		_bfcca := NewCT_RevisionCellChange()
		if _bffbf := d.DecodeElement(_bfcca, &_geede); _bffbf != nil {
			return _bffbf
		}
		_gdbcd.Rcc = append(_gdbcd.Rcc, _bfcca)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
		_cgdafb := NewCT_RevisionFormatting()
		if _bgaeeb := d.DecodeElement(_cgdafb, &_geede); _bgaeeb != nil {
			return _bgaeeb
		}
		_gdbcd.Rfmt = append(_gdbcd.Rfmt, _cgdafb)
	default:
		_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0052\u0065v\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _geede.Name)
		if _aegce := d.Skip(); _aegce != nil {
			return _aegce
		}
	}
	return nil
}
func (_aabeee *CT_PCDSDTCEntriesChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbead := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
		_aabeee.M = NewCT_Missing()
		if _gfgde := d.DecodeElement(_aabeee.M, &_dbead); _gfgde != nil {
			return _gfgde
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
		_aabeee.N = NewCT_Number()
		if _cbdbc := d.DecodeElement(_aabeee.N, &_dbead); _cbdbc != nil {
			return _cbdbc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
		_aabeee.E = NewCT_Error()
		if _aggdgc := d.DecodeElement(_aabeee.E, &_dbead); _aggdgc != nil {
			return _aggdgc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
		_aabeee.S = NewCT_String()
		if _fgafe := d.DecodeElement(_aabeee.S, &_dbead); _fgafe != nil {
			return _fgafe
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _dbead.Name)
		if _agfce := d.Skip(); _agfce != nil {
			return _agfce
		}
	}
	return nil
}
func (_ed *AG_AutoFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gf := range start.Attr {
		if _gf.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_af, _fa := _dd.ParseUint(_gf.Value, 10, 32)
			if _fa != nil {
				return _fa
			}
			_c := uint32(_af)
			_ed.AutoFormatIdAttr = &_c
			continue
		}
		if _gf.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_fg, _db := _dd.ParseBool(_gf.Value)
			if _db != nil {
				return _db
			}
			_ed.ApplyNumberFormatsAttr = &_fg
			continue
		}
		if _gf.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dc, _ddd := _dd.ParseBool(_gf.Value)
			if _ddd != nil {
				return _ddd
			}
			_ed.ApplyBorderFormatsAttr = &_dc
			continue
		}
		if _gf.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gc, _ad := _dd.ParseBool(_gf.Value)
			if _ad != nil {
				return _ad
			}
			_ed.ApplyFontFormatsAttr = &_gc
			continue
		}
		if _gf.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bg, _cg := _dd.ParseBool(_gf.Value)
			if _cg != nil {
				return _cg
			}
			_ed.ApplyPatternFormatsAttr = &_bg
			continue
		}
		if _gf.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aea, _ag := _dd.ParseBool(_gf.Value)
			if _ag != nil {
				return _ag
			}
			_ed.ApplyAlignmentFormatsAttr = &_aea
			continue
		}
		if _gf.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ffc, _ea := _dd.ParseBool(_gf.Value)
			if _ea != nil {
				return _ea
			}
			_ed.ApplyWidthHeightFormatsAttr = &_ffc
			continue
		}
	}
	for {
		_ec, _eg := d.Token()
		if _eg != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _eg)
		}
		if _bf, _ffg := _ec.(_a.EndElement); _ffg && _bf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_agbbf *CT_GradientStop) ValidateWithPath(path string) error {
	if _fbgbg := _agbbf.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _fbgbg != nil {
		return _fbgbg
	}
	return nil
}

type CT_RevisionRowColumnChoice struct {

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting
}

func (_cefff *CT_WorksheetSource) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcbdce := range start.Attr {
		if _fcbdce.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcbdce.Name.Local == "\u0069\u0064" || _fcbdce.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcbdce.Name.Local == "\u0069\u0064" {
			_gcdagf := _fcbdce.Value
			_cefff.IdAttr = &_gcdagf
			continue
		}
		if _fcbdce.Name.Local == "\u0072\u0065\u0066" {
			_baegcg := _fcbdce.Value
			_cefff.RefAttr = &_baegcg
			continue
		}
		if _fcbdce.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddabfc := _fcbdce.Value
			_cefff.NameAttr = &_ddabfc
			continue
		}
		if _fcbdce.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_ccaaf := _fcbdce.Value
			_cefff.SheetAttr = &_ccaaf
			continue
		}
	}
	for {
		_aedegd, _faccc := d.Token()
		if _faccc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _faccc)
		}
		if _bgfcc, _bfbeag := _aedegd.(_a.EndElement); _bfbeag && _bgfcc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Member() *CT_Member { _ceafe := &CT_Member{}; return _ceafe }
func (_dcgdc ST_PhoneticType) String() string {
	switch _dcgdc {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}

// Validate validates the CT_QueryTableField and its children
func (_gdbae *CT_QueryTableField) Validate() error {
	return _gdbae.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}
func (_ddgad *ST_ShowDataAs) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ddgad = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_ddgad = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_ddgad = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_ddgad = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_ddgad = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_ddgad = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_ddgad = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_ddgad = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_ddgad = 8
	case "\u0069\u006e\u0064e\u0078":
		*_ddgad = 9
	}
	return nil
}

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_dedegcf *CT_Rst) ValidateWithPath(path string) error {
	for _dbdgg, _afgdae := range _dedegcf.R {
		if _ceggcc := _afgdae.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _dbdgg)); _ceggcc != nil {
			return _ceggcc
		}
	}
	for _bcacg, _facfd := range _dedegcf.RPh {
		if _acgfbd := _facfd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _bcacg)); _acgfbd != nil {
			return _acgfbd
		}
	}
	if _dedegcf.PhoneticPr != nil {
		if _cbegd := _dedegcf.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _cbegd != nil {
			return _cbegd
		}
	}
	return nil
}
func (_efada *ST_TextHAlign) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_abgae, _aaefd := d.Token()
	if _aaefd != nil {
		return _aaefd
	}
	if _beeae, _abfbd := _abgae.(_a.EndElement); _abfbd && _beeae.Name == start.Name {
		*_efada = 1
		return nil
	}
	if _addbag, _cbgac := _abgae.(_a.CharData); !_cbgac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abgae)
	} else {
		switch string(_addbag) {
		case "":
			*_efada = 0
		case "\u006c\u0065\u0066\u0074":
			*_efada = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_efada = 2
		case "\u0072\u0069\u0067h\u0074":
			*_efada = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_efada = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_efada = 5
		}
	}
	_abgae, _aaefd = d.Token()
	if _aaefd != nil {
		return _aaefd
	}
	if _aegcb, _bbcbf := _abgae.(_a.EndElement); _bbcbf && _aegcb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abgae)
}

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_bdacf *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }
func (_fcdbf *CT_MemberProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fcdbf.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fcdbf.NameAttr)})
	}
	if _fcdbf.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcdbf.ShowCellAttr))})
	}
	if _fcdbf.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcdbf.ShowTipAttr))})
	}
	if _fcdbf.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcdbf.ShowAsCaptionAttr))})
	}
	if _fcdbf.NameLenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_fcdbf.NameLenAttr)})
	}
	if _fcdbf.PPosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_fcdbf.PPosAttr)})
	}
	if _fcdbf.PLenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_fcdbf.PLenAttr)})
	}
	if _fcdbf.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_fcdbf.LevelAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fcdbf.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotAreaReferences and its children
func (_fgbgg *CT_PivotAreaReferences) Validate() error {
	return _fgbgg.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}
func (_dccbd *CT_Sheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dccbd.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dccbd.SheetIdAttr)})
	if _dccbd.StateAttr != ST_SheetStateUnset {
		_dfade, _gcgec := _dccbd.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gcgec != nil {
			return _gcgec
		}
		start.Attr = append(start.Attr, _dfade)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dccbd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

func (_ded *CT_CalculatedMember) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdg := range start.Attr {
		if _bdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcaa := _bdg.Value
			_ded.NameAttr = _gcaa
			continue
		}
		if _bdg.Name.Local == "\u006d\u0064\u0078" {
			_ecdc := _bdg.Value
			_ded.MdxAttr = _ecdc
			continue
		}
		if _bdg.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_bgcc := _bdg.Value
			_ded.MemberNameAttr = &_bgcc
			continue
		}
		if _bdg.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_dafb := _bdg.Value
			_ded.HierarchyAttr = &_dafb
			continue
		}
		if _bdg.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_aagd := _bdg.Value
			_ded.ParentAttr = &_aagd
			continue
		}
		if _bdg.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_agge, _fad := _dd.ParseInt(_bdg.Value, 10, 32)
			if _fad != nil {
				return _fad
			}
			_gggfd := int32(_agge)
			_ded.SolveOrderAttr = &_gggfd
			continue
		}
		if _bdg.Name.Local == "\u0073\u0065\u0074" {
			_dgfb, _acae := _dd.ParseBool(_bdg.Value)
			if _acae != nil {
				return _acae
			}
			_ded.SetAttr = &_dgfb
			continue
		}
	}
_ecgd:
	for {
		_feg, _bdee := d.Token()
		if _bdee != nil {
			return _bdee
		}
		switch _gfac := _feg.(type) {
		case _a.StartElement:
			switch _gfac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ded.ExtLst = NewCT_ExtensionList()
				if _ebc := d.DecodeElement(_ded.ExtLst, &_gfac); _ebc != nil {
					return _ebc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _gfac.Name)
				if _eafee := d.Skip(); _eafee != nil {
					return _eafee
				}
			}
		case _a.EndElement:
			break _ecgd
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

func (_fgbb *CT_FontChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dcddg := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
		_fgbb.Name = NewCT_FontName()
		if _efgc := d.DecodeElement(_fgbb.Name, &_dcddg); _efgc != nil {
			return _efgc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
		_fgbb.Charset = NewCT_IntProperty()
		if _gcdcb := d.DecodeElement(_fgbb.Charset, &_dcddg); _gcdcb != nil {
			return _gcdcb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
		_fgbb.Family = NewCT_FontFamily()
		if _gcaea := d.DecodeElement(_fgbb.Family, &_dcddg); _gcaea != nil {
			return _gcaea
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
		_fgbb.B = NewCT_BooleanProperty()
		if _fegbf := d.DecodeElement(_fgbb.B, &_dcddg); _fegbf != nil {
			return _fegbf
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
		_fgbb.I = NewCT_BooleanProperty()
		if _ceecg := d.DecodeElement(_fgbb.I, &_dcddg); _ceecg != nil {
			return _ceecg
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
		_fgbb.Strike = NewCT_BooleanProperty()
		if _bfeed := d.DecodeElement(_fgbb.Strike, &_dcddg); _bfeed != nil {
			return _bfeed
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
		_fgbb.Outline = NewCT_BooleanProperty()
		if _ebga := d.DecodeElement(_fgbb.Outline, &_dcddg); _ebga != nil {
			return _ebga
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
		_fgbb.Shadow = NewCT_BooleanProperty()
		if _fbeb := d.DecodeElement(_fgbb.Shadow, &_dcddg); _fbeb != nil {
			return _fbeb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
		_fgbb.Condense = NewCT_BooleanProperty()
		if _bgda := d.DecodeElement(_fgbb.Condense, &_dcddg); _bgda != nil {
			return _bgda
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
		_fgbb.Extend = NewCT_BooleanProperty()
		if _cabac := d.DecodeElement(_fgbb.Extend, &_dcddg); _cabac != nil {
			return _cabac
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
		_fgbb.Color = NewCT_Color()
		if _cdceef := d.DecodeElement(_fgbb.Color, &_dcddg); _cdceef != nil {
			return _cdceef
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
		_fgbb.Sz = NewCT_FontSize()
		if _bcbea := d.DecodeElement(_fgbb.Sz, &_dcddg); _bcbea != nil {
			return _bcbea
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
		_fgbb.U = NewCT_UnderlineProperty()
		if _fgcce := d.DecodeElement(_fgbb.U, &_dcddg); _fgcce != nil {
			return _fgcce
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
		_fgbb.VertAlign = NewCT_VerticalAlignFontProperty()
		if _cddb := d.DecodeElement(_fgbb.VertAlign, &_dcddg); _cddb != nil {
			return _cddb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
		_fgbb.Scheme = NewCT_FontScheme()
		if _acbg := d.DecodeElement(_fgbb.Scheme, &_dcddg); _acbg != nil {
			return _acbg
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _dcddg.Name)
		if _bdgb := d.Skip(); _bdgb != nil {
			return _bdgb
		}
	}
	return nil
}
func NewCT_WebPublishObject() *CT_WebPublishObject { _dfgda := &CT_WebPublishObject{}; return _dfgda }

// Validate validates the CT_DataBar and its children
func (_cggba *CT_DataBar) Validate() error {
	return _cggba.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}
func (_dacee *CT_SheetFormatPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dacee.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_dacee.BaseColWidthAttr)})
	}
	if _dacee.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_dacee.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _dacee.DefaultRowHeightAttr)})
	if _dacee.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dacee.CustomHeightAttr))})
	}
	if _dacee.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dacee.ZeroHeightAttr))})
	}
	if _dacee.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dacee.ThickTopAttr))})
	}
	if _dacee.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dacee.ThickBottomAttr))})
	}
	if _dacee.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_dacee.OutlineLevelRowAttr)})
	}
	if _dacee.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_dacee.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LevelGroup and its children
func (_dbdgd *CT_LevelGroup) Validate() error {
	return _dbdgd.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}
func (_ddeac *CT_FunctionGroups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddeac.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ddeac.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _ddeac.FunctionGroup != nil {
		_dbbaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070"}}
		for _, _eaac := range _ddeac.FunctionGroup {
			e.EncodeElement(_eaac, _dbbaf)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_DiscretePr() *CT_DiscretePr { _cgef := &CT_DiscretePr{}; return _cgef }
func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_ccgbee := &CT_RevisionCustomView{}
	_ccgbee.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_ccgbee.ActionAttr = ST_RevisionAction(1)
	return _ccgbee
}

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_bgadd *CT_IndexedColors) ValidateWithPath(path string) error {
	for _fdec, _gece := range _bgadd.RgbColor {
		if _cbcfc := _gece.ValidateWithPath(_fd.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _fdec)); _cbcfc != nil {
			return _cbcfc
		}
	}
	return nil
}
func (_decbge *CT_Parameters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aefce := range start.Attr {
		if _aefce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfdd, _aeagd := _dd.ParseUint(_aefce.Value, 10, 32)
			if _aeagd != nil {
				return _aeagd
			}
			_gaebe := uint32(_cfdd)
			_decbge.CountAttr = &_gaebe
			continue
		}
	}
_cbbeb:
	for {
		_ecaac, _gadge := d.Token()
		if _gadge != nil {
			return _gadge
		}
		switch _dccgcd := _ecaac.(type) {
		case _a.StartElement:
			switch _dccgcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_aeddd := NewCT_Parameter()
				if _fdaggf := d.DecodeElement(_aeddd, &_dccgcd); _fdaggf != nil {
					return _fdaggf
				}
				_decbge.Parameter = append(_decbge.Parameter, _aeddd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _dccgcd.Name)
				if _feccf := d.Skip(); _feccf != nil {
					return _feccf
				}
			}
		case _a.EndElement:
			break _cbbeb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_fbced *CT_ExternalCell) ValidateWithPath(path string) error {
	if _cabff := _fbced.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cabff != nil {
		return _cabff
	}
	return nil
}
func (_adcaga *ST_Visibility) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_adcaga = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_adcaga = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_adcaga = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_adcaga = 3
	}
	return nil
}
func NewCT_Comments() *CT_Comments {
	_feed := &CT_Comments{}
	_feed.Authors = NewCT_Authors()
	_feed.CommentList = NewCT_CommentList()
	return _feed
}

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_dagdd *CT_Comments) ValidateWithPath(path string) error {
	if _cbgg := _dagdd.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _cbgg != nil {
		return _cbgg
	}
	if _dbaf := _dagdd.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _dbaf != nil {
		return _dbaf
	}
	if _dagdd.ExtLst != nil {
		if _cedf := _dagdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cedf != nil {
			return _cedf
		}
	}
	return nil
}
func (_gecea ST_RevisionAction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gceeeb := _a.Attr{}
	_gceeeb.Name = name
	switch _gecea {
	case ST_RevisionActionUnset:
		_gceeeb.Value = ""
	case ST_RevisionActionAdd:
		_gceeeb.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_gceeeb.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _gceeeb, nil
}

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_gacbe *CT_OleSize) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_becd *CT_CfRule) ValidateWithPath(path string) error {
	if _faecc := _becd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _faecc != nil {
		return _faecc
	}
	if _ccaa := _becd.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _ccaa != nil {
		return _ccaa
	}
	if _agaf := _becd.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _agaf != nil {
		return _agaf
	}
	if _becd.ColorScale != nil {
		if _ggfe := _becd.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _ggfe != nil {
			return _ggfe
		}
	}
	if _becd.DataBar != nil {
		if _acfa := _becd.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _acfa != nil {
			return _acfa
		}
	}
	if _becd.IconSet != nil {
		if _eceb := _becd.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _eceb != nil {
			return _eceb
		}
	}
	if _becd.ExtLst != nil {
		if _bgbc := _becd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgbc != nil {
			return _bgbc
		}
	}
	return nil
}

// Validate validates the CT_DefinedName and its children
func (_gafbb *CT_DefinedName) Validate() error {
	return _gafbb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}

// Validate validates the CT_Items and its children
func (_ggdae *CT_Items) Validate() error {
	return _ggdae.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}

// Validate validates the CT_PivotCacheRecords and its children
func (_eaefa *CT_PivotCacheRecords) Validate() error {
	return _eaefa.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_dadgf *CT_TableStyle) ValidateWithPath(path string) error {
	for _cfbacg, _eeabc := range _dadgf.TableStyleElement {
		if _ccfda := _eeabc.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _cfbacg)); _ccfda != nil {
			return _ccfda
		}
	}
	return nil
}
func (_eedab ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _eedab {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eedab))
	}
	return nil
}

// Validate validates the CT_DdeValues and its children
func (_feff *CT_DdeValues) Validate() error {
	return _feff.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}
func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_befde := &CT_FutureMetadataBlock{}
	return _befde
}

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}
type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_fc.From
	To                *_fc.To
}
type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

func NewCT_DdeValues() *CT_DdeValues { _fbecc := &CT_DdeValues{}; return _fbecc }
func (_gccad *CT_PivotAreaReferences) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gccad.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gccad.CountAttr)})
	}
	e.EncodeToken(start)
	_fbace := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _adgbb := range _gccad.Reference {
		e.EncodeElement(_adgbb, _fbace)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomProperty and its children
func (_fafd *CT_CustomProperty) Validate() error {
	return _fafd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

func NewCT_Metadata() *CT_Metadata {
	_gbdfg := &CT_Metadata{}
	return _gbdfg
}
func (_bdcdd *CT_CommentList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ebegb:
	for {
		_badd, _dedd := d.Token()
		if _dedd != nil {
			return _dedd
		}
		switch _acfag := _badd.(type) {
		case _a.StartElement:
			switch _acfag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_dccd := NewCT_Comment()
				if _aeeg := d.DecodeElement(_dccd, &_acfag); _aeeg != nil {
					return _aeeg
				}
				_bdcdd.Comment = append(_bdcdd.Comment, _dccd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _acfag.Name)
				if _dffa := d.Skip(); _dffa != nil {
					return _dffa
				}
			}
		case _a.EndElement:
			break _ebegb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionInsertSheet and its children
func (_cacad *CT_RevisionInsertSheet) Validate() error {
	return _cacad.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}
func (_efff *CT_DiscretePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aebg := range start.Attr {
		if _aebg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfba, _egeaa := _dd.ParseUint(_aebg.Value, 10, 32)
			if _egeaa != nil {
				return _egeaa
			}
			_bbccc := uint32(_bfba)
			_efff.CountAttr = &_bbccc
			continue
		}
	}
_bccgc:
	for {
		_bgfdcb, _edcgf := d.Token()
		if _edcgf != nil {
			return _edcgf
		}
		switch _gfce := _bgfdcb.(type) {
		case _a.StartElement:
			switch _gfce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eeee := NewCT_Index()
				if _cagbe := d.DecodeElement(_eeee, &_gfce); _cagbe != nil {
					return _cagbe
				}
				_efff.X = append(_efff.X, _eeee)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _gfce.Name)
				if _gfedda := d.Skip(); _gfedda != nil {
					return _gfedda
				}
			}
		case _a.EndElement:
			break _bccgc
		case _a.CharData:
		}
	}
	return nil
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_babfa *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _babfa.ExtLst != nil {
		if _gdgfe := _babfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgfe != nil {
			return _gdgfe
		}
	}
	return nil
}
func (_fgefb *CT_RevisionCellChange) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fgefb.SIdAttr)})
	if _fgefb.OdxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.OdxfAttr))})
	}
	if _fgefb.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.XfDxfAttr))})
	}
	if _fgefb.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.SAttr))})
	}
	if _fgefb.DxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.DxfAttr))})
	}
	if _fgefb.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgefb.NumFmtIdAttr)})
	}
	if _fgefb.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.QuotePrefixAttr))})
	}
	if _fgefb.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.OldQuotePrefixAttr))})
	}
	if _fgefb.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.PhAttr))})
	}
	if _fgefb.OldPhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.OldPhAttr))})
	}
	if _fgefb.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.EndOfListFormulaUpdateAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fgefb.RIdAttr)})
	if _fgefb.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.UaAttr))})
	}
	if _fgefb.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgefb.RaAttr))})
	}
	e.EncodeToken(start)
	if _fgefb.Oc != nil {
		_edefea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u0063"}}
		e.EncodeElement(_fgefb.Oc, _edefea)
	}
	_acfba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006e\u0063"}}
	e.EncodeElement(_fgefb.Nc, _acfba)
	if _fgefb.Odxf != nil {
		_feeag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_fgefb.Odxf, _feeag)
	}
	if _fgefb.Ndxf != nil {
		_egdaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_fgefb.Ndxf, _egdaa)
	}
	if _fgefb.ExtLst != nil {
		_efbfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgefb.ExtLst, _efbfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebbag *PivotCacheDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _ebbag.CT_PivotCacheDefinition.MarshalXML(e, start)
}
func (_edbbg *CT_ServerFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edbbg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edbbg.CountAttr)})
	}
	e.EncodeToken(start)
	if _edbbg.ServerFormat != nil {
		_agfbgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0073\u0065r\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _bgeag := range _edbbg.ServerFormat {
			e.EncodeElement(_bgeag, _agfbgc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_facccc ST_FormatAction) Validate() error { return _facccc.ValidateWithPath("") }
func (_ecbfc *CT_UnderlineProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecbfc.ValAttr != ST_UnderlineValuesUnset {
		_bfgeg, _ddcdb := _ecbfc.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
		if _ddcdb != nil {
			return _ddcdb
		}
		start.Attr = append(start.Attr, _bfgeg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_agdbb *CT_FunctionGroups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccage := range start.Attr {
		if _ccage.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_dbacd, _affba := _dd.ParseUint(_ccage.Value, 10, 32)
			if _affba != nil {
				return _affba
			}
			_dedeg := uint32(_dbacd)
			_agdbb.BuiltInGroupCountAttr = &_dedeg
			continue
		}
	}
_cbdcb:
	for {
		_gacede, _dafdg := d.Token()
		if _dafdg != nil {
			return _dafdg
		}
		switch _gdbda := _gacede.(type) {
		case _a.StartElement:
			switch _gdbda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_aafc := NewCT_FunctionGroup()
				if _fabca := d.DecodeElement(_aafc, &_gdbda); _fabca != nil {
					return _fabca
				}
				_agdbb.FunctionGroup = append(_agdbb.FunctionGroup, _aafc)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _gdbda.Name)
				if _ccdd := d.Skip(); _ccdd != nil {
					return _ccdd
				}
			}
		case _a.EndElement:
			break _cbdcb
		case _a.CharData:
		}
	}
	return nil
}
func (_gfbae *CT_DefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gfbae.NameAttr)})
	if _gfbae.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.CommentAttr)})
	}
	if _gfbae.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.CustomMenuAttr)})
	}
	if _gfbae.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.DescriptionAttr)})
	}
	if _gfbae.HelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.HelpAttr)})
	}
	if _gfbae.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.StatusBarAttr)})
	}
	if _gfbae.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.LocalSheetIdAttr)})
	}
	if _gfbae.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.HiddenAttr))})
	}
	if _gfbae.FunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.FunctionAttr))})
	}
	if _gfbae.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.VbProcedureAttr))})
	}
	if _gfbae.XlmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.XlmAttr))})
	}
	if _gfbae.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.FunctionGroupIdAttr)})
	}
	if _gfbae.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbae.ShortcutKeyAttr)})
	}
	if _gfbae.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.PublishToServerAttr))})
	}
	if _gfbae.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbae.WorkbookParameterAttr))})
	}
	e.EncodeElement(_gfbae.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cgdc *CT_FontFamily) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _cgdc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_bace *CT_ControlPr) ValidateWithPath(path string) error {
	if _ddbgb := _bace.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _ddbgb != nil {
		return _ddbgb
	}
	return nil
}

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_febee *CT_Location) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_deaed *CT_DataBar) ValidateWithPath(path string) error {
	for _dcag, _dbca := range _deaed.Cfvo {
		if _feddd := _dbca.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _dcag)); _feddd != nil {
			return _feddd
		}
	}
	if _egdgc := _deaed.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _egdgc != nil {
		return _egdgc
	}
	return nil
}

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_daeca *CT_IgnoredError) ValidateWithPath(path string) error { return nil }
func (_fdcdf *CT_HeaderFooter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdcdf.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdcdf.DifferentOddEvenAttr))})
	}
	if _fdcdf.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdcdf.DifferentFirstAttr))})
	}
	if _fdcdf.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdcdf.ScaleWithDocAttr))})
	}
	if _fdcdf.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdcdf.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _fdcdf.OddHeader != nil {
		_dfcaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_dfcaf, *_fdcdf.OddHeader)
		e.EncodeElement(_fdcdf.OddHeader, _dfcaf)
	}
	if _fdcdf.OddFooter != nil {
		_bffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_bffe, *_fdcdf.OddFooter)
		e.EncodeElement(_fdcdf.OddFooter, _bffe)
	}
	if _fdcdf.EvenHeader != nil {
		_dddde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0076\u0065\u006e\u0048e\u0061\u0064\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_dddde, *_fdcdf.EvenHeader)
		e.EncodeElement(_fdcdf.EvenHeader, _dddde)
	}
	if _fdcdf.EvenFooter != nil {
		_gcfbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0076\u0065\u006e\u0046o\u006f\u0074\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_gcfbc, *_fdcdf.EvenFooter)
		e.EncodeElement(_fdcdf.EvenFooter, _gcfbc)
	}
	if _fdcdf.FirstHeader != nil {
		_ebbad := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_ebbad, *_fdcdf.FirstHeader)
		e.EncodeElement(_fdcdf.FirstHeader, _ebbad)
	}
	if _fdcdf.FirstFooter != nil {
		_daead := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_ff.AddPreserveSpaceAttr(&_daead, *_fdcdf.FirstFooter)
		e.EncodeElement(_fdcdf.FirstFooter, _daead)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalcPr and its children
func (_gacb *CT_CalcPr) Validate() error {
	return _gacb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}
func (_cagde *CT_ExternalBook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cagde.IdAttr)})
	e.EncodeToken(start)
	if _cagde.SheetNames != nil {
		_aaga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074N\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_cagde.SheetNames, _aaga)
	}
	if _cagde.DefinedNames != nil {
		_cfdf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0064\u0065f\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_cagde.DefinedNames, _cfdf)
	}
	if _cagde.SheetDataSet != nil {
		_cacgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0073\u0068e\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_cagde.SheetDataSet, _cacgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_MapInfo() *CT_MapInfo { _bgada := &CT_MapInfo{}; return _bgada }
func (_bbcec *CT_Scenarios) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddfa := range start.Attr {
		if _ddfa.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_cfaadf, _facgf := _dd.ParseUint(_ddfa.Value, 10, 32)
			if _facgf != nil {
				return _facgf
			}
			_bcdbd := uint32(_cfaadf)
			_bbcec.CurrentAttr = &_bcdbd
			continue
		}
		if _ddfa.Name.Local == "\u0073\u0068\u006f\u0077" {
			_bagbc, _fbbbd := _dd.ParseUint(_ddfa.Value, 10, 32)
			if _fbbbd != nil {
				return _fbbbd
			}
			_egcaa := uint32(_bagbc)
			_bbcec.ShowAttr = &_egcaa
			continue
		}
		if _ddfa.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_eaafa, _cegbbd := ParseSliceST_Sqref(_ddfa.Value)
			if _cegbbd != nil {
				return _cegbbd
			}
			_bbcec.SqrefAttr = &_eaafa
			continue
		}
	}
_gcgfe:
	for {
		_bgdfe, _decgb := d.Token()
		if _decgb != nil {
			return _decgb
		}
		switch _bbaga := _bgdfe.(type) {
		case _a.StartElement:
			switch _bbaga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_ffgec := NewCT_Scenario()
				if _bgdfab := d.DecodeElement(_ffgec, &_bbaga); _bgdfab != nil {
					return _bgdfab
				}
				_bbcec.Scenario = append(_bbcec.Scenario, _ffgec)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _bbaga.Name)
				if _ccaec := d.Skip(); _ccaec != nil {
					return _ccaec
				}
			}
		case _a.EndElement:
			break _gcgfe
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Connections and its children
func (_beca *CT_Connections) Validate() error {
	return _beca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_gacfa *CT_MdxSet) ValidateWithPath(path string) error {
	if _cfgda := _gacfa.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _cfgda != nil {
		return _cfgda
	}
	for _aaefba, _dggda := range _gacfa.N {
		if _ggdgf := _dggda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _aaefba)); _ggdgf != nil {
			return _ggdgf
		}
	}
	return nil
}
func (_gcbbc *CT_ObjectAnchor) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gcbbc.From = _fc.NewFrom()
	_gcbbc.To = _fc.NewTo()
	for _, _fgfce := range start.Attr {
		if _fgfce.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_cabfe, _eddecc := _dd.ParseBool(_fgfce.Value)
			if _eddecc != nil {
				return _eddecc
			}
			_gcbbc.MoveWithCellsAttr = &_cabfe
			continue
		}
		if _fgfce.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_ddcba, _gggeg := _dd.ParseBool(_fgfce.Value)
			if _gggeg != nil {
				return _gggeg
			}
			_gcbbc.SizeWithCellsAttr = &_ddcba
			continue
		}
	}
_gddcge:
	for {
		_fffgc, _efec := d.Token()
		if _efec != nil {
			return _efec
		}
		switch _dfef := _fffgc.(type) {
		case _a.StartElement:
			switch _dfef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _gegbg := d.DecodeElement(_gcbbc.From, &_dfef); _gegbg != nil {
					return _gegbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _a.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _abgaf := d.DecodeElement(_gcbbc.To, &_dfef); _abgaf != nil {
					return _abgaf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _dfef.Name)
				if _dbgaef := d.Skip(); _dbgaef != nil {
					return _dbgaef
				}
			}
		case _a.EndElement:
			break _gddcge
		case _a.CharData:
		}
	}
	return nil
}
func (_ccfge *CT_ExternalSheetNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fagf:
	for {
		_bdfeg, _dafbbf := d.Token()
		if _dafbbf != nil {
			return _dafbbf
		}
		switch _cebb := _bdfeg.(type) {
		case _a.StartElement:
			switch _cebb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_bcdgd := NewCT_ExternalSheetName()
				if _ddbedf := d.DecodeElement(_bcdgd, &_cebb); _ddbedf != nil {
					return _ddbedf
				}
				_ccfge.SheetName = append(_ccfge.SheetName, _bcdgd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _cebb.Name)
				if _cecbe := d.Skip(); _cecbe != nil {
					return _cecbe
				}
			}
		case _a.EndElement:
			break _fagf
		case _a.CharData:
		}
	}
	return nil
}

type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}
type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

func (_fbbgdg *ST_RevisionAction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fbbgdg = 0
	case "\u0061\u0064\u0064":
		*_fbbgdg = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_fbbgdg = 2
	}
	return nil
}

// Validate validates the CT_RevisionsChoice and its children
func (_dgaee *CT_RevisionsChoice) Validate() error {
	return _dgaee.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0073C\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_ExtensionList and its children
func (_dfeb *CT_ExtensionList) Validate() error {
	return _dfeb.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_deag *CT_CustomChartsheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_addbd:
	for {
		_bcce, _eebed := d.Token()
		if _eebed != nil {
			return _eebed
		}
		switch _cceg := _bcce.(type) {
		case _a.StartElement:
			switch _cceg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_geac := NewCT_CustomChartsheetView()
				if _afgfa := d.DecodeElement(_geac, &_cceg); _afgfa != nil {
					return _afgfa
				}
				_deag.CustomSheetView = append(_deag.CustomSheetView, _geac)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _cceg.Name)
				if _bdgg := d.Skip(); _bdgg != nil {
					return _bdgg
				}
			}
		case _a.EndElement:
			break _addbd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Pane() *CT_Pane { _agafa := &CT_Pane{}; return _agafa }
func (_gdeee *CT_MetadataRecord) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecfef := range start.Attr {
		if _ecfef.Name.Local == "\u0074" {
			_fdcb, _eadcg := _dd.ParseUint(_ecfef.Value, 10, 32)
			if _eadcg != nil {
				return _eadcg
			}
			_gdeee.TAttr = uint32(_fdcb)
			continue
		}
		if _ecfef.Name.Local == "\u0076" {
			_gfdae, _fgacg := _dd.ParseUint(_ecfef.Value, 10, 32)
			if _fgacg != nil {
				return _fgacg
			}
			_gdeee.VAttr = uint32(_gfdae)
			continue
		}
	}
	for {
		_gccb, _bccdf := d.Token()
		if _bccdf != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _bccdf)
		}
		if _bcgeg, _cabbd := _gccb.(_a.EndElement); _cabbd && _bcgeg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Fill and its children
func (_ffbacc *CT_Fill) Validate() error {
	return _ffbacc.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}
func NewCT_CellFormula() *CT_CellFormula { _cdec := &CT_CellFormula{}; return _cdec }
func NewCT_MemberProperties() *CT_MemberProperties {
	_abbe := &CT_MemberProperties{}
	return _abbe
}
func (_fdgeg ST_MdxSetOrder) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdgeg.String(), start)
}
func (_gdcbb *CT_Member) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbbb := range start.Attr {
		if _dbbb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_caefa := _dbbb.Value
			_gdcbb.NameAttr = _caefa
			continue
		}
	}
	for {
		_fcgdga, _aebaa := d.Token()
		if _aebaa != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _aebaa)
		}
		if _faddg, _ffcdb := _fcgdga.(_a.EndElement); _ffcdb && _faddg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}

func (_faedc ST_BorderStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_faedc.String(), start)
}
func (_baef *CT_Boolean) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_baef.VAttr))})
	if _baef.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baef.UAttr))})
	}
	if _baef.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baef.FAttr))})
	}
	if _baef.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_baef.CAttr)})
	}
	if _baef.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_baef.CpAttr)})
	}
	e.EncodeToken(start)
	if _baef.X != nil {
		_dfda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _geb := range _baef.X {
			e.EncodeElement(_geb, _dfda)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffcbd *CT_Extension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffcbd.UriAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcbd.UriAttr)})
	}
	e.EncodeToken(start)
	if _ffcbd.Any != nil {
		_ffcbd.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableMissing and its children
func (_daddgf *CT_TableMissing) Validate() error {
	return _daddgf.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func (_ccefd *CT_RowHierarchiesUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdggc := range start.Attr {
		if _fdggc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abbga, _dbaeg := _dd.ParseUint(_fdggc.Value, 10, 32)
			if _dbaeg != nil {
				return _dbaeg
			}
			_dbbga := uint32(_abbga)
			_ccefd.CountAttr = &_dbbga
			continue
		}
	}
_facga:
	for {
		_cgabfg, _agfdd := d.Token()
		if _agfdd != nil {
			return _agfdd
		}
		switch _dcdgbb := _cgabfg.(type) {
		case _a.StartElement:
			switch _dcdgbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_ffdbcb := NewCT_HierarchyUsage()
				if _deeed := d.DecodeElement(_ffdbcb, &_dcdgbb); _deeed != nil {
					return _deeed
				}
				_ccefd.RowHierarchyUsage = append(_ccefd.RowHierarchyUsage, _ffdbcb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _dcdgbb.Name)
				if _aebae := d.Skip(); _aebae != nil {
					return _aebae
				}
			}
		case _a.EndElement:
			break _facga
		case _a.CharData:
		}
	}
	return nil
}

type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}

func (_aged *CT_DataValidations) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aged.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aged.DisablePromptsAttr))})
	}
	if _aged.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_aged.XWindowAttr)})
	}
	if _aged.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_aged.YWindowAttr)})
	}
	if _aged.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aged.CountAttr)})
	}
	e.EncodeToken(start)
	_afaf := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0064\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}}
	for _, _cdfa := range _aged.DataValidation {
		e.EncodeElement(_cdfa, _afaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Top10 and its children
func (_gcggd *CT_Top10) Validate() error {
	return _gcggd.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}
func (_cgbec ST_Qualifier) Validate() error { return _cgbec.ValidateWithPath("") }
func (_bgfff ST_ShowDataAs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bgfff.String(), start)
}
func NewCT_Dxfs() *CT_Dxfs { _egadf := &CT_Dxfs{}; return _egadf }

const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

func (_cggd *CT_PivotCacheDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cggd.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.IdAttr)})
	}
	if _cggd.InvalidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.InvalidAttr))})
	}
	if _cggd.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.SaveDataAttr))})
	}
	if _cggd.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.RefreshOnLoadAttr))})
	}
	if _cggd.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.OptimizeMemoryAttr))})
	}
	if _cggd.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.EnableRefreshAttr))})
	}
	if _cggd.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.RefreshedByAttr)})
	}
	if _cggd.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.RefreshedDateAttr)})
	}
	if _cggd.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _b.FormatDateTime(*_cggd.RefreshedDateIsoAttr)})
	}
	if _cggd.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.BackgroundQueryAttr))})
	}
	if _cggd.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.MissingItemsLimitAttr)})
	}
	if _cggd.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.CreatedVersionAttr)})
	}
	if _cggd.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.RefreshedVersionAttr)})
	}
	if _cggd.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.MinRefreshableVersionAttr)})
	}
	if _cggd.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cggd.RecordCountAttr)})
	}
	if _cggd.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.UpgradeOnRefreshAttr))})
	}
	if _cggd.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.TupleCacheAttr))})
	}
	if _cggd.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.SupportSubqueryAttr))})
	}
	if _cggd.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cggd.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_fgffa := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_cggd.CacheSource, _fgffa)
	_afgce := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_cggd.CacheFields, _afgce)
	if _cggd.CacheHierarchies != nil {
		_fcdff := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069e\u0072\u0061\u0072\u0063hi\u0065\u0073"}}
		e.EncodeElement(_cggd.CacheHierarchies, _fcdff)
	}
	if _cggd.Kpis != nil {
		_babcbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_cggd.Kpis, _babcbe)
	}
	if _cggd.TupleCache != nil {
		_egbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0075\u0070\u006c\u0065C\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_cggd.TupleCache, _egbf)
	}
	if _cggd.CalculatedItems != nil {
		_gfagd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003aca\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cggd.CalculatedItems, _gfagd)
	}
	if _cggd.CalculatedMembers != nil {
		_dabfaa := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063al\u0063u\u006c\u0061\u0074\u0065\u0064M\u0065\u006d\u0062\u0065\u0072\u0073"}}
		e.EncodeElement(_cggd.CalculatedMembers, _dabfaa)
	}
	if _cggd.Dimensions != nil {
		_adbabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0069\u006d\u0065\u006es\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cggd.Dimensions, _adbabd)
	}
	if _cggd.MeasureGroups != nil {
		_fgbdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_cggd.MeasureGroups, _fgbdd)
	}
	if _cggd.Maps != nil {
		_fegde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_cggd.Maps, _fegde)
	}
	if _cggd.ExtLst != nil {
		_gbgde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cggd.ExtLst, _gbgde)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bcdbf *ExternalLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061i\u003a\u0065\u0078t\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _bcdbf.CT_ExternalLink.MarshalXML(e, start)
}
func (_bcdadc *CT_OlapPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcdadc.LocalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.LocalAttr))})
	}
	if _bcdadc.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdadc.LocalConnectionAttr)})
	}
	if _bcdadc.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.LocalRefreshAttr))})
	}
	if _bcdadc.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.SendLocaleAttr))})
	}
	if _bcdadc.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdadc.RowDrillCountAttr)})
	}
	if _bcdadc.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.ServerFillAttr))})
	}
	if _bcdadc.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.ServerNumberFormatAttr))})
	}
	if _bcdadc.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.ServerFontAttr))})
	}
	if _bcdadc.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdadc.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Scenarios() *CT_Scenarios { _eefba := &CT_Scenarios{}; return _eefba }

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

// Validate validates the CT_QueryCache and its children
func (_dfead *CT_QueryCache) Validate() error {
	return _dfead.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}

type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

// Validate validates the Comments and its children
func (_ffdec *Comments) Validate() error {
	return _ffdec.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_egbd *CT_MetadataTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfcgb := range start.Attr {
		if _dfcgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgdeg, _gfea := _dd.ParseUint(_dfcgb.Value, 10, 32)
			if _gfea != nil {
				return _gfea
			}
			_dgefe := uint32(_bgdeg)
			_egbd.CountAttr = &_dgefe
			continue
		}
	}
_accgc:
	for {
		_cdcfe, _feaag := d.Token()
		if _feaag != nil {
			return _feaag
		}
		switch _dfdfg := _cdcfe.(type) {
		case _a.StartElement:
			switch _dfdfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_fgab := NewCT_MetadataType()
				if _ddgce := d.DecodeElement(_fgab, &_dfdfg); _ddgce != nil {
					return _ddgce
				}
				_egbd.MetadataType = append(_egbd.MetadataType, _fgab)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _dfdfg.Name)
				if _cebda := d.Skip(); _cebda != nil {
					return _cebda
				}
			}
		case _a.EndElement:
			break _accgc
		case _a.CharData:
		}
	}
	return nil
}
func (_afdea *CT_MdxKPI) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afdea.PAttr = ST_MdxKPIProperty(1)
	for _, _cfaba := range start.Attr {
		if _cfaba.Name.Local == "\u006e" {
			_dgcfd, _faee := _dd.ParseUint(_cfaba.Value, 10, 32)
			if _faee != nil {
				return _faee
			}
			_afdea.NAttr = uint32(_dgcfd)
			continue
		}
		if _cfaba.Name.Local == "\u006e\u0070" {
			_afag, _bdabd := _dd.ParseUint(_cfaba.Value, 10, 32)
			if _bdabd != nil {
				return _bdabd
			}
			_afdea.NpAttr = uint32(_afag)
			continue
		}
		if _cfaba.Name.Local == "\u0070" {
			_afdea.PAttr.UnmarshalXMLAttr(_cfaba)
			continue
		}
	}
	for {
		_adbbfa, _cbbeg := d.Token()
		if _cbbeg != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _cbbeg)
		}
		if _afdfgg, _fcbg := _adbbfa.(_a.EndElement); _fcbg && _afdfgg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_eccec *CT_TableStyles) ValidateWithPath(path string) error {
	for _ebfec, _agbda := range _eccec.TableStyle {
		if _eeabab := _agbda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _ebfec)); _eeabab != nil {
			return _eeabab
		}
	}
	return nil
}

// Validate validates the CT_IgnoredErrors and its children
func (_dbbg *CT_IgnoredErrors) Validate() error {
	return _dbbg.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}

// Validate validates the SingleXmlCells and its children
func (_cdgdfd *SingleXmlCells) Validate() error {
	return _cdgdfd.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// Validate validates the CT_WorkbookPr and its children
func (_eadade *CT_WorkbookPr) Validate() error {
	return _eadade.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}
func (_gacdcg *CT_TableFormula) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cabgd := range start.Attr {
		if _cabgd.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_gcdffd, _cegfe := _dd.ParseBool(_cabgd.Value)
			if _cegfe != nil {
				return _cegfe
			}
			_gacdcg.ArrayAttr = _gcdffd
			continue
		}
	}
	for {
		_bgcce, _ccccf := d.Token()
		if _ccccf != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _ccccf)
		}
		if _ggfgg, _cafdg := _bgcce.(_a.CharData); _cafdg {
			_gacdcg.Content = string(_ggfgg)
		}
		if _ggeea, _bdbcd := _bgcce.(_a.EndElement); _bdbcd && _ggeea.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_ddggb := &CT_CustomChartsheetViews{}
	return _ddggb
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}

func (_cb *CT_AutoFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cb.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_cb.RefAttr)})
	}
	e.EncodeToken(start)
	if _cb.FilterColumn != nil {
		_aee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0066\u0069l\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _ce := range _cb.FilterColumn {
			e.EncodeElement(_ce, _aee)
		}
	}
	if _cb.SortState != nil {
		_ggc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cb.SortState, _ggc)
	}
	if _cb.ExtLst != nil {
		_bfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cb.ExtLst, _bfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetId and its children
func (_afbfea *CT_SheetId) Validate() error {
	return _afbfea.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

type ST_RefMode byte
type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}
type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

func (_bebd *CT_IntProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eaabd := range start.Attr {
		if _eaabd.Name.Local == "\u0076\u0061\u006c" {
			_dggaac, _ebaae := _dd.ParseInt(_eaabd.Value, 10, 32)
			if _ebaae != nil {
				return _ebaae
			}
			_bebd.ValAttr = int32(_dggaac)
			continue
		}
	}
	for {
		_ceaaa, _eaebe := d.Token()
		if _eaebe != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _eaebe)
		}
		if _cedba, _abafc := _ceaaa.(_a.EndElement); _abafc && _cedba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dbdfd ST_GradientType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gcdaa := _a.Attr{}
	_gcdaa.Name = name
	switch _dbdfd {
	case ST_GradientTypeUnset:
		_gcdaa.Value = ""
	case ST_GradientTypeLinear:
		_gcdaa.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_gcdaa.Value = "\u0070\u0061\u0074\u0068"
	}
	return _gcdaa, nil
}
func (_caeeg *CT_MdxKPI) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _caeeg.NAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0070"}, Value: _fd.Sprintf("\u0025\u0076", _caeeg.NpAttr)})
	_eddf, _bacec := _caeeg.PAttr.MarshalXMLAttr(_a.Name{Local: "\u0070"})
	if _bacec != nil {
		return _bacec
	}
	start.Attr = append(start.Attr, _eddf)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gfdgac ST_CalcMode) String() string {
	switch _gfdgac {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}
func (_egdec *CT_Pane) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egdec.XSplitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_egdec.XSplitAttr)})
	}
	if _egdec.YSplitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_egdec.YSplitAttr)})
	}
	if _egdec.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_egdec.TopLeftCellAttr)})
	}
	if _egdec.ActivePaneAttr != ST_PaneUnset {
		_fccge, _fcfef := _egdec.ActivePaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _fcfef != nil {
			return _fcfef
		}
		start.Attr = append(start.Attr, _fccge)
	}
	if _egdec.StateAttr != ST_PaneStateUnset {
		_defbd, _gffda := _egdec.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gffda != nil {
			return _gffda
		}
		start.Attr = append(start.Attr, _defbd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewStyleSheet() *StyleSheet {
	_fedbga := &StyleSheet{}
	_fedbga.CT_Stylesheet = *NewCT_Stylesheet()
	return _fedbga
}

type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

func (_cgbef *ST_ItemType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aadac, _fbdfb := d.Token()
	if _fbdfb != nil {
		return _fbdfb
	}
	if _bggcd, _ggcee := _aadac.(_a.EndElement); _ggcee && _bggcd.Name == start.Name {
		*_cgbef = 1
		return nil
	}
	if _bgefg, _eeabb := _aadac.(_a.CharData); !_eeabb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aadac)
	} else {
		switch string(_bgefg) {
		case "":
			*_cgbef = 0
		case "\u0064\u0061\u0074\u0061":
			*_cgbef = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_cgbef = 2
		case "\u0073\u0075\u006d":
			*_cgbef = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_cgbef = 4
		case "\u0061\u0076\u0067":
			*_cgbef = 5
		case "\u006d\u0061\u0078":
			*_cgbef = 6
		case "\u006d\u0069\u006e":
			*_cgbef = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_cgbef = 8
		case "\u0063\u006f\u0075n\u0074":
			*_cgbef = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_cgbef = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_cgbef = 11
		case "\u0076\u0061\u0072":
			*_cgbef = 12
		case "\u0076\u0061\u0072\u0050":
			*_cgbef = 13
		case "\u0067\u0072\u0061n\u0064":
			*_cgbef = 14
		case "\u0062\u006c\u0061n\u006b":
			*_cgbef = 15
		}
	}
	_aadac, _fbdfb = d.Token()
	if _fbdfb != nil {
		return _fbdfb
	}
	if _bdbfgd, _faffdd := _aadac.(_a.EndElement); _faffdd && _bdbfgd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aadac)
}
func (_ddddec *CT_RevisionConflict) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddddec.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddddec.SheetIdAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ddddec.RIdAttr)})
	if _ddddec.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddddec.UaAttr))})
	}
	if _ddddec.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddddec.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gedcce ST_HtmlFmt) Validate() error { return _gedcce.ValidateWithPath("") }
func (_ffa *CT_CacheFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdb := range start.Attr {
		if _cdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffd, _edef := _dd.ParseUint(_cdb.Value, 10, 32)
			if _edef != nil {
				return _edef
			}
			_afeg := uint32(_ffd)
			_ffa.CountAttr = &_afeg
			continue
		}
	}
_bba:
	for {
		_fga, _cbgb := d.Token()
		if _cbgb != nil {
			return _cbgb
		}
		switch _affd := _fga.(type) {
		case _a.StartElement:
			switch _affd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_gafc := NewCT_CacheField()
				if _bacg := d.DecodeElement(_gafc, &_affd); _bacg != nil {
					return _bacg
				}
				_ffa.CacheField = append(_ffa.CacheField, _gafc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _affd.Name)
				if _edec := d.Skip(); _edec != nil {
					return _edec
				}
			}
		case _a.EndElement:
			break _bba
		case _a.CharData:
		}
	}
	return nil
}

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}

func (_dgefeb *CT_QueryTableField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dgefeb.IdAttr)})
	if _dgefeb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dgefeb.NameAttr)})
	}
	if _dgefeb.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgefeb.DataBoundAttr))})
	}
	if _dgefeb.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgefeb.RowNumbersAttr))})
	}
	if _dgefeb.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgefeb.FillFormulasAttr))})
	}
	if _dgefeb.ClippedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgefeb.ClippedAttr))})
	}
	if _dgefeb.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dgefeb.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _dgefeb.ExtLst != nil {
		_dfadb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgefeb.ExtLst, _dfadb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the PivotCacheRecords and its children
func (_abadef *PivotCacheRecords) Validate() error {
	return _abadef.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}

// Validate validates the CT_CalcCell and its children
func (_fdbf *CT_CalcCell) Validate() error {
	return _fdbf.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}
func (_bceeg *CT_MeasureGroups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bceeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bceeg.CountAttr)})
	}
	e.EncodeToken(start)
	if _bceeg.MeasureGroup != nil {
		_ccbad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u006d\u0065a\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _fgacb := range _bceeg.MeasureGroup {
			e.EncodeElement(_fgacb, _ccbad)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MemberProperty and its children
func (_abbgc *CT_MemberProperty) Validate() error {
	return _abbgc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func (_cddgde ST_DataConsolidateFunction) String() string {
	switch _cddgde {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}
func NewCT_Query() *CT_Query {
	_cfcbc := &CT_Query{}
	return _cfcbc
}

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_cdcc *CT_DataRef) ValidateWithPath(path string) error { return nil }
func (_eegebd ST_IconSetType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcggaf := _a.Attr{}
	_fcggaf.Name = name
	switch _eegebd {
	case ST_IconSetTypeUnset:
		_fcggaf.Value = ""
	case ST_IconSetType3Arrows:
		_fcggaf.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_fcggaf.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_fcggaf.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_fcggaf.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_fcggaf.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_fcggaf.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_fcggaf.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_fcggaf.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_fcggaf.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_fcggaf.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_fcggaf.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_fcggaf.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_fcggaf.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_fcggaf.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_fcggaf.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_fcggaf.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_fcggaf.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _fcggaf, nil
}
func (_bfdbg *CT_XStringElement) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _bfdbg.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalReference and its children
func (_cfcd *CT_ExternalReference) Validate() error {
	return _cfcd.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_bcceg *CT_TableColumn) ValidateWithPath(path string) error {
	if _edbag := _bcceg.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _edbag != nil {
		return _edbag
	}
	if _bcceg.CalculatedColumnFormula != nil {
		if _febda := _bcceg.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _febda != nil {
			return _febda
		}
	}
	if _bcceg.TotalsRowFormula != nil {
		if _afcba := _bcceg.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _afcba != nil {
			return _afcba
		}
	}
	if _bcceg.XmlColumnPr != nil {
		if _caeae := _bcceg.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _caeae != nil {
			return _caeae
		}
	}
	if _bcceg.ExtLst != nil {
		if _gbbab := _bcceg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbab != nil {
			return _gbbab
		}
	}
	return nil
}

type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}

func (_gfaed *CT_MeasureGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgcef := range start.Attr {
		if _dgcef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgfed := _dgcef.Value
			_gfaed.NameAttr = _fgfed
			continue
		}
		if _dgcef.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fegff := _dgcef.Value
			_gfaed.CaptionAttr = _fegff
			continue
		}
	}
	for {
		_ffafd, _fagdd := d.Token()
		if _fagdd != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _fagdd)
		}
		if _edbfg, _ceggc := _ffafd.(_a.EndElement); _ceggc && _edbfg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CalculatedMembers() *CT_CalculatedMembers { _dgeb := &CT_CalculatedMembers{}; return _dgeb }
func (_ecaeg *CT_Stylesheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ecaeg.NumFmts != nil {
		_aaadf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_ecaeg.NumFmts, _aaadf)
	}
	if _ecaeg.Fonts != nil {
		_bdddb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0066\u006f\u006e\u0074s"}}
		e.EncodeElement(_ecaeg.Fonts, _bdddb)
	}
	if _ecaeg.Fills != nil {
		_ggddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0066\u0069\u006c\u006cs"}}
		e.EncodeElement(_ecaeg.Fills, _ggddc)
	}
	if _ecaeg.Borders != nil {
		_fbfdge := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_ecaeg.Borders, _fbfdge)
	}
	if _ecaeg.CellStyleXfs != nil {
		_dagfbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0063\u0065l\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_ecaeg.CellStyleXfs, _dagfbd)
	}
	if _ecaeg.CellXfs != nil {
		_ecgda := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_ecaeg.CellXfs, _ecgda)
	}
	if _ecaeg.CellStyles != nil {
		_gegbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0065\u006c\u006c\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_ecaeg.CellStyles, _gegbc)
	}
	if _ecaeg.Dxfs != nil {
		_dbdge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_ecaeg.Dxfs, _dbdge)
	}
	if _ecaeg.TableStyles != nil {
		_aabcef := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_ecaeg.TableStyles, _aabcef)
	}
	if _ecaeg.Colors != nil {
		_bbebed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_ecaeg.Colors, _bbebed)
	}
	if _ecaeg.ExtLst != nil {
		_afgcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecaeg.ExtLst, _afgcb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdbfc *CT_Table) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cdbfc.IdAttr)})
	if _cdbfc.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cdbfc.DisplayNameAttr)})
	if _cdbfc.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.CommentAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _cdbfc.RefAttr)})
	if _cdbfc.TableTypeAttr != ST_TableTypeUnset {
		_daaffe, _cbda := _cdbfc.TableTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _cbda != nil {
			return _cbda
		}
		start.Attr = append(start.Attr, _daaffe)
	}
	if _cdbfc.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.HeaderRowCountAttr)})
	}
	if _cdbfc.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdbfc.InsertRowAttr))})
	}
	if _cdbfc.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdbfc.InsertRowShiftAttr))})
	}
	if _cdbfc.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.TotalsRowCountAttr)})
	}
	if _cdbfc.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdbfc.TotalsRowShownAttr))})
	}
	if _cdbfc.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdbfc.PublishedAttr))})
	}
	if _cdbfc.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.HeaderRowDxfIdAttr)})
	}
	if _cdbfc.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.DataDxfIdAttr)})
	}
	if _cdbfc.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.TotalsRowDxfIdAttr)})
	}
	if _cdbfc.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.HeaderRowBorderDxfIdAttr)})
	}
	if _cdbfc.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.TableBorderDxfIdAttr)})
	}
	if _cdbfc.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.TotalsRowBorderDxfIdAttr)})
	}
	if _cdbfc.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.HeaderRowCellStyleAttr)})
	}
	if _cdbfc.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.DataCellStyleAttr)})
	}
	if _cdbfc.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.TotalsRowCellStyleAttr)})
	}
	if _cdbfc.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cdbfc.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _cdbfc.AutoFilter != nil {
		_eebcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cdbfc.AutoFilter, _eebcf)
	}
	if _cdbfc.SortState != nil {
		_cbfgaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cdbfc.SortState, _cbfgaf)
	}
	_cgeegf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0074\u0061b\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_cdbfc.TableColumns, _cgeegf)
	if _cdbfc.TableStyleInfo != nil {
		_egeddb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0074\u0061\u0062\u006c\u0065S\u0074\u0079l\u0065\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_cdbfc.TableStyleInfo, _egeddb)
	}
	if _cdbfc.ExtLst != nil {
		_bffecg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdbfc.ExtLst, _bffecg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FontName() *CT_FontName { _ddadf := &CT_FontName{}; return _ddadf }
func (_febbe *CT_PageFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _febbe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_febbe.CountAttr)})
	}
	e.EncodeToken(start)
	_dcbaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _ccedbe := range _febbe.PageField {
		e.EncodeElement(_ccedbe, _dcbaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionRowColumnChoice and its children, prefixing error messages with path
func (_gedcc *CT_RevisionRowColumnChoice) ValidateWithPath(path string) error {
	for _cadbc, _fdcbg := range _gedcc.Undo {
		if _eaeaag := _fdcbg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _cadbc)); _eaeaag != nil {
			return _eaeaag
		}
	}
	for _acaf, _ceebfb := range _gedcc.Rcc {
		if _gcage := _ceebfb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _acaf)); _gcage != nil {
			return _gcage
		}
	}
	for _bgcef, _fcdcbf := range _gedcc.Rfmt {
		if _dfgbc := _fcdcbf.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _bgcef)); _dfgbc != nil {
			return _dfgbc
		}
	}
	return nil
}
func (_eabde *CT_TableColumns) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfbba := range start.Attr {
		if _gfbba.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddggdc, _feagc := _dd.ParseUint(_gfbba.Value, 10, 32)
			if _feagc != nil {
				return _feagc
			}
			_bbdff := uint32(_ddggdc)
			_eabde.CountAttr = &_bbdff
			continue
		}
	}
_aggebf:
	for {
		_gcbef, _bgeff := d.Token()
		if _bgeff != nil {
			return _bgeff
		}
		switch _dgcfa := _gcbef.(type) {
		case _a.StartElement:
			switch _dgcfa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_deefd := NewCT_TableColumn()
				if _gfbcc := d.DecodeElement(_deefd, &_dgcfa); _gfbcc != nil {
					return _gfbcc
				}
				_eabde.TableColumn = append(_eabde.TableColumn, _deefd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _dgcfa.Name)
				if _edgea := d.Skip(); _edgea != nil {
					return _edgea
				}
			}
		case _a.EndElement:
			break _aggebf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_deeeg *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _geddc, _fcece := range _deeeg.WebPublishObject {
		if _gbgdaa := _fcece.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _geddc)); _gbgdaa != nil {
			return _gbgdaa
		}
	}
	return nil
}

// Validate validates the CT_Controls and its children
func (_dffe *CT_Controls) Validate() error {
	return _dffe.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}
func (_fcedb *CT_SingleXmlCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fcedb.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _fcedb.RAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fcedb.ConnectionIdAttr)})
	e.EncodeToken(start)
	_efebg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0078\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_fcedb.XmlCellPr, _efebg)
	if _fcedb.ExtLst != nil {
		_acbcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcedb.ExtLst, _acbcd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

func NewCT_DefinedName() *CT_DefinedName { _ddddc := &CT_DefinedName{}; return _ddddc }

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_gfdfa *CT_Cols) ValidateWithPath(path string) error {
	for _bgfdd, _degf := range _gfdfa.Col {
		if _befga := _degf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _bgfdd)); _befga != nil {
			return _befga
		}
	}
	return nil
}

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}

func (_cecdee ST_DataValidationErrorStyle) Validate() error { return _cecdee.ValidateWithPath("") }

// Validate validates the CT_OleLink and its children
func (_efaaf *CT_OleLink) Validate() error {
	return _efaaf.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}
func (_gfcgf *CT_ChartsheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfcgf.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcgf.TabSelectedAttr))})
	}
	if _gfcgf.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcgf.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gfcgf.WorkbookViewIdAttr)})
	if _gfcgf.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcgf.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _gfcgf.ExtLst != nil {
		_acfee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfcgf.ExtLst, _acfee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_affgdgg *ST_DdeValueType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_affgdgg = 0
	case "\u006e\u0069\u006c":
		*_affgdgg = 1
	case "\u0062":
		*_affgdgg = 2
	case "\u006e":
		*_affgdgg = 3
	case "\u0065":
		*_affgdgg = 4
	case "\u0073\u0074\u0072":
		*_affgdgg = 5
	}
	return nil
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_ebgcc *CT_Fill) ValidateWithPath(path string) error {
	if _fdefg := _ebgcc.FillChoice.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0043\u0068\u006f\u0069\u0063\u0065"); _fdefg != nil {
		return _fdefg
	}
	return nil
}

// Validate validates the CT_CacheHierarchy and its children
func (_fde *CT_CacheHierarchy) Validate() error {
	return _fde.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_dbeadd *CT_PivotAreas) ValidateWithPath(path string) error {
	for _edbgd, _aabcfe := range _dbeadd.PivotArea {
		if _gddaea := _aabcfe.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _edbgd)); _gddaea != nil {
			return _gddaea
		}
	}
	return nil
}

type Worksheet struct{ CT_Worksheet }

func (_fegge *PivotCacheDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fegge.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _dddff := range start.Attr {
		if _dddff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dddff.Name.Local == "\u0069\u0064" || _dddff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dddff.Name.Local == "\u0069\u0064" {
			_feade := _dddff.Value
			_fegge.IdAttr = &_feade
			continue
		}
		if _dddff.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_aeddf, _gbdbb := _dd.ParseBool(_dddff.Value)
			if _gbdbb != nil {
				return _gbdbb
			}
			_fegge.InvalidAttr = &_aeddf
			continue
		}
		if _dddff.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_affdfc, _eaccee := _dd.ParseBool(_dddff.Value)
			if _eaccee != nil {
				return _eaccee
			}
			_fegge.SaveDataAttr = &_affdfc
			continue
		}
		if _dddff.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_gcebd, _ddcag := _dd.ParseBool(_dddff.Value)
			if _ddcag != nil {
				return _ddcag
			}
			_fegge.RefreshOnLoadAttr = &_gcebd
			continue
		}
		if _dddff.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_dgdcf, _abbgcc := _dd.ParseBool(_dddff.Value)
			if _abbgcc != nil {
				return _abbgcc
			}
			_fegge.OptimizeMemoryAttr = &_dgdcf
			continue
		}
		if _dddff.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_dabed, _ddbee := _dd.ParseBool(_dddff.Value)
			if _ddbee != nil {
				return _ddbee
			}
			_fegge.EnableRefreshAttr = &_dabed
			continue
		}
		if _dddff.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_degedd := _dddff.Value
			_fegge.RefreshedByAttr = &_degedd
			continue
		}
		if _dddff.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_abdga, _afadfb := _dd.ParseFloat(_dddff.Value, 64)
			if _afadfb != nil {
				return _afadfb
			}
			_fegge.RefreshedDateAttr = &_abdga
			continue
		}
		if _dddff.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_gbecdc, _bebeb := ParseStdlibTime(_dddff.Value)
			if _bebeb != nil {
				return _bebeb
			}
			_fegge.RefreshedDateIsoAttr = &_gbecdc
			continue
		}
		if _dddff.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_gcfaa, _cfcdg := _dd.ParseBool(_dddff.Value)
			if _cfcdg != nil {
				return _cfcdg
			}
			_fegge.BackgroundQueryAttr = &_gcfaa
			continue
		}
		if _dddff.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_cdccd, _gbggd := _dd.ParseUint(_dddff.Value, 10, 32)
			if _gbggd != nil {
				return _gbggd
			}
			_bgbbef := uint32(_cdccd)
			_fegge.MissingItemsLimitAttr = &_bgbbef
			continue
		}
		if _dddff.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_geceg, _cbafe := _dd.ParseUint(_dddff.Value, 10, 8)
			if _cbafe != nil {
				return _cbafe
			}
			_gbgec := uint8(_geceg)
			_fegge.CreatedVersionAttr = &_gbgec
			continue
		}
		if _dddff.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ebddff, _aebdc := _dd.ParseUint(_dddff.Value, 10, 8)
			if _aebdc != nil {
				return _aebdc
			}
			_cdcdb := uint8(_ebddff)
			_fegge.RefreshedVersionAttr = &_cdcdb
			continue
		}
		if _dddff.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_acfbg, _fdfgg := _dd.ParseUint(_dddff.Value, 10, 8)
			if _fdfgg != nil {
				return _fdfgg
			}
			_bdbbc := uint8(_acfbg)
			_fegge.MinRefreshableVersionAttr = &_bdbbc
			continue
		}
		if _dddff.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_bdaec, _dgbcc := _dd.ParseUint(_dddff.Value, 10, 32)
			if _dgbcc != nil {
				return _dgbcc
			}
			_ceaed := uint32(_bdaec)
			_fegge.RecordCountAttr = &_ceaed
			continue
		}
		if _dddff.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_dfac, _bbagad := _dd.ParseBool(_dddff.Value)
			if _bbagad != nil {
				return _bbagad
			}
			_fegge.UpgradeOnRefreshAttr = &_dfac
			continue
		}
		if _dddff.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_dacgd, _edgddd := _dd.ParseBool(_dddff.Value)
			if _edgddd != nil {
				return _edgddd
			}
			_fegge.TupleCacheAttr = &_dacgd
			continue
		}
		if _dddff.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_bbdga, _gfebb := _dd.ParseBool(_dddff.Value)
			if _gfebb != nil {
				return _gfebb
			}
			_fegge.SupportSubqueryAttr = &_bbdga
			continue
		}
		if _dddff.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_fbeeb, _fdaeb := _dd.ParseBool(_dddff.Value)
			if _fdaeb != nil {
				return _fdaeb
			}
			_fegge.SupportAdvancedDrillAttr = &_fbeeb
			continue
		}
	}
_ccagb:
	for {
		_babgf, _cfecb := d.Token()
		if _cfecb != nil {
			return _cfecb
		}
		switch _dcbda := _babgf.(type) {
		case _a.StartElement:
			switch _dcbda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _fceacf := d.DecodeElement(_fegge.CacheSource, &_dcbda); _fceacf != nil {
					return _fceacf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _dgadag := d.DecodeElement(_fegge.CacheFields, &_dcbda); _dgadag != nil {
					return _dgadag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_fegge.CacheHierarchies = NewCT_CacheHierarchies()
				if _ceefg := d.DecodeElement(_fegge.CacheHierarchies, &_dcbda); _ceefg != nil {
					return _ceefg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_fegge.Kpis = NewCT_PCDKPIs()
				if _caaef := d.DecodeElement(_fegge.Kpis, &_dcbda); _caaef != nil {
					return _caaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_fegge.TupleCache = NewCT_TupleCache()
				if _dafea := d.DecodeElement(_fegge.TupleCache, &_dcbda); _dafea != nil {
					return _dafea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_fegge.CalculatedItems = NewCT_CalculatedItems()
				if _facgd := d.DecodeElement(_fegge.CalculatedItems, &_dcbda); _facgd != nil {
					return _facgd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_fegge.CalculatedMembers = NewCT_CalculatedMembers()
				if _caaabf := d.DecodeElement(_fegge.CalculatedMembers, &_dcbda); _caaabf != nil {
					return _caaabf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_fegge.Dimensions = NewCT_Dimensions()
				if _bbcgf := d.DecodeElement(_fegge.Dimensions, &_dcbda); _bbcgf != nil {
					return _bbcgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_fegge.MeasureGroups = NewCT_MeasureGroups()
				if _gedabe := d.DecodeElement(_fegge.MeasureGroups, &_dcbda); _gedabe != nil {
					return _gedabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_fegge.Maps = NewCT_MeasureDimensionMaps()
				if _caeccf := d.DecodeElement(_fegge.Maps, &_dcbda); _caeccf != nil {
					return _caeccf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fegge.ExtLst = NewCT_ExtensionList()
				if _gedfg := d.DecodeElement(_fegge.ExtLst, &_dcbda); _gedfg != nil {
					return _gedfg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dcbda.Name)
				if _edcgedd := d.Skip(); _edcgedd != nil {
					return _edcgedd
				}
			}
		case _a.EndElement:
			break _ccagb
		case _a.CharData:
		}
	}
	return nil
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_g.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_g.Time
}

func (_gaffb *CT_RowFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eegaad := range start.Attr {
		if _eegaad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgadbe, _beafg := _dd.ParseUint(_eegaad.Value, 10, 32)
			if _beafg != nil {
				return _beafg
			}
			_egfea := uint32(_dgadbe)
			_gaffb.CountAttr = &_egfea
			continue
		}
	}
_dagfb:
	for {
		_ebgdc, _aececa := d.Token()
		if _aececa != nil {
			return _aececa
		}
		switch _adddb := _ebgdc.(type) {
		case _a.StartElement:
			switch _adddb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_edaba := NewCT_Field()
				if _acecge := d.DecodeElement(_edaba, &_adddb); _acecge != nil {
					return _acecge
				}
				_gaffb.Field = append(_gaffb.Field, _edaba)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _adddb.Name)
				if _bbecca := d.Skip(); _bbecca != nil {
					return _bbecca
				}
			}
		case _a.EndElement:
			break _dagfb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_dfbe *CT_Break) ValidateWithPath(path string) error { return nil }
func (_ggaad *CT_FileVersion) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgfec := range start.Attr {
		if _cgfec.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_ddaba := _cgfec.Value
			_ggaad.AppNameAttr = &_ddaba
			continue
		}
		if _cgfec.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_bccf := _cgfec.Value
			_ggaad.LastEditedAttr = &_bccf
			continue
		}
		if _cgfec.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_dacca := _cgfec.Value
			_ggaad.LowestEditedAttr = &_dacca
			continue
		}
		if _cgfec.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_afcc := _cgfec.Value
			_ggaad.RupBuildAttr = &_afcc
			continue
		}
		if _cgfec.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_gfgga := _cgfec.Value
			_ggaad.CodeNameAttr = &_gfgga
			continue
		}
	}
	for {
		_daaac, _cfggc := d.Token()
		if _cfggc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _cfggc)
		}
		if _bbac, _abcgc := _daaac.(_a.EndElement); _abcgc && _bbac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fddc *CT_Dialogsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fddc.SheetPr != nil {
		_aaad := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fddc.SheetPr, _aaad)
	}
	if _fddc.SheetViews != nil {
		_efbfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fddc.SheetViews, _efbfe)
	}
	if _fddc.SheetFormatPr != nil {
		_ccbff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_fddc.SheetFormatPr, _ccbff)
	}
	if _fddc.SheetProtection != nil {
		_gcbdf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ash\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fddc.SheetProtection, _gcbdf)
	}
	if _fddc.CustomSheetViews != nil {
		_adabc := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0053h\u0065\u0065\u0074\u0056ie\u0077\u0073"}}
		e.EncodeElement(_fddc.CustomSheetViews, _adabc)
	}
	if _fddc.PrintOptions != nil {
		_beba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0070\u0072i\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fddc.PrintOptions, _beba)
	}
	if _fddc.PageMargins != nil {
		_cgcbg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fddc.PageMargins, _cgcbg)
	}
	if _fddc.PageSetup != nil {
		_dgfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fddc.PageSetup, _dgfe)
	}
	if _fddc.HeaderFooter != nil {
		_fecf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fddc.HeaderFooter, _fecf)
	}
	if _fddc.Drawing != nil {
		_fbcg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fddc.Drawing, _fbcg)
	}
	if _fddc.LegacyDrawing != nil {
		_ffef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fddc.LegacyDrawing, _ffef)
	}
	if _fddc.LegacyDrawingHF != nil {
		_ddbefg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ale\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fddc.LegacyDrawingHF, _ddbefg)
	}
	if _fddc.DrawingHF != nil {
		_fdaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fddc.DrawingHF, _fdaa)
	}
	if _fddc.OleObjects != nil {
		_beegg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0065\u004f\u0062j\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_fddc.OleObjects, _beegg)
	}
	if _fddc.Controls != nil {
		_gface := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_fddc.Controls, _gface)
	}
	if _fddc.ExtLst != nil {
		_bfaeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fddc.ExtLst, _bfaeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egcda *CT_SingleXmlCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egcda.XmlCellPr = NewCT_XmlCellPr()
	for _, _fabf := range start.Attr {
		if _fabf.Name.Local == "\u0069\u0064" {
			_bedaaa, _bgdab := _dd.ParseUint(_fabf.Value, 10, 32)
			if _bgdab != nil {
				return _bgdab
			}
			_egcda.IdAttr = uint32(_bedaaa)
			continue
		}
		if _fabf.Name.Local == "\u0072" {
			_gbgfd := _fabf.Value
			_egcda.RAttr = _gbgfd
			continue
		}
		if _fabf.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_agddfb, _gbebaf := _dd.ParseUint(_fabf.Value, 10, 32)
			if _gbebaf != nil {
				return _gbebaf
			}
			_egcda.ConnectionIdAttr = uint32(_agddfb)
			continue
		}
	}
_bcecgb:
	for {
		_gefcb, _ddecd := d.Token()
		if _ddecd != nil {
			return _ddecd
		}
		switch _ggfdf := _gefcb.(type) {
		case _a.StartElement:
			switch _ggfdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _afdfa := d.DecodeElement(_egcda.XmlCellPr, &_ggfdf); _afdfa != nil {
					return _afdfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egcda.ExtLst = NewCT_ExtensionList()
				if _bbbcc := d.DecodeElement(_egcda.ExtLst, &_ggfdf); _bbbcc != nil {
					return _bbbcc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _ggfdf.Name)
				if _ggfaa := d.Skip(); _ggfaa != nil {
					return _ggfaa
				}
			}
		case _a.EndElement:
			break _bcecgb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_aebb *CT_Consolidation) ValidateWithPath(path string) error {
	if _aebb.Pages != nil {
		if _cbad := _aebb.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _cbad != nil {
			return _cbad
		}
	}
	if _bbabb := _aebb.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _bbabb != nil {
		return _bbabb
	}
	return nil
}
func NewCT_DeletedField() *CT_DeletedField { _bacbf := &CT_DeletedField{}; return _bacbf }
func NewCT_DdeValue() *CT_DdeValue         { _cedc := &CT_DdeValue{}; return _cedc }

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_gdbff *CT_Revisions) ValidateWithPath(path string) error {
	for _bdfga, _egbfc := range _gdbff.RevisionsChoice {
		if _cecea := _egbfc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025d\u005d", path, _bdfga)); _cecea != nil {
			return _cecea
		}
	}
	return nil
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_gcdae *EG_ExtensionList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dacba:
	for {
		_gdedgc, _edcacb := d.Token()
		if _edcacb != nil {
			return _edcacb
		}
		switch _bdebf := _gdedgc.(type) {
		case _a.StartElement:
			switch _bdebf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_dcgcdef := NewCT_Extension()
				if _ggbebd := d.DecodeElement(_dcgcdef, &_bdebf); _ggbebd != nil {
					return _ggbebd
				}
				_gcdae.Ext = append(_gcdae.Ext, _dcgcdef)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _bdebf.Name)
				if _dfbgaf := d.Skip(); _dfbgaf != nil {
					return _dfbgaf
				}
			}
		case _a.EndElement:
			break _dacba
		case _a.CharData:
		}
	}
	return nil
}

type ST_GradientType byte

func (_fbdgb *CT_SheetIdMap) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbdgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbdgb.CountAttr)})
	}
	e.EncodeToken(start)
	_gedegb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _eecef := range _fbdgb.SheetId {
		e.EncodeElement(_eecef, _gedegb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adbgc ST_TextHAlign) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_adbgc.String(), start)
}
func (_dceea ST_PrintError) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dceea.String(), start)
}

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_bdda *CT_CellStyles) ValidateWithPath(path string) error {
	for _cagc, _addc := range _bdda.CellStyle {
		if _ccca := _addc.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _cagc)); _ccca != nil {
			return _ccca
		}
	}
	return nil
}

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

func (_adca *CT_CellWatch) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _adca.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}

func (_deagdd *StyleSheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_deagdd.CT_Stylesheet = *NewCT_Stylesheet()
_dagbcb:
	for {
		_ddbgg, _aegfde := d.Token()
		if _aegfde != nil {
			return _aegfde
		}
		switch _ebeeb := _ddbgg.(type) {
		case _a.StartElement:
			switch _ebeeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_deagdd.NumFmts = NewCT_NumFmts()
				if _eggcbb := d.DecodeElement(_deagdd.NumFmts, &_ebeeb); _eggcbb != nil {
					return _eggcbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_deagdd.Fonts = NewCT_Fonts()
				if _cbcaeb := d.DecodeElement(_deagdd.Fonts, &_ebeeb); _cbcaeb != nil {
					return _cbcaeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_deagdd.Fills = NewCT_Fills()
				if _eedfef := d.DecodeElement(_deagdd.Fills, &_ebeeb); _eedfef != nil {
					return _eedfef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_deagdd.Borders = NewCT_Borders()
				if _gefcc := d.DecodeElement(_deagdd.Borders, &_ebeeb); _gefcc != nil {
					return _gefcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_deagdd.CellStyleXfs = NewCT_CellStyleXfs()
				if _dffdb := d.DecodeElement(_deagdd.CellStyleXfs, &_ebeeb); _dffdb != nil {
					return _dffdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_deagdd.CellXfs = NewCT_CellXfs()
				if _aagaa := d.DecodeElement(_deagdd.CellXfs, &_ebeeb); _aagaa != nil {
					return _aagaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_deagdd.CellStyles = NewCT_CellStyles()
				if _cbfcc := d.DecodeElement(_deagdd.CellStyles, &_ebeeb); _cbfcc != nil {
					return _cbfcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_deagdd.Dxfs = NewCT_Dxfs()
				if _cbebb := d.DecodeElement(_deagdd.Dxfs, &_ebeeb); _cbebb != nil {
					return _cbebb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_deagdd.TableStyles = NewCT_TableStyles()
				if _bfeab := d.DecodeElement(_deagdd.TableStyles, &_ebeeb); _bfeab != nil {
					return _bfeab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_deagdd.Colors = NewCT_Colors()
				if _geffb := d.DecodeElement(_deagdd.Colors, &_ebeeb); _geffb != nil {
					return _geffb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deagdd.ExtLst = NewCT_ExtensionList()
				if _daega := d.DecodeElement(_deagdd.ExtLst, &_ebeeb); _daega != nil {
					return _daega
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _ebeeb.Name)
				if _gdbbg := d.Skip(); _gdbbg != nil {
					return _gdbbg
				}
			}
		case _a.EndElement:
			break _dagbcb
		case _a.CharData:
		}
	}
	return nil
}
func (_bbgeb *CT_DefinedNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dacdc:
	for {
		_ffdbc, _ggff := d.Token()
		if _ggff != nil {
			return _ggff
		}
		switch _cedfc := _ffdbc.(type) {
		case _a.StartElement:
			switch _cedfc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_egefe := NewCT_DefinedName()
				if _abda := d.DecodeElement(_egefe, &_cedfc); _abda != nil {
					return _abda
				}
				_bbgeb.DefinedName = append(_bbgeb.DefinedName, _egefe)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _cedfc.Name)
				if _fdbg := d.Skip(); _fdbg != nil {
					return _fdbg
				}
			}
		case _a.EndElement:
			break _dacdc
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_bbgec *CT_Pane) ValidateWithPath(path string) error {
	if _cfabde := _bbgec.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _cfabde != nil {
		return _cfabde
	}
	if _dbefe := _bbgec.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _dbefe != nil {
		return _dbefe
	}
	return nil
}

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

// Validate validates the Metadata and its children
func (_gabaa *Metadata) Validate() error {
	return _gabaa.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}
func (_ceabg ST_RefMode) String() string {
	switch _ceabg {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}
func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _fgdge := &CT_FileRecoveryPr{}; return _fgdge }
func (_adfca *CT_FileRecoveryPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adfca.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_adfca.AutoRecoverAttr))})
	}
	if _adfca.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_adfca.CrashSaveAttr))})
	}
	if _adfca.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_adfca.DataExtractLoadAttr))})
	}
	if _adfca.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_adfca.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetCalcPr and its children
func (_adfcd *CT_SheetCalcPr) Validate() error {
	return _adfcd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}

type ST_ExternalConnectionType byte

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

func (_aacgd ST_SourceType) String() string {
	switch _aacgd {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}
func NewCT_SortCondition() *CT_SortCondition { _gbdadf := &CT_SortCondition{}; return _gbdadf }
func (_aafeb *ST_ExternalConnectionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dagedc, _eebbc := d.Token()
	if _eebbc != nil {
		return _eebbc
	}
	if _aebfc, _dedfe := _dagedc.(_a.EndElement); _dedfe && _aebfc.Name == start.Name {
		*_aafeb = 1
		return nil
	}
	if _ecgead, _egcec := _dagedc.(_a.CharData); !_egcec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dagedc)
	} else {
		switch string(_ecgead) {
		case "":
			*_aafeb = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_aafeb = 1
		case "\u0074\u0065\u0078\u0074":
			*_aafeb = 2
		case "\u004d\u0044\u0059":
			*_aafeb = 3
		case "\u0044\u004d\u0059":
			*_aafeb = 4
		case "\u0059\u004d\u0044":
			*_aafeb = 5
		case "\u004d\u0059\u0044":
			*_aafeb = 6
		case "\u0044\u0059\u004d":
			*_aafeb = 7
		case "\u0059\u0044\u004d":
			*_aafeb = 8
		case "\u0073\u006b\u0069\u0070":
			*_aafeb = 9
		case "\u0045\u004d\u0044":
			*_aafeb = 10
		}
	}
	_dagedc, _eebbc = d.Token()
	if _eebbc != nil {
		return _eebbc
	}
	if _ebgaaf, _ebfffe := _dagedc.(_a.EndElement); _ebfffe && _ebgaaf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dagedc)
}

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_cfb *CT_CacheFields) ValidateWithPath(path string) error {
	for _bcbe, _gba := range _cfb.CacheField {
		if _gdgff := _gba.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _bcbe)); _gdgff != nil {
			return _gdgff
		}
	}
	return nil
}

// Validate validates the CT_PageField and its children
func (_aedff *CT_PageField) Validate() error {
	return _aedff.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}
func (_afdga *CT_CustomWorkbookView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afdga.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _aadae := range start.Attr {
		if _aadae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbfb := _aadae.Value
			_afdga.NameAttr = _fbfb
			continue
		}
		if _aadae.Name.Local == "\u0067\u0075\u0069\u0064" {
			_beced := _aadae.Value
			_afdga.GuidAttr = _beced
			continue
		}
		if _aadae.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_agfeb, _efg := _dd.ParseBool(_aadae.Value)
			if _efg != nil {
				return _efg
			}
			_afdga.AutoUpdateAttr = &_agfeb
			continue
		}
		if _aadae.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_gbbc, _fdbbb := _dd.ParseUint(_aadae.Value, 10, 32)
			if _fdbbb != nil {
				return _fdbbb
			}
			_bdgdf := uint32(_gbbc)
			_afdga.MergeIntervalAttr = &_bdgdf
			continue
		}
		if _aadae.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_bbbf, _eabab := _dd.ParseBool(_aadae.Value)
			if _eabab != nil {
				return _eabab
			}
			_afdga.ChangesSavedWinAttr = &_bbbf
			continue
		}
		if _aadae.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_gdfb, _bfgad := _dd.ParseBool(_aadae.Value)
			if _bfgad != nil {
				return _bfgad
			}
			_afdga.OnlySyncAttr = &_gdfb
			continue
		}
		if _aadae.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_dfdc, _ecff := _dd.ParseBool(_aadae.Value)
			if _ecff != nil {
				return _ecff
			}
			_afdga.PersonalViewAttr = &_dfdc
			continue
		}
		if _aadae.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_feae, _bdeb := _dd.ParseBool(_aadae.Value)
			if _bdeb != nil {
				return _bdeb
			}
			_afdga.IncludePrintSettingsAttr = &_feae
			continue
		}
		if _aadae.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gacc, _edfe := _dd.ParseBool(_aadae.Value)
			if _edfe != nil {
				return _edfe
			}
			_afdga.IncludeHiddenRowColAttr = &_gacc
			continue
		}
		if _aadae.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_ebfbc, _gagfc := _dd.ParseBool(_aadae.Value)
			if _gagfc != nil {
				return _gagfc
			}
			_afdga.MaximizedAttr = &_ebfbc
			continue
		}
		if _aadae.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_cdfgg, _gdcd := _dd.ParseBool(_aadae.Value)
			if _gdcd != nil {
				return _gdcd
			}
			_afdga.MinimizedAttr = &_cdfgg
			continue
		}
		if _aadae.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_bcdad, _gfdbe := _dd.ParseBool(_aadae.Value)
			if _gfdbe != nil {
				return _gfdbe
			}
			_afdga.ShowHorizontalScrollAttr = &_bcdad
			continue
		}
		if _aadae.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_bebbg, _bfcd := _dd.ParseBool(_aadae.Value)
			if _bfcd != nil {
				return _bfcd
			}
			_afdga.ShowVerticalScrollAttr = &_bebbg
			continue
		}
		if _aadae.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_cfbcb, _ebce := _dd.ParseBool(_aadae.Value)
			if _ebce != nil {
				return _ebce
			}
			_afdga.ShowSheetTabsAttr = &_cfbcb
			continue
		}
		if _aadae.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_decg, _ecca := _dd.ParseInt(_aadae.Value, 10, 32)
			if _ecca != nil {
				return _ecca
			}
			_eeddf := int32(_decg)
			_afdga.XWindowAttr = &_eeddf
			continue
		}
		if _aadae.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_ceef, _ebddf := _dd.ParseInt(_aadae.Value, 10, 32)
			if _ebddf != nil {
				return _ebddf
			}
			_adgb := int32(_ceef)
			_afdga.YWindowAttr = &_adgb
			continue
		}
		if _aadae.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_fbdg, _ebbaa := _dd.ParseUint(_aadae.Value, 10, 32)
			if _ebbaa != nil {
				return _ebbaa
			}
			_afdga.WindowWidthAttr = uint32(_fbdg)
			continue
		}
		if _aadae.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_afcb, _cdeg := _dd.ParseUint(_aadae.Value, 10, 32)
			if _cdeg != nil {
				return _cdeg
			}
			_afdga.WindowHeightAttr = uint32(_afcb)
			continue
		}
		if _aadae.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_fdcf, _efbeg := _dd.ParseUint(_aadae.Value, 10, 32)
			if _efbeg != nil {
				return _efbeg
			}
			_cffbc := uint32(_fdcf)
			_afdga.TabRatioAttr = &_cffbc
			continue
		}
		if _aadae.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_cdcd, _eeafg := _dd.ParseUint(_aadae.Value, 10, 32)
			if _eeafg != nil {
				return _eeafg
			}
			_afdga.ActiveSheetIdAttr = uint32(_cdcd)
			continue
		}
		if _aadae.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_gaagb, _eeae := _dd.ParseBool(_aadae.Value)
			if _eeae != nil {
				return _eeae
			}
			_afdga.ShowFormulaBarAttr = &_gaagb
			continue
		}
		if _aadae.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_caefc, _cdda := _dd.ParseBool(_aadae.Value)
			if _cdda != nil {
				return _cdda
			}
			_afdga.ShowStatusbarAttr = &_caefc
			continue
		}
		if _aadae.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_afdga.ShowCommentsAttr.UnmarshalXMLAttr(_aadae)
			continue
		}
		if _aadae.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_afdga.ShowObjectsAttr.UnmarshalXMLAttr(_aadae)
			continue
		}
	}
_egabb:
	for {
		_fcceb, _adgf := d.Token()
		if _adgf != nil {
			return _adgf
		}
		switch _bffb := _fcceb.(type) {
		case _a.StartElement:
			switch _bffb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afdga.ExtLst = NewCT_ExtensionList()
				if _bcge := d.DecodeElement(_afdga.ExtLst, &_bffb); _bcge != nil {
					return _bcge
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _bffb.Name)
				if _aegdf := d.Skip(); _aegdf != nil {
					return _aegdf
				}
			}
		case _a.EndElement:
			break _egabb
		case _a.CharData:
		}
	}
	return nil
}
func (_fgbbc ST_ConditionalFormattingOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fgbbc.String(), start)
}

type ST_PivotAreaType byte

func NewCT_CellAlignment() *CT_CellAlignment { _ccae := &CT_CellAlignment{}; return _ccae }

// Validate validates the CT_ObjectAnchor and its children
func (_ddag *CT_ObjectAnchor) Validate() error {
	return _ddag.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}
func (_cgcba *CT_GroupMember) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fggf := range start.Attr {
		if _fggf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_aggcbf := _fggf.Value
			_cgcba.UniqueNameAttr = _aggcbf
			continue
		}
		if _fggf.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_bgagf, _eggg := _dd.ParseBool(_fggf.Value)
			if _eggg != nil {
				return _eggg
			}
			_cgcba.GroupAttr = &_bgagf
			continue
		}
	}
	for {
		_fgaed, _fdede := d.Token()
		if _fdede != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _fdede)
		}
		if _ebgeb, _ffcd := _fgaed.(_a.EndElement); _ffcd && _ebgeb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}

func (_gbgdec *CT_SheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbgdec.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.WindowProtectionAttr))})
	}
	if _gbgdec.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowFormulasAttr))})
	}
	if _gbgdec.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowGridLinesAttr))})
	}
	if _gbgdec.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowRowColHeadersAttr))})
	}
	if _gbgdec.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowZerosAttr))})
	}
	if _gbgdec.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.RightToLeftAttr))})
	}
	if _gbgdec.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.TabSelectedAttr))})
	}
	if _gbgdec.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowRulerAttr))})
	}
	if _gbgdec.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowOutlineSymbolsAttr))})
	}
	if _gbgdec.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.DefaultGridColorAttr))})
	}
	if _gbgdec.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbgdec.ShowWhiteSpaceAttr))})
	}
	if _gbgdec.ViewAttr != ST_SheetViewTypeUnset {
		_abgagd, _faaag := _gbgdec.ViewAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _faaag != nil {
			return _faaag
		}
		start.Attr = append(start.Attr, _abgagd)
	}
	if _gbgdec.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.TopLeftCellAttr)})
	}
	if _gbgdec.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.ColorIdAttr)})
	}
	if _gbgdec.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.ZoomScaleAttr)})
	}
	if _gbgdec.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.ZoomScaleNormalAttr)})
	}
	if _gbgdec.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.ZoomScaleSheetLayoutViewAttr)})
	}
	if _gbgdec.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_gbgdec.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gbgdec.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _gbgdec.Pane != nil {
		_cggbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_gbgdec.Pane, _cggbf)
	}
	if _gbgdec.Selection != nil {
		_dccaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _fdbdbg := range _gbgdec.Selection {
			e.EncodeElement(_fdbdbg, _dccaf)
		}
	}
	if _gbgdec.PivotSelection != nil {
		_gegbed := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0069\u0076\u006f\u0074S\u0065\u006ce\u0063\u0074\u0069\u006f\u006e"}}
		for _, _bgbad := range _gbgdec.PivotSelection {
			e.EncodeElement(_bgbad, _gegbed)
		}
	}
	if _gbgdec.ExtLst != nil {
		_gadcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbgdec.ExtLst, _gadcc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DiscretePr and its children
func (_adfdg *CT_DiscretePr) Validate() error {
	return _adfdg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}
func NewCT_Stylesheet() *CT_Stylesheet { _eagfa := &CT_Stylesheet{}; return _eagfa }
func (_baccc *CT_RangeSets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dddg := range start.Attr {
		if _dddg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfbdbg, _gedfb := _dd.ParseUint(_dddg.Value, 10, 32)
			if _gedfb != nil {
				return _gedfb
			}
			_ebecb := uint32(_dfbdbg)
			_baccc.CountAttr = &_ebecb
			continue
		}
	}
_fceee:
	for {
		_ggbd, _gfgdg := d.Token()
		if _gfgdg != nil {
			return _gfgdg
		}
		switch _gfgea := _ggbd.(type) {
		case _a.StartElement:
			switch _gfgea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_dcagcc := NewCT_RangeSet()
				if _bdagc := d.DecodeElement(_dcagcc, &_gfgea); _bdagc != nil {
					return _bdagc
				}
				_baccc.RangeSet = append(_baccc.RangeSet, _dcagcc)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _gfgea.Name)
				if _gggeb := d.Skip(); _gggeb != nil {
					return _gggeb
				}
			}
		case _a.EndElement:
			break _fceee
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_DataBar() *CT_DataBar {
	_becdc := &CT_DataBar{}
	_becdc.Color = NewCT_Color()
	return _becdc
}

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_aadaf *CT_MRUColors) ValidateWithPath(path string) error {
	for _cbcd, _ffebe := range _aadaf.Color {
		if _daedg := _ffebe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _cbcd)); _daedg != nil {
			return _daedg
		}
	}
	return nil
}
func (_dagbce *ST_FilterOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bagadc, _bbbbb := d.Token()
	if _bbbbb != nil {
		return _bbbbb
	}
	if _gcebef, _bgdba := _bagadc.(_a.EndElement); _bgdba && _gcebef.Name == start.Name {
		*_dagbce = 1
		return nil
	}
	if _eegece, _cfcdd := _bagadc.(_a.CharData); !_cfcdd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bagadc)
	} else {
		switch string(_eegece) {
		case "":
			*_dagbce = 0
		case "\u0065\u0071\u0075a\u006c":
			*_dagbce = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_dagbce = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_dagbce = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_dagbce = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_dagbce = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_dagbce = 6
		}
	}
	_bagadc, _bbbbb = d.Token()
	if _bbbbb != nil {
		return _bbbbb
	}
	if _gbfbg, _efdef := _bagadc.(_a.EndElement); _efdef && _gbfbg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bagadc)
}

// Validate validates the CT_PivotField and its children
func (_eecfbf *CT_PivotField) Validate() error {
	return _eecfbf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_ceeba *CT_DataBar) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ceeba.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _fd.Sprintf("\u0025\u0076", *_ceeba.MinLengthAttr)})
	}
	if _ceeba.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _fd.Sprintf("\u0025\u0076", *_ceeba.MaxLengthAttr)})
	}
	if _ceeba.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ceeba.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_dcfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dddec := range _ceeba.Cfvo {
		e.EncodeElement(_dddec, _dcfa)
	}
	_efdfe := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
	e.EncodeElement(_ceeba.Color, _efdfe)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetDimension and its children
func (_agbgb *CT_SheetDimension) Validate() error {
	return _agbgb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_MeasureDimensionMap and its children
func (_gbdff *CT_MeasureDimensionMap) Validate() error {
	return _gbdff.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}
func (_bbdgb *ExternalLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbdgb.CT_ExternalLink = *NewCT_ExternalLink()
_gecfa:
	for {
		_gbdcbd, _gebdda := d.Token()
		if _gebdda != nil {
			return _gebdda
		}
		switch _ecafgd := _gbdcbd.(type) {
		case _a.StartElement:
			switch _ecafgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_bbdgb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _cdfcaa := d.DecodeElement(&_bbdgb.ExternalLinkChoice.ExternalBook, &_ecafgd); _cdfcaa != nil {
					return _cdfcaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_bbdgb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _agbff := d.DecodeElement(&_bbdgb.ExternalLinkChoice.DdeLink, &_ecafgd); _agbff != nil {
					return _agbff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_bbdgb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _cfcedb := d.DecodeElement(&_bbdgb.ExternalLinkChoice.OleLink, &_ecafgd); _cfcedb != nil {
					return _cfcedb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbdgb.ExtLst = NewCT_ExtensionList()
				if _ddcbd := d.DecodeElement(_bbdgb.ExtLst, &_ecafgd); _ddcbd != nil {
					return _ddcbd
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _ecafgd.Name)
				if _bgcgcf := d.Skip(); _bgcgcf != nil {
					return _bgcgcf
				}
			}
		case _a.EndElement:
			break _gecfa
		case _a.CharData:
		}
	}
	return nil
}
func (_dbcdf *CT_RevisionAutoFormatting) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggadg := range start.Attr {
		if _ggadg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fcgcbf, _aeeddf := _dd.ParseUint(_ggadg.Value, 10, 32)
			if _aeeddf != nil {
				return _aeeddf
			}
			_dbcdf.SheetIdAttr = uint32(_fcgcbf)
			continue
		}
		if _ggadg.Name.Local == "\u0072\u0065\u0066" {
			_dbfbf := _ggadg.Value
			_dbcdf.RefAttr = _dbfbf
			continue
		}
		if _ggadg.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fgbfa, _dgada := _dd.ParseUint(_ggadg.Value, 10, 32)
			if _dgada != nil {
				return _dgada
			}
			_bffbb := uint32(_fgbfa)
			_dbcdf.AutoFormatIdAttr = &_bffbb
			continue
		}
		if _ggadg.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ddbadc, _gggfc := _dd.ParseBool(_ggadg.Value)
			if _gggfc != nil {
				return _gggfc
			}
			_dbcdf.ApplyNumberFormatsAttr = &_ddbadc
			continue
		}
		if _ggadg.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ceeace, _cbebfe := _dd.ParseBool(_ggadg.Value)
			if _cbebfe != nil {
				return _cbebfe
			}
			_dbcdf.ApplyBorderFormatsAttr = &_ceeace
			continue
		}
		if _ggadg.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdadg, _efcbgc := _dd.ParseBool(_ggadg.Value)
			if _efcbgc != nil {
				return _efcbgc
			}
			_dbcdf.ApplyFontFormatsAttr = &_gdadg
			continue
		}
		if _ggadg.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gebfed, _acef := _dd.ParseBool(_ggadg.Value)
			if _acef != nil {
				return _acef
			}
			_dbcdf.ApplyPatternFormatsAttr = &_gebfed
			continue
		}
		if _ggadg.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gfeac, _cggeb := _dd.ParseBool(_ggadg.Value)
			if _cggeb != nil {
				return _cggeb
			}
			_dbcdf.ApplyAlignmentFormatsAttr = &_gfeac
			continue
		}
		if _ggadg.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebbdc, _abbfb := _dd.ParseBool(_ggadg.Value)
			if _abbfb != nil {
				return _abbfb
			}
			_dbcdf.ApplyWidthHeightFormatsAttr = &_ebbdc
			continue
		}
	}
	for {
		_dgbcb, _cbccd := d.Token()
		if _cbccd != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _cbccd)
		}
		if _abgda, _agcbb := _dgbcb.(_a.EndElement); _agcbb && _abgda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_NumFmts and its children
func (_ebdg *CT_NumFmts) Validate() error {
	return _ebdg.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}
func (_eddgf *CT_Dimensions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eddgf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eddgf.CountAttr)})
	}
	e.EncodeToken(start)
	if _eddgf.Dimension != nil {
		_aeedc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _efaf := range _eddgf.Dimension {
			e.EncodeElement(_efaf, _aeedc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_beagfa *ST_TargetScreenSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecffagg, _baedee := d.Token()
	if _baedee != nil {
		return _baedee
	}
	if _ggeeec, _gdccda := _ecffagg.(_a.EndElement); _gdccda && _ggeeec.Name == start.Name {
		*_beagfa = 1
		return nil
	}
	if _bdgef, _bebaad := _ecffagg.(_a.CharData); !_bebaad {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecffagg)
	} else {
		switch string(_bdgef) {
		case "":
			*_beagfa = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_beagfa = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_beagfa = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_beagfa = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_beagfa = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_beagfa = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_beagfa = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_beagfa = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_beagfa = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_beagfa = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_beagfa = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_beagfa = 11
		}
	}
	_ecffagg, _baedee = d.Token()
	if _baedee != nil {
		return _baedee
	}
	if _cfceda, _gddgca := _ecffagg.(_a.EndElement); _gddgca && _cfceda.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecffagg)
}

type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}
type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}

func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_cbgfg := &CT_RevisionHeaders{}
	_cbgfg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cbgfg
}
func NewCT_Set() *CT_Set { _cagda := &CT_Set{}; return _cagda }

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

func (_aggbg *CT_ExternalDefinedNames) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ccgg:
	for {
		_fgadb, _efed := d.Token()
		if _efed != nil {
			return _efed
		}
		switch _babab := _fgadb.(type) {
		case _a.StartElement:
			switch _babab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_dfaga := NewCT_ExternalDefinedName()
				if _gegcf := d.DecodeElement(_dfaga, &_babab); _gegcf != nil {
					return _gegcf
				}
				_aggbg.DefinedName = append(_aggbg.DefinedName, _dfaga)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _babab.Name)
				if _cbgeg := d.Skip(); _cbgeg != nil {
					return _cbgeg
				}
			}
		case _a.EndElement:
			break _ccgg
		case _a.CharData:
		}
	}
	return nil
}
func (_abadc *CT_Controls) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dfgf:
	for {
		_fdefc, _gccfg := d.Token()
		if _gccfg != nil {
			return _gccfg
		}
		switch _cebg := _fdefc.(type) {
		case _a.StartElement:
			switch _cebg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_edag := NewCT_Control()
				if _bgfa := d.DecodeElement(_edag, &_cebg); _bgfa != nil {
					return _bgfa
				}
				_abadc.Control = append(_abadc.Control, _edag)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _cebg.Name)
				if _eefe := d.Skip(); _eefe != nil {
					return _eefe
				}
			}
		case _a.EndElement:
			break _dfgf
		case _a.CharData:
		}
	}
	return nil
}
func (_cdebf *ST_CfvoType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbaef, _edgaa := d.Token()
	if _edgaa != nil {
		return _edgaa
	}
	if _cagae, _dfcefa := _fbaef.(_a.EndElement); _dfcefa && _cagae.Name == start.Name {
		*_cdebf = 1
		return nil
	}
	if _cabeg, _bfcaaa := _fbaef.(_a.CharData); !_bfcaaa {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbaef)
	} else {
		switch string(_cabeg) {
		case "":
			*_cdebf = 0
		case "\u006e\u0075\u006d":
			*_cdebf = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_cdebf = 2
		case "\u006d\u0061\u0078":
			*_cdebf = 3
		case "\u006d\u0069\u006e":
			*_cdebf = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_cdebf = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_cdebf = 6
		}
	}
	_fbaef, _edgaa = d.Token()
	if _edgaa != nil {
		return _edgaa
	}
	if _ccbgg, _edbca := _fbaef.(_a.EndElement); _edbca && _ccbgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbaef)
}

type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _g.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}

// Validate validates the CT_pivotTableDefinition and its children
func (_bdefg *CT_pivotTableDefinition) Validate() error {
	return _bdefg.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_effcf *CT_FieldGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dddae := range start.Attr {
		if _dddae.Name.Local == "\u0070\u0061\u0072" {
			_agcc, _fdfeee := _dd.ParseUint(_dddae.Value, 10, 32)
			if _fdfeee != nil {
				return _fdfeee
			}
			_cadff := uint32(_agcc)
			_effcf.ParAttr = &_cadff
			continue
		}
		if _dddae.Name.Local == "\u0062\u0061\u0073\u0065" {
			_fbad, _gcag := _dd.ParseUint(_dddae.Value, 10, 32)
			if _gcag != nil {
				return _gcag
			}
			_aggaa := uint32(_fbad)
			_effcf.BaseAttr = &_aggaa
			continue
		}
	}
_cgaea:
	for {
		_ecdd, _eafed := d.Token()
		if _eafed != nil {
			return _eafed
		}
		switch _feee := _ecdd.(type) {
		case _a.StartElement:
			switch _feee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_effcf.RangePr = NewCT_RangePr()
				if _ddead := d.DecodeElement(_effcf.RangePr, &_feee); _ddead != nil {
					return _ddead
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_effcf.DiscretePr = NewCT_DiscretePr()
				if _aafaag := d.DecodeElement(_effcf.DiscretePr, &_feee); _aafaag != nil {
					return _aafaag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_effcf.GroupItems = NewCT_GroupItems()
				if _cffcf := d.DecodeElement(_effcf.GroupItems, &_feee); _cffcf != nil {
					return _cffcf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _feee.Name)
				if _bgcge := d.Skip(); _bgcge != nil {
					return _bgcge
				}
			}
		case _a.EndElement:
			break _cgaea
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ServerFormat and its children
func (_eddagd *CT_ServerFormat) Validate() error {
	return _eddagd.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}
func NewCT_Pages() *CT_Pages                    { _agfd := &CT_Pages{}; return _agfd }
func (_abafe ST_FieldSortType) Validate() error { return _abafe.ValidateWithPath("") }

// Validate validates the CT_CsPageSetup and its children
func (_ffced *CT_CsPageSetup) Validate() error {
	return _ffced.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

func (_edgca *CT_IndexedColors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bdfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _fedfg := range _edgca.RgbColor {
		e.EncodeElement(_fedfg, _bdfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_gfcba *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_decfa *Table) ValidateWithPath(path string) error {
	if _dcceb := _decfa.CT_Table.ValidateWithPath(path); _dcceb != nil {
		return _dcceb
	}
	return nil
}
func (_gdae *CT_GradientFill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eaaec := range start.Attr {
		if _eaaec.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gdae.TypeAttr.UnmarshalXMLAttr(_eaaec)
			continue
		}
		if _eaaec.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_eaacd, _dcdfbg := _dd.ParseFloat(_eaaec.Value, 64)
			if _dcdfbg != nil {
				return _dcdfbg
			}
			_gdae.DegreeAttr = &_eaacd
			continue
		}
		if _eaaec.Name.Local == "\u006c\u0065\u0066\u0074" {
			_cdbggf, _dddbg := _dd.ParseFloat(_eaaec.Value, 64)
			if _dddbg != nil {
				return _dddbg
			}
			_gdae.LeftAttr = &_cdbggf
			continue
		}
		if _eaaec.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_effdc, _gdbgc := _dd.ParseFloat(_eaaec.Value, 64)
			if _gdbgc != nil {
				return _gdbgc
			}
			_gdae.RightAttr = &_effdc
			continue
		}
		if _eaaec.Name.Local == "\u0074\u006f\u0070" {
			_dcdfg, _gdcgg := _dd.ParseFloat(_eaaec.Value, 64)
			if _gdcgg != nil {
				return _gdcgg
			}
			_gdae.TopAttr = &_dcdfg
			continue
		}
		if _eaaec.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_cddfc, _aegda := _dd.ParseFloat(_eaaec.Value, 64)
			if _aegda != nil {
				return _aegda
			}
			_gdae.BottomAttr = &_cddfc
			continue
		}
	}
_agceg:
	for {
		_dfagc, _fbbc := d.Token()
		if _fbbc != nil {
			return _fbbc
		}
		switch _cdbeff := _dfagc.(type) {
		case _a.StartElement:
			switch _cdbeff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_egcggb := NewCT_GradientStop()
				if _eeadf := d.DecodeElement(_egcggb, &_cdbeff); _eeadf != nil {
					return _eeadf
				}
				_gdae.Stop = append(_gdae.Stop, _egcggb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _cdbeff.Name)
				if _gefgf := d.Skip(); _gefgf != nil {
					return _gefgf
				}
			}
		case _a.EndElement:
			break _agceg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_cgdgc *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ExternalCell and its children
func (_edecdd *CT_ExternalCell) Validate() error {
	return _edecdd.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}
func NewCT_UnderlineProperty() *CT_UnderlineProperty {
	_gadccd := &CT_UnderlineProperty{}
	return _gadccd
}
func (_fbefd *CT_PivotHierarchy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcgcb := range start.Attr {
		if _fcgcb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_acdaa, _bbgdbg := _dd.ParseBool(_fcgcb.Value)
			if _bbgdbg != nil {
				return _bbgdbg
			}
			_fbefd.OutlineAttr = &_acdaa
			continue
		}
		if _fcgcb.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_bbefca, _faeeb := _dd.ParseBool(_fcgcb.Value)
			if _faeeb != nil {
				return _faeeb
			}
			_fbefd.MultipleItemSelectionAllowedAttr = &_bbefca
			continue
		}
		if _fcgcb.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_fcdbd, _affdg := _dd.ParseBool(_fcgcb.Value)
			if _affdg != nil {
				return _affdg
			}
			_fbefd.SubtotalTopAttr = &_fcdbd
			continue
		}
		if _fcgcb.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_afcbgc, _accdb := _dd.ParseBool(_fcgcb.Value)
			if _accdb != nil {
				return _accdb
			}
			_fbefd.ShowInFieldListAttr = &_afcbgc
			continue
		}
		if _fcgcb.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_fffca, _adeb := _dd.ParseBool(_fcgcb.Value)
			if _adeb != nil {
				return _adeb
			}
			_fbefd.DragToRowAttr = &_fffca
			continue
		}
		if _fcgcb.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_gebce, _ccdeb := _dd.ParseBool(_fcgcb.Value)
			if _ccdeb != nil {
				return _ccdeb
			}
			_fbefd.DragToColAttr = &_gebce
			continue
		}
		if _fcgcb.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_ceacd, _gbgged := _dd.ParseBool(_fcgcb.Value)
			if _gbgged != nil {
				return _gbgged
			}
			_fbefd.DragToPageAttr = &_ceacd
			continue
		}
		if _fcgcb.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_eegedf, _efeccc := _dd.ParseBool(_fcgcb.Value)
			if _efeccc != nil {
				return _efeccc
			}
			_fbefd.DragToDataAttr = &_eegedf
			continue
		}
		if _fcgcb.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_eddde, _cccag := _dd.ParseBool(_fcgcb.Value)
			if _cccag != nil {
				return _cccag
			}
			_fbefd.DragOffAttr = &_eddde
			continue
		}
		if _fcgcb.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dabcb, _dbbcd := _dd.ParseBool(_fcgcb.Value)
			if _dbbcd != nil {
				return _dbbcd
			}
			_fbefd.IncludeNewItemsInFilterAttr = &_dabcb
			continue
		}
		if _fcgcb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fbgdg := _fcgcb.Value
			_fbefd.CaptionAttr = &_fbgdg
			continue
		}
	}
_acbddd:
	for {
		_fgaae, _cgffg := d.Token()
		if _cgffg != nil {
			return _cgffg
		}
		switch _ddfda := _fgaae.(type) {
		case _a.StartElement:
			switch _ddfda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_fbefd.Mps = NewCT_MemberProperties()
				if _baagb := d.DecodeElement(_fbefd.Mps, &_ddfda); _baagb != nil {
					return _baagb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_afeaf := NewCT_Members()
				if _gcdbb := d.DecodeElement(_afeaf, &_ddfda); _gcdbb != nil {
					return _gcdbb
				}
				_fbefd.Members = append(_fbefd.Members, _afeaf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbefd.ExtLst = NewCT_ExtensionList()
				if _debgce := d.DecodeElement(_fbefd.ExtLst, &_ddfda); _debgce != nil {
					return _debgce
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _ddfda.Name)
				if _cfead := d.Skip(); _cfead != nil {
					return _cfead
				}
			}
		case _a.EndElement:
			break _acbddd
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_fefbeb *Workbook) ValidateWithPath(path string) error {
	if _aeagdc := _fefbeb.CT_Workbook.ValidateWithPath(path); _aeagdc != nil {
		return _aeagdc
	}
	return nil
}

// Validate validates the CT_ControlPr and its children
func (_dcbc *CT_ControlPr) Validate() error {
	return _dcbc.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}
func NewCT_PivotField() *CT_PivotField          { _geace := &CT_PivotField{}; return _geace }
func (_bddfe ST_PivotAreaType) Validate() error { return _bddfe.ValidateWithPath("") }

type Connections struct{ CT_Connections }
type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

func NewCT_SheetIdMap() *CT_SheetIdMap { _efaefd := &CT_SheetIdMap{}; return _efaefd }

type ST_Scope byte

func (_fdddg ST_DateTimeGrouping) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_egcbc := _a.Attr{}
	_egcbc.Name = name
	switch _fdddg {
	case ST_DateTimeGroupingUnset:
		_egcbc.Value = ""
	case ST_DateTimeGroupingYear:
		_egcbc.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_egcbc.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_egcbc.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_egcbc.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_egcbc.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_egcbc.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _egcbc, nil
}
func NewCT_VolType() *CT_VolType {
	_agdce := &CT_VolType{}
	_agdce.TypeAttr = ST_VolDepType(1)
	return _agdce
}

// Validate validates the CT_Row and its children
func (_dafde *CT_Row) Validate() error {
	return _dafde.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}
func (_cfcaf *CT_SmartTags) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ggfed:
	for {
		_acfaf, _dddfe := d.Token()
		if _dddfe != nil {
			return _dddfe
		}
		switch _baedbf := _acfaf.(type) {
		case _a.StartElement:
			switch _baedbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_gdab := NewCT_CellSmartTags()
				if _ebaeb := d.DecodeElement(_gdab, &_baedbf); _ebaeb != nil {
					return _ebaeb
				}
				_cfcaf.CellSmartTags = append(_cfcaf.CellSmartTags, _gdab)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _baedbf.Name)
				if _ccbbg := d.Skip(); _ccbbg != nil {
					return _ccbbg
				}
			}
		case _a.EndElement:
			break _ggfed
		case _a.CharData:
		}
	}
	return nil
}
func (_aedef *CT_Tuples) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bffdgc := range start.Attr {
		if _bffdgc.Name.Local == "\u0063" {
			_deacb, _edaca := _dd.ParseUint(_bffdgc.Value, 10, 32)
			if _edaca != nil {
				return _edaca
			}
			_eafeg := uint32(_deacb)
			_aedef.CAttr = &_eafeg
			continue
		}
	}
_ececc:
	for {
		_bbdbdg, _ffadf := d.Token()
		if _ffadf != nil {
			return _ffadf
		}
		switch _gebaf := _bbdbdg.(type) {
		case _a.StartElement:
			switch _gebaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_gcffb := NewCT_Tuple()
				if _eafdd := d.DecodeElement(_gcffb, &_gebaf); _eafdd != nil {
					return _eafdd
				}
				_aedef.Tpl = append(_aedef.Tpl, _gcffb)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _gebaf.Name)
				if _gbgdd := d.Skip(); _gbgdd != nil {
					return _gbgdd
				}
			}
		case _a.EndElement:
			break _ececc
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)

// Validate validates the CT_MapInfo and its children
func (_dabfe *CT_MapInfo) Validate() error {
	return _dabfe.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}

// Validate validates the CT_Color and its children
func (_edad *CT_Color) Validate() error {
	return _edad.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}
func (_aagdf *CT_FilterColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbgf := range start.Attr {
		if _cbgf.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_acdbf, _eefg := _dd.ParseUint(_cbgf.Value, 10, 32)
			if _eefg != nil {
				return _eefg
			}
			_aagdf.ColIdAttr = uint32(_acdbf)
			continue
		}
		if _cbgf.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_fbaa, _gbdba := _dd.ParseBool(_cbgf.Value)
			if _gbdba != nil {
				return _gbdba
			}
			_aagdf.HiddenButtonAttr = &_fbaa
			continue
		}
		if _cbgf.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_afggcb, _gfbcb := _dd.ParseBool(_cbgf.Value)
			if _gfbcb != nil {
				return _gfbcb
			}
			_aagdf.ShowButtonAttr = &_afggcb
			continue
		}
	}
_ddge:
	for {
		_agdf, _afaed := d.Token()
		if _afaed != nil {
			return _afaed
		}
		switch _eacgg := _agdf.(type) {
		case _a.StartElement:
			switch _eacgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _edge := d.DecodeElement(&_aagdf.FilterColumnChoice.Filters, &_eacgg); _edge != nil {
					return _edge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _cbaaa := d.DecodeElement(&_aagdf.FilterColumnChoice.Top10, &_eacgg); _cbaaa != nil {
					return _cbaaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _afeef := d.DecodeElement(&_aagdf.FilterColumnChoice.CustomFilters, &_eacgg); _afeef != nil {
					return _afeef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _bacca := d.DecodeElement(&_aagdf.FilterColumnChoice.DynamicFilter, &_eacgg); _bacca != nil {
					return _bacca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _gcdeg := d.DecodeElement(&_aagdf.FilterColumnChoice.ColorFilter, &_eacgg); _gcdeg != nil {
					return _gcdeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _gedab := d.DecodeElement(&_aagdf.FilterColumnChoice.IconFilter, &_eacgg); _gedab != nil {
					return _gedab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aagdf.FilterColumnChoice = NewCT_FilterColumnChoice()
				if _bfeac := d.DecodeElement(&_aagdf.FilterColumnChoice.ExtLst, &_eacgg); _bfeac != nil {
					return _bfeac
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _eacgg.Name)
				if _bedba := d.Skip(); _bedba != nil {
					return _bedba
				}
			}
		case _a.EndElement:
			break _ddge
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_ExternalBook() *CT_ExternalBook { _fcbce := &CT_ExternalBook{}; return _fcbce }

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_bagaed *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _ggbcg, _fedbg := range _bagaed.PageItem {
		if _afadcb := _fedbg.ValidateWithPath(_fd.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _ggbcg)); _afadcb != nil {
			return _afadcb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_dcdc *CT_Color) ValidateWithPath(path string) error { return nil }
func (_aeeebg ST_PhoneticAlignment) String() string {
	switch _aeeebg {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_cebaed ST_PageOrder) Validate() error { return _cebaed.ValidateWithPath("") }

type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_bebgc *CT_DiscretePr) ValidateWithPath(path string) error {
	for _aabaff, _dgbge := range _bebgc.X {
		if _cbggf := _dgbge.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _aabaff)); _cbggf != nil {
			return _cbggf
		}
	}
	return nil
}

// Validate validates the CT_CellStyle and its children
func (_fbded *CT_CellStyle) Validate() error {
	return _fbded.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_Index() *CT_Index { _ceadd := &CT_Index{}; return _ceadd }
func (_ddccdb *ST_PhoneticAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fgeffd, _efaeda := d.Token()
	if _efaeda != nil {
		return _efaeda
	}
	if _cdaaee, _gcdgaf := _fgeffd.(_a.EndElement); _gcdgaf && _cdaaee.Name == start.Name {
		*_ddccdb = 1
		return nil
	}
	if _debafe, _acbfab := _fgeffd.(_a.CharData); !_acbfab {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgeffd)
	} else {
		switch string(_debafe) {
		case "":
			*_ddccdb = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_ddccdb = 1
		case "\u006c\u0065\u0066\u0074":
			*_ddccdb = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ddccdb = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_ddccdb = 4
		}
	}
	_fgeffd, _efaeda = d.Token()
	if _efaeda != nil {
		return _efaeda
	}
	if _bgaadd, _aecgeb := _fgeffd.(_a.EndElement); _aecgeb && _bgaadd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgeffd)
}

// Validate validates the CT_OleObjects and its children
func (_bbfba *CT_OleObjects) Validate() error {
	return _bbfba.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}
func (_ccbcd *CT_Sets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccbcd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ccbcd.CountAttr)})
	}
	e.EncodeToken(start)
	_fabaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0073\u0065\u0074"}}
	for _, _fcbfec := range _ccbcd.Set {
		e.EncodeElement(_fcbfec, _fabaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_bdcdb *CT_Table) ValidateWithPath(path string) error {
	if _deefgf := _bdcdb.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _deefgf != nil {
		return _deefgf
	}
	if _bdcdb.AutoFilter != nil {
		if _dgbcd := _bdcdb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dgbcd != nil {
			return _dgbcd
		}
	}
	if _bdcdb.SortState != nil {
		if _feadg := _bdcdb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _feadg != nil {
			return _feadg
		}
	}
	if _eaadg := _bdcdb.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _eaadg != nil {
		return _eaadg
	}
	if _bdcdb.TableStyleInfo != nil {
		if _adcacb := _bdcdb.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _adcacb != nil {
			return _adcacb
		}
	}
	if _bdcdb.ExtLst != nil {
		if _aeegbg := _bdcdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeegbg != nil {
			return _aeegbg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_cffgg *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_cffgg.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _cffgg.GuidAttr)
	}
	if _cffgg.ActionAttr == ST_RevisionActionUnset {
		return _fd.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdfbd := _cffgg.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fdfbd != nil {
		return _fdfbd
	}
	return nil
}
func (_cdcggg ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _cdcggg {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdcggg))
	}
	return nil
}
func (_dfdg *CT_CalcCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _febf := range start.Attr {
		if _febf.Name.Local == "\u0072" {
			_eebc := _febf.Value
			_dfdg.RAttr = &_eebc
			continue
		}
		if _febf.Name.Local == "\u0072\u0065\u0066" {
			_afg := _febf.Value
			_dfdg.RefAttr = &_afg
			continue
		}
		if _febf.Name.Local == "\u0069" {
			_fgba, _bage := _dd.ParseInt(_febf.Value, 10, 32)
			if _bage != nil {
				return _bage
			}
			_bbagd := int32(_fgba)
			_dfdg.IAttr = &_bbagd
			continue
		}
		if _febf.Name.Local == "\u0073" {
			_gfg, _cgg := _dd.ParseBool(_febf.Value)
			if _cgg != nil {
				return _cgg
			}
			_dfdg.SAttr = &_gfg
			continue
		}
		if _febf.Name.Local == "\u006c" {
			_agdb, _dcgf := _dd.ParseBool(_febf.Value)
			if _dcgf != nil {
				return _dcgf
			}
			_dfdg.LAttr = &_agdb
			continue
		}
		if _febf.Name.Local == "\u0074" {
			_bdce, _bgbg := _dd.ParseBool(_febf.Value)
			if _bgbg != nil {
				return _bgbg
			}
			_dfdg.TAttr = &_bdce
			continue
		}
		if _febf.Name.Local == "\u0061" {
			_eec, _egbb := _dd.ParseBool(_febf.Value)
			if _egbb != nil {
				return _egbb
			}
			_dfdg.AAttr = &_eec
			continue
		}
	}
	for {
		_cba, _cfeaa := d.Token()
		if _cfeaa != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _cfeaa)
		}
		if _dbg, _dea := _cba.(_a.EndElement); _dea && _dbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aggcgg ST_ItemType) Validate() error { return _aggcgg.ValidateWithPath("") }

// Validate validates the CT_TextPr and its children
func (_ffeeb *CT_TextPr) Validate() error {
	return _ffeeb.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}
func (_gdbeaf *ST_SortMethod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gdbeaf = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_gdbeaf = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_gdbeaf = 2
	case "\u006e\u006f\u006e\u0065":
		*_gdbeaf = 3
	}
	return nil
}

// Validate validates the CT_SharedUser and its children
func (_ecaafb *CT_SharedUser) Validate() error {
	return _ecaafb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}

func (_bcega *CT_MemberProperties) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfadf := range start.Attr {
		if _bfadf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dedeb, _bgccd := _dd.ParseUint(_bfadf.Value, 10, 32)
			if _bgccd != nil {
				return _bgccd
			}
			_caccf := uint32(_dedeb)
			_bcega.CountAttr = &_caccf
			continue
		}
	}
_cfagg:
	for {
		_gdggf, _fggc := d.Token()
		if _fggc != nil {
			return _fggc
		}
		switch _acgbf := _gdggf.(type) {
		case _a.StartElement:
			switch _acgbf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_faddff := NewCT_MemberProperty()
				if _gffe := d.DecodeElement(_faddff, &_acgbf); _gffe != nil {
					return _gffe
				}
				_bcega.Mp = append(_bcega.Mp, _faddff)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _acgbf.Name)
				if _fdgff := d.Skip(); _fdgff != nil {
					return _fdgff
				}
			}
		case _a.EndElement:
			break _cfagg
		case _a.CharData:
		}
	}
	return nil
}

type ST_DataValidationErrorStyle byte

func (_edecd *CT_DataConsolidate) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edecd.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_abdd, _dedae := _edecd.FunctionAttr.MarshalXMLAttr(_a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _dedae != nil {
			return _dedae
		}
		start.Attr = append(start.Attr, _abdd)
	}
	if _edecd.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edecd.StartLabelsAttr))})
	}
	if _edecd.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edecd.LeftLabelsAttr))})
	}
	if _edecd.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edecd.TopLabelsAttr))})
	}
	if _edecd.LinkAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edecd.LinkAttr))})
	}
	e.EncodeToken(start)
	if _edecd.DataRefs != nil {
		_afcdf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_edecd.DataRefs, _afcdf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ceaeb *CT_VolTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_egdgce:
	for {
		_acabc, _gbffb := d.Token()
		if _gbffb != nil {
			return _gbffb
		}
		switch _fegbgf := _acabc.(type) {
		case _a.StartElement:
			switch _fegbgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_dbecg := NewCT_VolType()
				if _egafec := d.DecodeElement(_dbecg, &_fegbgf); _egafec != nil {
					return _egafec
				}
				_ceaeb.VolType = append(_ceaeb.VolType, _dbecg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceaeb.ExtLst = NewCT_ExtensionList()
				if _gddfaa := d.DecodeElement(_ceaeb.ExtLst, &_fegbgf); _gddfaa != nil {
					return _gddfaa
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _fegbgf.Name)
				if _eadaf := d.Skip(); _eadaf != nil {
					return _eadaf
				}
			}
		case _a.EndElement:
			break _egdgce
		case _a.CharData:
		}
	}
	return nil
}
func (_ggfggc *CT_XmlCellPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ggfggc.IdAttr)})
	if _ggfggc.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ggfggc.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_baebf := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0078\u006d\u006c\u0050r"}}
	e.EncodeElement(_ggfggc.XmlPr, _baebf)
	if _ggfggc.ExtLst != nil {
		_ecege := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggfggc.ExtLst, _ecege)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bdcde *CT_DbPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _bdcde.ConnectionAttr)})
	if _bdcde.CommandAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcde.CommandAttr)})
	}
	if _bdcde.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcde.ServerCommandAttr)})
	}
	if _bdcde.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcde.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ccagf *CT_SharedUser) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ccagf.GuidAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ccagf.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ccagf.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _b.FormatDateTime(_ccagf.DateTimeAttr)})
	e.EncodeToken(start)
	if _ccagf.ExtLst != nil {
		_adbae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccagf.ExtLst, _adbae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_dgbde *CT_VolMain) ValidateWithPath(path string) error {
	for _edbfgb, _cccda := range _dgbde.Tp {
		if _ffddf := _cccda.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _edbfgb)); _ffddf != nil {
			return _ffddf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_aaed *CT_CellProtection) ValidateWithPath(path string) error { return nil }
func (_ebbef *CT_MapInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _baedd := range start.Attr {
		if _baedd.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_aaddg := _baedd.Value
			_ebbef.SelectionNamespacesAttr = _aaddg
			continue
		}
	}
_gbdbf:
	for {
		_abgbc, _acbdg := d.Token()
		if _acbdg != nil {
			return _acbdg
		}
		switch _dafeb := _abgbc.(type) {
		case _a.StartElement:
			switch _dafeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_cdde := NewCT_Schema()
				if _addbb := d.DecodeElement(_cdde, &_dafeb); _addbb != nil {
					return _addbb
				}
				_ebbef.Schema = append(_ebbef.Schema, _cdde)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_agead := NewCT_Map()
				if _gcbec := d.DecodeElement(_agead, &_dafeb); _gcbec != nil {
					return _gcbec
				}
				_ebbef.Map = append(_ebbef.Map, _agead)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _dafeb.Name)
				if _fgca := d.Skip(); _fgca != nil {
					return _fgca
				}
			}
		case _a.EndElement:
			break _gbdbf
		case _a.CharData:
		}
	}
	return nil
}
func (_bgfbbe *CT_Record) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	for _, _bbbc := range _bgfbbe.RecordChoice {
		_bbbc.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbggf ST_Comments) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbgfeb := _a.Attr{}
	_bbgfeb.Name = name
	switch _bbggf {
	case ST_CommentsUnset:
		_bbgfeb.Value = ""
	case ST_CommentsCommNone:
		_bbgfeb.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_bbgfeb.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_bbgfeb.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _bbgfeb, nil
}

// Validate validates the CT_MetadataType and its children
func (_eddba *CT_MetadataType) Validate() error {
	return _eddba.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}
func (_ccded *CT_Worksheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ccded.SheetPr != nil {
		_eecce := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_ccded.SheetPr, _eecce)
	}
	if _ccded.Dimension != nil {
		_cffgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_ccded.Dimension, _cffgc)
	}
	if _ccded.SheetViews != nil {
		_ccdaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_ccded.SheetViews, _ccdaf)
	}
	if _ccded.SheetFormatPr != nil {
		_gefcbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_ccded.SheetFormatPr, _gefcbg)
	}
	if _ccded.Cols != nil {
		_cbead := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0073"}}
		for _, _ecged := range _ccded.Cols {
			e.EncodeElement(_ecged, _cbead)
		}
	}
	_gbece := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_ccded.SheetData, _gbece)
	if _ccded.SheetCalcPr != nil {
		_cbbcga := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0073\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_ccded.SheetCalcPr, _cbbcga)
	}
	if _ccded.SheetProtection != nil {
		_gccbea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ash\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_ccded.SheetProtection, _gccbea)
	}
	if _ccded.ProtectedRanges != nil {
		_bedbga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003apr\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_ccded.ProtectedRanges, _bedbga)
	}
	if _ccded.Scenarios != nil {
		_adgdff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_ccded.Scenarios, _adgdff)
	}
	if _ccded.AutoFilter != nil {
		_aecga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ccded.AutoFilter, _aecga)
	}
	if _ccded.SortState != nil {
		_gcdgde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_ccded.SortState, _gcdgde)
	}
	if _ccded.DataConsolidate != nil {
		_fbbga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ada\u0074\u0061\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_ccded.DataConsolidate, _fbbga)
	}
	if _ccded.CustomSheetViews != nil {
		_ggfggd := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0053h\u0065\u0065\u0074\u0056ie\u0077\u0073"}}
		e.EncodeElement(_ccded.CustomSheetViews, _ggfggd)
	}
	if _ccded.MergeCells != nil {
		_gbfgde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0065\u0072\u0067\u0065C\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_ccded.MergeCells, _gbfgde)
	}
	if _ccded.PhoneticPr != nil {
		_dfegd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0068\u006f\u006e\u0065t\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_ccded.PhoneticPr, _dfegd)
	}
	if _ccded.ConditionalFormatting != nil {
		_degbb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006fn\u0064\u0069\u0074\u0069\u006fn\u0061l\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg"}}
		for _, _ddgdag := range _ccded.ConditionalFormatting {
			e.EncodeElement(_ddgdag, _degbb)
		}
	}
	if _ccded.DataValidations != nil {
		_abaaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ada\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ccded.DataValidations, _abaaf)
	}
	if _ccded.Hyperlinks != nil {
		_fdeae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0068\u0079\u0070\u0065\u0072l\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_ccded.Hyperlinks, _fdeae)
	}
	if _ccded.PrintOptions != nil {
		_fbadff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0070\u0072i\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ccded.PrintOptions, _fbadff)
	}
	if _ccded.PageMargins != nil {
		_dbeea := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_ccded.PageMargins, _dbeea)
	}
	if _ccded.PageSetup != nil {
		_bccaba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_ccded.PageSetup, _bccaba)
	}
	if _ccded.HeaderFooter != nil {
		_aebcgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_ccded.HeaderFooter, _aebcgd)
	}
	if _ccded.RowBreaks != nil {
		_acaec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ccded.RowBreaks, _acaec)
	}
	if _ccded.ColBreaks != nil {
		_bbgdbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_ccded.ColBreaks, _bbgdbc)
	}
	if _ccded.CustomProperties != nil {
		_ddfaa := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073"}}
		e.EncodeElement(_ccded.CustomProperties, _ddfaa)
	}
	if _ccded.CellWatches != nil {
		_ebgagc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_ccded.CellWatches, _ebgagc)
	}
	if _ccded.IgnoredErrors != nil {
		_dgaeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_ccded.IgnoredErrors, _dgaeb)
	}
	if _ccded.SmartTags != nil {
		_fcfbbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_ccded.SmartTags, _fcfbbb)
	}
	if _ccded.Drawing != nil {
		_gfeddd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ccded.Drawing, _gfeddd)
	}
	if _ccded.LegacyDrawing != nil {
		_beadf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_ccded.LegacyDrawing, _beadf)
	}
	if _ccded.LegacyDrawingHF != nil {
		_ecfcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ale\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ccded.LegacyDrawingHF, _ecfcf)
	}
	if _ccded.DrawingHF != nil {
		_aabceg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_ccded.DrawingHF, _aabceg)
	}
	if _ccded.Picture != nil {
		_addag := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_ccded.Picture, _addag)
	}
	if _ccded.OleObjects != nil {
		_gdffc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0065\u004f\u0062j\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_ccded.OleObjects, _gdffc)
	}
	if _ccded.Controls != nil {
		_edbeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_ccded.Controls, _edbeb)
	}
	if _ccded.WebPublishItems != nil {
		_fgfge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003awe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ccded.WebPublishItems, _fgfge)
	}
	if _ccded.TableParts != nil {
		_dggfc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0061\u0062\u006c\u0065P\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_ccded.TableParts, _dggfc)
	}
	if _ccded.ExtLst != nil {
		_cbbgfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccded.ExtLst, _cbbgfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}

func (_fbaga *CT_Sheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agagd := range start.Attr {
		if _agagd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agagd.Name.Local == "\u0069\u0064" || _agagd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agagd.Name.Local == "\u0069\u0064" {
			_bdegce := _agagd.Value
			_fbaga.IdAttr = _bdegce
			continue
		}
		if _agagd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_faaec := _agagd.Value
			_fbaga.NameAttr = _faaec
			continue
		}
		if _agagd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_aegafg, _agbdg := _dd.ParseUint(_agagd.Value, 10, 32)
			if _agbdg != nil {
				return _agbdg
			}
			_fbaga.SheetIdAttr = uint32(_aegafg)
			continue
		}
		if _agagd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_fbaga.StateAttr.UnmarshalXMLAttr(_agagd)
			continue
		}
	}
	for {
		_gbaee, _fcadc := d.Token()
		if _fcadc != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _fcadc)
		}
		if _cegfc, _edegae := _gbaee.(_a.EndElement); _edegae && _cegfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_febgc *CT_FieldsUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgea := range start.Attr {
		if _dgea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcdcg, _gbfa := _dd.ParseUint(_dgea.Value, 10, 32)
			if _gbfa != nil {
				return _gbfa
			}
			_cdab := uint32(_bcdcg)
			_febgc.CountAttr = &_cdab
			continue
		}
	}
_bbfef:
	for {
		_beeag, _fcfb := d.Token()
		if _fcfb != nil {
			return _fcfb
		}
		switch _accff := _beeag.(type) {
		case _a.StartElement:
			switch _accff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_fdcdb := NewCT_FieldUsage()
				if _baab := d.DecodeElement(_fdcdb, &_accff); _baab != nil {
					return _baab
				}
				_febgc.FieldUsage = append(_febgc.FieldUsage, _fdcdb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _accff.Name)
				if _ceedf := d.Skip(); _ceedf != nil {
					return _ceedf
				}
			}
		case _a.EndElement:
			break _bbfef
		case _a.CharData:
		}
	}
	return nil
}

type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}
type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}

func (_eacgf ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _eacgf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacgf))
	}
	return nil
}

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func NewCT_SheetId() *CT_SheetId { _fcbbb := &CT_SheetId{}; return _fcbbb }
func (_deeb *CT_CsPageSetup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _deeb.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.PaperSizeAttr)})
	}
	if _deeb.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.PaperHeightAttr)})
	}
	if _deeb.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.PaperWidthAttr)})
	}
	if _deeb.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.FirstPageNumberAttr)})
	}
	if _deeb.OrientationAttr != ST_OrientationUnset {
		_gdbfg, _fgcfa := _deeb.OrientationAttr.MarshalXMLAttr(_a.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _fgcfa != nil {
			return _fgcfa
		}
		start.Attr = append(start.Attr, _gdbfg)
	}
	if _deeb.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_deeb.UsePrinterDefaultsAttr))})
	}
	if _deeb.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_deeb.BlackAndWhiteAttr))})
	}
	if _deeb.DraftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_deeb.DraftAttr))})
	}
	if _deeb.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_deeb.UseFirstPageNumberAttr))})
	}
	if _deeb.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.HorizontalDpiAttr)})
	}
	if _deeb.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.VerticalDpiAttr)})
	}
	if _deeb.CopiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.CopiesAttr)})
	}
	if _deeb.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_deeb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_feafeb ST_Sqref) String() string { return _d.Join(_feafeb, "\u0020") }

// Validate validates the CT_WebPublishObject and its children
func (_gaacc *CT_WebPublishObject) Validate() error {
	return _gaacc.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}
func NewCT_CommentList() *CT_CommentList {
	_cedg := &CT_CommentList{}
	return _cedg
}
func (_agfb *CT_FunctionGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfg := range start.Attr {
		if _edfg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eadcbg := _edfg.Value
			_agfb.NameAttr = &_eadcbg
			continue
		}
	}
	for {
		_fdfb, _cgcdd := d.Token()
		if _cgcdd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _cgcdd)
		}
		if _bacgg, _dffc := _fdfb.(_a.EndElement); _dffc && _bacgg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DataBinding and its children
func (_accc *CT_DataBinding) Validate() error {
	return _accc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_bedgd *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }
func (_eaeaa *CT_RElt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _eaeaa.RPr != nil {
		_bbadec := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_eaeaa.RPr, _bbadec)
	}
	_ddabg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074"}}
	_ff.AddPreserveSpaceAttr(&_ddabg, _eaeaa.T)
	e.EncodeElement(_eaeaa.T, _ddabg)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bgccb *CT_TableParts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgccb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgccb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bgccb.TablePart != nil {
		_efgcbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _acabg := range _bgccb.TablePart {
			e.EncodeElement(_acabg, _efgcbe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCalcChain() *CalcChain {
	_eeaff := &CalcChain{}
	_eeaff.CT_CalcChain = *NewCT_CalcChain()
	return _eeaff
}

// Validate validates the CT_Control and its children
func (_gaec *CT_Control) Validate() error {
	return _gaec.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_egcfef ST_ParameterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_egcfef.String(), start)
}
func (_abacf ST_ShowDataAs) String() string {
	switch _abacf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}
func (_fffga *CT_Filters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agace := range start.Attr {
		if _agace.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_fdga, _afgc := _dd.ParseBool(_agace.Value)
			if _afgc != nil {
				return _afgc
			}
			_fffga.BlankAttr = &_fdga
			continue
		}
		if _agace.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_fffga.CalendarTypeAttr.UnmarshalXMLAttr(_agace)
			continue
		}
	}
_gdccg:
	for {
		_decac, _dadad := d.Token()
		if _dadad != nil {
			return _dadad
		}
		switch _aadce := _decac.(type) {
		case _a.StartElement:
			switch _aadce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_deecf := NewCT_Filter()
				if _dbbad := d.DecodeElement(_deecf, &_aadce); _dbbad != nil {
					return _dbbad
				}
				_fffga.Filter = append(_fffga.Filter, _deecf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_bgdgg := NewCT_DateGroupItem()
				if _bfafg := d.DecodeElement(_bgdgg, &_aadce); _bfafg != nil {
					return _bfafg
				}
				_fffga.DateGroupItem = append(_fffga.DateGroupItem, _bgdgg)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _aadce.Name)
				if _efbgf := d.Skip(); _efbgf != nil {
					return _efbgf
				}
			}
		case _a.EndElement:
			break _gdccg
		case _a.CharData:
		}
	}
	return nil
}
func (_gfecbc ST_GrowShrinkType) String() string {
	switch _gfecbc {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}

func NewCT_Chartsheet() *CT_Chartsheet {
	_faaf := &CT_Chartsheet{}
	_faaf.SheetViews = NewCT_ChartsheetViews()
	_faaf.Drawing = NewCT_Drawing()
	return _faaf
}
func (_edbfb ST_DataConsolidateFunction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_edbfb.String(), start)
}

type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

func NewCT_GroupLevels() *CT_GroupLevels { _abdf := &CT_GroupLevels{}; return _abdf }
func (_dgade *CT_RevisionCustomView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgade.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_dgade.ActionAttr = ST_RevisionAction(1)
	for _, _bacda := range start.Attr {
		if _bacda.Name.Local == "\u0067\u0075\u0069\u0064" {
			_fgdga := _bacda.Value
			_dgade.GuidAttr = _fgdga
			continue
		}
		if _bacda.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_dgade.ActionAttr.UnmarshalXMLAttr(_bacda)
			continue
		}
	}
	for {
		_fcfefb, _acaaae := d.Token()
		if _acaaae != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _acaaae)
		}
		if _caac, _gfdcc := _fcfefb.(_a.EndElement); _gfdcc && _caac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eefcde *VolTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eefcde.CT_VolTypes = *NewCT_VolTypes()
_fecgb:
	for {
		_abfag, _ggadge := d.Token()
		if _ggadge != nil {
			return _ggadge
		}
		switch _bgcee := _abfag.(type) {
		case _a.StartElement:
			switch _bgcee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_ddbbf := NewCT_VolType()
				if _affbc := d.DecodeElement(_ddbbf, &_bgcee); _affbc != nil {
					return _affbc
				}
				_eefcde.VolType = append(_eefcde.VolType, _ddbbf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eefcde.ExtLst = NewCT_ExtensionList()
				if _gfebc := d.DecodeElement(_eefcde.ExtLst, &_bgcee); _gfebc != nil {
					return _gfebc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _bgcee.Name)
				if _bfbff := d.Skip(); _bfbff != nil {
					return _bfbff
				}
			}
		case _a.EndElement:
			break _fecgb
		case _a.CharData:
		}
	}
	return nil
}
func (_dgce *CT_GroupLevels) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dgce.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dgce.CountAttr)})
	}
	e.EncodeToken(start)
	_dgbfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0067\u0072\u006f\u0075\u0070L\u0065\u0076\u0065\u006c"}}
	for _, _fbag := range _dgce.GroupLevel {
		e.EncodeElement(_fbag, _dgbfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}

func (_ceecc *ST_Scope) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_abffag, _accfeg := d.Token()
	if _accfeg != nil {
		return _accfeg
	}
	if _eeebg, _edebe := _abffag.(_a.EndElement); _edebe && _eeebg.Name == start.Name {
		*_ceecc = 1
		return nil
	}
	if _dbgcg, _fccbb := _abffag.(_a.CharData); !_fccbb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abffag)
	} else {
		switch string(_dbgcg) {
		case "":
			*_ceecc = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_ceecc = 1
		case "\u0064\u0061\u0074\u0061":
			*_ceecc = 2
		case "\u0066\u0069\u0065l\u0064":
			*_ceecc = 3
		}
	}
	_abffag, _accfeg = d.Token()
	if _accfeg != nil {
		return _accfeg
	}
	if _bdbdgg, _bfeabe := _abffag.(_a.EndElement); _bfeabe && _bdbdgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abffag)
}

type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}

func (_bfdgg *CT_ProtectedRange) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcdgea := range start.Attr {
		if _gcdgea.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_efgda := _gcdgea.Value
			_bfdgg.PasswordAttr = &_efgda
			continue
		}
		if _gcdgea.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_cgbff, _gegcgc := ParseSliceST_Sqref(_gcdgea.Value)
			if _gegcgc != nil {
				return _gegcgc
			}
			_bfdgg.SqrefAttr = _cgbff
			continue
		}
		if _gcdgea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddgfea := _gcdgea.Value
			_bfdgg.NameAttr = _ddgfea
			continue
		}
		if _gcdgea.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_cfafa := _gcdgea.Value
			_bfdgg.SecurityDescriptorAttr = &_cfafa
			continue
		}
		if _gcdgea.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_abfga := _gcdgea.Value
			_bfdgg.AlgorithmNameAttr = &_abfga
			continue
		}
		if _gcdgea.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_afdda := _gcdgea.Value
			_bfdgg.HashValueAttr = &_afdda
			continue
		}
		if _gcdgea.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_fcgfa := _gcdgea.Value
			_bfdgg.SaltValueAttr = &_fcgfa
			continue
		}
		if _gcdgea.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_ceega, _cbfac := _dd.ParseUint(_gcdgea.Value, 10, 32)
			if _cbfac != nil {
				return _cbfac
			}
			_cbcfb := uint32(_ceega)
			_bfdgg.SpinCountAttr = &_cbcfb
			continue
		}
	}
_cdcdda:
	for {
		_dfbdc, _eeaebf := d.Token()
		if _eeaebf != nil {
			return _eeaebf
		}
		switch _cfbb := _dfbdc.(type) {
		case _a.StartElement:
			switch _cfbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _cbbdb string
				if _dfeee := d.DecodeElement(&_cbbdb, &_cfbb); _dfeee != nil {
					return _dfeee
				}
				_bfdgg.SecurityDescriptor = append(_bfdgg.SecurityDescriptor, _cbbdb)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _cfbb.Name)
				if _dgegb := d.Skip(); _dgegb != nil {
					return _dgegb
				}
			}
		case _a.EndElement:
			break _cdcdda
		case _a.CharData:
		}
	}
	return nil
}
func (_ecggd ST_MdxFunctionType) Validate() error { return _ecggd.ValidateWithPath("") }
func NewCT_RevisionMoveChoice() *CT_RevisionMoveChoice {
	_acbfg := &CT_RevisionMoveChoice{}
	return _acbfg
}
func (_aeaccc *ST_DataValidationImeMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgcba, _aedfb := d.Token()
	if _aedfb != nil {
		return _aedfb
	}
	if _cebdg, _egaff := _dgcba.(_a.EndElement); _egaff && _cebdg.Name == start.Name {
		*_aeaccc = 1
		return nil
	}
	if _cdga, _afcedc := _dgcba.(_a.CharData); !_afcedc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgcba)
	} else {
		switch string(_cdga) {
		case "":
			*_aeaccc = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_aeaccc = 1
		case "\u006f\u0066\u0066":
			*_aeaccc = 2
		case "\u006f\u006e":
			*_aeaccc = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_aeaccc = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_aeaccc = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_aeaccc = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_aeaccc = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_aeaccc = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_aeaccc = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_aeaccc = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_aeaccc = 11
		}
	}
	_dgcba, _aedfb = d.Token()
	if _aedfb != nil {
		return _aedfb
	}
	if _gfcagf, _ebfbg := _dgcba.(_a.EndElement); _ebfbg && _gfcagf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgcba)
}

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_edba *CT_MemberProperty) ValidateWithPath(path string) error { return nil }
func NewCT_Borders() *CT_Borders                                    { _gac := &CT_Borders{}; return _gac }
func (_efbbb *CT_pivotTableDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _efbbb.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _efbbb.CacheIdAttr)})
	if _efbbb.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.DataOnRowsAttr))})
	}
	if _efbbb.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _efbbb.DataCaptionAttr)})
	if _efbbb.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.GrandTotalCaptionAttr)})
	}
	if _efbbb.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.ErrorCaptionAttr)})
	}
	if _efbbb.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowErrorAttr))})
	}
	if _efbbb.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.MissingCaptionAttr)})
	}
	if _efbbb.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowMissingAttr))})
	}
	if _efbbb.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.PageStyleAttr)})
	}
	if _efbbb.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.PivotTableStyleAttr)})
	}
	if _efbbb.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.VacatedStyleAttr)})
	}
	if _efbbb.TagAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0067"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.TagAttr)})
	}
	if _efbbb.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.UpdatedVersionAttr)})
	}
	if _efbbb.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.MinRefreshableVersionAttr)})
	}
	if _efbbb.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.AsteriskTotalsAttr))})
	}
	if _efbbb.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowItemsAttr))})
	}
	if _efbbb.EditDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.EditDataAttr))})
	}
	if _efbbb.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.DisableFieldListAttr))})
	}
	if _efbbb.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowCalcMbrsAttr))})
	}
	if _efbbb.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.VisualTotalsAttr))})
	}
	if _efbbb.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowMultipleLabelAttr))})
	}
	if _efbbb.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowDataDropDownAttr))})
	}
	if _efbbb.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowDrillAttr))})
	}
	if _efbbb.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.PrintDrillAttr))})
	}
	if _efbbb.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowMemberPropertyTipsAttr))})
	}
	if _efbbb.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowDataTipsAttr))})
	}
	if _efbbb.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.EnableWizardAttr))})
	}
	if _efbbb.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.EnableDrillAttr))})
	}
	if _efbbb.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.EnableFieldPropertiesAttr))})
	}
	if _efbbb.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.PreserveFormattingAttr))})
	}
	if _efbbb.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.UseAutoFormattingAttr))})
	}
	if _efbbb.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.PageWrapAttr)})
	}
	if _efbbb.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.PageOverThenDownAttr))})
	}
	if _efbbb.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.SubtotalHiddenItemsAttr))})
	}
	if _efbbb.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.RowGrandTotalsAttr))})
	}
	if _efbbb.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ColGrandTotalsAttr))})
	}
	if _efbbb.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.FieldPrintTitlesAttr))})
	}
	if _efbbb.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ItemPrintTitlesAttr))})
	}
	if _efbbb.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.MergeItemAttr))})
	}
	if _efbbb.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowDropZonesAttr))})
	}
	if _efbbb.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.CreatedVersionAttr)})
	}
	if _efbbb.IndentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.IndentAttr)})
	}
	if _efbbb.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowEmptyRowAttr))})
	}
	if _efbbb.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowEmptyColAttr))})
	}
	if _efbbb.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ShowHeadersAttr))})
	}
	if _efbbb.CompactAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.CompactAttr))})
	}
	if _efbbb.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.OutlineAttr))})
	}
	if _efbbb.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.OutlineDataAttr))})
	}
	if _efbbb.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.CompactDataAttr))})
	}
	if _efbbb.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.PublishedAttr))})
	}
	if _efbbb.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.GridDropZonesAttr))})
	}
	if _efbbb.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ImmersiveAttr))})
	}
	if _efbbb.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.MultipleFieldFiltersAttr))})
	}
	if _efbbb.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.ChartFormatAttr)})
	}
	if _efbbb.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.RowHeaderCaptionAttr)})
	}
	if _efbbb.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.ColHeaderCaptionAttr)})
	}
	if _efbbb.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.FieldListSortAscendingAttr))})
	}
	if _efbbb.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.MdxSubqueriesAttr))})
	}
	if _efbbb.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.CustomListSortAttr))})
	}
	if _efbbb.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efbbb.AutoFormatIdAttr)})
	}
	if _efbbb.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyNumberFormatsAttr))})
	}
	if _efbbb.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyBorderFormatsAttr))})
	}
	if _efbbb.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyFontFormatsAttr))})
	}
	if _efbbb.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyPatternFormatsAttr))})
	}
	if _efbbb.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyAlignmentFormatsAttr))})
	}
	if _efbbb.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbbb.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_gddbdc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_efbbb.Location, _gddbdc)
	if _efbbb.PivotFields != nil {
		_aebec := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_efbbb.PivotFields, _aebec)
	}
	if _efbbb.RowFields != nil {
		_fcega := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_efbbb.RowFields, _fcega)
	}
	if _efbbb.RowItems != nil {
		_gfdegc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_efbbb.RowItems, _gfdegc)
	}
	if _efbbb.ColFields != nil {
		_cgdce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_efbbb.ColFields, _cgdce)
	}
	if _efbbb.ColItems != nil {
		_efgbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_efbbb.ColItems, _efgbc)
	}
	if _efbbb.PageFields != nil {
		_fdgccb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_efbbb.PageFields, _fdgccb)
	}
	if _efbbb.DataFields != nil {
		_fdge := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0061\u0074\u0061\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_efbbb.DataFields, _fdge)
	}
	if _efbbb.Formats != nil {
		_cedgf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_efbbb.Formats, _cedgf)
	}
	if _efbbb.ConditionalFormats != nil {
		_ebdgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003aco\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0073"}}
		e.EncodeElement(_efbbb.ConditionalFormats, _ebdgf)
	}
	if _efbbb.ChartFormats != nil {
		_eagda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0063\u0068a\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_efbbb.ChartFormats, _eagda)
	}
	if _efbbb.PivotHierarchies != nil {
		_fcabf := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069e\u0072\u0061\u0072\u0063hi\u0065\u0073"}}
		e.EncodeElement(_efbbb.PivotHierarchies, _fcabf)
	}
	if _efbbb.PivotTableStyleInfo != nil {
		_dccdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_efbbb.PivotTableStyleInfo, _dccdd)
	}
	if _efbbb.Filters != nil {
		_bcegbd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_efbbb.Filters, _bcegbd)
	}
	if _efbbb.RowHierarchiesUsage != nil {
		_ecgfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:r\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_efbbb.RowHierarchiesUsage, _ecgfe)
	}
	if _efbbb.ColHierarchiesUsage != nil {
		_cgag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:c\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_efbbb.ColHierarchiesUsage, _cgag)
	}
	if _efbbb.ExtLst != nil {
		_ffaaed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efbbb.ExtLst, _ffaaed)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_BooleanProperty() *CT_BooleanProperty { _cbc := &CT_BooleanProperty{}; return _cbc }

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_abbc *CT_CellWatches) ValidateWithPath(path string) error {
	for _ebge, _gggb := range _abbc.CellWatch {
		if _fcde := _gggb.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _ebge)); _fcde != nil {
			return _fcde
		}
	}
	return nil
}
func (_bdaaff *CT_DataFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aagbg := range start.Attr {
		if _aagbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdfd, _efad := _dd.ParseUint(_aagbg.Value, 10, 32)
			if _efad != nil {
				return _efad
			}
			_ebaca := uint32(_fdfd)
			_bdaaff.CountAttr = &_ebaca
			continue
		}
	}
_ebbec:
	for {
		_dfeg, _bafd := d.Token()
		if _bafd != nil {
			return _bafd
		}
		switch _agbbb := _dfeg.(type) {
		case _a.StartElement:
			switch _agbbb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_cdgbd := NewCT_DataField()
				if _gdcc := d.DecodeElement(_cdgbd, &_agbbb); _gdcc != nil {
					return _gdcc
				}
				_bdaaff.DataField = append(_bdaaff.DataField, _cdgbd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _agbbb.Name)
				if _geafab := d.Skip(); _geafab != nil {
					return _geafab
				}
			}
		case _a.EndElement:
			break _ebbec
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PageBreak and its children
func (_fgdaab *CT_PageBreak) Validate() error {
	return _fgdaab.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}

type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    uint32
	UaAttr     *bool
	RaAttr     *bool
}

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_fcdb *CT_DataValidation) ValidateWithPath(path string) error {
	if _deecb := _fcdb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _deecb != nil {
		return _deecb
	}
	if _gdcac := _fcdb.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _gdcac != nil {
		return _gdcac
	}
	if _eged := _fcdb.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _eged != nil {
		return _eged
	}
	if _cgbg := _fcdb.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _cgbg != nil {
		return _cgbg
	}
	return nil
}

// Validate validates the CT_DataRefs and its children
func (_ddfb *CT_DataRefs) Validate() error {
	return _ddfb.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}
func (_abedf ST_UpdateLinks) Validate() error { return _abedf.ValidateWithPath("") }

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_dccba *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _dccba.Oc != nil {
		if _agffeb := _dccba.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _agffeb != nil {
			return _agffeb
		}
	}
	if _gecbg := _dccba.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _gecbg != nil {
		return _gecbg
	}
	if _dccba.Odxf != nil {
		if _efbgd := _dccba.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _efbgd != nil {
			return _efbgd
		}
	}
	if _dccba.Ndxf != nil {
		if _cbaeb := _dccba.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _cbaeb != nil {
			return _cbaeb
		}
	}
	if _dccba.ExtLst != nil {
		if _gceed := _dccba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gceed != nil {
			return _gceed
		}
	}
	return nil
}
func (_gbaae ST_Type) String() string {
	switch _gbaae {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}
func (_bdeec *ST_SortBy) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bdeec = 0
	case "\u0076\u0061\u006cu\u0065":
		*_bdeec = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_bdeec = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_bdeec = 3
	case "\u0069\u0063\u006f\u006e":
		*_bdeec = 4
	}
	return nil
}

// Validate validates the CT_Dialogsheet and its children
func (_gefa *CT_Dialogsheet) Validate() error {
	return _gefa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}
func (_gbefbc *CT_MergeCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _gbefbc.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

func (_dgcd *CT_ColHierarchiesUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _caa := range start.Attr {
		if _caa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbddg, _agcec := _dd.ParseUint(_caa.Value, 10, 32)
			if _agcec != nil {
				return _agcec
			}
			_aeeaa := uint32(_fbddg)
			_dgcd.CountAttr = &_aeeaa
			continue
		}
	}
_gcbc:
	for {
		_cgbfe, _deedf := d.Token()
		if _deedf != nil {
			return _deedf
		}
		switch _dcfe := _cgbfe.(type) {
		case _a.StartElement:
			switch _dcfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_deced := NewCT_HierarchyUsage()
				if _agfff := d.DecodeElement(_deced, &_dcfe); _agfff != nil {
					return _agfff
				}
				_dgcd.ColHierarchyUsage = append(_dgcd.ColHierarchyUsage, _deced)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _dcfe.Name)
				if _ebded := d.Skip(); _ebded != nil {
					return _ebded
				}
			}
		case _a.EndElement:
			break _gcbc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_SheetProtection() *CT_SheetProtection { _dedba := &CT_SheetProtection{}; return _dedba }
func (_faefa ST_FileType) String() string {
	switch _faefa {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}
func (_dbee *CT_Cols) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cfaeg:
	for {
		_gacad, _fefc := d.Token()
		if _fefc != nil {
			return _fefc
		}
		switch _dagd := _gacad.(type) {
		case _a.StartElement:
			switch _dagd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_ggd := NewCT_Col()
				if _bfff := d.DecodeElement(_ggd, &_dagd); _bfff != nil {
					return _bfff
				}
				_dbee.Col = append(_dbee.Col, _ggd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _dagd.Name)
				if _cfbf := d.Skip(); _cfbf != nil {
					return _cfbf
				}
			}
		case _a.EndElement:
			break _cfaeg
		case _a.CharData:
		}
	}
	return nil
}
func (_dbcec *ST_VolDepType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dbcec = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_dbcec = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_dbcec = 2
	}
	return nil
}

type ST_Comments byte

func (_gffab *CT_RevisionsChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gffab.Rrc != nil {
		_adafg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0072\u0063"}}
		for _, _bgceb := range _gffab.Rrc {
			e.EncodeElement(_bgceb, _adafg)
		}
	} else if _gffab.Rm != nil {
		_fgdgee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u006d"}}
		for _, _aagcee := range _gffab.Rm {
			e.EncodeElement(_aagcee, _fgdgee)
		}
	} else if _gffab.Rcv != nil {
		_dedegc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0063\u0076"}}
		for _, _daagc := range _gffab.Rcv {
			e.EncodeElement(_daagc, _dedegc)
		}
	} else if _gffab.Rsnm != nil {
		_dgagd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0073\u006e\u006d"}}
		for _, _fabbf := range _gffab.Rsnm {
			e.EncodeElement(_fabbf, _dgagd)
		}
	} else if _gffab.Ris != nil {
		_ecfeb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0069\u0073"}}
		for _, _ddafe := range _gffab.Ris {
			e.EncodeElement(_ddafe, _ecfeb)
		}
	} else if _gffab.Rcc != nil {
		_dccgcg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0063\u0063"}}
		for _, _gebbd := range _gffab.Rcc {
			e.EncodeElement(_gebbd, _dccgcg)
		}
	} else if _gffab.Rfmt != nil {
		_eeebce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0066\u006d\u0074"}}
		for _, _gcbbfd := range _gffab.Rfmt {
			e.EncodeElement(_gcbbfd, _eeebce)
		}
	} else if _gffab.Raf != nil {
		_abecg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0061\u0066"}}
		for _, _eaec := range _gffab.Raf {
			e.EncodeElement(_eaec, _abecg)
		}
	} else if _gffab.Rdn != nil {
		_gegag := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0064\u006e"}}
		for _, _cbfged := range _gffab.Rdn {
			e.EncodeElement(_cbfged, _gegag)
		}
	} else if _gffab.Rcmt != nil {
		_bdegcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0063\u006d\u0074"}}
		for _, _ffacd := range _gffab.Rcmt {
			e.EncodeElement(_ffacd, _bdegcf)
		}
	} else if _gffab.Rqt != nil {
		_gbcgc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0071\u0074"}}
		for _, _fgddad := range _gffab.Rqt {
			e.EncodeElement(_fgddad, _gbcgc)
		}
	} else if _gffab.Rcft != nil {
		_dcecc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0063\u0066\u0074"}}
		for _, _bcffa := range _gffab.Rcft {
			e.EncodeElement(_bcffa, _dcecc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_gdgagg *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }
func (_eeeed *CT_SheetCalcPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egccd := range start.Attr {
		if _egccd.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_ffadg, _ecedg := _dd.ParseBool(_egccd.Value)
			if _ecedg != nil {
				return _ecedg
			}
			_eeeed.FullCalcOnLoadAttr = &_ffadg
			continue
		}
	}
	for {
		_gadec, _ceacf := d.Token()
		if _ceacf != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _ceacf)
		}
		if _ccfdb, _bcddaf := _gadec.(_a.EndElement); _bcddaf && _ccfdb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_gfafb *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }
func (_dcdeaa ST_SourceType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_deddff := _a.Attr{}
	_deddff.Name = name
	switch _dcdeaa {
	case ST_SourceTypeUnset:
		_deddff.Value = ""
	case ST_SourceTypeWorksheet:
		_deddff.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_deddff.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_deddff.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_deddff.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _deddff, nil
}

type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

func (_gbecb *CT_ExternalLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbecb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
_fcegb:
	for {
		_gcffe, _efgdf := d.Token()
		if _efgdf != nil {
			return _efgdf
		}
		switch _eegec := _gcffe.(type) {
		case _a.StartElement:
			switch _eegec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gbecb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _aedda := d.DecodeElement(&_gbecb.ExternalLinkChoice.ExternalBook, &_eegec); _aedda != nil {
					return _aedda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gbecb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _eedfb := d.DecodeElement(&_gbecb.ExternalLinkChoice.DdeLink, &_eegec); _eedfb != nil {
					return _eedfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gbecb.ExternalLinkChoice = NewCT_ExternalLinkChoice()
				if _eeeba := d.DecodeElement(&_gbecb.ExternalLinkChoice.OleLink, &_eegec); _eeeba != nil {
					return _eeeba
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbecb.ExtLst = NewCT_ExtensionList()
				if _gfdd := d.DecodeElement(_gbecb.ExtLst, &_eegec); _gfdd != nil {
					return _gfdd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _eegec.Name)
				if _affga := d.Skip(); _affga != nil {
					return _affga
				}
			}
		case _a.EndElement:
			break _fcegb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RElt() *CT_RElt { _ebdge := &CT_RElt{}; return _ebdge }

// Validate validates the CT_SheetBackgroundPicture and its children
func (_abfgb *CT_SheetBackgroundPicture) Validate() error {
	return _abfgb.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}

type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _ff.Any
}

// Validate validates the CT_RevisionCustomView and its children
func (_ebefa *CT_RevisionCustomView) Validate() error {
	return _ebefa.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}

type ST_OleUpdate byte

func NewCT_MdxMemeberProp() *CT_MdxMemeberProp {
	_aedf := &CT_MdxMemeberProp{}
	return _aedf
}

// Validate validates the CT_Rst and its children
func (_dgeed *CT_Rst) Validate() error {
	return _dgeed.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}
func (_adfb *CT_CellSmartTags) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fedf := range start.Attr {
		if _fedf.Name.Local == "\u0072" {
			_gbcd := _fedf.Value
			_adfb.RAttr = _gbcd
			continue
		}
	}
_eeab:
	for {
		_edg, _dbgb := d.Token()
		if _dbgb != nil {
			return _dbgb
		}
		switch _ebag := _edg.(type) {
		case _a.StartElement:
			switch _ebag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_agdc := NewCT_CellSmartTag()
				if _afgf := d.DecodeElement(_agdc, &_ebag); _afgf != nil {
					return _afgf
				}
				_adfb.CellSmartTag = append(_adfb.CellSmartTag, _agdc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _ebag.Name)
				if _ecbe := d.Skip(); _ecbe != nil {
					return _ecbe
				}
			}
		case _a.EndElement:
			break _eeab
		case _a.CharData:
		}
	}
	return nil
}
func (_cgedg *CT_Dxfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgedg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cgedg.CountAttr)})
	}
	e.EncodeToken(start)
	if _cgedg.Dxf != nil {
		_dafbe := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0064\u0078\u0066"}}
		for _, _bged := range _cgedg.Dxf {
			e.EncodeElement(_bged, _dafbe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_rowItems and its children
func (_dedbfa *CT_rowItems) Validate() error {
	return _dedbfa.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr     ST_MdxFunctionType
	MdxChoice *CT_MdxChoice
}

// Validate validates the CT_Tables and its children
func (_befdc *CT_Tables) Validate() error {
	return _befdc.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}
func (_baaf ST_Qualifier) ValidateWithPath(path string) error {
	switch _baaf {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baaf))
	}
	return nil
}
func (_adaeg *CT_TableStyles) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adaeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_adaeg.CountAttr)})
	}
	if _adaeg.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_adaeg.DefaultTableStyleAttr)})
	}
	if _adaeg.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_adaeg.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _adaeg.TableStyle != nil {
		_dgcbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}}
		for _, _gfdbf := range _adaeg.TableStyle {
			e.EncodeElement(_gfdbf, _dgcbc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffcdf *CT_PivotAreas) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdacd := range start.Attr {
		if _gdacd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddcfb, _bcbaec := _dd.ParseUint(_gdacd.Value, 10, 32)
			if _bcbaec != nil {
				return _bcbaec
			}
			_degfe := uint32(_ddcfb)
			_ffcdf.CountAttr = &_degfe
			continue
		}
	}
_afbde:
	for {
		_agcadf, _eedg := d.Token()
		if _eedg != nil {
			return _eedg
		}
		switch _afcgg := _agcadf.(type) {
		case _a.StartElement:
			switch _afcgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_ebfdb := NewCT_PivotArea()
				if _baabf := d.DecodeElement(_ebfdb, &_afcgg); _baabf != nil {
					return _baabf
				}
				_ffcdf.PivotArea = append(_ffcdf.PivotArea, _ebfdb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _afcgg.Name)
				if _dbceg := d.Skip(); _dbceg != nil {
					return _dbceg
				}
			}
		case _a.EndElement:
			break _afbde
		case _a.CharData:
		}
	}
	return nil
}
func (_dbgae *CT_Member) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dbgae.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_CellType byte

func (_bgbdd *Dialogsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bgbdd.CT_Dialogsheet = *NewCT_Dialogsheet()
_cbdfb:
	for {
		_edcaae, _caacg := d.Token()
		if _caacg != nil {
			return _caacg
		}
		switch _eedbfa := _edcaae.(type) {
		case _a.StartElement:
			switch _eedbfa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bgbdd.SheetPr = NewCT_SheetPr()
				if _efccb := d.DecodeElement(_bgbdd.SheetPr, &_eedbfa); _efccb != nil {
					return _efccb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bgbdd.SheetViews = NewCT_SheetViews()
				if _cddge := d.DecodeElement(_bgbdd.SheetViews, &_eedbfa); _cddge != nil {
					return _cddge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_bgbdd.SheetFormatPr = NewCT_SheetFormatPr()
				if _gebfad := d.DecodeElement(_bgbdd.SheetFormatPr, &_eedbfa); _gebfad != nil {
					return _gebfad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bgbdd.SheetProtection = NewCT_SheetProtection()
				if _bdaad := d.DecodeElement(_bgbdd.SheetProtection, &_eedbfa); _bdaad != nil {
					return _bdaad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bgbdd.CustomSheetViews = NewCT_CustomSheetViews()
				if _afecga := d.DecodeElement(_bgbdd.CustomSheetViews, &_eedbfa); _afecga != nil {
					return _afecga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_bgbdd.PrintOptions = NewCT_PrintOptions()
				if _caecbd := d.DecodeElement(_bgbdd.PrintOptions, &_eedbfa); _caecbd != nil {
					return _caecbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bgbdd.PageMargins = NewCT_PageMargins()
				if _degfee := d.DecodeElement(_bgbdd.PageMargins, &_eedbfa); _degfee != nil {
					return _degfee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bgbdd.PageSetup = NewCT_PageSetup()
				if _gbagd := d.DecodeElement(_bgbdd.PageSetup, &_eedbfa); _gbagd != nil {
					return _gbagd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bgbdd.HeaderFooter = NewCT_HeaderFooter()
				if _ecade := d.DecodeElement(_bgbdd.HeaderFooter, &_eedbfa); _ecade != nil {
					return _ecade
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_bgbdd.Drawing = NewCT_Drawing()
				if _ccfcb := d.DecodeElement(_bgbdd.Drawing, &_eedbfa); _ccfcb != nil {
					return _ccfcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bgbdd.LegacyDrawing = NewCT_LegacyDrawing()
				if _caebab := d.DecodeElement(_bgbdd.LegacyDrawing, &_eedbfa); _caebab != nil {
					return _caebab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bgbdd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _ebcgf := d.DecodeElement(_bgbdd.LegacyDrawingHF, &_eedbfa); _ebcgf != nil {
					return _ebcgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bgbdd.DrawingHF = NewCT_DrawingHF()
				if _cgaga := d.DecodeElement(_bgbdd.DrawingHF, &_eedbfa); _cgaga != nil {
					return _cgaga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_bgbdd.OleObjects = NewCT_OleObjects()
				if _bdabe := d.DecodeElement(_bgbdd.OleObjects, &_eedbfa); _bdabe != nil {
					return _bdabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_bgbdd.Controls = NewCT_Controls()
				if _gedeb := d.DecodeElement(_bgbdd.Controls, &_eedbfa); _gedeb != nil {
					return _gedeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgbdd.ExtLst = NewCT_ExtensionList()
				if _feface := d.DecodeElement(_bgbdd.ExtLst, &_eedbfa); _feface != nil {
					return _feface
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _eedbfa.Name)
				if _adgabg := d.Skip(); _adgabg != nil {
					return _adgabg
				}
			}
		case _a.EndElement:
			break _cbdfb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_egfba *CT_Filters) ValidateWithPath(path string) error {
	if _cfafe := _egfba.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _cfafe != nil {
		return _cfafe
	}
	for _ccfgf, _cdaed := range _egfba.Filter {
		if _bbgce := _cdaed.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _ccfgf)); _bbgce != nil {
			return _bbgce
		}
	}
	for _efdd, _gbeee := range _egfba.DateGroupItem {
		if _begde := _gbeee.ValidateWithPath(_fd.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _efdd)); _begde != nil {
			return _begde
		}
	}
	return nil
}
func (_ffdaa *CT_Pages) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffdaa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ffdaa.CountAttr)})
	}
	e.EncodeToken(start)
	_ggcbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065"}}
	for _, _cbgfd := range _ffdaa.Page {
		e.EncodeElement(_cbgfd, _ggcbb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}

func (_efbcd *CT_DateGroupItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_efbcd.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _eaadc := range start.Attr {
		if _eaadc.Name.Local == "\u0079\u0065\u0061\u0072" {
			_cabaa, _gaegd := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _gaegd != nil {
				return _gaegd
			}
			_efbcd.YearAttr = uint16(_cabaa)
			continue
		}
		if _eaadc.Name.Local == "\u006d\u006f\u006et\u0068" {
			_bdebg, _bdde := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _bdde != nil {
				return _bdde
			}
			_ggdgc := uint16(_bdebg)
			_efbcd.MonthAttr = &_ggdgc
			continue
		}
		if _eaadc.Name.Local == "\u0064\u0061\u0079" {
			_cdbec, _dbbd := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _dbbd != nil {
				return _dbbd
			}
			_afda := uint16(_cdbec)
			_efbcd.DayAttr = &_afda
			continue
		}
		if _eaadc.Name.Local == "\u0068\u006f\u0075\u0072" {
			_bcdaf, _ggfee := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _ggfee != nil {
				return _ggfee
			}
			_afggc := uint16(_bcdaf)
			_efbcd.HourAttr = &_afggc
			continue
		}
		if _eaadc.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_bdafc, _aabe := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _aabe != nil {
				return _aabe
			}
			_ffffbc := uint16(_bdafc)
			_efbcd.MinuteAttr = &_ffffbc
			continue
		}
		if _eaadc.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_eacdb, _bbca := _dd.ParseUint(_eaadc.Value, 10, 16)
			if _bbca != nil {
				return _bbca
			}
			_fecg := uint16(_eacdb)
			_efbcd.SecondAttr = &_fecg
			continue
		}
		if _eaadc.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_efbcd.DateTimeGroupingAttr.UnmarshalXMLAttr(_eaadc)
			continue
		}
	}
	for {
		_gbdd, _dcfag := d.Token()
		if _dcfag != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _dcfag)
		}
		if _fgfc, _eacg := _gbdd.(_a.EndElement); _eacg && _fgfc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Hyperlink and its children
func (_bbdgcf *CT_Hyperlink) Validate() error {
	return _bbdgcf.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_cgedde *CT_X) ValidateWithPath(path string) error { return nil }

type Users struct{ CT_Users }
type ST_SourceType byte

func NewCT_WebPublishing() *CT_WebPublishing { _ggfffg := &CT_WebPublishing{}; return _ggfffg }

type Metadata struct{ CT_Metadata }

func NewCT_FieldUsage() *CT_FieldUsage { _faffe := &CT_FieldUsage{}; return _faffe }
func NewCT_OleObjects() *CT_OleObjects { _fggcf := &CT_OleObjects{}; return _fggcf }
func NewCT_PivotArea() *CT_PivotArea   { _bcegc := &CT_PivotArea{}; return _bcegc }
func (_ggbga *CT_RevisionSheetRename) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdacb := range start.Attr {
		if _cdacb.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_abdae, _bffca := _dd.ParseUint(_cdacb.Value, 10, 32)
			if _bffca != nil {
				return _bffca
			}
			_ggbga.SheetIdAttr = uint32(_abdae)
			continue
		}
		if _cdacb.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_abcac := _cdacb.Value
			_ggbga.OldNameAttr = _abcac
			continue
		}
		if _cdacb.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_daeadg := _cdacb.Value
			_ggbga.NewNameAttr = _daeadg
			continue
		}
		if _cdacb.Name.Local == "\u0072\u0049\u0064" {
			_ddacfg, _fcaec := _dd.ParseUint(_cdacb.Value, 10, 32)
			if _fcaec != nil {
				return _fcaec
			}
			_ggbga.RIdAttr = uint32(_ddacfg)
			continue
		}
		if _cdacb.Name.Local == "\u0075\u0061" {
			_ccedba, _dedaed := _dd.ParseBool(_cdacb.Value)
			if _dedaed != nil {
				return _dedaed
			}
			_ggbga.UaAttr = &_ccedba
			continue
		}
		if _cdacb.Name.Local == "\u0072\u0061" {
			_egbcb, _dggdf := _dd.ParseBool(_cdacb.Value)
			if _dggdf != nil {
				return _dggdf
			}
			_ggbga.RaAttr = &_egbcb
			continue
		}
	}
_fagfcc:
	for {
		_cecbed, _efabge := d.Token()
		if _efabge != nil {
			return _efabge
		}
		switch _bccbcg := _cecbed.(type) {
		case _a.StartElement:
			switch _bccbcg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggbga.ExtLst = NewCT_ExtensionList()
				if _ddbaa := d.DecodeElement(_ggbga.ExtLst, &_bccbcg); _ddbaa != nil {
					return _ddbaa
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _bccbcg.Name)
				if _dggeg := d.Skip(); _dggeg != nil {
					return _dggeg
				}
			}
		case _a.EndElement:
			break _fagfcc
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellStyles and its children
func (_ffdda *CT_CellStyles) Validate() error {
	return _ffdda.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}
func NewCT_colItems() *CT_colItems { _dabdg := &CT_colItems{}; return _dabdg }
func (_gdbdg *QueryTable) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdbdg.CT_QueryTable = *NewCT_QueryTable()
	for _, _ggeabc := range start.Attr {
		if _ggeabc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gabfee := _ggeabc.Value
			_gdbdg.NameAttr = _gabfee
			continue
		}
		if _ggeabc.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_gfcec, _aegb := _dd.ParseBool(_ggeabc.Value)
			if _aegb != nil {
				return _aegb
			}
			_gdbdg.HeadersAttr = &_gfcec
			continue
		}
		if _ggeabc.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_agfgd, _cdebaf := _dd.ParseBool(_ggeabc.Value)
			if _cdebaf != nil {
				return _cdebaf
			}
			_gdbdg.RowNumbersAttr = &_agfgd
			continue
		}
		if _ggeabc.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_aeaee, _dgbfcc := _dd.ParseBool(_ggeabc.Value)
			if _dgbfcc != nil {
				return _dgbfcc
			}
			_gdbdg.DisableRefreshAttr = &_aeaee
			continue
		}
		if _ggeabc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_gdacge, _eabga := _dd.ParseBool(_ggeabc.Value)
			if _eabga != nil {
				return _eabga
			}
			_gdbdg.BackgroundRefreshAttr = &_gdacge
			continue
		}
		if _ggeabc.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_efedb, _abddb := _dd.ParseBool(_ggeabc.Value)
			if _abddb != nil {
				return _abddb
			}
			_gdbdg.FirstBackgroundRefreshAttr = &_efedb
			continue
		}
		if _ggeabc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_bbdegd, _fefbe := _dd.ParseBool(_ggeabc.Value)
			if _fefbe != nil {
				return _fefbe
			}
			_gdbdg.RefreshOnLoadAttr = &_bbdegd
			continue
		}
		if _ggeabc.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_gdbdg.GrowShrinkTypeAttr.UnmarshalXMLAttr(_ggeabc)
			continue
		}
		if _ggeabc.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_abgec, _gfegg := _dd.ParseBool(_ggeabc.Value)
			if _gfegg != nil {
				return _gfegg
			}
			_gdbdg.FillFormulasAttr = &_abgec
			continue
		}
		if _ggeabc.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_bbfbdb, _baffg := _dd.ParseBool(_ggeabc.Value)
			if _baffg != nil {
				return _baffg
			}
			_gdbdg.RemoveDataOnSaveAttr = &_bbfbdb
			continue
		}
		if _ggeabc.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_gbceaf, _aaeac := _dd.ParseBool(_ggeabc.Value)
			if _aaeac != nil {
				return _aaeac
			}
			_gdbdg.DisableEditAttr = &_gbceaf
			continue
		}
		if _ggeabc.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bgcdf, _ggbgdd := _dd.ParseBool(_ggeabc.Value)
			if _ggbgdd != nil {
				return _ggbgdd
			}
			_gdbdg.PreserveFormattingAttr = &_bgcdf
			continue
		}
		if _ggeabc.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_afgbac, _aadbg := _dd.ParseBool(_ggeabc.Value)
			if _aadbg != nil {
				return _aadbg
			}
			_gdbdg.AdjustColumnWidthAttr = &_afgbac
			continue
		}
		if _ggeabc.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_aecge, _gbced := _dd.ParseBool(_ggeabc.Value)
			if _gbced != nil {
				return _gbced
			}
			_gdbdg.IntermediateAttr = &_aecge
			continue
		}
		if _ggeabc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_ccbdfb, _edecba := _dd.ParseUint(_ggeabc.Value, 10, 32)
			if _edecba != nil {
				return _edecba
			}
			_gdbdg.ConnectionIdAttr = uint32(_ccbdfb)
			continue
		}
		if _ggeabc.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_eaffe, _cdgea := _dd.ParseUint(_ggeabc.Value, 10, 32)
			if _cdgea != nil {
				return _cdgea
			}
			_fffceb := uint32(_eaffe)
			_gdbdg.AutoFormatIdAttr = &_fffceb
			continue
		}
		if _ggeabc.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ccfbfe, _feccb := _dd.ParseBool(_ggeabc.Value)
			if _feccb != nil {
				return _feccb
			}
			_gdbdg.ApplyNumberFormatsAttr = &_ccfbfe
			continue
		}
		if _ggeabc.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bcedbe, _abccf := _dd.ParseBool(_ggeabc.Value)
			if _abccf != nil {
				return _abccf
			}
			_gdbdg.ApplyBorderFormatsAttr = &_bcedbe
			continue
		}
		if _ggeabc.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_efaddf, _fbbda := _dd.ParseBool(_ggeabc.Value)
			if _fbbda != nil {
				return _fbbda
			}
			_gdbdg.ApplyFontFormatsAttr = &_efaddf
			continue
		}
		if _ggeabc.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aececaf, _fegag := _dd.ParseBool(_ggeabc.Value)
			if _fegag != nil {
				return _fegag
			}
			_gdbdg.ApplyPatternFormatsAttr = &_aececaf
			continue
		}
		if _ggeabc.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_aeafgc, _gagbb := _dd.ParseBool(_ggeabc.Value)
			if _gagbb != nil {
				return _gagbb
			}
			_gdbdg.ApplyAlignmentFormatsAttr = &_aeafgc
			continue
		}
		if _ggeabc.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cfdef, _cfccff := _dd.ParseBool(_ggeabc.Value)
			if _cfccff != nil {
				return _cfccff
			}
			_gdbdg.ApplyWidthHeightFormatsAttr = &_cfdef
			continue
		}
	}
_dcgbfa:
	for {
		_beadff, _bgeceg := d.Token()
		if _bgeceg != nil {
			return _bgeceg
		}
		switch _efgecd := _beadff.(type) {
		case _a.StartElement:
			switch _efgecd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_gdbdg.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _efcbgb := d.DecodeElement(_gdbdg.QueryTableRefresh, &_efgecd); _efcbgb != nil {
					return _efcbgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbdg.ExtLst = NewCT_ExtensionList()
				if _ggfgd := d.DecodeElement(_gdbdg.ExtLst, &_efgecd); _ggfgd != nil {
					return _ggfgd
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _efgecd.Name)
				if _daadc := d.Skip(); _daadc != nil {
					return _daadc
				}
			}
		case _a.EndElement:
			break _dcgbfa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MergeCells() *CT_MergeCells { _ceedd := &CT_MergeCells{}; return _ceedd }
func (_dede *CT_ColFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dede.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dede.CountAttr)})
	}
	e.EncodeToken(start)
	_cfga := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0066\u0069\u0065\u006cd"}}
	for _, _gdad := range _dede.Field {
		e.EncodeElement(_gdad, _cfga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecaae *CT_TablesChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bacbg := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
		_ecaae.M = NewCT_TableMissing()
		if _fdceb := d.DecodeElement(_ecaae.M, &_bacbg); _fdceb != nil {
			return _fdceb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
		_ecaae.S = NewCT_XStringElement()
		if _accdbd := d.DecodeElement(_ecaae.S, &_bacbg); _accdbd != nil {
			return _accdbd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
		_ecaae.X = NewCT_Index()
		if _edcccb := d.DecodeElement(_ecaae.X, &_bacbg); _edcccb != nil {
			return _edcccb
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bacbg.Name)
		if _bedfg := d.Skip(); _bedfg != nil {
			return _bedfg
		}
	}
	return nil
}

type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

func (_afefe *ST_Orientation) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_afefe = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_afefe = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_afefe = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_afefe = 3
	}
	return nil
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_fgfaa *CT_PrintOptions) ValidateWithPath(path string) error { return nil }
func (_fccbgf ST_VolValueType) Validate() error                    { return _fccbgf.ValidateWithPath("") }
func (_gaaf *CT_ChartFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaaf.PivotArea = NewCT_PivotArea()
	for _, _gfag := range start.Attr {
		if _gfag.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_agff, _fffc := _dd.ParseUint(_gfag.Value, 10, 32)
			if _fffc != nil {
				return _fffc
			}
			_gaaf.ChartAttr = uint32(_agff)
			continue
		}
		if _gfag.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_acad, _badf := _dd.ParseUint(_gfag.Value, 10, 32)
			if _badf != nil {
				return _badf
			}
			_gaaf.FormatAttr = uint32(_acad)
			continue
		}
		if _gfag.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_dbgd, _eefa := _dd.ParseBool(_gfag.Value)
			if _eefa != nil {
				return _eefa
			}
			_gaaf.SeriesAttr = &_dbgd
			continue
		}
	}
_aaca:
	for {
		_cdfge, _afegg := d.Token()
		if _afegg != nil {
			return _afegg
		}
		switch _fdg := _cdfge.(type) {
		case _a.StartElement:
			switch _fdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _bdeed := d.DecodeElement(_gaaf.PivotArea, &_fdg); _bdeed != nil {
					return _bdeed
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _fdg.Name)
				if _dabf := d.Skip(); _dabf != nil {
					return _dabf
				}
			}
		case _a.EndElement:
			break _aaca
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_TableColumn() *CT_TableColumn { _ggdcg := &CT_TableColumn{}; return _ggdcg }

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

func (_gadac *CT_VolMain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _gadac.FirstAttr)})
	e.EncodeToken(start)
	_gcdfaec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070"}}
	for _, _ffdcg := range _gadac.Tp {
		e.EncodeElement(_ffdcg, _gcdfaec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_dacfg *CT_GradientFill) ValidateWithPath(path string) error {
	if _efafb := _dacfg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _efafb != nil {
		return _efafb
	}
	for _dcce, _dega := range _dacfg.Stop {
		if _bbgcc := _dega.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _dcce)); _bbgcc != nil {
			return _bbgcc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_geafbc *CT_SheetView) ValidateWithPath(path string) error {
	if _gdbea := _geafbc.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _gdbea != nil {
		return _gdbea
	}
	if _geafbc.Pane != nil {
		if _cdeee := _geafbc.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _cdeee != nil {
			return _cdeee
		}
	}
	for _bggeb, _dbgag := range _geafbc.Selection {
		if _dgeac := _dbgag.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _bggeb)); _dgeac != nil {
			return _dgeac
		}
	}
	for _aadgd, _debfa := range _geafbc.PivotSelection {
		if _fcbfad := _debfa.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _aadgd)); _fcbfad != nil {
			return _fcbfad
		}
	}
	if _geafbc.ExtLst != nil {
		if _dddaed := _geafbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dddaed != nil {
			return _dddaed
		}
	}
	return nil
}
func (_bgbae *CT_RevisionInsertSheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _faegcfb := range start.Attr {
		if _faegcfb.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_aegcd, _eegdb := _dd.ParseUint(_faegcfb.Value, 10, 32)
			if _eegdb != nil {
				return _eegdb
			}
			_bgbae.SheetIdAttr = uint32(_aegcd)
			continue
		}
		if _faegcfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cbbgc := _faegcfb.Value
			_bgbae.NameAttr = _cbbgc
			continue
		}
		if _faegcfb.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ccgbef, _eaabbe := _dd.ParseUint(_faegcfb.Value, 10, 32)
			if _eaabbe != nil {
				return _eaabbe
			}
			_bgbae.SheetPositionAttr = uint32(_ccgbef)
			continue
		}
		if _faegcfb.Name.Local == "\u0072\u0049\u0064" {
			_ageed, _gbaed := _dd.ParseUint(_faegcfb.Value, 10, 32)
			if _gbaed != nil {
				return _gbaed
			}
			_bgbae.RIdAttr = uint32(_ageed)
			continue
		}
		if _faegcfb.Name.Local == "\u0075\u0061" {
			_dfed, _ddede := _dd.ParseBool(_faegcfb.Value)
			if _ddede != nil {
				return _ddede
			}
			_bgbae.UaAttr = &_dfed
			continue
		}
		if _faegcfb.Name.Local == "\u0072\u0061" {
			_afade, _cfefbc := _dd.ParseBool(_faegcfb.Value)
			if _cfefbc != nil {
				return _cfefbc
			}
			_bgbae.RaAttr = &_afade
			continue
		}
	}
	for {
		_bggf, _dfcbfa := d.Token()
		if _dfcbfa != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _dfcbfa)
		}
		if _aagdbc, _ffegc := _bggf.(_a.EndElement); _ffegc && _aagdbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}

func (_efgdg *CT_FileRecoveryPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfef := range start.Attr {
		if _cfef.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_gfcff, _cfbaae := _dd.ParseBool(_cfef.Value)
			if _cfbaae != nil {
				return _cfbaae
			}
			_efgdg.AutoRecoverAttr = &_gfcff
			continue
		}
		if _cfef.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_ddbb, _bdgdc := _dd.ParseBool(_cfef.Value)
			if _bdgdc != nil {
				return _bdgdc
			}
			_efgdg.CrashSaveAttr = &_ddbb
			continue
		}
		if _cfef.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_faca, _fffcda := _dd.ParseBool(_cfef.Value)
			if _fffcda != nil {
				return _fffcda
			}
			_efgdg.DataExtractLoadAttr = &_faca
			continue
		}
		if _cfef.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_bbcf, _ffbgc := _dd.ParseBool(_cfef.Value)
			if _ffbgc != nil {
				return _ffbgc
			}
			_efgdg.RepairLoadAttr = &_bbcf
			continue
		}
	}
	for {
		_baeg, _dcba := d.Token()
		if _dcba != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _dcba)
		}
		if _bddbd, _efadf := _baeg.(_a.EndElement); _efadf && _bddbd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_bbecc *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_gdge *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _ecaaf, _cfebe := range _gdge.FunctionGroup {
		if _gdedg := _cfebe.ValidateWithPath(_fd.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _ecaaf)); _gdedg != nil {
			return _gdedg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MdxChoice and its children, prefixing error messages with path
func (_gacbd *CT_MdxChoice) ValidateWithPath(path string) error {
	if _gacbd.T != nil {
		if _cgecb := _gacbd.T.ValidateWithPath(path + "\u002f\u0054"); _cgecb != nil {
			return _cgecb
		}
	}
	if _gacbd.Ms != nil {
		if _eaef := _gacbd.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _eaef != nil {
			return _eaef
		}
	}
	if _gacbd.P != nil {
		if _cdcef := _gacbd.P.ValidateWithPath(path + "\u002f\u0050"); _cdcef != nil {
			return _cdcef
		}
	}
	if _gacbd.K != nil {
		if _gbfae := _gacbd.K.ValidateWithPath(path + "\u002f\u004b"); _gbfae != nil {
			return _gbfae
		}
	}
	return nil
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr        *uint32
	GroupItemsChoice []*CT_GroupItemsChoice
}

func (_egcca *CT_MRUColors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bdcef:
	for {
		_gcgaa, _bgadc := d.Token()
		if _bgadc != nil {
			return _bgadc
		}
		switch _afeda := _gcgaa.(type) {
		case _a.StartElement:
			switch _afeda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_edgeg := NewCT_Color()
				if _dddebf := d.DecodeElement(_edgeg, &_afeda); _dddebf != nil {
					return _dddebf
				}
				_egcca.Color = append(_egcca.Color, _edgeg)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _afeda.Name)
				if _afcac := d.Skip(); _afcac != nil {
					return _afcac
				}
			}
		case _a.EndElement:
			break _bdcef
		case _a.CharData:
		}
	}
	return nil
}

type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

// Validate validates the CT_FontFamily and its children
func (_eaeeb *CT_FontFamily) Validate() error {
	return _eaeeb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}
func (_da *AG_RevData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _da.RIdAttr)})
	if _da.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_da.UaAttr))})
	}
	if _da.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_da.RaAttr))})
	}
	return nil
}
func (_dcffdec ST_Axis) ValidateWithPath(path string) error {
	switch _dcffdec {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcffdec))
	}
	return nil
}
func (_cbbfc ST_DataValidationErrorStyle) String() string {
	switch _cbbfc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_gcba *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }
func NewCT_ExternalSheetName() *CT_ExternalSheetName {
	_dfbef := &CT_ExternalSheetName{}
	return _dfbef
}
func (_bcgcc ST_CfvoType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_edabc := _a.Attr{}
	_edabc.Name = name
	switch _bcgcc {
	case ST_CfvoTypeUnset:
		_edabc.Value = ""
	case ST_CfvoTypeNum:
		_edabc.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_edabc.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_edabc.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_edabc.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_edabc.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_edabc.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _edabc, nil
}
func NewCT_WorksheetSource() *CT_WorksheetSource { _dcgcdb := &CT_WorksheetSource{}; return _dcgcdb }
func (_aeedae *CT_PCDSDTCEntries) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbef := range start.Attr {
		if _fbef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfcaf, _cebeb := _dd.ParseUint(_fbef.Value, 10, 32)
			if _cebeb != nil {
				return _cebeb
			}
			_aagbee := uint32(_bfcaf)
			_aeedae.CountAttr = &_aagbee
			continue
		}
	}
_cgfdca:
	for {
		_gaagee, _bgffc := d.Token()
		if _bgffc != nil {
			return _bgffc
		}
		switch _bagaeda := _gaagee.(type) {
		case _a.StartElement:
			switch _bagaeda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_adafc := NewCT_PCDSDTCEntriesChoice()
				if _ccacg := d.DecodeElement(&_adafc.M, &_bagaeda); _ccacg != nil {
					return _ccacg
				}
				_aeedae.PCDSDTCEntriesChoice = append(_aeedae.PCDSDTCEntriesChoice, _adafc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_daacbc := NewCT_PCDSDTCEntriesChoice()
				if _bgggg := d.DecodeElement(&_daacbc.N, &_bagaeda); _bgggg != nil {
					return _bgggg
				}
				_aeedae.PCDSDTCEntriesChoice = append(_aeedae.PCDSDTCEntriesChoice, _daacbc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dbcfeb := NewCT_PCDSDTCEntriesChoice()
				if _dccgb := d.DecodeElement(&_dbcfeb.E, &_bagaeda); _dccgb != nil {
					return _dccgb
				}
				_aeedae.PCDSDTCEntriesChoice = append(_aeedae.PCDSDTCEntriesChoice, _dbcfeb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_fabcdc := NewCT_PCDSDTCEntriesChoice()
				if _efeda := d.DecodeElement(&_fabcdc.S, &_bagaeda); _efeda != nil {
					return _efeda
				}
				_aeedae.PCDSDTCEntriesChoice = append(_aeedae.PCDSDTCEntriesChoice, _fabcdc)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _bagaeda.Name)
				if _dgbbe := d.Skip(); _dgbbe != nil {
					return _dgbbe
				}
			}
		case _a.EndElement:
			break _cgfdca
		case _a.CharData:
		}
	}
	return nil
}
func (_geagc *CT_GroupLevels) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aabcc := range start.Attr {
		if _aabcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_baaae, _fgdaa := _dd.ParseUint(_aabcc.Value, 10, 32)
			if _fgdaa != nil {
				return _fgdaa
			}
			_ccfed := uint32(_baaae)
			_geagc.CountAttr = &_ccfed
			continue
		}
	}
_feag:
	for {
		_fcdce, _bgbab := d.Token()
		if _bgbab != nil {
			return _bgbab
		}
		switch _abefg := _fcdce.(type) {
		case _a.StartElement:
			switch _abefg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_adegb := NewCT_GroupLevel()
				if _efabd := d.DecodeElement(_adegb, &_abefg); _efabd != nil {
					return _efabd
				}
				_geagc.GroupLevel = append(_geagc.GroupLevel, _adegb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _abefg.Name)
				if _fgfcb := d.Skip(); _fgfcb != nil {
					return _fgfcb
				}
			}
		case _a.EndElement:
			break _feag
		case _a.CharData:
		}
	}
	return nil
}
func (_gabccd ST_PrintError) Validate() error { return _gabccd.ValidateWithPath("") }
func (_eadbfe *CalcChain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0063\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _eadbfe.CT_CalcChain.MarshalXML(e, start)
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

func (_dbcfc *CT_Sheets) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_abdfb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0073\u0068\u0065\u0065t"}}
	for _, _aecad := range _dbcfc.Sheet {
		e.EncodeElement(_aecad, _abdfb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edddc *CT_ExternalSheetDataSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dgacbd:
	for {
		_ccfgb, _gfegb := d.Token()
		if _gfegb != nil {
			return _gfegb
		}
		switch _bddb := _ccfgb.(type) {
		case _a.StartElement:
			switch _bddb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_fcbf := NewCT_ExternalSheetData()
				if _adcae := d.DecodeElement(_fcbf, &_bddb); _adcae != nil {
					return _adcae
				}
				_edddc.SheetData = append(_edddc.SheetData, _fcbf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _bddb.Name)
				if _dcaag := d.Skip(); _dcaag != nil {
					return _dcaag
				}
			}
		case _a.EndElement:
			break _dgacbd
		case _a.CharData:
		}
	}
	return nil
}
func (_eggde *CT_VerticalAlignFontProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eggde.ValAttr = _b.ST_VerticalAlignRun(1)
	for _, _dcage := range start.Attr {
		if _dcage.Name.Local == "\u0076\u0061\u006c" {
			_eggde.ValAttr.UnmarshalXMLAttr(_dcage)
			continue
		}
	}
	for {
		_aacgc, _bgbfa := d.Token()
		if _bgbfa != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _bgbfa)
		}
		if _gedg, _ceab := _aacgc.(_a.EndElement); _ceab && _gedg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agbaf *CT_ExtensionList) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ebfab:
	for {
		_ddgf, _gege := d.Token()
		if _gege != nil {
			return _gege
		}
		switch _ebfe := _ddgf.(type) {
		case _a.StartElement:
			switch _ebfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_eadcb := NewCT_Extension()
				if _gcdfa := d.DecodeElement(_eadcb, &_ebfe); _gcdfa != nil {
					return _gcdfa
				}
				_agbaf.Ext = append(_agbaf.Ext, _eadcb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _ebfe.Name)
				if _daeac := d.Skip(); _daeac != nil {
					return _daeac
				}
			}
		case _a.EndElement:
			break _ebfab
		case _a.CharData:
		}
	}
	return nil
}
func (_gdfc *CT_ChartsheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _baeb := range start.Attr {
		if _baeb.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_dbef, _dgaa := _dd.ParseBool(_baeb.Value)
			if _dgaa != nil {
				return _dgaa
			}
			_gdfc.TabSelectedAttr = &_dbef
			continue
		}
		if _baeb.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_efbc, _dbff := _dd.ParseUint(_baeb.Value, 10, 32)
			if _dbff != nil {
				return _dbff
			}
			_gccf := uint32(_efbc)
			_gdfc.ZoomScaleAttr = &_gccf
			continue
		}
		if _baeb.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_degc, _edde := _dd.ParseUint(_baeb.Value, 10, 32)
			if _edde != nil {
				return _edde
			}
			_gdfc.WorkbookViewIdAttr = uint32(_degc)
			continue
		}
		if _baeb.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_gagc, _ffgg := _dd.ParseBool(_baeb.Value)
			if _ffgg != nil {
				return _ffgg
			}
			_gdfc.ZoomToFitAttr = &_gagc
			continue
		}
	}
_eaeg:
	for {
		_fbbab, _dfggd := d.Token()
		if _dfggd != nil {
			return _dfggd
		}
		switch _cbab := _fbbab.(type) {
		case _a.StartElement:
			switch _cbab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdfc.ExtLst = NewCT_ExtensionList()
				if _dedg := d.DecodeElement(_gdfc.ExtLst, &_cbab); _dedg != nil {
					return _dedg
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _cbab.Name)
				if _efee := d.Skip(); _efee != nil {
					return _efee
				}
			}
		case _a.EndElement:
			break _eaeg
		case _a.CharData:
		}
	}
	return nil
}

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

// Validate validates the CT_XmlCellPr and its children
func (_egdeea *CT_XmlCellPr) Validate() error {
	return _egdeea.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}
func (_dgbabfd ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _dgbabfd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgbabfd))
	}
	return nil
}
func (_ebdcfe ST_CellComments) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_faccbc := _a.Attr{}
	_faccbc.Name = name
	switch _ebdcfe {
	case ST_CellCommentsUnset:
		_faccbc.Value = ""
	case ST_CellCommentsNone:
		_faccbc.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_faccbc.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_faccbc.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _faccbc, nil
}

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}
type ST_TotalsRowFunction byte
type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

func (_ebab *CT_ExternalReference) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ebab.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_badce *CT_RevisionMove) ValidateWithPath(path string) error {
	for _deadab, _fagfc := range _badce.RevisionMoveChoice {
		if _eacaae := _fagfc.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004do\u0076e\u0043h\u006f\u0069\u0063\u0065\u005b\u0025\u0064]", path, _deadab)); _eacaae != nil {
			return _eacaae
		}
	}
	return nil
}

// Validate validates the CT_SmartTagPr and its children
func (_affbg *CT_SmartTagPr) Validate() error {
	return _affbg.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_edgcbe *CT_PivotCaches) ValidateWithPath(path string) error {
	for _bffaad, _bcebe := range _edgcbe.PivotCache {
		if _cdgbg := _bcebe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _bffaad)); _cdgbg != nil {
			return _cdgbg
		}
	}
	return nil
}

// Validate validates the CT_PivotTableStyle and its children
func (_ebfbf *CT_PivotTableStyle) Validate() error {
	return _ebfbf.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_AutoSortScope() *CT_AutoSortScope {
	_cf := &CT_AutoSortScope{}
	_cf.PivotArea = NewCT_PivotArea()
	return _cf
}
func (_bgcfbg *CT_MdxSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _bgcfbg.NsAttr)})
	if _bgcfbg.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_bgcfbg.CAttr)})
	}
	if _bgcfbg.OAttr != ST_MdxSetOrderUnset {
		_abdbd, _cfgc := _bgcfbg.OAttr.MarshalXMLAttr(_a.Name{Local: "\u006f"})
		if _cfgc != nil {
			return _cfgc
		}
		start.Attr = append(start.Attr, _abdbd)
	}
	e.EncodeToken(start)
	if _bgcfbg.N != nil {
		_fccad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		for _, _aafgc := range _bgcfbg.N {
			e.EncodeElement(_aafgc, _fccad)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_dffgc *CT_CustomFilters) ValidateWithPath(path string) error {
	for _ceaeg, _fcfa := range _dffgc.CustomFilter {
		if _efbg := _fcfa.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _ceaeg)); _efbg != nil {
			return _efbg
		}
	}
	return nil
}
func NewCT_OlapPr() *CT_OlapPr { _cbebf := &CT_OlapPr{}; return _cbebf }
func (_afefca *CT_rowItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afefca.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_afefca.CountAttr)})
	}
	e.EncodeToken(start)
	_gdegcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0069"}}
	for _, _cbbdfg := range _afefca.I {
		e.EncodeElement(_cbbdfg, _gdegcd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Record and its children
func (_dacdd *CT_Record) Validate() error {
	return _dacdd.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

func (_aadgg *ST_MdxSetOrder) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aadgg = 0
	case "\u0075":
		*_aadgg = 1
	case "\u0061":
		*_aadgg = 2
	case "\u0064":
		*_aadgg = 3
	case "\u0061\u0061":
		*_aadgg = 4
	case "\u0061\u0064":
		*_aadgg = 5
	case "\u006e\u0061":
		*_aadgg = 6
	case "\u006e\u0064":
		*_aadgg = 7
	}
	return nil
}
func (_aadgcf ST_DvAspect) Validate() error { return _aadgcf.ValidateWithPath("") }
func (_cgbgb *CT_DdeValues) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgbgb.RowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbgb.RowsAttr)})
	}
	if _cgbgb.ColsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbgb.ColsAttr)})
	}
	e.EncodeToken(start)
	_dgdfa := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0076\u0061\u006c\u0075e"}}
	for _, _daabfe := range _cgbgb.Value {
		e.EncodeElement(_daabfe, _dgdfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_dbfbc *CT_Item) ValidateWithPath(path string) error {
	if _abfb := _dbfbc.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _abfb != nil {
		return _abfb
	}
	return nil
}
func NewCT_LevelGroup() *CT_LevelGroup {
	_dcaeg := &CT_LevelGroup{}
	_dcaeg.GroupMembers = NewCT_GroupMembers()
	return _dcaeg
}

type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

func (_edca *CT_MetadataBlock) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_debga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0063"}}
	for _, _dggfb := range _edca.Rc {
		e.EncodeElement(_dggfb, _debga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupItems() *CT_GroupItems { _fddgd := &CT_GroupItems{}; return _fddgd }

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}

// Validate validates the CT_UnderlineProperty and its children
func (_daccag *CT_UnderlineProperty) Validate() error {
	return _daccag.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}
func NewCT_MetadataRecord() *CT_MetadataRecord {
	_gaged := &CT_MetadataRecord{}
	return _gaged
}
func (_fbgcd *CT_ExternalDefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aeag := range start.Attr {
		if _aeag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_beadc := _aeag.Value
			_fbgcd.NameAttr = _beadc
			continue
		}
		if _aeag.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_cbbd := _aeag.Value
			_fbgcd.RefersToAttr = &_cbbd
			continue
		}
		if _aeag.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_dcbcb, _eddgb := _dd.ParseUint(_aeag.Value, 10, 32)
			if _eddgb != nil {
				return _eddgb
			}
			_ebgfc := uint32(_dcbcb)
			_fbgcd.SheetIdAttr = &_ebgfc
			continue
		}
	}
	for {
		_gfdcd, _dacag := d.Token()
		if _dacag != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _dacag)
		}
		if _cdeb, _begb := _gfdcd.(_a.EndElement); _begb && _cdeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fefgb ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _fefgb {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fefgb))
	}
	return nil
}
func (_fcafdc *CT_SheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_cegcb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _bdcaf := range _fcafdc.SheetView {
		e.EncodeElement(_bdcaf, _cegcb)
	}
	if _fcafdc.ExtLst != nil {
		_caaea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcafdc.ExtLst, _caaea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_UndoInfo and its children
func (_cbddd *CT_UndoInfo) Validate() error {
	return _cbddd.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}
func (_cfgdf *CT_FutureMetadataBlock) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dgadf:
	for {
		_dcdfb, _dcgcd := d.Token()
		if _dcgcd != nil {
			return _dcgcd
		}
		switch _fddbe := _dcdfb.(type) {
		case _a.StartElement:
			switch _fddbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgdf.ExtLst = NewCT_ExtensionList()
				if _cdggg := d.DecodeElement(_cfgdf.ExtLst, &_fddbe); _cdggg != nil {
					return _cdggg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _fddbe.Name)
				if _dgebe := d.Skip(); _dgebe != nil {
					return _dgebe
				}
			}
		case _a.EndElement:
			break _dgadf
		case _a.CharData:
		}
	}
	return nil
}

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}
type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

func (_becbf *CT_GroupItemsChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _becbf.M != nil {
		_afdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006d"}}
		e.EncodeElement(_becbf.M, _afdd)
	} else if _becbf.N != nil {
		_fgcbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		e.EncodeElement(_becbf.N, _fgcbg)
	} else if _becbf.B != nil {
		_fadce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0062"}}
		e.EncodeElement(_becbf.B, _fadce)
	} else if _becbf.E != nil {
		_bdcdc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0065"}}
		e.EncodeElement(_becbf.E, _bdcdc)
	} else if _becbf.S != nil {
		_dbcaef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
		e.EncodeElement(_becbf.S, _dbcaef)
	} else if _becbf.D != nil {
		_ddgdbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064"}}
		e.EncodeElement(_becbf.D, _ddgdbd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cgedf *CT_GroupLevel) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cgedf.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _cgedf.CaptionAttr)})
	if _cgedf.UserAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgedf.UserAttr))})
	}
	if _cgedf.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgedf.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _cgedf.Groups != nil {
		_fagfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0067\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_cgedf.Groups, _fagfd)
	}
	if _cgedf.ExtLst != nil {
		_ffeda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgedf.ExtLst, _ffeda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_befbd ST_CellType) String() string {
	switch _befbd {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}

type ST_ItemType byte

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_cgcgg *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _cdcea := _cgcgg.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _cdcea != nil {
		return _cdcea
	}
	if _cdfgd := _cgcgg.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _cdfgd != nil {
		return _cdfgd
	}
	if _cgcgg.CacheHierarchies != nil {
		if _fgecg := _cgcgg.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _fgecg != nil {
			return _fgecg
		}
	}
	if _cgcgg.Kpis != nil {
		if _acffb := _cgcgg.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _acffb != nil {
			return _acffb
		}
	}
	if _cgcgg.TupleCache != nil {
		if _egdee := _cgcgg.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _egdee != nil {
			return _egdee
		}
	}
	if _cgcgg.CalculatedItems != nil {
		if _gacga := _cgcgg.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _gacga != nil {
			return _gacga
		}
	}
	if _cgcgg.CalculatedMembers != nil {
		if _fegfa := _cgcgg.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _fegfa != nil {
			return _fegfa
		}
	}
	if _cgcgg.Dimensions != nil {
		if _eeaadb := _cgcgg.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _eeaadb != nil {
			return _eeaadb
		}
	}
	if _cgcgg.MeasureGroups != nil {
		if _ffcbg := _cgcgg.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _ffcbg != nil {
			return _ffcbg
		}
	}
	if _cgcgg.Maps != nil {
		if _abgf := _cgcgg.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _abgf != nil {
			return _abgf
		}
	}
	if _cgcgg.ExtLst != nil {
		if _cbada := _cgcgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbada != nil {
			return _cbada
		}
	}
	return nil
}

// Validate validates the CT_GradientFill and its children
func (_fffaac *CT_GradientFill) Validate() error {
	return _fffaac.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}
func NewCT_Colors() *CT_Colors { _fbee := &CT_Colors{}; return _fbee }

// Validate validates the CT_RevisionFormatting and its children
func (_ffaed *CT_RevisionFormatting) Validate() error {
	return _ffaed.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_fddaaf *ST_DateTimeGrouping) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aefcba, _eaccc := d.Token()
	if _eaccc != nil {
		return _eaccc
	}
	if _feebc, _bdaacd := _aefcba.(_a.EndElement); _bdaacd && _feebc.Name == start.Name {
		*_fddaaf = 1
		return nil
	}
	if _eecea, _ecbad := _aefcba.(_a.CharData); !_ecbad {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aefcba)
	} else {
		switch string(_eecea) {
		case "":
			*_fddaaf = 0
		case "\u0079\u0065\u0061\u0072":
			*_fddaaf = 1
		case "\u006d\u006f\u006et\u0068":
			*_fddaaf = 2
		case "\u0064\u0061\u0079":
			*_fddaaf = 3
		case "\u0068\u006f\u0075\u0072":
			*_fddaaf = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_fddaaf = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_fddaaf = 6
		}
	}
	_aefcba, _eaccc = d.Token()
	if _eaccc != nil {
		return _eaccc
	}
	if _fbfec, _egfaeg := _aefcba.(_a.EndElement); _egfaeg && _fbfec.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aefcba)
}
func (_bddcc *ST_VolValueType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bgced, _bgccaf := d.Token()
	if _bgccaf != nil {
		return _bgccaf
	}
	if _egcea, _fadfbe := _bgced.(_a.EndElement); _fadfbe && _egcea.Name == start.Name {
		*_bddcc = 1
		return nil
	}
	if _bdceg, _dcgag := _bgced.(_a.CharData); !_dcgag {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgced)
	} else {
		switch string(_bdceg) {
		case "":
			*_bddcc = 0
		case "\u0062":
			*_bddcc = 1
		case "\u006e":
			*_bddcc = 2
		case "\u0065":
			*_bddcc = 3
		case "\u0073":
			*_bddcc = 4
		}
	}
	_bgced, _bgccaf = d.Token()
	if _bgccaf != nil {
		return _bgccaf
	}
	if _gecba, _gaccfa := _bgced.(_a.EndElement); _gaccfa && _gecba.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgced)
}

type CT_ExternalReference struct{ IdAttr string }

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_dfafd *CT_Mdx) ValidateWithPath(path string) error {
	if _dfafd.FAttr == ST_MdxFunctionTypeUnset {
		return _fd.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _abfd := _dfafd.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _abfd != nil {
		return _abfd
	}
	if _cdfga := _dfafd.MdxChoice.ValidateWithPath(path + "\u002f\u004d\u0064\u0078\u0043\u0068\u006f\u0069\u0063\u0065"); _cdfga != nil {
		return _cdfga
	}
	return nil
}
func NewCT_FillChoice() *CT_FillChoice { _dagdf := &CT_FillChoice{}; return _dagdf }
func (_agbafe ST_Axis) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbgggd := _a.Attr{}
	_cbgggd.Name = name
	switch _agbafe {
	case ST_AxisUnset:
		_cbgggd.Value = ""
	case ST_AxisAxisRow:
		_cbgggd.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_cbgggd.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_cbgggd.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_cbgggd.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _cbgggd, nil
}
func (_ecaea *CT_PivotFilters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecaea.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ecaea.CountAttr)})
	}
	e.EncodeToken(start)
	if _ecaea.Filter != nil {
		_dadbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u006c\u0074\u0065\u0072"}}
		for _, _dffdd := range _ecaea.Filter {
			e.EncodeElement(_dffdd, _dadbe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableStyle() *CT_TableStyle { _cfgdfa := &CT_TableStyle{}; return _cfgdfa }
func (_ggeef *ST_SourceType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggeef = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_ggeef = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_ggeef = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_ggeef = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_ggeef = 4
	}
	return nil
}

type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of Refernces
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_feb *CT_Border) ValidateWithPath(path string) error {
	if _feb.Start != nil {
		if _ffba := _feb.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _ffba != nil {
			return _ffba
		}
	}
	if _feb.End != nil {
		if _fbd := _feb.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _fbd != nil {
			return _fbd
		}
	}
	if _feb.Left != nil {
		if _bfd := _feb.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _bfd != nil {
			return _bfd
		}
	}
	if _feb.Right != nil {
		if _deea := _feb.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _deea != nil {
			return _deea
		}
	}
	if _feb.Top != nil {
		if _gcb := _feb.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _gcb != nil {
			return _gcb
		}
	}
	if _feb.Bottom != nil {
		if _cgb := _feb.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _cgb != nil {
			return _cgb
		}
	}
	if _feb.Diagonal != nil {
		if _gagd := _feb.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _gagd != nil {
			return _gagd
		}
	}
	if _feb.Vertical != nil {
		if _ggcb := _feb.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _ggcb != nil {
			return _ggcb
		}
	}
	if _feb.Horizontal != nil {
		if _cce := _feb.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _cce != nil {
			return _cce
		}
	}
	return nil
}
func (_bebca *CT_Pages) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fefagb := range start.Attr {
		if _fefagb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbfga, _dagdcg := _dd.ParseUint(_fefagb.Value, 10, 32)
			if _dagdcg != nil {
				return _dagdcg
			}
			_aafe := uint32(_fbfga)
			_bebca.CountAttr = &_aafe
			continue
		}
	}
_deaag:
	for {
		_egdcf, _dfbbg := d.Token()
		if _dfbbg != nil {
			return _dfbbg
		}
		switch _fgfff := _egdcf.(type) {
		case _a.StartElement:
			switch _fgfff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_ebfdc := NewCT_PCDSCPage()
				if _fgfcg := d.DecodeElement(_ebfdc, &_fgfff); _fgfcg != nil {
					return _fgfcg
				}
				_bebca.Page = append(_bebca.Page, _ebfdc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _fgfff.Name)
				if _defgd := d.Skip(); _defgd != nil {
					return _defgd
				}
			}
		case _a.EndElement:
			break _deaag
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the Chartsheet and its children
func (_cddad *Chartsheet) Validate() error {
	return _cddad.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

type ST_Objects byte

// Validate validates the CT_PCDSCPage and its children
func (_gafdb *CT_PCDSCPage) Validate() error {
	return _gafdb.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}
func (_dcgb *CT_FieldUsage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gaced := range start.Attr {
		if _gaced.Name.Local == "\u0078" {
			_gfdbc, _aagdb := _dd.ParseInt(_gaced.Value, 10, 32)
			if _aagdb != nil {
				return _aagdb
			}
			_dcgb.XAttr = int32(_gfdbc)
			continue
		}
	}
	for {
		_gdag, _aeaaf := d.Token()
		if _aeaaf != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _aeaaf)
		}
		if _ccfbb, _fbece := _gdag.(_a.EndElement); _fbece && _ccfbb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

func (_gbfgeb *ST_Orientation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaccb, _cfaecb := d.Token()
	if _cfaecb != nil {
		return _cfaecb
	}
	if _ddfdd, _afeafa := _eaccb.(_a.EndElement); _afeafa && _ddfdd.Name == start.Name {
		*_gbfgeb = 1
		return nil
	}
	if _bgcebg, _abfcc := _eaccb.(_a.CharData); !_abfcc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eaccb)
	} else {
		switch string(_bgcebg) {
		case "":
			*_gbfgeb = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_gbfgeb = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_gbfgeb = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_gbfgeb = 3
		}
	}
	_eaccb, _cfaecb = d.Token()
	if _cfaecb != nil {
		return _cfaecb
	}
	if _degddaa, _dbecee := _eaccb.(_a.EndElement); _dbecee && _degddaa.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eaccb)
}

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_adageb *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }
func NewSst() *Sst                                                            { _gggegb := &Sst{}; _gggegb.CT_Sst = *NewCT_Sst(); return _gggegb }
func NewCT_DefinedNames() *CT_DefinedNames {
	_dcbdb := &CT_DefinedNames{}
	return _dcbdb
}
func (_aeegg *CT_PhoneticRun) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0062"}, Value: _fd.Sprintf("\u0025\u0076", _aeegg.SbAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0062"}, Value: _fd.Sprintf("\u0025\u0076", _aeegg.EbAttr)})
	e.EncodeToken(start)
	_ecgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074"}}
	_ff.AddPreserveSpaceAttr(&_ecgc, _aeegg.T)
	e.EncodeElement(_aeegg.T, _ecgc)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

func NewRevisions() *Revisions {
	_cdageg := &Revisions{}
	_cdageg.CT_Revisions = *NewCT_Revisions()
	return _cdageg
}
func (_agdaeb ST_CellFormulaType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cdbgga := _a.Attr{}
	_cdbgga.Name = name
	switch _agdaeb {
	case ST_CellFormulaTypeUnset:
		_cdbgga.Value = ""
	case ST_CellFormulaTypeNormal:
		_cdbgga.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_cdbgga.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_cdbgga.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_cdbgga.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _cdbgga, nil
}
func (_dfdd *CT_LegacyDrawing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egfd := range start.Attr {
		if _egfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egfd.Name.Local == "\u0069\u0064" || _egfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egfd.Name.Local == "\u0069\u0064" {
			_becbd := _egfd.Value
			_dfdd.IdAttr = _becbd
			continue
		}
	}
	for {
		_baaag, _bebgd := d.Token()
		if _bebgd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _bebgd)
		}
		if _ecfgac, _bacbd := _baaag.(_a.EndElement); _bacbd && _ecfgac.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_cceed *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_cceed.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _cceed.GuidAttr)
	}
	if _cceed.LastGuidAttr != nil {
		if !_b.ST_GuidPatternRe.MatchString(*_cceed.LastGuidAttr) {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, *_cceed.LastGuidAttr)
		}
	}
	for _degce, _ecgbc := range _cceed.Header {
		if _cebfb := _ecgbc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _degce)); _cebfb != nil {
			return _cebfb
		}
	}
	return nil
}
func NewCT_Fonts() *CT_Fonts {
	_cdeff := &CT_Fonts{}
	return _cdeff
}

// ValidateWithPath validates the CT_FontChoice and its children, prefixing error messages with path
func (_affdd *CT_FontChoice) ValidateWithPath(path string) error {
	if _affdd.Name != nil {
		if _aecee := _affdd.Name.ValidateWithPath(path + "\u002f\u004e\u0061m\u0065"); _aecee != nil {
			return _aecee
		}
	}
	if _affdd.Charset != nil {
		if _cfec := _affdd.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _cfec != nil {
			return _cfec
		}
	}
	if _affdd.Family != nil {
		if _feec := _affdd.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _feec != nil {
			return _feec
		}
	}
	if _affdd.B != nil {
		if _gggac := _affdd.B.ValidateWithPath(path + "\u002f\u0042"); _gggac != nil {
			return _gggac
		}
	}
	if _affdd.I != nil {
		if _ecbd := _affdd.I.ValidateWithPath(path + "\u002f\u0049"); _ecbd != nil {
			return _ecbd
		}
	}
	if _affdd.Strike != nil {
		if _bbacf := _affdd.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _bbacf != nil {
			return _bbacf
		}
	}
	if _affdd.Outline != nil {
		if _deddg := _affdd.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _deddg != nil {
			return _deddg
		}
	}
	if _affdd.Shadow != nil {
		if _cfgbd := _affdd.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _cfgbd != nil {
			return _cfgbd
		}
	}
	if _affdd.Condense != nil {
		if _fdcfd := _affdd.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _fdcfd != nil {
			return _fdcfd
		}
	}
	if _affdd.Extend != nil {
		if _cfccf := _affdd.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _cfccf != nil {
			return _cfccf
		}
	}
	if _affdd.Color != nil {
		if _eeaab := _affdd.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _eeaab != nil {
			return _eeaab
		}
	}
	if _affdd.Sz != nil {
		if _gcgdg := _affdd.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _gcgdg != nil {
			return _gcgdg
		}
	}
	if _affdd.U != nil {
		if _gfffb := _affdd.U.ValidateWithPath(path + "\u002f\u0055"); _gfffb != nil {
			return _gfffb
		}
	}
	if _affdd.VertAlign != nil {
		if _cdgeg := _affdd.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _cdgeg != nil {
			return _cdgeg
		}
	}
	if _affdd.Scheme != nil {
		if _aedeg := _affdd.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _aedeg != nil {
			return _aedeg
		}
	}
	return nil
}
func (_dab *CT_Authors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dga:
	for {
		_bad, _gag := d.Token()
		if _gag != nil {
			return _gag
		}
		switch _fba := _bad.(type) {
		case _a.StartElement:
			switch _fba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _ddb string
				if _dee := d.DecodeElement(&_ddb, &_fba); _dee != nil {
					return _dee
				}
				_dab.Author = append(_dab.Author, _ddb)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _fba.Name)
				if _bed := d.Skip(); _bed != nil {
					return _bed
				}
			}
		case _a.EndElement:
			break _dga
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_gbdb *CT_ChartFormats) ValidateWithPath(path string) error {
	for _baaa, _cgae := range _gbdb.ChartFormat {
		if _gbaf := _cgae.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _baaa)); _gbaf != nil {
			return _gbaf
		}
	}
	return nil
}

// Validate validates the CT_VolTopicRef and its children
func (_cecead *CT_VolTopicRef) Validate() error {
	return _cecead.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}

// Validate validates the CT_FileRecoveryPr and its children
func (_gbbcb *CT_FileRecoveryPr) Validate() error {
	return _gbbcb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_aacg *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }
func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_gcbdc := &CT_PivotAreaReference{}
	return _gcbdc
}

type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}
type ST_Pane byte

func (_dadgc *CT_Tuples) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dadgc.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_dadgc.CAttr)})
	}
	e.EncodeToken(start)
	_ggccd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0074\u0070\u006c"}}
	for _, _fbdag := range _dadgc.Tpl {
		e.EncodeElement(_fbdag, _ggccd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdeg *CT_Cols) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_eebe := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c"}}
	for _, _gdbgf := range _gdeg.Col {
		e.EncodeElement(_gdbgf, _eebe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_LegacyDrawing() *CT_LegacyDrawing { _gcggg := &CT_LegacyDrawing{}; return _gcggg }
func (_cgaba *CT_Format) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgaba.ActionAttr != ST_FormatActionUnset {
		_dceae, _beae := _cgaba.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _beae != nil {
			return _beae
		}
		start.Attr = append(start.Attr, _dceae)
	}
	if _cgaba.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cgaba.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_fcfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_cgaba.PivotArea, _fcfg)
	if _cgaba.ExtLst != nil {
		_aebac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgaba.ExtLst, _aebac)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}
type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_fdbgb *CT_Metadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fdbgb.MetadataTypes != nil {
		_cgccd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_fdbgb.MetadataTypes, _cgccd)
	}
	if _fdbgb.MetadataStrings != nil {
		_abfecg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ame\u0074\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_fdbgb.MetadataStrings, _abfecg)
	}
	if _fdbgb.MdxMetadata != nil {
		_adef := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u006d\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fdbgb.MdxMetadata, _adef)
	}
	if _fdbgb.FutureMetadata != nil {
		_cgbeb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0075\u0074\u0075\u0072e\u004d\u0065t\u0061\u0064\u0061\u0074\u0061"}}
		for _, _ggdgg := range _fdbgb.FutureMetadata {
			e.EncodeElement(_ggdgg, _cgbeb)
		}
	}
	if _fdbgb.CellMetadata != nil {
		_bgaddc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0063\u0065l\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fdbgb.CellMetadata, _bgaddc)
	}
	if _fdbgb.ValueMetadata != nil {
		_bcef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_fdbgb.ValueMetadata, _bcef)
	}
	if _fdbgb.ExtLst != nil {
		_gagcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdbgb.ExtLst, _gagcd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_badcd *CT_OutlinePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _badcd.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_badcd.ApplyStylesAttr))})
	}
	if _badcd.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_badcd.SummaryBelowAttr))})
	}
	if _badcd.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_badcd.SummaryRightAttr))})
	}
	if _badcd.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_badcd.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_OleObject() *CT_OleObject { _egffb := &CT_OleObject{}; return _egffb }
func (_bddbe *CT_RowFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bddbe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bddbe.CountAttr)})
	}
	e.EncodeToken(start)
	_fdcfde := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0066\u0069\u0065\u006cd"}}
	for _, _dcdbe := range _bddbe.Field {
		e.EncodeElement(_dcdbe, _fdcfde)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _g.Time
	ExtLst       *CT_ExtensionList
}

func (_fbgfg *CT_XmlPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egafd := range start.Attr {
		if _egafd.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_gadga, _dffgfe := _dd.ParseUint(_egafd.Value, 10, 32)
			if _dffgfe != nil {
				return _dffgfe
			}
			_fbgfg.MapIdAttr = uint32(_gadga)
			continue
		}
		if _egafd.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_fddgf := _egafd.Value
			_fbgfg.XpathAttr = _fddgf
			continue
		}
		if _egafd.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_fcaag := _egafd.Value
			_fbgfg.XmlDataTypeAttr = _fcaag
			continue
		}
	}
_cgbgbb:
	for {
		_becee, _efgbf := d.Token()
		if _efgbf != nil {
			return _efgbf
		}
		switch _cacaca := _becee.(type) {
		case _a.StartElement:
			switch _cacaca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgfg.ExtLst = NewCT_ExtensionList()
				if _gcaadd := d.DecodeElement(_fbgfg.ExtLst, &_cacaca); _gcaadd != nil {
					return _gcaadd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _cacaca.Name)
				if _gacabg := d.Skip(); _gacabg != nil {
					return _gacabg
				}
			}
		case _a.EndElement:
			break _cgbgbb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_GroupMember() *CT_GroupMember { _cdgdd := &CT_GroupMember{}; return _cdgdd }

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_ffbff *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_ffbff.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _ffbff.GuidAttr)
	}
	if _ffbgbf := _ffbff.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _ffbgbf != nil {
		return _ffbgbf
	}
	return nil
}
func (_fdbgfc *CT_Rst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cgegc:
	for {
		_debce, _gfbfd := d.Token()
		if _gfbfd != nil {
			return _gfbfd
		}
		switch _gdgbbg := _debce.(type) {
		case _a.StartElement:
			switch _gdgbbg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_fdbgfc.T = new(string)
				if _degebf := d.DecodeElement(_fdbgfc.T, &_gdgbbg); _degebf != nil {
					return _degebf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_cbcdb := NewCT_RElt()
				if _bfcac := d.DecodeElement(_cbcdb, &_gdgbbg); _bfcac != nil {
					return _bfcac
				}
				_fdbgfc.R = append(_fdbgfc.R, _cbcdb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_daeee := NewCT_PhoneticRun()
				if _gdgfed := d.DecodeElement(_daeee, &_gdgbbg); _gdgfed != nil {
					return _gdgfed
				}
				_fdbgfc.RPh = append(_fdbgfc.RPh, _daeee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_fdbgfc.PhoneticPr = NewCT_PhoneticPr()
				if _gcgcgf := d.DecodeElement(_fdbgfc.PhoneticPr, &_gdgbbg); _gcgcgf != nil {
					return _gcgcgf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _gdgbbg.Name)
				if _bceeb := d.Skip(); _bceeb != nil {
					return _bceeb
				}
			}
		case _a.EndElement:
			break _cgegc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MdxChoice() *CT_MdxChoice { _gfcfb := &CT_MdxChoice{}; return _gfcfb }
func (_becef *CT_Control) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdefb := range start.Attr {
		if _fdefb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdefb.Name.Local == "\u0069\u0064" || _fdefb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdefb.Name.Local == "\u0069\u0064" {
			_gcga := _fdefb.Value
			_becef.IdAttr = _gcga
			continue
		}
		if _fdefb.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_daad, _faad := _dd.ParseUint(_fdefb.Value, 10, 32)
			if _faad != nil {
				return _faad
			}
			_becef.ShapeIdAttr = uint32(_daad)
			continue
		}
		if _fdefb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eegaa := _fdefb.Value
			_becef.NameAttr = &_eegaa
			continue
		}
	}
_ccge:
	for {
		_bgded, _ddbed := d.Token()
		if _ddbed != nil {
			return _ddbed
		}
		switch _ddda := _bgded.(type) {
		case _a.StartElement:
			switch _ddda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_becef.ControlPr = NewCT_ControlPr()
				if _fdc := d.DecodeElement(_becef.ControlPr, &_ddda); _fdc != nil {
					return _fdc
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _ddda.Name)
				if _dgcc := d.Skip(); _dgcc != nil {
					return _dgcc
				}
			}
		case _a.EndElement:
			break _ccge
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotCaches and its children
func (_aaeeb *CT_PivotCaches) Validate() error {
	return _aaeeb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}

// Validate validates the CT_CellFormula and its children
func (_ecdcd *CT_CellFormula) Validate() error {
	return _ecdcd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}
func NewCT_ExternalLink() *CT_ExternalLink {
	_efdfef := &CT_ExternalLink{}
	_efdfef.ExternalLinkChoice = NewCT_ExternalLinkChoice()
	return _efdfef
}
func (_fccfb ST_FileType) ValidateWithPath(path string) error {
	switch _fccfb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fccfb))
	}
	return nil
}
func (_daeeb *CT_TupleCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dggcaf:
	for {
		_gefbde, _ccacba := d.Token()
		if _ccacba != nil {
			return _ccacba
		}
		switch _gfggcd := _gefbde.(type) {
		case _a.StartElement:
			switch _gfggcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_daeeb.Entries = NewCT_PCDSDTCEntries()
				if _cacef := d.DecodeElement(_daeeb.Entries, &_gfggcd); _cacef != nil {
					return _cacef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_daeeb.Sets = NewCT_Sets()
				if _eeagg := d.DecodeElement(_daeeb.Sets, &_gfggcd); _eeagg != nil {
					return _eeagg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_daeeb.QueryCache = NewCT_QueryCache()
				if _defaf := d.DecodeElement(_daeeb.QueryCache, &_gfggcd); _defaf != nil {
					return _defaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_daeeb.ServerFormats = NewCT_ServerFormats()
				if _egcfdc := d.DecodeElement(_daeeb.ServerFormats, &_gfggcd); _egcfdc != nil {
					return _egcfdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_daeeb.ExtLst = NewCT_ExtensionList()
				if _cfegd := d.DecodeElement(_daeeb.ExtLst, &_gfggcd); _cfegd != nil {
					return _cfegd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _gfggcd.Name)
				if _accgcc := d.Skip(); _accgcc != nil {
					return _accgcc
				}
			}
		case _a.EndElement:
			break _dggcaf
		case _a.CharData:
		}
	}
	return nil
}
func (_agca *CT_DefinedNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _agca.DefinedName != nil {
		_eggeg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}}
		for _, _fbbae := range _agca.DefinedName {
			e.EncodeElement(_fbbae, _eggeg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_fgcb *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _ecgb, _deabd := range _fgcb.SheetView {
		if _cgbad := _deabd.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _ecgb)); _cgbad != nil {
			return _cgbad
		}
	}
	if _fgcb.ExtLst != nil {
		if _cacg := _fgcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cacg != nil {
			return _cacg
		}
	}
	return nil
}
func (_accfa *CT_MetadataTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _accfa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_accfa.CountAttr)})
	}
	e.EncodeToken(start)
	_gbaea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u006d\u0065t\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _dffda := range _accfa.MetadataType {
		e.EncodeElement(_dffda, _gbaea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adcaag *CT_FontName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcab := range start.Attr {
		if _fcab.Name.Local == "\u0076\u0061\u006c" {
			_cgbeg := _fcab.Value
			_adcaag.ValAttr = _cgbeg
			continue
		}
	}
	for {
		_gacea, _aaeec := d.Token()
		if _aaeec != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _aaeec)
		}
		if _fcffa, _effcd := _gacea.(_a.EndElement); _effcd && _fcffa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fafgge ST_SortBy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fafgge.String(), start)
}
func (_ggcea *CT_DdeValues) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gddc := range start.Attr {
		if _gddc.Name.Local == "\u0072\u006f\u0077\u0073" {
			_fbbee, _ceff := _dd.ParseUint(_gddc.Value, 10, 32)
			if _ceff != nil {
				return _ceff
			}
			_ccec := uint32(_fbbee)
			_ggcea.RowsAttr = &_ccec
			continue
		}
		if _gddc.Name.Local == "\u0063\u006f\u006c\u0073" {
			_dbeff, _gecbb := _dd.ParseUint(_gddc.Value, 10, 32)
			if _gecbb != nil {
				return _gecbb
			}
			_cfcac := uint32(_dbeff)
			_ggcea.ColsAttr = &_cfcac
			continue
		}
	}
_deddd:
	for {
		_bdaefa, _cdfc := d.Token()
		if _cdfc != nil {
			return _cdfc
		}
		switch _fcadb := _bdaefa.(type) {
		case _a.StartElement:
			switch _fcadb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_dagdc := NewCT_DdeValue()
				if _bdfe := d.DecodeElement(_dagdc, &_fcadb); _bdfe != nil {
					return _bdfe
				}
				_ggcea.Value = append(_ggcea.Value, _dagdc)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _fcadb.Name)
				if _faebd := d.Skip(); _faebd != nil {
					return _faebd
				}
			}
		case _a.EndElement:
			break _deddd
		case _a.CharData:
		}
	}
	return nil
}

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

func (_acegbg ST_DdeValueType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_acegbg.String(), start)
}

// Validate validates the CT_LegacyDrawing and its children
func (_bddfb *CT_LegacyDrawing) Validate() error {
	return _bddfb.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func (_agab *CT_SmartTags) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_edeff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073"}}
	for _, _fbfdg := range _agab.CellSmartTags {
		e.EncodeElement(_fbfdg, _edeff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fadda *CT_QueryTableFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daaaf := range start.Attr {
		if _daaaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaeef, _baedb := _dd.ParseUint(_daaaf.Value, 10, 32)
			if _baedb != nil {
				return _baedb
			}
			_gaeag := uint32(_eaeef)
			_fadda.CountAttr = &_gaeag
			continue
		}
	}
_gbbge:
	for {
		_bcfde, _bedge := d.Token()
		if _bedge != nil {
			return _bedge
		}
		switch _aeegb := _bcfde.(type) {
		case _a.StartElement:
			switch _aeegb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_cdegf := NewCT_QueryTableField()
				if _egdbc := d.DecodeElement(_cdegf, &_aeegb); _egdbc != nil {
					return _egdbc
				}
				_fadda.QueryTableField = append(_fadda.QueryTableField, _cdegf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _aeegb.Name)
				if _edgdce := d.Skip(); _edgdce != nil {
					return _edgdce
				}
			}
		case _a.EndElement:
			break _gbbge
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FilterColumnChoice and its children
func (_bgea *CT_FilterColumnChoice) Validate() error {
	return _bgea.ValidateWithPath("C\u0054\u005f\u0046\u0069lt\u0065r\u0043\u006f\u006c\u0075\u006dn\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_fbgf *CT_OlapPr) ValidateWithPath(path string) error { return nil }

type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}
type ST_PageOrder byte

func NewCT_Cell() *CT_Cell { _eaaf := &CT_Cell{}; return _eaaf }
func (_dcgfe ST_FieldSortType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfdcb := _a.Attr{}
	_bfdcb.Name = name
	switch _dcgfe {
	case ST_FieldSortTypeUnset:
		_bfdcb.Value = ""
	case ST_FieldSortTypeManual:
		_bfdcb.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_bfdcb.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_bfdcb.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _bfdcb, nil
}

type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

func (_aeafdg ST_ShowDataAs) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eabae := _a.Attr{}
	_eabae.Name = name
	switch _aeafdg {
	case ST_ShowDataAsUnset:
		_eabae.Value = ""
	case ST_ShowDataAsNormal:
		_eabae.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_eabae.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_eabae.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_eabae.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_eabae.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_eabae.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_eabae.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_eabae.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_eabae.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _eabae, nil
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_ebage *CT_QueryTableDeletedFields) Validate() error {
	return _ebage.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}
type CT_TablePart struct{ IdAttr string }

func (_dbaec *CT_colItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dbaec.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dbaec.CountAttr)})
	}
	e.EncodeToken(start)
	_bgecfc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0069"}}
	for _, _fffdb := range _dbaec.I {
		e.EncodeElement(_fffdb, _bgecfc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type Workbook struct{ CT_Workbook }

func (_eeeccc *CT_Stylesheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bdgcae:
	for {
		_agdff, _faeaa := d.Token()
		if _faeaa != nil {
			return _faeaa
		}
		switch _bbgg := _agdff.(type) {
		case _a.StartElement:
			switch _bbgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_eeeccc.NumFmts = NewCT_NumFmts()
				if _caaaag := d.DecodeElement(_eeeccc.NumFmts, &_bbgg); _caaaag != nil {
					return _caaaag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_eeeccc.Fonts = NewCT_Fonts()
				if _agbca := d.DecodeElement(_eeeccc.Fonts, &_bbgg); _agbca != nil {
					return _agbca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_eeeccc.Fills = NewCT_Fills()
				if _deadcg := d.DecodeElement(_eeeccc.Fills, &_bbgg); _deadcg != nil {
					return _deadcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_eeeccc.Borders = NewCT_Borders()
				if _eabaab := d.DecodeElement(_eeeccc.Borders, &_bbgg); _eabaab != nil {
					return _eabaab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_eeeccc.CellStyleXfs = NewCT_CellStyleXfs()
				if _cfaaa := d.DecodeElement(_eeeccc.CellStyleXfs, &_bbgg); _cfaaa != nil {
					return _cfaaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_eeeccc.CellXfs = NewCT_CellXfs()
				if _feefd := d.DecodeElement(_eeeccc.CellXfs, &_bbgg); _feefd != nil {
					return _feefd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_eeeccc.CellStyles = NewCT_CellStyles()
				if _cgbfed := d.DecodeElement(_eeeccc.CellStyles, &_bbgg); _cgbfed != nil {
					return _cgbfed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_eeeccc.Dxfs = NewCT_Dxfs()
				if _eafdb := d.DecodeElement(_eeeccc.Dxfs, &_bbgg); _eafdb != nil {
					return _eafdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_eeeccc.TableStyles = NewCT_TableStyles()
				if _eeaec := d.DecodeElement(_eeeccc.TableStyles, &_bbgg); _eeaec != nil {
					return _eeaec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_eeeccc.Colors = NewCT_Colors()
				if _dafffe := d.DecodeElement(_eeeccc.Colors, &_bbgg); _dafffe != nil {
					return _dafffe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eeeccc.ExtLst = NewCT_ExtensionList()
				if _cbabe := d.DecodeElement(_eeeccc.ExtLst, &_bbgg); _cbabe != nil {
					return _cbabe
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _bbgg.Name)
				if _gabga := d.Skip(); _gabga != nil {
					return _gabga
				}
			}
		case _a.EndElement:
			break _bdgcae
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetProtection and its children
func (_aegfe *CT_SheetProtection) Validate() error {
	return _aegfe.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}

type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}

// Validate validates the CT_Dxf and its children
func (_cdbc *CT_Dxf) Validate() error {
	return _cdbc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}
func (_gccca *CT_WebPublishItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gccca.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gccca.DivIdAttr)})
	_fegdgd, _dbfgaf := _gccca.SourceTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _dbfgaf != nil {
		return _dbfgaf
	}
	start.Attr = append(start.Attr, _fegdgd)
	if _gccca.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _fd.Sprintf("\u0025\u0076", *_gccca.SourceRefAttr)})
	}
	if _gccca.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gccca.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gccca.DestinationFileAttr)})
	if _gccca.TitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gccca.TitleAttr)})
	}
	if _gccca.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gccca.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdffe *CT_Fonts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daacd := range start.Attr {
		if _daacd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgec, _geee := _dd.ParseUint(_daacd.Value, 10, 32)
			if _geee != nil {
				return _geee
			}
			_eggff := uint32(_bgec)
			_cdffe.CountAttr = &_eggff
			continue
		}
	}
_cddff:
	for {
		_cccfg, _dfbee := d.Token()
		if _dfbee != nil {
			return _dfbee
		}
		switch _beceb := _cccfg.(type) {
		case _a.StartElement:
			switch _beceb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_baccg := NewCT_Font()
				if _gdbge := d.DecodeElement(_baccg, &_beceb); _gdbge != nil {
					return _gdbge
				}
				_cdffe.Font = append(_cdffe.Font, _baccg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _beceb.Name)
				if _dcddgd := d.Skip(); _dcddgd != nil {
					return _dcddgd
				}
			}
		case _a.EndElement:
			break _cddff
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RangePr() *CT_RangePr { _efdfd := &CT_RangePr{}; return _efdfd }
func (_aadcf *CT_CellAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgaef := range start.Attr {
		if _fgaef.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_aadcf.HorizontalAttr.UnmarshalXMLAttr(_fgaef)
			continue
		}
		if _fgaef.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_aadcf.VerticalAttr.UnmarshalXMLAttr(_fgaef)
			continue
		}
		if _fgaef.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_bafe, _ggcc := _dd.ParseUint(_fgaef.Value, 10, 8)
			if _ggcc != nil {
				return _ggcc
			}
			_dff := uint8(_bafe)
			_aadcf.TextRotationAttr = &_dff
			continue
		}
		if _fgaef.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_aeaf, _aeea := _dd.ParseBool(_fgaef.Value)
			if _aeea != nil {
				return _aeea
			}
			_aadcf.WrapTextAttr = &_aeaf
			continue
		}
		if _fgaef.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_cda, _cgde := _dd.ParseUint(_fgaef.Value, 10, 32)
			if _cgde != nil {
				return _cgde
			}
			_ccbf := uint32(_cda)
			_aadcf.IndentAttr = &_ccbf
			continue
		}
		if _fgaef.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_bbbg, _aeae := _dd.ParseInt(_fgaef.Value, 10, 32)
			if _aeae != nil {
				return _aeae
			}
			_eag := int32(_bbbg)
			_aadcf.RelativeIndentAttr = &_eag
			continue
		}
		if _fgaef.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_ebde, _faa := _dd.ParseBool(_fgaef.Value)
			if _faa != nil {
				return _faa
			}
			_aadcf.JustifyLastLineAttr = &_ebde
			continue
		}
		if _fgaef.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_baea, _ddbc := _dd.ParseBool(_fgaef.Value)
			if _ddbc != nil {
				return _ddbc
			}
			_aadcf.ShrinkToFitAttr = &_baea
			continue
		}
		if _fgaef.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_bcga, _gbg := _dd.ParseUint(_fgaef.Value, 10, 32)
			if _gbg != nil {
				return _gbg
			}
			_bdb := uint32(_bcga)
			_aadcf.ReadingOrderAttr = &_bdb
			continue
		}
	}
	for {
		_gadfe, _ebef := d.Token()
		if _ebef != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _ebef)
		}
		if _afge, _bgdbd := _gadfe.(_a.EndElement); _bgdbd && _afge.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffgbc *CT_TableStyles) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcede := range start.Attr {
		if _dcede.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aaecb, _cgcecf := _dd.ParseUint(_dcede.Value, 10, 32)
			if _cgcecf != nil {
				return _cgcecf
			}
			_baffde := uint32(_aaecb)
			_ffgbc.CountAttr = &_baffde
			continue
		}
		if _dcede.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_abfgf := _dcede.Value
			_ffgbc.DefaultTableStyleAttr = &_abfgf
			continue
		}
		if _dcede.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_fgaaf := _dcede.Value
			_ffgbc.DefaultPivotStyleAttr = &_fgaaf
			continue
		}
	}
_eggee:
	for {
		_gcaeb, _dddbd := d.Token()
		if _dddbd != nil {
			return _dddbd
		}
		switch _fggee := _gcaeb.(type) {
		case _a.StartElement:
			switch _fggee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_bddcd := NewCT_TableStyle()
				if _bdcfb := d.DecodeElement(_bddcd, &_fggee); _bdcfb != nil {
					return _bdcfb
				}
				_ffgbc.TableStyle = append(_ffgbc.TableStyle, _bddcd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _fggee.Name)
				if _afbff := d.Skip(); _afbff != nil {
					return _afbff
				}
			}
		case _a.EndElement:
			break _eggee
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_bfcb *CT_PivotSelection) ValidateWithPath(path string) error {
	if _cebff := _bfcb.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _cebff != nil {
		return _cebff
	}
	if _cdeaaf := _bfcb.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _cdeaaf != nil {
		return _cdeaaf
	}
	if _ebdff := _bfcb.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _ebdff != nil {
		return _ebdff
	}
	return nil
}
func NewCT_DataValidation() *CT_DataValidation {
	_ggef := &CT_DataValidation{}
	return _ggef
}
func (_geddbd *CT_SharedItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acadbg := range start.Attr {
		if _acadbg.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_ecdfcc, _geeae := _dd.ParseBool(_acadbg.Value)
			if _geeae != nil {
				return _geeae
			}
			_geddbd.ContainsSemiMixedTypesAttr = &_ecdfcc
			continue
		}
		if _acadbg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_faace, _bcdae := _dd.ParseBool(_acadbg.Value)
			if _bcdae != nil {
				return _bcdae
			}
			_geddbd.ContainsNonDateAttr = &_faace
			continue
		}
		if _acadbg.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_ccece, _bcaea := _dd.ParseBool(_acadbg.Value)
			if _bcaea != nil {
				return _bcaea
			}
			_geddbd.ContainsDateAttr = &_ccece
			continue
		}
		if _acadbg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_deeffg, _gdgbc := _dd.ParseBool(_acadbg.Value)
			if _gdgbc != nil {
				return _gdgbc
			}
			_geddbd.ContainsStringAttr = &_deeffg
			continue
		}
		if _acadbg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_eaeaee, _ecbbg := _dd.ParseBool(_acadbg.Value)
			if _ecbbg != nil {
				return _ecbbg
			}
			_geddbd.ContainsBlankAttr = &_eaeaee
			continue
		}
		if _acadbg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_fgfcbe, _eeaga := _dd.ParseBool(_acadbg.Value)
			if _eeaga != nil {
				return _eeaga
			}
			_geddbd.ContainsMixedTypesAttr = &_fgfcbe
			continue
		}
		if _acadbg.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_beafd, _adcadg := _dd.ParseBool(_acadbg.Value)
			if _adcadg != nil {
				return _adcadg
			}
			_geddbd.ContainsNumberAttr = &_beafd
			continue
		}
		if _acadbg.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_edgg, _egdab := _dd.ParseBool(_acadbg.Value)
			if _egdab != nil {
				return _egdab
			}
			_geddbd.ContainsIntegerAttr = &_edgg
			continue
		}
		if _acadbg.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_fedc, _ededg := _dd.ParseFloat(_acadbg.Value, 64)
			if _ededg != nil {
				return _ededg
			}
			_geddbd.MinValueAttr = &_fedc
			continue
		}
		if _acadbg.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_bfdec, _bfefd := _dd.ParseFloat(_acadbg.Value, 64)
			if _bfefd != nil {
				return _bfefd
			}
			_geddbd.MaxValueAttr = &_bfdec
			continue
		}
		if _acadbg.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_bdcdcg, _dcdcf := ParseStdlibTime(_acadbg.Value)
			if _dcdcf != nil {
				return _dcdcf
			}
			_geddbd.MinDateAttr = &_bdcdcg
			continue
		}
		if _acadbg.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_dafef, _geead := ParseStdlibTime(_acadbg.Value)
			if _geead != nil {
				return _geead
			}
			_geddbd.MaxDateAttr = &_dafef
			continue
		}
		if _acadbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaaag, _effge := _dd.ParseUint(_acadbg.Value, 10, 32)
			if _effge != nil {
				return _effge
			}
			_fgcdf := uint32(_eaaag)
			_geddbd.CountAttr = &_fgcdf
			continue
		}
		if _acadbg.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_deagc, _babge := _dd.ParseBool(_acadbg.Value)
			if _babge != nil {
				return _babge
			}
			_geddbd.LongTextAttr = &_deagc
			continue
		}
	}
_ddcfa:
	for {
		_dgced, _ggeab := d.Token()
		if _ggeab != nil {
			return _ggeab
		}
		switch _efceeg := _dgced.(type) {
		case _a.StartElement:
			switch _efceeg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_debcc := NewCT_SharedItemsChoice()
				if _ggcab := d.DecodeElement(&_debcc.M, &_efceeg); _ggcab != nil {
					return _ggcab
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _debcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_ebdcd := NewCT_SharedItemsChoice()
				if _eedbg := d.DecodeElement(&_ebdcd.N, &_efceeg); _eedbg != nil {
					return _eedbg
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _ebdcd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_dadba := NewCT_SharedItemsChoice()
				if _ggecc := d.DecodeElement(&_dadba.B, &_efceeg); _ggecc != nil {
					return _ggecc
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _dadba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_cefgg := NewCT_SharedItemsChoice()
				if _bgdag := d.DecodeElement(&_cefgg.E, &_efceeg); _bgdag != nil {
					return _bgdag
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _cefgg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_fggda := NewCT_SharedItemsChoice()
				if _abbaab := d.DecodeElement(&_fggda.S, &_efceeg); _abbaab != nil {
					return _abbaab
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _fggda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_bfdea := NewCT_SharedItemsChoice()
				if _degcg := d.DecodeElement(&_bfdea.D, &_efceeg); _degcg != nil {
					return _degcg
				}
				_geddbd.SharedItemsChoice = append(_geddbd.SharedItemsChoice, _bfdea)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _efceeg.Name)
				if _cccb := d.Skip(); _cccb != nil {
					return _cccb
				}
			}
		case _a.EndElement:
			break _ddcfa
		case _a.CharData:
		}
	}
	return nil
}
func (_efggb *CT_MetadataType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _efggb.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _efggb.MinSupportedVersionAttr)})
	if _efggb.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.GhostRowAttr))})
	}
	if _efggb.GhostColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.GhostColAttr))})
	}
	if _efggb.EditAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.EditAttr))})
	}
	if _efggb.DeleteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.DeleteAttr))})
	}
	if _efggb.CopyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.CopyAttr))})
	}
	if _efggb.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteAllAttr))})
	}
	if _efggb.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteFormulasAttr))})
	}
	if _efggb.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteValuesAttr))})
	}
	if _efggb.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteFormatsAttr))})
	}
	if _efggb.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteCommentsAttr))})
	}
	if _efggb.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteDataValidationAttr))})
	}
	if _efggb.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteBordersAttr))})
	}
	if _efggb.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteColWidthsAttr))})
	}
	if _efggb.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.PasteNumberFormatsAttr))})
	}
	if _efggb.MergeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.MergeAttr))})
	}
	if _efggb.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.SplitFirstAttr))})
	}
	if _efggb.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.SplitAllAttr))})
	}
	if _efggb.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.RowColShiftAttr))})
	}
	if _efggb.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.ClearAllAttr))})
	}
	if _efggb.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.ClearFormatsAttr))})
	}
	if _efggb.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.ClearContentsAttr))})
	}
	if _efggb.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.ClearCommentsAttr))})
	}
	if _efggb.AssignAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.AssignAttr))})
	}
	if _efggb.CoerceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.CoerceAttr))})
	}
	if _efggb.AdjustAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.AdjustAttr))})
	}
	if _efggb.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efggb.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_fcead := &CT_PivotCacheDefinition{}
	_fcead.CacheSource = NewCT_CacheSource()
	_fcead.CacheFields = NewCT_CacheFields()
	return _fcead
}

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_gcebf *CT_colItems) ValidateWithPath(path string) error {
	for _ceddbg, _aecfbg := range _gcebf.I {
		if _gcbabg := _aecfbg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _ceddbg)); _gcbabg != nil {
			return _gcbabg
		}
	}
	return nil
}
func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_abdac := &CT_RevisionQueryTableField{}
	return _abdac
}

// Validate validates the CT_Colors and its children
func (_gbdea *CT_Colors) Validate() error {
	return _gbdea.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_affdf *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }
func (_eaba *CT_ColorScale) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dcbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0066\u0076\u006f"}}
	for _, _gdde := range _eaba.Cfvo {
		e.EncodeElement(_gdde, _dcbe)
	}
	_cdee := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
	for _, _gggfbd := range _eaba.Color {
		e.EncodeElement(_gggfbd, _cdee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bedfc ST_FontScheme) Validate() error     { return _bedfc.ValidateWithPath("") }
func NewCT_DataValidations() *CT_DataValidations { _gbaad := &CT_DataValidations{}; return _gbaad }

// Validate validates the CT_BorderPr and its children
func (_cef *CT_BorderPr) Validate() error {
	return _cef.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}
func NewCT_rowItems() *CT_rowItems { _fcfed := &CT_rowItems{}; return _fcfed }

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_bcbgfc *CT_SheetDimension) ValidateWithPath(path string) error { return nil }
func (_bedgb *ST_CellComments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_addbcd, _fcddad := d.Token()
	if _fcddad != nil {
		return _fcddad
	}
	if _aggdga, _cgfcd := _addbcd.(_a.EndElement); _cgfcd && _aggdga.Name == start.Name {
		*_bedgb = 1
		return nil
	}
	if _cgadc, _feceg := _addbcd.(_a.CharData); !_feceg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _addbcd)
	} else {
		switch string(_cgadc) {
		case "":
			*_bedgb = 0
		case "\u006e\u006f\u006e\u0065":
			*_bedgb = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_bedgb = 2
		case "\u0061\u0074\u0045n\u0064":
			*_bedgb = 3
		}
	}
	_addbcd, _fcddad = d.Token()
	if _fcddad != nil {
		return _fcddad
	}
	if _dbggf, _gecege := _addbcd.(_a.EndElement); _gecege && _dbggf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _addbcd)
}
func (_fbgcfe ST_CfvoType) String() string {
	switch _fbgcfe {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}
func (_gbaabb ST_CfvoType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gbaabb.String(), start)
}
func NewCT_RevisionConflict() *CT_RevisionConflict {
	_dgbae := &CT_RevisionConflict{}
	return _dgbae
}

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_bcafe *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }
func NewCT_Error() *CT_Error                                           { _bacac := &CT_Error{}; return _bacac }
func (_gggea *ST_RevisionAction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fffbe, _bgcdd := d.Token()
	if _bgcdd != nil {
		return _bgcdd
	}
	if _faecf, _eegfe := _fffbe.(_a.EndElement); _eegfe && _faecf.Name == start.Name {
		*_gggea = 1
		return nil
	}
	if _dcdefg, _bbcfe := _fffbe.(_a.CharData); !_bbcfe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffbe)
	} else {
		switch string(_dcdefg) {
		case "":
			*_gggea = 0
		case "\u0061\u0064\u0064":
			*_gggea = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_gggea = 2
		}
	}
	_fffbe, _bgcdd = d.Token()
	if _bgcdd != nil {
		return _bgcdd
	}
	if _cddcb, _efceb := _fffbe.(_a.EndElement); _efceb && _cddcb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffbe)
}
func (_gggcda *CT_FileSharing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gggcda.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gggcda.ReadOnlyRecommendedAttr))})
	}
	if _gggcda.UserNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.UserNameAttr)})
	}
	if _gggcda.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.ReservationPasswordAttr)})
	}
	if _gggcda.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.AlgorithmNameAttr)})
	}
	if _gggcda.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.HashValueAttr)})
	}
	if _gggcda.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.SaltValueAttr)})
	}
	if _gggcda.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fd.Sprintf("\u0025\u0076", *_gggcda.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fadbf ST_OleUpdate) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ffgdaf := _a.Attr{}
	_ffgdaf.Name = name
	switch _fadbf {
	case ST_OleUpdateUnset:
		_ffgdaf.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_ffgdaf.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_ffgdaf.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _ffgdaf, nil
}
func (_ddcb *CT_FileVersion) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddcb.AppNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcb.AppNameAttr)})
	}
	if _ddcb.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcb.LastEditedAttr)})
	}
	if _ddcb.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcb.LowestEditedAttr)})
	}
	if _ddcb.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcb.RupBuildAttr)})
	}
	if _ddcb.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcb.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

type ST_FileType byte

func (_cfaade *CT_RevisionMove) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfaade.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cfaade.SourceAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _cfaade.DestinationAttr)})
	if _cfaade.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cfaade.SourceSheetIdAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfaade.RIdAttr)})
	if _cfaade.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfaade.UaAttr))})
	}
	if _cfaade.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfaade.RaAttr))})
	}
	e.EncodeToken(start)
	if _cfaade.RevisionMoveChoice != nil {
		for _, _dagad := range _cfaade.RevisionMoveChoice {
			_dagad.MarshalXML(e, _a.StartElement{})
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfagc ST_FormatAction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bagfdb := _a.Attr{}
	_bagfdb.Name = name
	switch _bfagc {
	case ST_FormatActionUnset:
		_bagfdb.Value = ""
	case ST_FormatActionBlank:
		_bagfdb.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_bagfdb.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_bagfdb.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_bagfdb.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _bagfdb, nil
}
func (_dbcge *CT_DiscretePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dbcge.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dbcge.CountAttr)})
	}
	e.EncodeToken(start)
	_cccf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
	for _, _abaeab := range _dbcge.X {
		e.EncodeElement(_abaeab, _cccf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gfdge ST_Pane) Validate() error { return _gfdge.ValidateWithPath("") }

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_ddcd *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _aaee, _ggde := range _ddcd.DefinedName {
		if _bcfcf := _ggde.ValidateWithPath(_fd.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _aaee)); _bcfcf != nil {
			return _bcfcf
		}
	}
	return nil
}
func (_ageef *ST_DataValidationOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cdffb, _edegda := d.Token()
	if _edegda != nil {
		return _edegda
	}
	if _cdcbee, _geafg := _cdffb.(_a.EndElement); _geafg && _cdcbee.Name == start.Name {
		*_ageef = 1
		return nil
	}
	if _fdffc, _deedfd := _cdffb.(_a.CharData); !_deedfd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdffb)
	} else {
		switch string(_fdffc) {
		case "":
			*_ageef = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_ageef = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ageef = 2
		case "\u0065\u0071\u0075a\u006c":
			*_ageef = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ageef = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ageef = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_ageef = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ageef = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_ageef = 8
		}
	}
	_cdffb, _edegda = d.Token()
	if _edegda != nil {
		return _edegda
	}
	if _becbe, _acagdg := _cdffb.(_a.EndElement); _acagdg && _becbe.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdffb)
}
func (_befab ST_TargetScreenSize) Validate() error { return _befab.ValidateWithPath("") }

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_effgb *MapInfo) ValidateWithPath(path string) error {
	if _bbfbc := _effgb.CT_MapInfo.ValidateWithPath(path); _bbfbc != nil {
		return _bbfbc
	}
	return nil
}
func NewCT_OleItems() *CT_OleItems { _afegd := &CT_OleItems{}; return _afegd }
func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_affgc := &CT_ExternalLinkChoice{}
	return _affgc
}

type CT_PCDSDTCEntriesChoice struct {

	// No Value
	M *CT_Missing

	// Numeric Value
	N *CT_Number

	// Error Value
	E *CT_Error

	// Character Value
	S *CT_String
}

func NewCT_GroupMembers() *CT_GroupMembers { _debcgf := &CT_GroupMembers{}; return _debcgf }

// Validate validates the CT_MeasureGroup and its children
func (_efbbd *CT_MeasureGroup) Validate() error {
	return _efbbd.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}

// Validate validates the CT_WebPublishing and its children
func (_fgaeb *CT_WebPublishing) Validate() error {
	return _fgaeb.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_gadgf *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _cacee, _febeab := range _gadgf.MetadataType {
		if _fgff := _febeab.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _cacee)); _fgff != nil {
			return _fgff
		}
	}
	return nil
}

// Validate validates the CT_Xf and its children
func (_ggeagf *CT_Xf) Validate() error { return _ggeagf.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

// Validate validates the CT_CacheHierarchies and its children
func (_ccbd *CT_CacheHierarchies) Validate() error {
	return _ccbd.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_gafgcd *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _bgbgea := _gafgcd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bgbgea != nil {
		return _bgbgea
	}
	return nil
}
func ParseStdlibTime(s string) (_g.Time, error) { return _b.ParseStdlibTime(s) }

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}

func (_gcdbfg ST_DataValidationType) Validate() error { return _gcdbfg.ValidateWithPath("") }

type ST_RevisionAction byte

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_acbfgf *CT_Workbook) ValidateWithPath(path string) error {
	if _gedfbg := _acbfgf.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _gedfbg != nil {
		return _gedfbg
	}
	if _acbfgf.FileVersion != nil {
		if _badef := _acbfgf.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _badef != nil {
			return _badef
		}
	}
	if _acbfgf.FileSharing != nil {
		if _fgdcd := _acbfgf.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _fgdcd != nil {
			return _fgdcd
		}
	}
	if _acbfgf.WorkbookPr != nil {
		if _eafgf := _acbfgf.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _eafgf != nil {
			return _eafgf
		}
	}
	if _acbfgf.WorkbookProtection != nil {
		if _fegef := _acbfgf.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _fegef != nil {
			return _fegef
		}
	}
	if _acbfgf.BookViews != nil {
		if _abgab := _acbfgf.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _abgab != nil {
			return _abgab
		}
	}
	if _fdbae := _acbfgf.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _fdbae != nil {
		return _fdbae
	}
	if _acbfgf.FunctionGroups != nil {
		if _bedaab := _acbfgf.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _bedaab != nil {
			return _bedaab
		}
	}
	if _acbfgf.ExternalReferences != nil {
		if _feafe := _acbfgf.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _feafe != nil {
			return _feafe
		}
	}
	if _acbfgf.DefinedNames != nil {
		if _egebg := _acbfgf.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _egebg != nil {
			return _egebg
		}
	}
	if _acbfgf.CalcPr != nil {
		if _acagdc := _acbfgf.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _acagdc != nil {
			return _acagdc
		}
	}
	if _acbfgf.OleSize != nil {
		if _bcfgea := _acbfgf.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _bcfgea != nil {
			return _bcfgea
		}
	}
	if _acbfgf.CustomWorkbookViews != nil {
		if _cbgfdd := _acbfgf.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _cbgfdd != nil {
			return _cbgfdd
		}
	}
	if _acbfgf.PivotCaches != nil {
		if _cecdf := _acbfgf.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _cecdf != nil {
			return _cecdf
		}
	}
	if _acbfgf.SmartTagPr != nil {
		if _eabgf := _acbfgf.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _eabgf != nil {
			return _eabgf
		}
	}
	if _acbfgf.SmartTagTypes != nil {
		if _efcbgd := _acbfgf.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _efcbgd != nil {
			return _efcbgd
		}
	}
	if _acbfgf.WebPublishing != nil {
		if _gcegcg := _acbfgf.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _gcegcg != nil {
			return _gcegcg
		}
	}
	for _cabgc, _agfea := range _acbfgf.FileRecoveryPr {
		if _dbada := _agfea.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _cabgc)); _dbada != nil {
			return _dbada
		}
	}
	if _acbfgf.WebPublishObjects != nil {
		if _ffdfd := _acbfgf.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _ffdfd != nil {
			return _ffdfd
		}
	}
	if _acbfgf.ExtLst != nil {
		if _dggbca := _acbfgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dggbca != nil {
			return _dggbca
		}
	}
	return nil
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_acaaa *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _gfda, _gggcc := range _acaaa.Bk {
		if _abagb := _gggcc.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _gfda)); _abagb != nil {
			return _abagb
		}
	}
	if _acaaa.ExtLst != nil {
		if _ffgbb := _acaaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffgbb != nil {
			return _ffgbb
		}
	}
	return nil
}

// Validate validates the CT_Revisions and its children
func (_cddbe *CT_Revisions) Validate() error {
	return _cddbe.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}

type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ceebd ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _ceebd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceebd))
	}
	return nil
}
func (_accac ST_CellSpans) String() string { return _d.Join(_accac, "\u0020") }

// Validate validates the CT_Sheet and its children
func (_geafb *CT_Sheet) Validate() error {
	return _geafb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}
func (_fbca *CT_PivotAreaReference) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _beabd := range start.Attr {
		if _beabd.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_ffdge, _ggfcd := _dd.ParseUint(_beabd.Value, 10, 32)
			if _ggfcd != nil {
				return _ggfcd
			}
			_fgbfdf := uint32(_ffdge)
			_fbca.FieldAttr = &_fgbfdf
			continue
		}
		if _beabd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gffdd, _eaaab := _dd.ParseUint(_beabd.Value, 10, 32)
			if _eaaab != nil {
				return _eaaab
			}
			_gcacb := uint32(_gffdd)
			_fbca.CountAttr = &_gcacb
			continue
		}
		if _beabd.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_bbfge, _edcfeb := _dd.ParseBool(_beabd.Value)
			if _edcfeb != nil {
				return _edcfeb
			}
			_fbca.SelectedAttr = &_bbfge
			continue
		}
		if _beabd.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_fecaf, _cgbdd := _dd.ParseBool(_beabd.Value)
			if _cgbdd != nil {
				return _cgbdd
			}
			_fbca.ByPositionAttr = &_fecaf
			continue
		}
		if _beabd.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_eeefa, _dfdda := _dd.ParseBool(_beabd.Value)
			if _dfdda != nil {
				return _dfdda
			}
			_fbca.RelativeAttr = &_eeefa
			continue
		}
		if _beabd.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dfbedb, _ccebf := _dd.ParseBool(_beabd.Value)
			if _ccebf != nil {
				return _ccebf
			}
			_fbca.DefaultSubtotalAttr = &_dfbedb
			continue
		}
		if _beabd.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cfbac, _eeede := _dd.ParseBool(_beabd.Value)
			if _eeede != nil {
				return _eeede
			}
			_fbca.SumSubtotalAttr = &_cfbac
			continue
		}
		if _beabd.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_fbgae, _fbbfe := _dd.ParseBool(_beabd.Value)
			if _fbbfe != nil {
				return _fbbfe
			}
			_fbca.CountASubtotalAttr = &_fbgae
			continue
		}
		if _beabd.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_eeadb, _deedfg := _dd.ParseBool(_beabd.Value)
			if _deedfg != nil {
				return _deedfg
			}
			_fbca.AvgSubtotalAttr = &_eeadb
			continue
		}
		if _beabd.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abeagf, _fega := _dd.ParseBool(_beabd.Value)
			if _fega != nil {
				return _fega
			}
			_fbca.MaxSubtotalAttr = &_abeagf
			continue
		}
		if _beabd.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gabdf, _bbeb := _dd.ParseBool(_beabd.Value)
			if _bbeb != nil {
				return _bbeb
			}
			_fbca.MinSubtotalAttr = &_gabdf
			continue
		}
		if _beabd.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gaaab, _cdgegg := _dd.ParseBool(_beabd.Value)
			if _cdgegg != nil {
				return _cdgegg
			}
			_fbca.ProductSubtotalAttr = &_gaaab
			continue
		}
		if _beabd.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gcadg, _aegae := _dd.ParseBool(_beabd.Value)
			if _aegae != nil {
				return _aegae
			}
			_fbca.CountSubtotalAttr = &_gcadg
			continue
		}
		if _beabd.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_deagd, _ccbec := _dd.ParseBool(_beabd.Value)
			if _ccbec != nil {
				return _ccbec
			}
			_fbca.StdDevSubtotalAttr = &_deagd
			continue
		}
		if _beabd.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gdcge, _fdedd := _dd.ParseBool(_beabd.Value)
			if _fdedd != nil {
				return _fdedd
			}
			_fbca.StdDevPSubtotalAttr = &_gdcge
			continue
		}
		if _beabd.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_acdbfd, _ddfg := _dd.ParseBool(_beabd.Value)
			if _ddfg != nil {
				return _ddfg
			}
			_fbca.VarSubtotalAttr = &_acdbfd
			continue
		}
		if _beabd.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efbad, _efcgg := _dd.ParseBool(_beabd.Value)
			if _efcgg != nil {
				return _efcgg
			}
			_fbca.VarPSubtotalAttr = &_efbad
			continue
		}
	}
_bcbfa:
	for {
		_degcb, _daddf := d.Token()
		if _daddf != nil {
			return _daddf
		}
		switch _bgdgb := _degcb.(type) {
		case _a.StartElement:
			switch _bgdgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eadad := NewCT_Index()
				if _gdeeac := d.DecodeElement(_eadad, &_bgdgb); _gdeeac != nil {
					return _gdeeac
				}
				_fbca.X = append(_fbca.X, _eadad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbca.ExtLst = NewCT_ExtensionList()
				if _baefg := d.DecodeElement(_fbca.ExtLst, &_bgdgb); _baefg != nil {
					return _baefg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _bgdgb.Name)
				if _ddfbb := d.Skip(); _ddfbb != nil {
					return _ddfbb
				}
			}
		case _a.EndElement:
			break _bcbfa
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TablesChoice and its children
func (_defag *CT_TablesChoice) Validate() error {
	return _defag.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

type ST_CellFormulaType byte

func (_dacfc *CT_GroupItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dacfc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dacfc.CountAttr)})
	}
	e.EncodeToken(start)
	for _, _adcbg := range _dacfc.GroupItemsChoice {
		_adcbg.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fgbege *CT_SheetProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fgbege.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fgbege.PasswordAttr)})
	}
	if _fgbege.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fgbege.AlgorithmNameAttr)})
	}
	if _fgbege.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_fgbege.HashValueAttr)})
	}
	if _fgbege.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_fgbege.SaltValueAttr)})
	}
	if _fgbege.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fd.Sprintf("\u0025\u0076", *_fgbege.SpinCountAttr)})
	}
	if _fgbege.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.SheetAttr))})
	}
	if _fgbege.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.ObjectsAttr))})
	}
	if _fgbege.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.ScenariosAttr))})
	}
	if _fgbege.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.FormatCellsAttr))})
	}
	if _fgbege.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.FormatColumnsAttr))})
	}
	if _fgbege.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.FormatRowsAttr))})
	}
	if _fgbege.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.InsertColumnsAttr))})
	}
	if _fgbege.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.InsertRowsAttr))})
	}
	if _fgbege.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.InsertHyperlinksAttr))})
	}
	if _fgbege.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.DeleteColumnsAttr))})
	}
	if _fgbege.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.DeleteRowsAttr))})
	}
	if _fgbege.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.SelectLockedCellsAttr))})
	}
	if _fgbege.SortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.SortAttr))})
	}
	if _fgbege.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.AutoFilterAttr))})
	}
	if _fgbege.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.PivotTablesAttr))})
	}
	if _fgbege.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgbege.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Boolean and its children
func (_bdc *CT_Boolean) Validate() error {
	return _bdc.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

func (_dbdcb *CT_Map) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcbfb := range start.Attr {
		if _fcbfb.Name.Local == "\u0049\u0044" {
			_fdcabb, _bgbfb := _dd.ParseUint(_fcbfb.Value, 10, 32)
			if _bgbfb != nil {
				return _bgbfb
			}
			_dbdcb.IDAttr = uint32(_fdcabb)
			continue
		}
		if _fcbfb.Name.Local == "\u004e\u0061\u006d\u0065" {
			_aefba := _fcbfb.Value
			_dbdcb.NameAttr = _aefba
			continue
		}
		if _fcbfb.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_afcgab := _fcbfb.Value
			_dbdcb.RootElementAttr = _afcgab
			continue
		}
		if _fcbfb.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_abded := _fcbfb.Value
			_dbdcb.SchemaIDAttr = _abded
			continue
		}
		if _fcbfb.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_cegcdf, _dafba := _dd.ParseBool(_fcbfb.Value)
			if _dafba != nil {
				return _dafba
			}
			_dbdcb.ShowImportExportValidationErrorsAttr = _cegcdf
			continue
		}
		if _fcbfb.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_bddfd, _aeaeb := _dd.ParseBool(_fcbfb.Value)
			if _aeaeb != nil {
				return _aeaeb
			}
			_dbdcb.AutoFitAttr = _bddfd
			continue
		}
		if _fcbfb.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_beag, _ccbdead := _dd.ParseBool(_fcbfb.Value)
			if _ccbdead != nil {
				return _ccbdead
			}
			_dbdcb.AppendAttr = _beag
			continue
		}
		if _fcbfb.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_adbab, _eegfc := _dd.ParseBool(_fcbfb.Value)
			if _eegfc != nil {
				return _eegfc
			}
			_dbdcb.PreserveSortAFLayoutAttr = _adbab
			continue
		}
		if _fcbfb.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_fcacbf, _cgec := _dd.ParseBool(_fcbfb.Value)
			if _cgec != nil {
				return _cgec
			}
			_dbdcb.PreserveFormatAttr = _fcacbf
			continue
		}
	}
_dcfeda:
	for {
		_bdbd, _afbgd := d.Token()
		if _afbgd != nil {
			return _afbgd
		}
		switch _ffee := _bdbd.(type) {
		case _a.StartElement:
			switch _ffee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_dbdcb.DataBinding = NewCT_DataBinding()
				if _ggbgd := d.DecodeElement(_dbdcb.DataBinding, &_ffee); _ggbgd != nil {
					return _ggbgd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _ffee.Name)
				if _caced := d.Skip(); _caced != nil {
					return _caced
				}
			}
		case _a.EndElement:
			break _dcfeda
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableStyleElement and its children
func (_efadc *CT_TableStyleElement) Validate() error {
	return _efadc.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}
func NewCT_SmartTags() *CT_SmartTags {
	_ccbcdc := &CT_SmartTags{}
	return _ccbcdc
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_eacd *CT_CustomProperties) ValidateWithPath(path string) error {
	for _afed, _bfdee := range _eacd.CustomPr {
		if _effg := _bfdee.ValidateWithPath(_fd.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _afed)); _effg != nil {
			return _effg
		}
	}
	return nil
}
func NewTable() *Table { _ebafd := &Table{}; _ebafd.CT_Table = *NewCT_Table(); return _ebafd }

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Formats and its children
func (_cdfde *CT_Formats) Validate() error {
	return _cdfde.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

// Validate validates the CT_Parameters and its children
func (_cfaca *CT_Parameters) Validate() error {
	return _cfaca.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}
func (_cbccb *CT_SmartTagTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _cbccb.SmartTagType != nil {
		_efgeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0073\u006da\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _bccdgg := range _cbccb.SmartTagType {
			e.EncodeElement(_bccdgg, _efgeg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_fgec *CT_Field) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Missing and its children
func (_gdcea *CT_Missing) Validate() error {
	return _gdcea.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func (_adbfc *ST_OleUpdate) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfeaf, _cdabac := d.Token()
	if _cdabac != nil {
		return _cdabac
	}
	if _cecdaa, _fcedbb := _dfeaf.(_a.EndElement); _fcedbb && _cecdaa.Name == start.Name {
		*_adbfc = 1
		return nil
	}
	if _gcdebc, _abbef := _dfeaf.(_a.CharData); !_abbef {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfeaf)
	} else {
		switch string(_gcdebc) {
		case "":
			*_adbfc = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_adbfc = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_adbfc = 2
		}
	}
	_dfeaf, _cdabac = d.Token()
	if _cdabac != nil {
		return _cdabac
	}
	if _ebgeg, _ffbca := _dfeaf.(_a.EndElement); _ffbca && _ebgeg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfeaf)
}
func NewCT_TableStyles() *CT_TableStyles   { _efgfb := &CT_TableStyles{}; return _efgfb }
func (_eefbdg ST_RefMode) Validate() error { return _eefbdg.ValidateWithPath("") }
func (_eaafb *CT_Number) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeecg := range start.Attr {
		if _eeecg.Name.Local == "\u0076" {
			_fgbffg, _abade := _dd.ParseFloat(_eeecg.Value, 64)
			if _abade != nil {
				return _abade
			}
			_eaafb.VAttr = _fgbffg
			continue
		}
		if _eeecg.Name.Local == "\u0075" {
			_decdb, _bbcbea := _dd.ParseBool(_eeecg.Value)
			if _bbcbea != nil {
				return _bbcbea
			}
			_eaafb.UAttr = &_decdb
			continue
		}
		if _eeecg.Name.Local == "\u0066" {
			_cfdec, _fbfg := _dd.ParseBool(_eeecg.Value)
			if _fbfg != nil {
				return _fbfg
			}
			_eaafb.FAttr = &_cfdec
			continue
		}
		if _eeecg.Name.Local == "\u0063" {
			_dcddbb := _eeecg.Value
			_eaafb.CAttr = &_dcddbb
			continue
		}
		if _eeecg.Name.Local == "\u0063\u0070" {
			_cdcdd, _gadfc := _dd.ParseUint(_eeecg.Value, 10, 32)
			if _gadfc != nil {
				return _gadfc
			}
			_ebade := uint32(_cdcdd)
			_eaafb.CpAttr = &_ebade
			continue
		}
		if _eeecg.Name.Local == "\u0069\u006e" {
			_bagc, _eabbc := _dd.ParseUint(_eeecg.Value, 10, 32)
			if _eabbc != nil {
				return _eabbc
			}
			_dfcbf := uint32(_bagc)
			_eaafb.InAttr = &_dfcbf
			continue
		}
		if _eeecg.Name.Local == "\u0062\u0063" {
			_fcfbd := _eeecg.Value
			_eaafb.BcAttr = &_fcfbd
			continue
		}
		if _eeecg.Name.Local == "\u0066\u0063" {
			_cdffeb := _eeecg.Value
			_eaafb.FcAttr = &_cdffeb
			continue
		}
		if _eeecg.Name.Local == "\u0069" {
			_ffdba, _cfebf := _dd.ParseBool(_eeecg.Value)
			if _cfebf != nil {
				return _cfebf
			}
			_eaafb.IAttr = &_ffdba
			continue
		}
		if _eeecg.Name.Local == "\u0075\u006e" {
			_fgfgd, _cbafd := _dd.ParseBool(_eeecg.Value)
			if _cbafd != nil {
				return _cbafd
			}
			_eaafb.UnAttr = &_fgfgd
			continue
		}
		if _eeecg.Name.Local == "\u0073\u0074" {
			_egdbb, _fdgdc := _dd.ParseBool(_eeecg.Value)
			if _fdgdc != nil {
				return _fdgdc
			}
			_eaafb.StAttr = &_egdbb
			continue
		}
		if _eeecg.Name.Local == "\u0062" {
			_dfgba, _edccc := _dd.ParseBool(_eeecg.Value)
			if _edccc != nil {
				return _edccc
			}
			_eaafb.BAttr = &_dfgba
			continue
		}
	}
_ggcda:
	for {
		_ebega, _fbeeg := d.Token()
		if _fbeeg != nil {
			return _fbeeg
		}
		switch _deffg := _ebega.(type) {
		case _a.StartElement:
			switch _deffg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_gdcfd := NewCT_Tuples()
				if _bddeb := d.DecodeElement(_gdcfd, &_deffg); _bddeb != nil {
					return _bddeb
				}
				_eaafb.Tpls = append(_eaafb.Tpls, _gdcfd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fddcca := NewCT_X()
				if _abeaddf := d.DecodeElement(_fddcca, &_deffg); _abeaddf != nil {
					return _abeaddf
				}
				_eaafb.X = append(_eaafb.X, _fddcca)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _deffg.Name)
				if _bgggc := d.Skip(); _bgggc != nil {
					return _bgggc
				}
			}
		case _a.EndElement:
			break _ggcda
		case _a.CharData:
		}
	}
	return nil
}

type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}

func (_ffbc *CT_PageField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agddf := range start.Attr {
		if _agddf.Name.Local == "\u0066\u006c\u0064" {
			_dcddba, _agcecd := _dd.ParseInt(_agddf.Value, 10, 32)
			if _agcecd != nil {
				return _agcecd
			}
			_ffbc.FldAttr = int32(_dcddba)
			continue
		}
		if _agddf.Name.Local == "\u0069\u0074\u0065\u006d" {
			_gdace, _aggac := _dd.ParseUint(_agddf.Value, 10, 32)
			if _aggac != nil {
				return _aggac
			}
			_eebfd := uint32(_gdace)
			_ffbc.ItemAttr = &_eebfd
			continue
		}
		if _agddf.Name.Local == "\u0068\u0069\u0065\u0072" {
			_gefce, _gggee := _dd.ParseInt(_agddf.Value, 10, 32)
			if _gggee != nil {
				return _gggee
			}
			_gfeaf := int32(_gefce)
			_ffbc.HierAttr = &_gfeaf
			continue
		}
		if _agddf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_daecc := _agddf.Value
			_ffbc.NameAttr = &_daecc
			continue
		}
		if _agddf.Name.Local == "\u0063\u0061\u0070" {
			_cdafa := _agddf.Value
			_ffbc.CapAttr = &_cdafa
			continue
		}
	}
_dfcfc:
	for {
		_gdgcc, _egedde := d.Token()
		if _egedde != nil {
			return _egedde
		}
		switch _bdcab := _gdgcc.(type) {
		case _a.StartElement:
			switch _bdcab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffbc.ExtLst = NewCT_ExtensionList()
				if _begcf := d.DecodeElement(_ffbc.ExtLst, &_bdcab); _begcf != nil {
					return _begcf
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _bdcab.Name)
				if _dcgbe := d.Skip(); _dcgbe != nil {
					return _dcgbe
				}
			}
		case _a.EndElement:
			break _dfcfc
		case _a.CharData:
		}
	}
	return nil
}
func (_aeeaac *PivotCacheRecords) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aeeaac.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _bgfea := range start.Attr {
		if _bgfea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eaedf, _cafeef := _dd.ParseUint(_bgfea.Value, 10, 32)
			if _cafeef != nil {
				return _cafeef
			}
			_dcgbc := uint32(_eaedf)
			_aeeaac.CountAttr = &_dcgbc
			continue
		}
	}
_cfccg:
	for {
		_cdeafc, _dagcec := d.Token()
		if _dagcec != nil {
			return _dagcec
		}
		switch _fgagcg := _cdeafc.(type) {
		case _a.StartElement:
			switch _fgagcg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_egagf := NewCT_Record()
				if _cdeag := d.DecodeElement(_egagf, &_fgagcg); _cdeag != nil {
					return _cdeag
				}
				_aeeaac.R = append(_aeeaac.R, _egagf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeeaac.ExtLst = NewCT_ExtensionList()
				if _ebebc := d.DecodeElement(_aeeaac.ExtLst, &_fgagcg); _ebebc != nil {
					return _ebebc
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _fgagcg.Name)
				if _ceeacf := d.Skip(); _ceeacf != nil {
					return _ceeacf
				}
			}
		case _a.EndElement:
			break _cfccg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PageField() *CT_PageField { _affff := &CT_PageField{}; return _affff }
func (_fdabc ST_GroupBy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdabc.String(), start)
}
func (_bcaec *CT_GradientStop) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _bcaec.PositionAttr)})
	e.EncodeToken(start)
	_agdgg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
	e.EncodeElement(_bcaec.Color, _agdgg)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_gdeae := &CT_ExternalSheetDataSet{}
	return _gdeae
}
func (_eddeg *CT_PivotHierarchy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eddeg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.OutlineAttr))})
	}
	if _eddeg.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.MultipleItemSelectionAllowedAttr))})
	}
	if _eddeg.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.SubtotalTopAttr))})
	}
	if _eddeg.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.ShowInFieldListAttr))})
	}
	if _eddeg.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.DragToRowAttr))})
	}
	if _eddeg.DragToColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.DragToColAttr))})
	}
	if _eddeg.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.DragToPageAttr))})
	}
	if _eddeg.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.DragToDataAttr))})
	}
	if _eddeg.DragOffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.DragOffAttr))})
	}
	if _eddeg.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eddeg.IncludeNewItemsInFilterAttr))})
	}
	if _eddeg.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_eddeg.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _eddeg.Mps != nil {
		_bagge := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_eddeg.Mps, _bagge)
	}
	if _eddeg.Members != nil {
		_ecbf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _ceccb := range _eddeg.Members {
			e.EncodeElement(_ceccb, _ecbf)
		}
	}
	if _eddeg.ExtLst != nil {
		_cfbee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eddeg.ExtLst, _cfbee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdcgge ST_SmartTagShow) Validate() error { return _cdcgge.ValidateWithPath("") }

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_fcdfg *CT_LevelGroup) ValidateWithPath(path string) error {
	if _cbed := _fcdfg.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _cbed != nil {
		return _cbed
	}
	return nil
}

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_faccg *CT_PivotFilters) ValidateWithPath(path string) error {
	for _fdcabbf, _decbgb := range _faccg.Filter {
		if _bagda := _decbgb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _fdcabbf)); _bagda != nil {
			return _bagda
		}
	}
	return nil
}
func NewCT_IgnoredErrors() *CT_IgnoredErrors { _bddab := &CT_IgnoredErrors{}; return _bddab }
func (_fefgaa *CT_PCDKPI) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cgfc := range start.Attr {
		if _cgfc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_afgdb := _cgfc.Value
			_fefgaa.UniqueNameAttr = _afgdb
			continue
		}
		if _cgfc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_dgdga := _cgfc.Value
			_fefgaa.CaptionAttr = &_dgdga
			continue
		}
		if _cgfc.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_bdebb := _cgfc.Value
			_fefgaa.DisplayFolderAttr = &_bdebb
			continue
		}
		if _cgfc.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_bcbbd := _cgfc.Value
			_fefgaa.MeasureGroupAttr = &_bcbbd
			continue
		}
		if _cgfc.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_aeec := _cgfc.Value
			_fefgaa.ParentAttr = &_aeec
			continue
		}
		if _cgfc.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_degeb := _cgfc.Value
			_fefgaa.ValueAttr = _degeb
			continue
		}
		if _cgfc.Name.Local == "\u0067\u006f\u0061\u006c" {
			_bffff := _cgfc.Value
			_fefgaa.GoalAttr = &_bffff
			continue
		}
		if _cgfc.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_abdaf := _cgfc.Value
			_fefgaa.StatusAttr = &_abdaf
			continue
		}
		if _cgfc.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_gcadcb := _cgfc.Value
			_fefgaa.TrendAttr = &_gcadcb
			continue
		}
		if _cgfc.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_addbbf := _cgfc.Value
			_fefgaa.WeightAttr = &_addbbf
			continue
		}
		if _cgfc.Name.Local == "\u0074\u0069\u006d\u0065" {
			_defaad := _cgfc.Value
			_fefgaa.TimeAttr = &_defaad
			continue
		}
	}
	for {
		_aeffa, _bbdaa := d.Token()
		if _bbdaa != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _bbdaa)
		}
		if _fbfcf, _ggaba := _aeffa.(_a.EndElement); _ggaba && _fbfcf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Comment() *CT_Comment { _agea := &CT_Comment{}; _agea.Text = NewCT_Rst(); return _agea }
func (_dfcfb ST_FilterOperator) String() string {
	switch _dfcfb {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}
func (_ebcgd ST_PrintError) ValidateWithPath(path string) error {
	switch _ebcgd {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebcgd))
	}
	return nil
}

type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

func (_gcgge *CT_TableColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfebf := range start.Attr {
		if _bfebf.Name.Local == "\u0069\u0064" {
			_bggdc, _bgfbc := _dd.ParseUint(_bfebf.Value, 10, 32)
			if _bgfbc != nil {
				return _bgfbc
			}
			_gcgge.IdAttr = uint32(_bggdc)
			continue
		}
		if _bfebf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dcafe := _bfebf.Value
			_gcgge.UniqueNameAttr = &_dcafe
			continue
		}
		if _bfebf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ffab := _bfebf.Value
			_gcgge.NameAttr = _ffab
			continue
		}
		if _bfebf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_gcgge.TotalsRowFunctionAttr.UnmarshalXMLAttr(_bfebf)
			continue
		}
		if _bfebf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_cbggc := _bfebf.Value
			_gcgge.TotalsRowLabelAttr = &_cbggc
			continue
		}
		if _bfebf.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_befbg, _dgecc := _dd.ParseUint(_bfebf.Value, 10, 32)
			if _dgecc != nil {
				return _dgecc
			}
			_fbdcd := uint32(_befbg)
			_gcgge.QueryTableFieldIdAttr = &_fbdcd
			continue
		}
		if _bfebf.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_dffcb, _bgece := _dd.ParseUint(_bfebf.Value, 10, 32)
			if _bgece != nil {
				return _bgece
			}
			_gcfdfb := uint32(_dffcb)
			_gcgge.HeaderRowDxfIdAttr = &_gcfdfb
			continue
		}
		if _bfebf.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_abbeb, _gagdf := _dd.ParseUint(_bfebf.Value, 10, 32)
			if _gagdf != nil {
				return _gagdf
			}
			_gdged := uint32(_abbeb)
			_gcgge.DataDxfIdAttr = &_gdged
			continue
		}
		if _bfebf.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_afgac, _bfcge := _dd.ParseUint(_bfebf.Value, 10, 32)
			if _bfcge != nil {
				return _bfcge
			}
			_eggcb := uint32(_afgac)
			_gcgge.TotalsRowDxfIdAttr = &_eggcb
			continue
		}
		if _bfebf.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_egbfg := _bfebf.Value
			_gcgge.HeaderRowCellStyleAttr = &_egbfg
			continue
		}
		if _bfebf.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_gedbba := _bfebf.Value
			_gcgge.DataCellStyleAttr = &_gedbba
			continue
		}
		if _bfebf.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_fgcag := _bfebf.Value
			_gcgge.TotalsRowCellStyleAttr = &_fgcag
			continue
		}
	}
_beaef:
	for {
		_efgebg, _dfbedf := d.Token()
		if _dfbedf != nil {
			return _dfbedf
		}
		switch _afdfb := _efgebg.(type) {
		case _a.StartElement:
			switch _afdfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_gcgge.CalculatedColumnFormula = NewCT_TableFormula()
				if _cfdae := d.DecodeElement(_gcgge.CalculatedColumnFormula, &_afdfb); _cfdae != nil {
					return _cfdae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_gcgge.TotalsRowFormula = NewCT_TableFormula()
				if _bceef := d.DecodeElement(_gcgge.TotalsRowFormula, &_afdfb); _bceef != nil {
					return _bceef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_gcgge.XmlColumnPr = NewCT_XmlColumnPr()
				if _gcddb := d.DecodeElement(_gcgge.XmlColumnPr, &_afdfb); _gcddb != nil {
					return _gcddb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcgge.ExtLst = NewCT_ExtensionList()
				if _ebbgg := d.DecodeElement(_gcgge.ExtLst, &_afdfb); _ebbgg != nil {
					return _ebbgg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _afdfb.Name)
				if _dfcab := d.Skip(); _dfcab != nil {
					return _dfcab
				}
			}
		case _a.EndElement:
			break _beaef
		case _a.CharData:
		}
	}
	return nil
}
func (_bgffa *CT_CustomSheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_aggeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003acu\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _ggaag := range _bgffa.CustomSheetView {
		e.EncodeElement(_ggaag, _aggeb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}
type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_eebef ST_DataConsolidateFunction) Validate() error { return _eebef.ValidateWithPath("") }

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_afbg *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _aaecc, _ggdcc := range _afbg.Row {
		if _aggg := _ggdcc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _aaecc)); _aggg != nil {
			return _aggg
		}
	}
	return nil
}
func NewCT_Mdx() *CT_Mdx {
	_cfdac := &CT_Mdx{}
	_cfdac.FAttr = ST_MdxFunctionType(1)
	_cfdac.MdxChoice = NewCT_MdxChoice()
	return _cfdac
}

// Validate validates the CT_RangeSets and its children
func (_cgaf *CT_RangeSets) Validate() error {
	return _cgaf.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}

// Validate validates the CT_RgbColor and its children
func (_ccacbb *CT_RgbColor) Validate() error {
	return _ccacbb.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_dcgee *CT_CustomProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dcgee.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dcgee.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aaggd *ST_Type) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaeddf, _fdadd := d.Token()
	if _fdadd != nil {
		return _fdadd
	}
	if _abgafg, _eaaabd := _gaeddf.(_a.EndElement); _eaaabd && _abgafg.Name == start.Name {
		*_aaggd = 1
		return nil
	}
	if _abgge, _bbgae := _gaeddf.(_a.CharData); !_bbgae {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaeddf)
	} else {
		switch string(_abgge) {
		case "":
			*_aaggd = 0
		case "\u006e\u006f\u006e\u0065":
			*_aaggd = 1
		case "\u0061\u006c\u006c":
			*_aaggd = 2
		case "\u0072\u006f\u0077":
			*_aaggd = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_aaggd = 4
		}
	}
	_gaeddf, _fdadd = d.Token()
	if _fdadd != nil {
		return _fdadd
	}
	if _bfeda, _befdcg := _gaeddf.(_a.EndElement); _befdcg && _bfeda.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaeddf)
}

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_cecgd *Sst) ValidateWithPath(path string) error {
	if _bfafbd := _cecgd.CT_Sst.ValidateWithPath(path); _bfafbd != nil {
		return _bfafbd
	}
	return nil
}

type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

func NewCT_MetadataStrings() *CT_MetadataStrings { _eeefd := &CT_MetadataStrings{}; return _eeefd }
func (_feacd *ST_CalcMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dafeba, _bdebd := d.Token()
	if _bdebd != nil {
		return _bdebd
	}
	if _cedee, _edaccb := _dafeba.(_a.EndElement); _edaccb && _cedee.Name == start.Name {
		*_feacd = 1
		return nil
	}
	if _accdfd, _egaad := _dafeba.(_a.CharData); !_egaad {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafeba)
	} else {
		switch string(_accdfd) {
		case "":
			*_feacd = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_feacd = 1
		case "\u0061\u0075\u0074\u006f":
			*_feacd = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_feacd = 3
		}
	}
	_dafeba, _bdebd = d.Token()
	if _bdebd != nil {
		return _bdebd
	}
	if _bcecf, _dgdad := _dafeba.(_a.EndElement); _dgdad && _bcecf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafeba)
}
func (_faegaf *Headers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u0069\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _faegaf.CT_RevisionHeaders.MarshalXML(e, start)
}

// Validate validates the CT_MetadataStrings and its children
func (_efbcdf *CT_MetadataStrings) Validate() error {
	return _efbcdf.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}
func (_eebca *CT_PrintOptions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eebca.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eebca.HorizontalCenteredAttr))})
	}
	if _eebca.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eebca.VerticalCenteredAttr))})
	}
	if _eebca.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eebca.HeadingsAttr))})
	}
	if _eebca.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eebca.GridLinesAttr))})
	}
	if _eebca.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eebca.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_geebe ST_MdxFunctionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_ccegea := _a.Attr{}
	_ccegea.Name = name
	switch _geebe {
	case ST_MdxFunctionTypeUnset:
		_ccegea.Value = ""
	case ST_MdxFunctionTypeM:
		_ccegea.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_ccegea.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_ccegea.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_ccegea.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_ccegea.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_ccegea.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_ccegea.Value = "\u006b"
	}
	return _ccegea, nil
}

type ST_SortMethod byte

func (_dbegb *CT_MetadataStringIndex) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _dbegb.XAttr)})
	if _dbegb.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dbegb.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adedb *CT_SmartTagPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efcdc := range start.Attr {
		if _efcdc.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_abfdf, _bccec := _dd.ParseBool(_efcdc.Value)
			if _bccec != nil {
				return _bccec
			}
			_adedb.EmbedAttr = &_abfdf
			continue
		}
		if _efcdc.Name.Local == "\u0073\u0068\u006f\u0077" {
			_adedb.ShowAttr.UnmarshalXMLAttr(_efcdc)
			continue
		}
	}
	for {
		_agaffg, _cbaag := d.Token()
		if _cbaag != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _cbaag)
		}
		if _dgcada, _fgbbb := _agaffg.(_a.EndElement); _fgbbb && _dgcada.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbaaa *CT_ProtectedRanges) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gbdbg:
	for {
		_abbee, _aaaba := d.Token()
		if _aaaba != nil {
			return _aaaba
		}
		switch _abbfa := _abbee.(type) {
		case _a.StartElement:
			switch _abbfa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_bbdcg := NewCT_ProtectedRange()
				if _fdcgag := d.DecodeElement(_bbdcg, &_abbfa); _fdcgag != nil {
					return _fdcgag
				}
				_fbaaa.ProtectedRange = append(_fbaaa.ProtectedRange, _bbdcg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _abbfa.Name)
				if _gcebe := d.Skip(); _gcebe != nil {
					return _gcebe
				}
			}
		case _a.EndElement:
			break _gbdbg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Number and its children
func (_aegc *CT_Number) Validate() error {
	return _aegc.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}
type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}
type ST_VerticalAlignment byte
type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func NewCT_QueryCache() *CT_QueryCache { _edbce := &CT_QueryCache{}; return _edbce }
func (_ccagea *CT_QueryTableRefresh) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ccagea.QueryTableFields = NewCT_QueryTableFields()
	for _, _fffbd := range start.Attr {
		if _fffbd.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_ceeeg, _adcbb := _dd.ParseBool(_fffbd.Value)
			if _adcbb != nil {
				return _adcbb
			}
			_ccagea.PreserveSortFilterLayoutAttr = &_ceeeg
			continue
		}
		if _fffbd.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_dfadba, _bdegae := _dd.ParseBool(_fffbd.Value)
			if _bdegae != nil {
				return _bdegae
			}
			_ccagea.FieldIdWrappedAttr = &_dfadba
			continue
		}
		if _fffbd.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_gaffca, _aeafdb := _dd.ParseBool(_fffbd.Value)
			if _aeafdb != nil {
				return _aeafdb
			}
			_ccagea.HeadersInLastRefreshAttr = &_gaffca
			continue
		}
		if _fffbd.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_fcege, _ggcdf := _dd.ParseUint(_fffbd.Value, 10, 8)
			if _ggcdf != nil {
				return _ggcdf
			}
			_efecd := uint8(_fcege)
			_ccagea.MinimumVersionAttr = &_efecd
			continue
		}
		if _fffbd.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_gabda, _gbedg := _dd.ParseUint(_fffbd.Value, 10, 32)
			if _gbedg != nil {
				return _gbedg
			}
			_cgede := uint32(_gabda)
			_ccagea.NextIdAttr = &_cgede
			continue
		}
		if _fffbd.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_fdbdf, _ddfge := _dd.ParseUint(_fffbd.Value, 10, 32)
			if _ddfge != nil {
				return _ddfge
			}
			_fdfff := uint32(_fdbdf)
			_ccagea.UnboundColumnsLeftAttr = &_fdfff
			continue
		}
		if _fffbd.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_fcddg, _adgef := _dd.ParseUint(_fffbd.Value, 10, 32)
			if _adgef != nil {
				return _adgef
			}
			_ffacf := uint32(_fcddg)
			_ccagea.UnboundColumnsRightAttr = &_ffacf
			continue
		}
	}
_faba:
	for {
		_bcbcbe, _dbgfg := d.Token()
		if _dbgfg != nil {
			return _dbgfg
		}
		switch _geec := _bcbcbe.(type) {
		case _a.StartElement:
			switch _geec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _abgfg := d.DecodeElement(_ccagea.QueryTableFields, &_geec); _abgfg != nil {
					return _abgfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ccagea.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _ebfbb := d.DecodeElement(_ccagea.QueryTableDeletedFields, &_geec); _ebfbb != nil {
					return _ebfbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_ccagea.SortState = NewCT_SortState()
				if _bebdf := d.DecodeElement(_ccagea.SortState, &_geec); _bebdf != nil {
					return _bebdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccagea.ExtLst = NewCT_ExtensionList()
				if _bfegb := d.DecodeElement(_ccagea.ExtLst, &_geec); _bfegb != nil {
					return _bfegb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _geec.Name)
				if _bcegb := d.Skip(); _bcegb != nil {
					return _bcegb
				}
			}
		case _a.EndElement:
			break _faba
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_afga *CT_Metadata) ValidateWithPath(path string) error {
	if _afga.MetadataTypes != nil {
		if _cdbgf := _afga.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _cdbgf != nil {
			return _cdbgf
		}
	}
	if _afga.MetadataStrings != nil {
		if _ebaag := _afga.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _ebaag != nil {
			return _ebaag
		}
	}
	if _afga.MdxMetadata != nil {
		if _badcb := _afga.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _badcb != nil {
			return _badcb
		}
	}
	for _fcbeb, _dabcf := range _afga.FutureMetadata {
		if _dggb := _dabcf.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _fcbeb)); _dggb != nil {
			return _dggb
		}
	}
	if _afga.CellMetadata != nil {
		if _effdg := _afga.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _effdg != nil {
			return _effdg
		}
	}
	if _afga.ValueMetadata != nil {
		if _aagga := _afga.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _aagga != nil {
			return _aagga
		}
	}
	if _afga.ExtLst != nil {
		if _fceec := _afga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fceec != nil {
			return _fceec
		}
	}
	return nil
}
func (_fcdab *CT_SheetId) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _geebb := range start.Attr {
		if _geebb.Name.Local == "\u0076\u0061\u006c" {
			_fgadg, _dacdea := _dd.ParseUint(_geebb.Value, 10, 32)
			if _dacdea != nil {
				return _dacdea
			}
			_fcdab.ValAttr = uint32(_fgadg)
			continue
		}
	}
	for {
		_ffdfc, _fggdag := d.Token()
		if _fggdag != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _fggdag)
		}
		if _abcbbga, _bdacfa := _ffdfc.(_a.EndElement); _bdacfa && _abcbbga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afcde *CT_OutlinePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aceed := range start.Attr {
		if _aceed.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_aggcf, _geagg := _dd.ParseBool(_aceed.Value)
			if _geagg != nil {
				return _geagg
			}
			_afcde.ApplyStylesAttr = &_aggcf
			continue
		}
		if _aceed.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_efggd, _fdbgd := _dd.ParseBool(_aceed.Value)
			if _fdbgd != nil {
				return _fdbgd
			}
			_afcde.SummaryBelowAttr = &_efggd
			continue
		}
		if _aceed.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_ddff, _ecae := _dd.ParseBool(_aceed.Value)
			if _ecae != nil {
				return _ecae
			}
			_afcde.SummaryRightAttr = &_ddff
			continue
		}
		if _aceed.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_afcaca, _dbbdfb := _dd.ParseBool(_aceed.Value)
			if _dbbdfb != nil {
				return _dbbdfb
			}
			_afcde.ShowOutlineSymbolsAttr = &_afcaca
			continue
		}
	}
	for {
		_gcagg, _edegd := d.Token()
		if _edegd != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _edegd)
		}
		if _bfbgb, _aaaeg := _gcagg.(_a.EndElement); _aaaeg && _bfbgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gbbfc ST_SourceType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gbbfc.String(), start)
}
func (_gegdc *ST_CellFormulaType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bebea, _bgafe := d.Token()
	if _bgafe != nil {
		return _bgafe
	}
	if _fcfbdb, _ccfgc := _bebea.(_a.EndElement); _ccfgc && _fcfbdb.Name == start.Name {
		*_gegdc = 1
		return nil
	}
	if _deabfe, _fcdfb := _bebea.(_a.CharData); !_fcdfb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bebea)
	} else {
		switch string(_deabfe) {
		case "":
			*_gegdc = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_gegdc = 1
		case "\u0061\u0072\u0072a\u0079":
			*_gegdc = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_gegdc = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_gegdc = 4
		}
	}
	_bebea, _bgafe = d.Token()
	if _bgafe != nil {
		return _bgafe
	}
	if _cbeabdc, _aecbcb := _bebea.(_a.EndElement); _aecbcb && _cbeabdc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bebea)
}
func NewDialogsheet() *Dialogsheet {
	_eddaf := &Dialogsheet{}
	_eddaf.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _eddaf
}
func (_eaeba *CT_PivotCacheRecords) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abebf := range start.Attr {
		if _abebf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eadada, _cfbge := _dd.ParseUint(_abebf.Value, 10, 32)
			if _cfbge != nil {
				return _cfbge
			}
			_efcggf := uint32(_eadada)
			_eaeba.CountAttr = &_efcggf
			continue
		}
	}
_cbcdg:
	for {
		_fafa, _feeabf := d.Token()
		if _feeabf != nil {
			return _feeabf
		}
		switch _fddca := _fafa.(type) {
		case _a.StartElement:
			switch _fddca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_bfbad := NewCT_Record()
				if _aaeeg := d.DecodeElement(_bfbad, &_fddca); _aaeeg != nil {
					return _aaeeg
				}
				_eaeba.R = append(_eaeba.R, _bfbad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaeba.ExtLst = NewCT_ExtensionList()
				if _edgbc := d.DecodeElement(_eaeba.ExtLst, &_fddca); _edgbc != nil {
					return _edgbc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _fddca.Name)
				if _bdcf := d.Skip(); _bdcf != nil {
					return _bdcf
				}
			}
		case _a.EndElement:
			break _cbcdg
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_efcbg *CT_Parameters) ValidateWithPath(path string) error {
	for _dcagc, _ccfbag := range _efcbg.Parameter {
		if _fbdca := _ccfbag.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _dcagc)); _fbdca != nil {
			return _fbdca
		}
	}
	return nil
}
func (_cfdbef ST_OleUpdate) String() string {
	switch _cfdbef {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}
func (_aceff ST_SmartTagShow) String() string {
	switch _aceff {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}
func (_gdbeab *CalcChain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdbeab.CT_CalcChain = *NewCT_CalcChain()
_bggec:
	for {
		_fbagf, _bdaafe := d.Token()
		if _bdaafe != nil {
			return _bdaafe
		}
		switch _ddbde := _fbagf.(type) {
		case _a.StartElement:
			switch _ddbde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_faadcb := NewCT_CalcCell()
				if _eafedc := d.DecodeElement(_faadcb, &_ddbde); _eafedc != nil {
					return _eafedc
				}
				_gdbeab.C = append(_gdbeab.C, _faadcb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbeab.ExtLst = NewCT_ExtensionList()
				if _cbfbd := d.DecodeElement(_gdbeab.ExtLst, &_ddbde); _cbfbd != nil {
					return _cbfbd
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _ddbde.Name)
				if _fbdcb := d.Skip(); _fbdcb != nil {
					return _fbdcb
				}
			}
		case _a.EndElement:
			break _bggec
		case _a.CharData:
		}
	}
	return nil
}
func (_abfgbc ST_SortMethod) String() string {
	switch _abfgbc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_ffede *CT_IntProperty) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_CustomFilter and its children
func (_gbgge *CT_CustomFilter) Validate() error {
	return _gbgge.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_abeea *CT_RangeSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeccg := range start.Attr {
		if _eeccg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eeccg.Name.Local == "\u0069\u0064" || _eeccg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eeccg.Name.Local == "\u0069\u0064" {
			_daafb := _eeccg.Value
			_abeea.IdAttr = &_daafb
			continue
		}
		if _eeccg.Name.Local == "\u0069\u0031" {
			_ccddc, _cfcfa := _dd.ParseUint(_eeccg.Value, 10, 32)
			if _cfcfa != nil {
				return _cfcfa
			}
			_bfbbfc := uint32(_ccddc)
			_abeea.I1Attr = &_bfbbfc
			continue
		}
		if _eeccg.Name.Local == "\u0069\u0032" {
			_ggcga, _deeac := _dd.ParseUint(_eeccg.Value, 10, 32)
			if _deeac != nil {
				return _deeac
			}
			_aacbg := uint32(_ggcga)
			_abeea.I2Attr = &_aacbg
			continue
		}
		if _eeccg.Name.Local == "\u0069\u0033" {
			_bgbgf, _caeaf := _dd.ParseUint(_eeccg.Value, 10, 32)
			if _caeaf != nil {
				return _caeaf
			}
			_fdfeg := uint32(_bgbgf)
			_abeea.I3Attr = &_fdfeg
			continue
		}
		if _eeccg.Name.Local == "\u0069\u0034" {
			_agefc, _adfcc := _dd.ParseUint(_eeccg.Value, 10, 32)
			if _adfcc != nil {
				return _adfcc
			}
			_bcggb := uint32(_agefc)
			_abeea.I4Attr = &_bcggb
			continue
		}
		if _eeccg.Name.Local == "\u0072\u0065\u0066" {
			_ggfda := _eeccg.Value
			_abeea.RefAttr = &_ggfda
			continue
		}
		if _eeccg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_geggc := _eeccg.Value
			_abeea.NameAttr = &_geggc
			continue
		}
		if _eeccg.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_cdac := _eeccg.Value
			_abeea.SheetAttr = &_cdac
			continue
		}
	}
	for {
		_agbfg, _fefdfe := d.Token()
		if _fefdfe != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _fefdfe)
		}
		if _gedfdd, _cbfga := _agbfg.(_a.EndElement); _cbfga && _gedfdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbfc *CT_ConditionalFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbfc.PivotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbfc.PivotAttr))})
	}
	if _fbfc.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_fbfc.SqrefAttr)})
	}
	e.EncodeToken(start)
	_cfgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0066\u0052\u0075\u006c\u0065"}}
	for _, _gcde := range _fbfc.CfRule {
		e.EncodeElement(_gcde, _cfgb)
	}
	if _fbfc.ExtLst != nil {
		_cabc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbfc.ExtLst, _cabc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ededd ST_ParameterType) ValidateWithPath(path string) error {
	switch _ededd {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ededd))
	}
	return nil
}
func (_cefgd *Metadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069:\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _cefgd.CT_Metadata.MarshalXML(e, start)
}
func (_fdegc *CT_Chartsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fdegc.SheetViews = NewCT_ChartsheetViews()
	_fdegc.Drawing = NewCT_Drawing()
_fbba:
	for {
		_gdfg, _acdb := d.Token()
		if _acdb != nil {
			return _acdb
		}
		switch _fceg := _gdfg.(type) {
		case _a.StartElement:
			switch _fceg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fdegc.SheetPr = NewCT_ChartsheetPr()
				if _geeda := d.DecodeElement(_fdegc.SheetPr, &_fceg); _geeda != nil {
					return _geeda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _cbbc := d.DecodeElement(_fdegc.SheetViews, &_fceg); _cbbc != nil {
					return _cbbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fdegc.SheetProtection = NewCT_ChartsheetProtection()
				if _dcab := d.DecodeElement(_fdegc.SheetProtection, &_fceg); _dcab != nil {
					return _dcab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fdegc.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _ddeg := d.DecodeElement(_fdegc.CustomSheetViews, &_fceg); _ddeg != nil {
					return _ddeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fdegc.PageMargins = NewCT_PageMargins()
				if _gbca := d.DecodeElement(_fdegc.PageMargins, &_fceg); _gbca != nil {
					return _gbca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fdegc.PageSetup = NewCT_CsPageSetup()
				if _adag := d.DecodeElement(_fdegc.PageSetup, &_fceg); _adag != nil {
					return _adag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fdegc.HeaderFooter = NewCT_HeaderFooter()
				if _cbfc := d.DecodeElement(_fdegc.HeaderFooter, &_fceg); _cbfc != nil {
					return _cbfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _fafg := d.DecodeElement(_fdegc.Drawing, &_fceg); _fafg != nil {
					return _fafg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fdegc.LegacyDrawing = NewCT_LegacyDrawing()
				if _ccgbe := d.DecodeElement(_fdegc.LegacyDrawing, &_fceg); _ccgbe != nil {
					return _ccgbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fdegc.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _ddbd := d.DecodeElement(_fdegc.LegacyDrawingHF, &_fceg); _ddbd != nil {
					return _ddbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fdegc.DrawingHF = NewCT_DrawingHF()
				if _ebgc := d.DecodeElement(_fdegc.DrawingHF, &_fceg); _ebgc != nil {
					return _ebgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_fdegc.Picture = NewCT_SheetBackgroundPicture()
				if _ggab := d.DecodeElement(_fdegc.Picture, &_fceg); _ggab != nil {
					return _ggab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_fdegc.WebPublishItems = NewCT_WebPublishItems()
				if _fedb := d.DecodeElement(_fdegc.WebPublishItems, &_fceg); _fedb != nil {
					return _fedb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdegc.ExtLst = NewCT_ExtensionList()
				if _daab := d.DecodeElement(_fdegc.ExtLst, &_fceg); _daab != nil {
					return _daab
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _fceg.Name)
				if _cggbg := d.Skip(); _cggbg != nil {
					return _cggbg
				}
			}
		case _a.EndElement:
			break _fbba
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func (_bcbc *CT_CellFormula) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdaa := range start.Attr {
		if _bdaa.Name.Local == "\u0074" {
			_bcbc.TAttr.UnmarshalXMLAttr(_bdaa)
			continue
		}
		if _bdaa.Name.Local == "\u0061\u0063\u0061" {
			_dabe, _eada := _dd.ParseBool(_bdaa.Value)
			if _eada != nil {
				return _eada
			}
			_bcbc.AcaAttr = &_dabe
			continue
		}
		if _bdaa.Name.Local == "\u0072\u0065\u0066" {
			_addg := _bdaa.Value
			_bcbc.RefAttr = &_addg
			continue
		}
		if _bdaa.Name.Local == "\u0064\u0074\u0032\u0044" {
			_cefc, _caga := _dd.ParseBool(_bdaa.Value)
			if _caga != nil {
				return _caga
			}
			_bcbc.Dt2DAttr = &_cefc
			continue
		}
		if _bdaa.Name.Local == "\u0064\u0074\u0072" {
			_dfa, _feca := _dd.ParseBool(_bdaa.Value)
			if _feca != nil {
				return _feca
			}
			_bcbc.DtrAttr = &_dfa
			continue
		}
		if _bdaa.Name.Local == "\u0064\u0065\u006c\u0031" {
			_eacf, _dbcg := _dd.ParseBool(_bdaa.Value)
			if _dbcg != nil {
				return _dbcg
			}
			_bcbc.Del1Attr = &_eacf
			continue
		}
		if _bdaa.Name.Local == "\u0064\u0065\u006c\u0032" {
			_eega, _gfef := _dd.ParseBool(_bdaa.Value)
			if _gfef != nil {
				return _gfef
			}
			_bcbc.Del2Attr = &_eega
			continue
		}
		if _bdaa.Name.Local == "\u0072\u0031" {
			_cfeb := _bdaa.Value
			_bcbc.R1Attr = &_cfeb
			continue
		}
		if _bdaa.Name.Local == "\u0072\u0032" {
			_ccbe := _bdaa.Value
			_bcbc.R2Attr = &_ccbe
			continue
		}
		if _bdaa.Name.Local == "\u0063\u0061" {
			_dfbf, _gdfa := _dd.ParseBool(_bdaa.Value)
			if _gdfa != nil {
				return _gdfa
			}
			_bcbc.CaAttr = &_dfbf
			continue
		}
		if _bdaa.Name.Local == "\u0073\u0069" {
			_bcdc, _gggcd := _dd.ParseUint(_bdaa.Value, 10, 32)
			if _gggcd != nil {
				return _gggcd
			}
			_eacfc := uint32(_bcdc)
			_bcbc.SiAttr = &_eacfc
			continue
		}
		if _bdaa.Name.Local == "\u0062\u0078" {
			_bcbdb, _fgag := _dd.ParseBool(_bdaa.Value)
			if _fgag != nil {
				return _fgag
			}
			_bcbc.BxAttr = &_bcbdb
			continue
		}
	}
	for {
		_fgga, _cbge := d.Token()
		if _cbge != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _cbge)
		}
		if _acee, _cbdc := _fgga.(_a.CharData); _cbdc {
			_bcbc.Content = string(_acee)
		}
		if _feda, _cgbf := _fgga.(_a.EndElement); _cgbf && _feda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DataRef and its children
func (_gddfb *CT_DataRef) Validate() error {
	return _gddfb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}
func (_ffcgc *CT_TableStyleElement) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_dgbec, _cdage := _ffcgc.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cdage != nil {
		return _cdage
	}
	start.Attr = append(start.Attr, _dgbec)
	if _ffcgc.SizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcgc.SizeAttr)})
	}
	if _ffcgc.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcgc.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edece *CT_PivotFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edece.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edece.CountAttr)})
	}
	e.EncodeToken(start)
	_cffgfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074F\u0069\u0065\u006c\u0064"}}
	for _, _gbcce := range _edece.PivotField {
		e.EncodeElement(_gbcce, _cffgfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_QueryTableFields() *CT_QueryTableFields { _ddegd := &CT_QueryTableFields{}; return _ddegd }

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_gcfef *CalcChain) ValidateWithPath(path string) error {
	if _aaafd := _gcfef.CT_CalcChain.ValidateWithPath(path); _aaafd != nil {
		return _aaafd
	}
	return nil
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

func (_agccc ST_Comments) Validate() error { return _agccc.ValidateWithPath("") }
func (_bddbdc *CT_PageMargins) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bbgdb := range start.Attr {
		if _bbgdb.Name.Local == "\u006c\u0065\u0066\u0074" {
			_cbdfc, _bfdbe := _dd.ParseFloat(_bbgdb.Value, 64)
			if _bfdbe != nil {
				return _bfdbe
			}
			_bddbdc.LeftAttr = _cbdfc
			continue
		}
		if _bbgdb.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_eadga, _gaeb := _dd.ParseFloat(_bbgdb.Value, 64)
			if _gaeb != nil {
				return _gaeb
			}
			_bddbdc.RightAttr = _eadga
			continue
		}
		if _bbgdb.Name.Local == "\u0074\u006f\u0070" {
			_fcafd, _caaee := _dd.ParseFloat(_bbgdb.Value, 64)
			if _caaee != nil {
				return _caaee
			}
			_bddbdc.TopAttr = _fcafd
			continue
		}
		if _bbgdb.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_cade, _bcbae := _dd.ParseFloat(_bbgdb.Value, 64)
			if _bcbae != nil {
				return _bcbae
			}
			_bddbdc.BottomAttr = _cade
			continue
		}
		if _bbgdb.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_adagc, _daaba := _dd.ParseFloat(_bbgdb.Value, 64)
			if _daaba != nil {
				return _daaba
			}
			_bddbdc.HeaderAttr = _adagc
			continue
		}
		if _bbgdb.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_bggae, _ebbcec := _dd.ParseFloat(_bbgdb.Value, 64)
			if _ebbcec != nil {
				return _ebbcec
			}
			_bddbdc.FooterAttr = _bggae
			continue
		}
	}
	for {
		_fdbbf, _eefdf := d.Token()
		if _eefdf != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _eefdf)
		}
		if _gcdga, _edcag := _fdbbf.(_a.EndElement); _edcag && _gcdga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edeccf ST_IconSetType) String() string {
	switch _edeccf {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}
func (_cdead *Revisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _cdead.CT_Revisions.MarshalXML(e, start)
}
func (_efbca *CT_DataValidation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efbca.TypeAttr != ST_DataValidationTypeUnset {
		_bacb, _debaa := _efbca.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _debaa != nil {
			return _debaa
		}
		start.Attr = append(start.Attr, _bacb)
	}
	if _efbca.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_ececf, _fffd := _efbca.ErrorStyleAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _fffd != nil {
			return _fffd
		}
		start.Attr = append(start.Attr, _ececf)
	}
	if _efbca.ImeModeAttr != ST_DataValidationImeModeUnset {
		_ffca, _gfba := _efbca.ImeModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _gfba != nil {
			return _gfba
		}
		start.Attr = append(start.Attr, _ffca)
	}
	if _efbca.OperatorAttr != ST_DataValidationOperatorUnset {
		_faaab, _bfega := _efbca.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _bfega != nil {
			return _bfega
		}
		start.Attr = append(start.Attr, _faaab)
	}
	if _efbca.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbca.AllowBlankAttr))})
	}
	if _efbca.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbca.ShowDropDownAttr))})
	}
	if _efbca.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbca.ShowInputMessageAttr))})
	}
	if _efbca.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efbca.ShowErrorMessageAttr))})
	}
	if _efbca.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_efbca.ErrorTitleAttr)})
	}
	if _efbca.ErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_efbca.ErrorAttr)})
	}
	if _efbca.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_efbca.PromptTitleAttr)})
	}
	if _efbca.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_efbca.PromptAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _efbca.SqrefAttr)})
	e.EncodeToken(start)
	if _efbca.Formula1 != nil {
		_afdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_ff.AddPreserveSpaceAttr(&_afdb, *_efbca.Formula1)
		e.EncodeElement(_efbca.Formula1, _afdb)
	}
	if _efbca.Formula2 != nil {
		_gebfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_ff.AddPreserveSpaceAttr(&_gebfe, *_efbca.Formula2)
		e.EncodeElement(_efbca.Formula2, _gebfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_bcfgf *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _cgfgg, _gfcgg := range _bcfgf.Reference {
		if _befbc := _gfcgg.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _cgfgg)); _befbc != nil {
			return _befbc
		}
	}
	return nil
}
func (_gdfcab ST_GrowShrinkType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_aadgb := _a.Attr{}
	_aadgb.Name = name
	switch _gdfcab {
	case ST_GrowShrinkTypeUnset:
		_aadgb.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_aadgb.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_aadgb.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_aadgb.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _aadgb, nil
}

type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}

func (_becfg *CT_CustomWorkbookViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ddggc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003acu\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069e\u0077"}}
	for _, _eddbca := range _becfg.CustomWorkbookView {
		e.EncodeElement(_eddbca, _ddggc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IndexedColors and its children
func (_ebaee *CT_IndexedColors) Validate() error {
	return _ebaee.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}

type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}

func (_efafgc *CT_RevisionDefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efafgc.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.LocalSheetIdAttr)})
	}
	if _efafgc.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _efafgc.NameAttr)})
	if _efafgc.FunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.FunctionAttr))})
	}
	if _efafgc.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.OldFunctionAttr))})
	}
	if _efafgc.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.FunctionGroupIdAttr)})
	}
	if _efafgc.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldFunctionGroupIdAttr)})
	}
	if _efafgc.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.ShortcutKeyAttr)})
	}
	if _efafgc.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldShortcutKeyAttr)})
	}
	if _efafgc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.HiddenAttr))})
	}
	if _efafgc.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.OldHiddenAttr))})
	}
	if _efafgc.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.CustomMenuAttr)})
	}
	if _efafgc.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldCustomMenuAttr)})
	}
	if _efafgc.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.DescriptionAttr)})
	}
	if _efafgc.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldDescriptionAttr)})
	}
	if _efafgc.HelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.HelpAttr)})
	}
	if _efafgc.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldHelpAttr)})
	}
	if _efafgc.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.StatusBarAttr)})
	}
	if _efafgc.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldStatusBarAttr)})
	}
	if _efafgc.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.CommentAttr)})
	}
	if _efafgc.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_efafgc.OldCommentAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _efafgc.RIdAttr)})
	if _efafgc.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.UaAttr))})
	}
	if _efafgc.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efafgc.RaAttr))})
	}
	e.EncodeToken(start)
	if _efafgc.Formula != nil {
		_dbgff := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_ff.AddPreserveSpaceAttr(&_dbgff, *_efafgc.Formula)
		e.EncodeElement(_efafgc.Formula, _dbgff)
	}
	if _efafgc.OldFormula != nil {
		_dacab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0064\u0046\u006fr\u006d\u0075\u006c\u0061"}}
		_ff.AddPreserveSpaceAttr(&_dacab, *_efafgc.OldFormula)
		e.EncodeElement(_efafgc.OldFormula, _dacab)
	}
	if _efafgc.ExtLst != nil {
		_gcaaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efafgc.ExtLst, _gcaaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_ggdbba *CT_Index) ValidateWithPath(path string) error { return nil }
func (_gefea *CT_PivotField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gefea.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.NameAttr)})
	}
	if _gefea.AxisAttr != ST_AxisUnset {
		_bccee, _ebbbc := _gefea.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _ebbbc != nil {
			return _ebbbc
		}
		start.Attr = append(start.Attr, _bccee)
	}
	if _gefea.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DataFieldAttr))})
	}
	if _gefea.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.SubtotalCaptionAttr)})
	}
	if _gefea.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ShowDropDownsAttr))})
	}
	if _gefea.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.HiddenLevelAttr))})
	}
	if _gefea.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.UniqueMemberPropertyAttr)})
	}
	if _gefea.CompactAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.CompactAttr))})
	}
	if _gefea.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.AllDrilledAttr))})
	}
	if _gefea.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.NumFmtIdAttr)})
	}
	if _gefea.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.OutlineAttr))})
	}
	if _gefea.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.SubtotalTopAttr))})
	}
	if _gefea.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DragToRowAttr))})
	}
	if _gefea.DragToColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DragToColAttr))})
	}
	if _gefea.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.MultipleItemSelectionAllowedAttr))})
	}
	if _gefea.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DragToPageAttr))})
	}
	if _gefea.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DragToDataAttr))})
	}
	if _gefea.DragOffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DragOffAttr))})
	}
	if _gefea.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ShowAllAttr))})
	}
	if _gefea.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.InsertBlankRowAttr))})
	}
	if _gefea.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ServerFieldAttr))})
	}
	if _gefea.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.InsertPageBreakAttr))})
	}
	if _gefea.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.AutoShowAttr))})
	}
	if _gefea.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.TopAutoShowAttr))})
	}
	if _gefea.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.HideNewItemsAttr))})
	}
	if _gefea.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.MeasureFilterAttr))})
	}
	if _gefea.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.IncludeNewItemsInFilterAttr))})
	}
	if _gefea.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.ItemPageCountAttr)})
	}
	if _gefea.SortTypeAttr != ST_FieldSortTypeUnset {
		_egafe, _dgcbd := _gefea.SortTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _dgcbd != nil {
			return _dgcbd
		}
		start.Attr = append(start.Attr, _egafe)
	}
	if _gefea.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DataSourceSortAttr))})
	}
	if _gefea.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.NonAutoSortDefaultAttr))})
	}
	if _gefea.RankByAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_gefea.RankByAttr)})
	}
	if _gefea.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DefaultSubtotalAttr))})
	}
	if _gefea.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.SumSubtotalAttr))})
	}
	if _gefea.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.CountASubtotalAttr))})
	}
	if _gefea.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.AvgSubtotalAttr))})
	}
	if _gefea.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.MaxSubtotalAttr))})
	}
	if _gefea.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.MinSubtotalAttr))})
	}
	if _gefea.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ProductSubtotalAttr))})
	}
	if _gefea.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.CountSubtotalAttr))})
	}
	if _gefea.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.StdDevSubtotalAttr))})
	}
	if _gefea.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.StdDevPSubtotalAttr))})
	}
	if _gefea.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.VarSubtotalAttr))})
	}
	if _gefea.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.VarPSubtotalAttr))})
	}
	if _gefea.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ShowPropCellAttr))})
	}
	if _gefea.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ShowPropTipAttr))})
	}
	if _gefea.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.ShowPropAsCaptionAttr))})
	}
	if _gefea.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gefea.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _gefea.Items != nil {
		_fabbg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0069\u0074\u0065\u006ds"}}
		e.EncodeElement(_gefea.Items, _fabbg)
	}
	if _gefea.AutoSortScope != nil {
		_dfaac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_gefea.AutoSortScope, _dfaac)
	}
	if _gefea.ExtLst != nil {
		_aeede := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gefea.ExtLst, _aeede)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecbaa ST_SortBy) Validate() error { return _ecbaa.ValidateWithPath("") }
func (_deadd *ST_FormatAction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_faffb, _dbdcf := d.Token()
	if _dbdcf != nil {
		return _dbdcf
	}
	if _dafce, _abgaad := _faffb.(_a.EndElement); _abgaad && _dafce.Name == start.Name {
		*_deadd = 1
		return nil
	}
	if _ggbfb, _bgfed := _faffb.(_a.CharData); !_bgfed {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _faffb)
	} else {
		switch string(_ggbfb) {
		case "":
			*_deadd = 0
		case "\u0062\u006c\u0061n\u006b":
			*_deadd = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_deadd = 2
		case "\u0064\u0072\u0069l\u006c":
			*_deadd = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_deadd = 4
		}
	}
	_faffb, _dbdcf = d.Token()
	if _dbdcf != nil {
		return _dbdcf
	}
	if _dfbeg, _bcffe := _faffb.(_a.EndElement); _bcffe && _dfbeg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _faffb)
}
func (_gfgag *CT_DbPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _effe := range start.Attr {
		if _effe.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_cbabbb := _effe.Value
			_gfgag.ConnectionAttr = _cbabbb
			continue
		}
		if _effe.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_agbgc := _effe.Value
			_gfgag.CommandAttr = &_agbgc
			continue
		}
		if _effe.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_gaab := _effe.Value
			_gfgag.ServerCommandAttr = &_gaab
			continue
		}
		if _effe.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_fefcc, _eafb := _dd.ParseUint(_effe.Value, 10, 32)
			if _eafb != nil {
				return _eafb
			}
			_gfab := uint32(_fefcc)
			_gfgag.CommandTypeAttr = &_gfab
			continue
		}
	}
	for {
		_egfggb, _bcfb := d.Token()
		if _bcfb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _bcfb)
		}
		if _fgggg, _edeac := _egfggb.(_a.EndElement); _edeac && _fgggg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

func (_cgdcb ST_SheetViewType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cgdcb.String(), start)
}

// Validate validates the CT_RevisionConflict and its children
func (_baede *CT_RevisionConflict) Validate() error {
	return _baede.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}

// Validate validates the CT_RowFields and its children
func (_eaeae *CT_RowFields) Validate() error {
	return _eaeae.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}
func NewCT_GradientStop() *CT_GradientStop {
	_ccbffg := &CT_GradientStop{}
	_ccbffg.Color = NewCT_Color()
	return _ccbffg
}
func (_gbcbea *ST_PivotAreaType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gbcbea = 0
	case "\u006e\u006f\u006e\u0065":
		*_gbcbea = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_gbcbea = 2
	case "\u0064\u0061\u0074\u0061":
		*_gbcbea = 3
	case "\u0061\u006c\u006c":
		*_gbcbea = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_gbcbea = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_gbcbea = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_gbcbea = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_gbcbea = 8
	}
	return nil
}
func (_fgac *CT_CalcChain) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_fdbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063"}}
	for _, _dbf := range _fgac.C {
		e.EncodeElement(_dbf, _fdbd)
	}
	if _fgac.ExtLst != nil {
		_caea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgac.ExtLst, _caea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_accadd *Connections) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_accadd.CT_Connections = *NewCT_Connections()
_deegg:
	for {
		_dbcdfg, _fdaga := d.Token()
		if _fdaga != nil {
			return _fdaga
		}
		switch _abaag := _dbcdfg.(type) {
		case _a.StartElement:
			switch _abaag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_afbfd := NewCT_Connection()
				if _daefe := d.DecodeElement(_afbfd, &_abaag); _daefe != nil {
					return _daefe
				}
				_accadd.Connection = append(_accadd.Connection, _afbfd)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _abaag.Name)
				if _dcfcg := d.Skip(); _dcfcg != nil {
					return _dcfcg
				}
			}
		case _a.EndElement:
			break _deegg
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)

func (_dgcgb *CT_MemberProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ddaee := range start.Attr {
		if _ddaee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fegce := _ddaee.Value
			_dgcgb.NameAttr = &_fegce
			continue
		}
		if _ddaee.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_edeef, _bfgadgd := _dd.ParseBool(_ddaee.Value)
			if _bfgadgd != nil {
				return _bfgadgd
			}
			_dgcgb.ShowCellAttr = &_edeef
			continue
		}
		if _ddaee.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_dcddb, _afbbe := _dd.ParseBool(_ddaee.Value)
			if _afbbe != nil {
				return _afbbe
			}
			_dgcgb.ShowTipAttr = &_dcddb
			continue
		}
		if _ddaee.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bbbe, _bgfacg := _dd.ParseBool(_ddaee.Value)
			if _bgfacg != nil {
				return _bgfacg
			}
			_dgcgb.ShowAsCaptionAttr = &_bbbe
			continue
		}
		if _ddaee.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_cbbb, _agccb := _dd.ParseUint(_ddaee.Value, 10, 32)
			if _agccb != nil {
				return _agccb
			}
			_dcffb := uint32(_cbbb)
			_dgcgb.NameLenAttr = &_dcffb
			continue
		}
		if _ddaee.Name.Local == "\u0070\u0050\u006f\u0073" {
			_abeag, _dcdbd := _dd.ParseUint(_ddaee.Value, 10, 32)
			if _dcdbd != nil {
				return _dcdbd
			}
			_eafdc := uint32(_abeag)
			_dgcgb.PPosAttr = &_eafdc
			continue
		}
		if _ddaee.Name.Local == "\u0070\u004c\u0065\u006e" {
			_aegdb, _cabca := _dd.ParseUint(_ddaee.Value, 10, 32)
			if _cabca != nil {
				return _cabca
			}
			_cgaeab := uint32(_aegdb)
			_dgcgb.PLenAttr = &_cgaeab
			continue
		}
		if _ddaee.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_fccdg, _acagd := _dd.ParseUint(_ddaee.Value, 10, 32)
			if _acagd != nil {
				return _acagd
			}
			_fegfb := uint32(_fccdg)
			_dgcgb.LevelAttr = &_fegfb
			continue
		}
		if _ddaee.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_beffc, _agebd := _dd.ParseUint(_ddaee.Value, 10, 32)
			if _agebd != nil {
				return _agebd
			}
			_dgcgb.FieldAttr = uint32(_beffc)
			continue
		}
	}
	for {
		_bcgfe, _dfffg := d.Token()
		if _dfffg != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _dfffg)
		}
		if _egged, _gadbaed := _bcgfe.(_a.EndElement); _gadbaed && _egged.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eadb *CT_Format) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eadb.PivotArea = NewCT_PivotArea()
	for _, _fafbc := range start.Attr {
		if _fafbc.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_eadb.ActionAttr.UnmarshalXMLAttr(_fafbc)
			continue
		}
		if _fafbc.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_cggbd, _facba := _dd.ParseUint(_fafbc.Value, 10, 32)
			if _facba != nil {
				return _facba
			}
			_cffdf := uint32(_cggbd)
			_eadb.DxfIdAttr = &_cffdf
			continue
		}
	}
_fgfe:
	for {
		_fabbc, _gabae := d.Token()
		if _gabae != nil {
			return _gabae
		}
		switch _dcddfb := _fabbc.(type) {
		case _a.StartElement:
			switch _dcddfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _gcgfa := d.DecodeElement(_eadb.PivotArea, &_dcddfb); _gcgfa != nil {
					return _gcgfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eadb.ExtLst = NewCT_ExtensionList()
				if _deafc := d.DecodeElement(_eadb.ExtLst, &_dcddfb); _deafc != nil {
					return _deafc
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _dcddfb.Name)
				if _cabab := d.Skip(); _cabab != nil {
					return _cabab
				}
			}
		case _a.EndElement:
			break _fgfe
		case _a.CharData:
		}
	}
	return nil
}

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}

// Validate validates the Connections and its children
func (_cbdecd *Connections) Validate() error {
	return _cbdecd.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}
func (_ecfab ST_IconSetType) ValidateWithPath(path string) error {
	switch _ecfab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfab))
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_dccfg *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _bbfd, _bcdeeb := range _dccfg.R {
		if _deafe := _bcdeeb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _bbfd)); _deafe != nil {
			return _deafe
		}
	}
	if _dccfg.ExtLst != nil {
		if _bebaa := _dccfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bebaa != nil {
			return _bebaa
		}
	}
	return nil
}
func (_aaffa *CT_TableStyleElement) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aaffa.TypeAttr = ST_TableStyleType(1)
	for _, _fgdce := range start.Attr {
		if _fgdce.Name.Local == "\u0074\u0079\u0070\u0065" {
			_aaffa.TypeAttr.UnmarshalXMLAttr(_fgdce)
			continue
		}
		if _fgdce.Name.Local == "\u0073\u0069\u007a\u0065" {
			_degda, _fabbab := _dd.ParseUint(_fgdce.Value, 10, 32)
			if _fabbab != nil {
				return _fabbab
			}
			_egbef := uint32(_degda)
			_aaffa.SizeAttr = &_egbef
			continue
		}
		if _fgdce.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_cdcffb, _eeaba := _dd.ParseUint(_fgdce.Value, 10, 32)
			if _eeaba != nil {
				return _eeaba
			}
			_acdag := uint32(_cdcffb)
			_aaffa.DxfIdAttr = &_acdag
			continue
		}
	}
	for {
		_eggec, _bddgab := d.Token()
		if _bddgab != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _bddgab)
		}
		if _feagf, _fcgga := _eggec.(_a.EndElement); _fcgga && _feagf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SheetPr() *CT_SheetPr { _cbdgf := &CT_SheetPr{}; return _cbdgf }
func (_dgfbd *CT_DataRefs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acga := range start.Attr {
		if _acga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eege, _gadba := _dd.ParseUint(_acga.Value, 10, 32)
			if _gadba != nil {
				return _gadba
			}
			_fcgb := uint32(_eege)
			_dgfbd.CountAttr = &_fcgb
			continue
		}
	}
_fbcf:
	for {
		_adacf, _eeff := d.Token()
		if _eeff != nil {
			return _eeff
		}
		switch _debc := _adacf.(type) {
		case _a.StartElement:
			switch _debc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_ddee := NewCT_DataRef()
				if _effd := d.DecodeElement(_ddee, &_debc); _effd != nil {
					return _effd
				}
				_dgfbd.DataRef = append(_dgfbd.DataRef, _ddee)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _debc.Name)
				if _fadde := d.Skip(); _fadde != nil {
					return _fadde
				}
			}
		case _a.EndElement:
			break _fbcf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_addee *CT_DrawingHF) ValidateWithPath(path string) error { return nil }
func (_gffgg ST_HtmlFmt) String() string {
	switch _gffgg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_RecordChoice and its children, prefixing error messages with path
func (_efbec *CT_RecordChoice) ValidateWithPath(path string) error {
	if _efbec.M != nil {
		if _gffc := _efbec.M.ValidateWithPath(path + "\u002f\u004d"); _gffc != nil {
			return _gffc
		}
	}
	if _efbec.N != nil {
		if _edcac := _efbec.N.ValidateWithPath(path + "\u002f\u004e"); _edcac != nil {
			return _edcac
		}
	}
	if _efbec.B != nil {
		if _ebedc := _efbec.B.ValidateWithPath(path + "\u002f\u0042"); _ebedc != nil {
			return _ebedc
		}
	}
	if _efbec.E != nil {
		if _bdfega := _efbec.E.ValidateWithPath(path + "\u002f\u0045"); _bdfega != nil {
			return _bdfega
		}
	}
	if _efbec.S != nil {
		if _gcadff := _efbec.S.ValidateWithPath(path + "\u002f\u0053"); _gcadff != nil {
			return _gcadff
		}
	}
	if _efbec.D != nil {
		if _gfcfg := _efbec.D.ValidateWithPath(path + "\u002f\u0044"); _gfcfg != nil {
			return _gfcfg
		}
	}
	if _efbec.X != nil {
		if _ffbcb := _efbec.X.ValidateWithPath(path + "\u002f\u0058"); _ffbcb != nil {
			return _ffbcb
		}
	}
	return nil
}

// Validate validates the CT_colItems and its children
func (_adbdd *CT_colItems) Validate() error {
	return _adbdd.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}
func (_eafdg *CT_Map) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0049\u0044"}, Value: _fd.Sprintf("\u0025\u0076", _eafdg.IDAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _eafdg.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _eafdg.RootElementAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _fd.Sprintf("\u0025\u0076", _eafdg.SchemaIDAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_eafdg.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_eafdg.AutoFitAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_eafdg.AppendAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_eafdg.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_eafdg.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _eafdg.DataBinding != nil {
		_gbbbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0044\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_eafdg.DataBinding, _gbbbd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_MergeCell() *CT_MergeCell { _gddcg := &CT_MergeCell{}; return _gddcg }

type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cbdcbf *CT_Hyperlink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcafb := range start.Attr {
		if _gcafb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcafb.Name.Local == "\u0069\u0064" || _gcafb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcafb.Name.Local == "\u0069\u0064" {
			_ecceg := _gcafb.Value
			_cbdcbf.IdAttr = &_ecceg
			continue
		}
		if _gcafb.Name.Local == "\u0072\u0065\u0066" {
			_cgcef := _gcafb.Value
			_cbdcbf.RefAttr = _cgcef
			continue
		}
		if _gcafb.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_faag := _gcafb.Value
			_cbdcbf.LocationAttr = &_faag
			continue
		}
		if _gcafb.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_cfedd := _gcafb.Value
			_cbdcbf.TooltipAttr = &_cfedd
			continue
		}
		if _gcafb.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_gede := _gcafb.Value
			_cbdcbf.DisplayAttr = &_gede
			continue
		}
	}
	for {
		_cggfa, _cfedg := d.Token()
		if _cfedg != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _cfedg)
		}
		if _fabba, _adcea := _cggfa.(_a.EndElement); _adcea && _fabba.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the Users and its children
func (_adgea *Users) Validate() error { return _adgea.ValidateWithPath("\u0055\u0073\u0065r\u0073") }

// Validate validates the Worksheet and its children
func (_egfdb *Worksheet) Validate() error {
	return _egfdb.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}
func (_feaa *CT_CacheHierarchies) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _feaa.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_feaa.CountAttr)})
	}
	e.EncodeToken(start)
	if _feaa.CacheHierarchy != nil {
		_cafc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0061\u0063\u0068\u0065H\u0069\u0065r\u0061\u0072\u0063\u0068\u0079"}}
		for _, _dbd := range _feaa.CacheHierarchy {
			e.EncodeElement(_dbd, _cafc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gg *CT_Authors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gg.Author != nil {
		_gcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u0068\u006f\u0072"}}
		for _, _ada := range _gg.Author {
			e.EncodeElement(_ada, _gcg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfcec *ST_GrowShrinkType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bgdedf, _aegaec := d.Token()
	if _aegaec != nil {
		return _aegaec
	}
	if _aefecd, _bdffa := _bgdedf.(_a.EndElement); _bdffa && _aefecd.Name == start.Name {
		*_bfcec = 1
		return nil
	}
	if _agfffa, _eegbaa := _bgdedf.(_a.CharData); !_eegbaa {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgdedf)
	} else {
		switch string(_agfffa) {
		case "":
			*_bfcec = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_bfcec = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_bfcec = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_bfcec = 3
		}
	}
	_bgdedf, _aegaec = d.Token()
	if _aegaec != nil {
		return _aegaec
	}
	if _bdcdcgg, _bfaab := _bgdedf.(_a.EndElement); _bfaab && _bdcdcgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgdedf)
}
func (_gdg *CT_AutoFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gae := range start.Attr {
		if _gae.Name.Local == "\u0072\u0065\u0066" {
			_dfcg := _gae.Value
			_gdg.RefAttr = &_dfcg
			continue
		}
	}
_gfb:
	for {
		_bac, _gce := d.Token()
		if _gce != nil {
			return _gce
		}
		switch _dabd := _bac.(type) {
		case _a.StartElement:
			switch _dabd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_cdd := NewCT_FilterColumn()
				if _ceg := d.DecodeElement(_cdd, &_dabd); _ceg != nil {
					return _ceg
				}
				_gdg.FilterColumn = append(_gdg.FilterColumn, _cdd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_gdg.SortState = NewCT_SortState()
				if _bae := d.DecodeElement(_gdg.SortState, &_dabd); _bae != nil {
					return _bae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdg.ExtLst = NewCT_ExtensionList()
				if _ca := d.DecodeElement(_gdg.ExtLst, &_dabd); _ca != nil {
					return _ca
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _dabd.Name)
				if _baed := d.Skip(); _baed != nil {
					return _baed
				}
			}
		case _a.EndElement:
			break _gfb
		case _a.CharData:
		}
	}
	return nil
}
func (_gabde ST_CellComments) ValidateWithPath(path string) error {
	switch _gabde {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gabde))
	}
	return nil
}
func NewCT_RPrEltChoice() *CT_RPrEltChoice { _acagc := &CT_RPrEltChoice{}; return _acagc }
func (_gaga *CT_PivotSelection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaga.PivotArea = NewCT_PivotArea()
	for _, _bgebd := range start.Attr {
		if _bgebd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bgebd.Name.Local == "\u0069\u0064" || _bgebd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bgebd.Name.Local == "\u0069\u0064" {
			_fggfb := _bgebd.Value
			_gaga.IdAttr = &_fggfb
			continue
		}
		if _bgebd.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_dfega, _gbfc := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _gbfc != nil {
				return _gbfc
			}
			_afggaa := uint32(_dfega)
			_gaga.StartAttr = &_afggaa
			continue
		}
		if _bgebd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cegaf, _gebgf := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _gebgf != nil {
				return _gebgf
			}
			_dafca := uint32(_cegaf)
			_gaga.CountAttr = &_dafca
			continue
		}
		if _bgebd.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_febdg, _cceba := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _cceba != nil {
				return _cceba
			}
			_bcedb := uint32(_febdg)
			_gaga.ActiveRowAttr = &_bcedb
			continue
		}
		if _bgebd.Name.Local == "\u0070\u0061\u006e\u0065" {
			_gaga.PaneAttr.UnmarshalXMLAttr(_bgebd)
			continue
		}
		if _bgebd.Name.Local == "\u0061\u0078\u0069\u0073" {
			_gaga.AxisAttr.UnmarshalXMLAttr(_bgebd)
			continue
		}
		if _bgebd.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_bdcgd, _fbafb := _dd.ParseBool(_bgebd.Value)
			if _fbafb != nil {
				return _fbafb
			}
			_gaga.LabelAttr = &_bdcgd
			continue
		}
		if _bgebd.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_cbfaf, _afdef := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _afdef != nil {
				return _afdef
			}
			_cdaedb := uint32(_cbfaf)
			_gaga.DimensionAttr = &_cdaedb
			continue
		}
		if _bgebd.Name.Local == "\u006d\u0069\u006e" {
			_agebdd, _gefbf := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _gefbf != nil {
				return _gefbf
			}
			_bdecg := uint32(_agebdd)
			_gaga.MinAttr = &_bdecg
			continue
		}
		if _bgebd.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_gcbfg, _efcae := _dd.ParseBool(_bgebd.Value)
			if _efcae != nil {
				return _efcae
			}
			_gaga.ExtendableAttr = &_gcbfg
			continue
		}
		if _bgebd.Name.Local == "\u006d\u0061\u0078" {
			_bdfdbg, _ebece := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _ebece != nil {
				return _ebece
			}
			_aacfe := uint32(_bdfdbg)
			_gaga.MaxAttr = &_aacfe
			continue
		}
		if _bgebd.Name.Local == "\u0064\u0061\u0074\u0061" {
			_afcgf, _adcad := _dd.ParseBool(_bgebd.Value)
			if _adcad != nil {
				return _adcad
			}
			_gaga.DataAttr = &_afcgf
			continue
		}
		if _bgebd.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_becfa, _ggcdda := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _ggcdda != nil {
				return _ggcdda
			}
			_dgdef := uint32(_becfa)
			_gaga.PreviousColAttr = &_dgdef
			continue
		}
		if _bgebd.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_cbgda, _feab := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _feab != nil {
				return _feab
			}
			_fafcc := uint32(_cbgda)
			_gaga.PreviousRowAttr = &_fafcc
			continue
		}
		if _bgebd.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_bgedc, _eacdgb := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _eacdgb != nil {
				return _eacdgb
			}
			_gbbbb := uint32(_bgedc)
			_gaga.ActiveColAttr = &_gbbbb
			continue
		}
		if _bgebd.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_edace, _gddcb := _dd.ParseUint(_bgebd.Value, 10, 32)
			if _gddcb != nil {
				return _gddcb
			}
			_bdge := uint32(_edace)
			_gaga.ClickAttr = &_bdge
			continue
		}
		if _bgebd.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_ffbbgd, _ddcbfe := _dd.ParseBool(_bgebd.Value)
			if _ddcbfe != nil {
				return _ddcbfe
			}
			_gaga.ShowHeaderAttr = &_ffbbgd
			continue
		}
	}
_cgedgd:
	for {
		_bbafa, _fcdcb := d.Token()
		if _fcdcb != nil {
			return _fcdcb
		}
		switch _cgeeg := _bbafa.(type) {
		case _a.StartElement:
			switch _cgeeg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _eabdd := d.DecodeElement(_gaga.PivotArea, &_cgeeg); _eabdd != nil {
					return _eabdd
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _cgeeg.Name)
				if _aagbd := d.Skip(); _aagbd != nil {
					return _aagbd
				}
			}
		case _a.EndElement:
			break _cgedgd
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_bbcc *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _daed, _daaaa := range _bbcc.ColHierarchyUsage {
		if _cbgee := _daaaa.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _daed)); _cbgee != nil {
			return _cbgee
		}
	}
	return nil
}
func (_dffdc *Dialogsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069:\u0064\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074"
	return _dffdc.CT_Dialogsheet.MarshalXML(e, start)
}
func (_ccbgb *ST_PatternType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fadfb, _cbbbbf := d.Token()
	if _cbbbbf != nil {
		return _cbbbbf
	}
	if _bbdfe, _efdedb := _fadfb.(_a.EndElement); _efdedb && _bbdfe.Name == start.Name {
		*_ccbgb = 1
		return nil
	}
	if _cgage, _cefcc := _fadfb.(_a.CharData); !_cefcc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadfb)
	} else {
		switch string(_cgage) {
		case "":
			*_ccbgb = 0
		case "\u006e\u006f\u006e\u0065":
			*_ccbgb = 1
		case "\u0073\u006f\u006ci\u0064":
			*_ccbgb = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_ccbgb = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_ccbgb = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_ccbgb = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_ccbgb = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_ccbgb = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_ccbgb = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_ccbgb = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_ccbgb = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_ccbgb = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_ccbgb = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_ccbgb = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_ccbgb = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_ccbgb = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_ccbgb = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_ccbgb = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_ccbgb = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_ccbgb = 19
		}
	}
	_fadfb, _cbbbbf = d.Token()
	if _cbbbbf != nil {
		return _cbbbbf
	}
	if _debff, _dcbcca := _fadfb.(_a.EndElement); _dcbcca && _debff.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadfb)
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_gdeeb *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DefinedNames and its children
func (_accd *CT_DefinedNames) Validate() error {
	return _accd.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_aceag *CT_RevisionDefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfbggeg := range start.Attr {
		if _cfbggeg.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_bcfbd, _cadeb := _dd.ParseUint(_cfbggeg.Value, 10, 32)
			if _cadeb != nil {
				return _cadeb
			}
			_aeead := uint32(_bcfbd)
			_aceag.LocalSheetIdAttr = &_aeead
			continue
		}
		if _cfbggeg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_feagg, _bffag := _dd.ParseBool(_cfbggeg.Value)
			if _bffag != nil {
				return _bffag
			}
			_aceag.CustomViewAttr = &_feagg
			continue
		}
		if _cfbggeg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_badba := _cfbggeg.Value
			_aceag.NameAttr = _badba
			continue
		}
		if _cfbggeg.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_ddeag, _cdfcb := _dd.ParseBool(_cfbggeg.Value)
			if _cdfcb != nil {
				return _cdfcb
			}
			_aceag.FunctionAttr = &_ddeag
			continue
		}
		if _cfbggeg.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_bdage, _dccccg := _dd.ParseBool(_cfbggeg.Value)
			if _dccccg != nil {
				return _dccccg
			}
			_aceag.OldFunctionAttr = &_bdage
			continue
		}
		if _cfbggeg.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_eabda, _eeegg := _dd.ParseUint(_cfbggeg.Value, 10, 8)
			if _eeegg != nil {
				return _eeegg
			}
			_fdeea := uint8(_eabda)
			_aceag.FunctionGroupIdAttr = &_fdeea
			continue
		}
		if _cfbggeg.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_dfce, _gaefd := _dd.ParseUint(_cfbggeg.Value, 10, 8)
			if _gaefd != nil {
				return _gaefd
			}
			_ccfea := uint8(_dfce)
			_aceag.OldFunctionGroupIdAttr = &_ccfea
			continue
		}
		if _cfbggeg.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_dbcee, _fbcfd := _dd.ParseUint(_cfbggeg.Value, 10, 8)
			if _fbcfd != nil {
				return _fbcfd
			}
			_daddg := uint8(_dbcee)
			_aceag.ShortcutKeyAttr = &_daddg
			continue
		}
		if _cfbggeg.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_fbeceg, _gcfdd := _dd.ParseUint(_cfbggeg.Value, 10, 8)
			if _gcfdd != nil {
				return _gcfdd
			}
			_ceeda := uint8(_fbeceg)
			_aceag.OldShortcutKeyAttr = &_ceeda
			continue
		}
		if _cfbggeg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gffed, _edfgc := _dd.ParseBool(_cfbggeg.Value)
			if _edfgc != nil {
				return _edfgc
			}
			_aceag.HiddenAttr = &_gffed
			continue
		}
		if _cfbggeg.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_cbcfg, _fcbga := _dd.ParseBool(_cfbggeg.Value)
			if _fcbga != nil {
				return _fcbga
			}
			_aceag.OldHiddenAttr = &_cbcfg
			continue
		}
		if _cfbggeg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_fcgebf := _cfbggeg.Value
			_aceag.CustomMenuAttr = &_fcgebf
			continue
		}
		if _cfbggeg.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_ffbda := _cfbggeg.Value
			_aceag.OldCustomMenuAttr = &_ffbda
			continue
		}
		if _cfbggeg.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_becfc := _cfbggeg.Value
			_aceag.DescriptionAttr = &_becfc
			continue
		}
		if _cfbggeg.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_fbeg := _cfbggeg.Value
			_aceag.OldDescriptionAttr = &_fbeg
			continue
		}
		if _cfbggeg.Name.Local == "\u0068\u0065\u006c\u0070" {
			_dbbfb := _cfbggeg.Value
			_aceag.HelpAttr = &_dbbfb
			continue
		}
		if _cfbggeg.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_agfecf := _cfbggeg.Value
			_aceag.OldHelpAttr = &_agfecf
			continue
		}
		if _cfbggeg.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_caagc := _cfbggeg.Value
			_aceag.StatusBarAttr = &_caagc
			continue
		}
		if _cfbggeg.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_ggdbd := _cfbggeg.Value
			_aceag.OldStatusBarAttr = &_ggdbd
			continue
		}
		if _cfbggeg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bagad := _cfbggeg.Value
			_aceag.CommentAttr = &_bagad
			continue
		}
		if _cfbggeg.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_dgdcc := _cfbggeg.Value
			_aceag.OldCommentAttr = &_dgdcc
			continue
		}
		if _cfbggeg.Name.Local == "\u0072\u0049\u0064" {
			_cfgf, _ecadc := _dd.ParseUint(_cfbggeg.Value, 10, 32)
			if _ecadc != nil {
				return _ecadc
			}
			_aceag.RIdAttr = uint32(_cfgf)
			continue
		}
		if _cfbggeg.Name.Local == "\u0075\u0061" {
			_ffead, _daagd := _dd.ParseBool(_cfbggeg.Value)
			if _daagd != nil {
				return _daagd
			}
			_aceag.UaAttr = &_ffead
			continue
		}
		if _cfbggeg.Name.Local == "\u0072\u0061" {
			_adebg, _cbbcc := _dd.ParseBool(_cfbggeg.Value)
			if _cbbcc != nil {
				return _cbbcc
			}
			_aceag.RaAttr = &_adebg
			continue
		}
	}
_gefbb:
	for {
		_fdgb, _adfbe := d.Token()
		if _adfbe != nil {
			return _adfbe
		}
		switch _ddefe := _fdgb.(type) {
		case _a.StartElement:
			switch _ddefe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_aceag.Formula = new(string)
				if _fadbd := d.DecodeElement(_aceag.Formula, &_ddefe); _fadbd != nil {
					return _fadbd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_aceag.OldFormula = new(string)
				if _bgbaf := d.DecodeElement(_aceag.OldFormula, &_ddefe); _bgbaf != nil {
					return _bgbaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aceag.ExtLst = NewCT_ExtensionList()
				if _bcfee := d.DecodeElement(_aceag.ExtLst, &_ddefe); _bcfee != nil {
					return _bcfee
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _ddefe.Name)
				if _gbcde := d.Skip(); _gbcde != nil {
					return _gbcde
				}
			}
		case _a.EndElement:
			break _gefbb
		case _a.CharData:
		}
	}
	return nil
}
func (_cceceg *ST_VerticalAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cceceg = 0
	case "\u0074\u006f\u0070":
		*_cceceg = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_cceceg = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_cceceg = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_cceceg = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_cceceg = 5
	}
	return nil
}
func NewCT_SharedItemsChoice() *CT_SharedItemsChoice {
	_bdfag := &CT_SharedItemsChoice{}
	return _bdfag
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_gggff *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _gddgb, _dadbg := range _gggff.FieldUsage {
		if _abcfg := _dadbg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _gddgb)); _abcfg != nil {
			return _abcfg
		}
	}
	return nil
}

type ST_TextHAlign byte

func (_acgbd *ST_PageOrder) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdcda, _gfeada := d.Token()
	if _gfeada != nil {
		return _gfeada
	}
	if _faeebd, _dbedg := _gdcda.(_a.EndElement); _dbedg && _faeebd.Name == start.Name {
		*_acgbd = 1
		return nil
	}
	if _eaafbg, _cgddfe := _gdcda.(_a.CharData); !_cgddfe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdcda)
	} else {
		switch string(_eaafbg) {
		case "":
			*_acgbd = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_acgbd = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_acgbd = 2
		}
	}
	_gdcda, _gfeada = d.Token()
	if _gfeada != nil {
		return _gfeada
	}
	if _bcaeb, _gafgbb := _gdcda.(_a.EndElement); _gafgbb && _bcaeb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdcda)
}
func NewCT_TextPr() *CT_TextPr { _egce := &CT_TextPr{}; return _egce }
func NewCT_CommentPr() *CT_CommentPr {
	_dcgg := &CT_CommentPr{}
	_dcgg.Anchor = NewCT_ObjectAnchor()
	return _dcgg
}
func (_dgddf *CT_WorkbookPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gedgg := range start.Attr {
		if _gedgg.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_gbaaf, _egeded := _dd.ParseBool(_gedgg.Value)
			if _egeded != nil {
				return _egeded
			}
			_dgddf.Date1904Attr = &_gbaaf
			continue
		}
		if _gedgg.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dgddf.ShowObjectsAttr.UnmarshalXMLAttr(_gedgg)
			continue
		}
		if _gedgg.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_dgbgeb, _bdecc := _dd.ParseBool(_gedgg.Value)
			if _bdecc != nil {
				return _bdecc
			}
			_dgddf.ShowBorderUnselectedTablesAttr = &_dgbgeb
			continue
		}
		if _gedgg.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_gdacdf, _fcacbd := _dd.ParseBool(_gedgg.Value)
			if _fcacbd != nil {
				return _fcacbd
			}
			_dgddf.FilterPrivacyAttr = &_gdacdf
			continue
		}
		if _gedgg.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_bfccg, _aeged := _dd.ParseBool(_gedgg.Value)
			if _aeged != nil {
				return _aeged
			}
			_dgddf.PromptedSolutionsAttr = &_bfccg
			continue
		}
		if _gedgg.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_cbggcf, _bgfeg := _dd.ParseBool(_gedgg.Value)
			if _bgfeg != nil {
				return _bgfeg
			}
			_dgddf.ShowInkAnnotationAttr = &_cbggcf
			continue
		}
		if _gedgg.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_efddf, _dadca := _dd.ParseBool(_gedgg.Value)
			if _dadca != nil {
				return _dadca
			}
			_dgddf.BackupFileAttr = &_efddf
			continue
		}
		if _gedgg.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_ecgdcc, _dgcgag := _dd.ParseBool(_gedgg.Value)
			if _dgcgag != nil {
				return _dgcgag
			}
			_dgddf.SaveExternalLinkValuesAttr = &_ecgdcc
			continue
		}
		if _gedgg.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_dgddf.UpdateLinksAttr.UnmarshalXMLAttr(_gedgg)
			continue
		}
		if _gedgg.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_gdfca := _gedgg.Value
			_dgddf.CodeNameAttr = &_gdfca
			continue
		}
		if _gedgg.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_efdga, _ggdfd := _dd.ParseBool(_gedgg.Value)
			if _ggdfd != nil {
				return _ggdfd
			}
			_dgddf.HidePivotFieldListAttr = &_efdga
			continue
		}
		if _gedgg.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_efacf, _aefacf := _dd.ParseBool(_gedgg.Value)
			if _aefacf != nil {
				return _aefacf
			}
			_dgddf.ShowPivotChartFilterAttr = &_efacf
			continue
		}
		if _gedgg.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_dagabe, _dcdea := _dd.ParseBool(_gedgg.Value)
			if _dcdea != nil {
				return _dcdea
			}
			_dgddf.AllowRefreshQueryAttr = &_dagabe
			continue
		}
		if _gedgg.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_cbbbf, _gcagd := _dd.ParseBool(_gedgg.Value)
			if _gcagd != nil {
				return _gcagd
			}
			_dgddf.PublishItemsAttr = &_cbbbf
			continue
		}
		if _gedgg.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_acddd, _deeeb := _dd.ParseBool(_gedgg.Value)
			if _deeeb != nil {
				return _deeeb
			}
			_dgddf.CheckCompatibilityAttr = &_acddd
			continue
		}
		if _gedgg.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_fagce, _ceeded := _dd.ParseBool(_gedgg.Value)
			if _ceeded != nil {
				return _ceeded
			}
			_dgddf.AutoCompressPicturesAttr = &_fagce
			continue
		}
		if _gedgg.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_cedde, _abcecda := _dd.ParseBool(_gedgg.Value)
			if _abcecda != nil {
				return _abcecda
			}
			_dgddf.RefreshAllConnectionsAttr = &_cedde
			continue
		}
		if _gedgg.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dgdfea, _aggbd := _dd.ParseUint(_gedgg.Value, 10, 32)
			if _aggbd != nil {
				return _aggbd
			}
			_bfbbc := uint32(_dgdfea)
			_dgddf.DefaultThemeVersionAttr = &_bfbbc
			continue
		}
	}
	for {
		_ceeebe, _egcff := d.Token()
		if _egcff != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _egcff)
		}
		if _gfead, _edbga := _ceeebe.(_a.EndElement); _edbga && _gfead.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_bgdcg *CT_Schema) ValidateWithPath(path string) error { return nil }
func (_deacaf ST_OleUpdate) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_deacaf.String(), start)
}
func (_gecf *CT_CellStyleXfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gecf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gecf.CountAttr)})
	}
	e.EncodeToken(start)
	_aeeda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0078\u0066"}}
	for _, _aecb := range _gecf.Xf {
		e.EncodeElement(_aecb, _aeeda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_gebf *CT_CalcCell) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_dccb *CT_Connections) ValidateWithPath(path string) error {
	for _ageb, _bbffa := range _dccb.Connection {
		if _bgcb := _bbffa.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _ageb)); _bgcb != nil {
			return _bgcb
		}
	}
	return nil
}
func (_bgfaca *CT_QueryTableRefresh) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgfaca.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgfaca.PreserveSortFilterLayoutAttr))})
	}
	if _bgfaca.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgfaca.FieldIdWrappedAttr))})
	}
	if _bgfaca.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgfaca.HeadersInLastRefreshAttr))})
	}
	if _bgfaca.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfaca.MinimumVersionAttr)})
	}
	if _bgfaca.NextIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfaca.NextIdAttr)})
	}
	if _bgfaca.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfaca.UnboundColumnsLeftAttr)})
	}
	if _bgfaca.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfaca.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_dgage := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061b\u006c\u0065\u0046\u0069el\u0064\u0073"}}
	e.EncodeElement(_bgfaca.QueryTableFields, _dgage)
	if _bgfaca.QueryTableDeletedFields != nil {
		_badcf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0071\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006ce\u0074\u0065\u0064F\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_bgfaca.QueryTableDeletedFields, _badcf)
	}
	if _bgfaca.SortState != nil {
		_ecgba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_bgfaca.SortState, _ecgba)
	}
	if _bgfaca.ExtLst != nil {
		_gggba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgfaca.ExtLst, _gggba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func NewAG_AutoFormat() *AG_AutoFormat { _e := &AG_AutoFormat{}; return _e }
func NewCT_TableParts() *CT_TableParts { _fegeef := &CT_TableParts{}; return _fegeef }

// Validate validates the CT_GroupLevels and its children
func (_cfdfb *CT_GroupLevels) Validate() error {
	return _cfdfb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}
func (_gdefc *CT_ColorScale) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ddcec:
	for {
		_fddg, _efaa := d.Token()
		if _efaa != nil {
			return _efaa
		}
		switch _fefd := _fddg.(type) {
		case _a.StartElement:
			switch _fefd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_cdfdd := NewCT_Cfvo()
				if _bcba := d.DecodeElement(_cdfdd, &_fefd); _bcba != nil {
					return _bcba
				}
				_gdefc.Cfvo = append(_gdefc.Cfvo, _cdfdd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_eabg := NewCT_Color()
				if _egadg := d.DecodeElement(_eabg, &_fefd); _egadg != nil {
					return _egadg
				}
				_gdefc.Color = append(_gdefc.Color, _eabg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _fefd.Name)
				if _aaccd := d.Skip(); _aaccd != nil {
					return _aaccd
				}
			}
		case _a.EndElement:
			break _ddcec
		case _a.CharData:
		}
	}
	return nil
}

type CT_GroupItemsChoice struct {

	// No Value
	M *CT_Missing

	// Numeric Value
	N *CT_Number

	// Boolean
	B *CT_Boolean

	// Error Value
	E *CT_Error

	// Character Value
	S *CT_String

	// Date Time
	D *CT_DateTime
}

func NewCT_WebPr() *CT_WebPr { _ffcdfe := &CT_WebPr{}; return _ffcdfe }
func (_aaffd *CT_MeasureDimensionMaps) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aaffd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aaffd.CountAttr)})
	}
	e.EncodeToken(start)
	if _aaffd.Map != nil {
		_bgac := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u006d\u0061\u0070"}}
		for _, _fbeag := range _aaffd.Map {
			e.EncodeElement(_fbeag, _bgac)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fdaf *CT_TableStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _fdaf.NameAttr)})
	if _fdaf.PivotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdaf.PivotAttr))})
	}
	if _fdaf.TableAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdaf.TableAttr))})
	}
	if _fdaf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fdaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _fdaf.TableStyleElement != nil {
		_agebc := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0074ab\u006ce\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074"}}
		for _, _fcfcee := range _fdaf.TableStyleElement {
			e.EncodeElement(_fcfcee, _agebc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CalculatedItem() *CT_CalculatedItem {
	_bbef := &CT_CalculatedItem{}
	_bbef.PivotArea = NewCT_PivotArea()
	return _bbef
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_eadcd *CT_VolTypes) ValidateWithPath(path string) error {
	for _adeag, _cacfc := range _eadcd.VolType {
		if _caecb := _cacfc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _adeag)); _caecb != nil {
			return _caecb
		}
	}
	if _eadcd.ExtLst != nil {
		if _gdfdc := _eadcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdfdc != nil {
			return _gdfdc
		}
	}
	return nil
}
func (_gecca *CT_CustomSheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eabdc:
	for {
		_bdfce, _eagae := d.Token()
		if _eagae != nil {
			return _eagae
		}
		switch _aace := _bdfce.(type) {
		case _a.StartElement:
			switch _aace.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_abadg := NewCT_CustomSheetView()
				if _cgdf := d.DecodeElement(_abadg, &_aace); _cgdf != nil {
					return _cgdf
				}
				_gecca.CustomSheetView = append(_gecca.CustomSheetView, _abadg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _aace.Name)
				if _debe := d.Skip(); _debe != nil {
					return _debe
				}
			}
		case _a.EndElement:
			break _eabdc
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Tuples() *CT_Tuples { _cffcc := &CT_Tuples{}; return _cffcc }

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_dgbfc *CT_Location) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcec := range start.Attr {
		if _dcec.Name.Local == "\u0072\u0065\u0066" {
			_dbcc := _dcec.Value
			_dgbfc.RefAttr = _dbcc
			continue
		}
		if _dcec.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_ccaab, _ebfdgc := _dd.ParseUint(_dcec.Value, 10, 32)
			if _ebfdgc != nil {
				return _ebfdgc
			}
			_dgbfc.FirstHeaderRowAttr = uint32(_ccaab)
			continue
		}
		if _dcec.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_ggfea, _fbfcg := _dd.ParseUint(_dcec.Value, 10, 32)
			if _fbfcg != nil {
				return _fbfcg
			}
			_dgbfc.FirstDataRowAttr = uint32(_ggfea)
			continue
		}
		if _dcec.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_bcdba, _gbbe := _dd.ParseUint(_dcec.Value, 10, 32)
			if _gbbe != nil {
				return _gbbe
			}
			_dgbfc.FirstDataColAttr = uint32(_bcdba)
			continue
		}
		if _dcec.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_abeadd, _dacac := _dd.ParseUint(_dcec.Value, 10, 32)
			if _dacac != nil {
				return _dacac
			}
			_cbfdb := uint32(_abeadd)
			_dgbfc.RowPageCountAttr = &_cbfdb
			continue
		}
		if _dcec.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_edgad, _abdag := _dd.ParseUint(_dcec.Value, 10, 32)
			if _abdag != nil {
				return _abdag
			}
			_dgeeg := uint32(_edgad)
			_dgbfc.ColPageCountAttr = &_dgeeg
			continue
		}
	}
	for {
		_aege, _afece := d.Token()
		if _afece != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _afece)
		}
		if _decd, _cbbfe := _aege.(_a.EndElement); _cbbfe && _decd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bagae *CT_Location) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _bagae.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", _bagae.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", _bagae.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bagae.FirstDataColAttr)})
	if _bagae.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bagae.RowPageCountAttr)})
	}
	if _bagae.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bagae.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_dceac *CT_CustomProperty) ValidateWithPath(path string) error { return nil }
func (_ggacge ST_GroupBy) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_aefbeg := _a.Attr{}
	_aefbeg.Name = name
	switch _ggacge {
	case ST_GroupByUnset:
		_aefbeg.Value = ""
	case ST_GroupByRange:
		_aefbeg.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_aefbeg.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_aefbeg.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_aefbeg.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_aefbeg.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_aefbeg.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_aefbeg.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_aefbeg.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _aefbeg, nil
}

type CT_IntProperty struct {

	// Value
	ValAttr int32
}

func (_fdee *CT_MetadataStringIndex) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afafg := range start.Attr {
		if _afafg.Name.Local == "\u0078" {
			_dafbaa, _cddccc := _dd.ParseUint(_afafg.Value, 10, 32)
			if _cddccc != nil {
				return _cddccc
			}
			_fdee.XAttr = uint32(_dafbaa)
			continue
		}
		if _afafg.Name.Local == "\u0073" {
			_eeefe, _gcfcc := _dd.ParseBool(_afafg.Value)
			if _gcfcc != nil {
				return _gcfcc
			}
			_fdee.SAttr = &_eeefe
			continue
		}
	}
	for {
		_afcdb, _eeaafb := d.Token()
		if _eeaafb != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _eeaafb)
		}
		if _cgdg, _agec := _afcdb.(_a.EndElement); _agec && _cgdg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PivotTableStyle() *CT_PivotTableStyle { _bgffcd := &CT_PivotTableStyle{}; return _bgffcd }

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_gaag *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _gaag.PaperHeightAttr != nil {
		if !_b.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gaag.PaperHeightAttr) {
			return _fd.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_PositiveUniversalMeasurePatternRe, *_gaag.PaperHeightAttr)
		}
	}
	if _gaag.PaperHeightAttr != nil {
		if !_b.ST_UniversalMeasurePatternRe.MatchString(*_gaag.PaperHeightAttr) {
			return _fd.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_UniversalMeasurePatternRe, *_gaag.PaperHeightAttr)
		}
	}
	if _gaag.PaperWidthAttr != nil {
		if !_b.ST_PositiveUniversalMeasurePatternRe.MatchString(*_gaag.PaperWidthAttr) {
			return _fd.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_PositiveUniversalMeasurePatternRe, *_gaag.PaperWidthAttr)
		}
	}
	if _gaag.PaperWidthAttr != nil {
		if !_b.ST_UniversalMeasurePatternRe.MatchString(*_gaag.PaperWidthAttr) {
			return _fd.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_UniversalMeasurePatternRe, *_gaag.PaperWidthAttr)
		}
	}
	if _cdcfd := _gaag.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _cdcfd != nil {
		return _cdcfd
	}
	return nil
}
func NewCT_SharedItems() *CT_SharedItems {
	_ddggcb := &CT_SharedItems{}
	return _ddggcb
}
func (_fddccd ST_WebSourceType) Validate() error { return _fddccd.ValidateWithPath("") }
func (_bfgeb ST_ItemType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fddgff := _a.Attr{}
	_fddgff.Name = name
	switch _bfgeb {
	case ST_ItemTypeUnset:
		_fddgff.Value = ""
	case ST_ItemTypeData:
		_fddgff.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_fddgff.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_fddgff.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_fddgff.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_fddgff.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_fddgff.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_fddgff.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_fddgff.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_fddgff.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_fddgff.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_fddgff.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_fddgff.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_fddgff.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_fddgff.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_fddgff.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _fddgff, nil
}

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

// Validate validates the CT_Pages and its children
func (_abddc *CT_Pages) Validate() error {
	return _abddc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}

// Validate validates the CT_DdeLink and its children
func (_dbbe *CT_DdeLink) Validate() error {
	return _dbbe.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}

// Validate validates the CT_ExternalLinkChoice and its children
func (_dffae *CT_ExternalLinkChoice) Validate() error {
	return _dffae.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_acfge *CT_PageBreak) ValidateWithPath(path string) error {
	for _eafg, _cedd := range _acfge.Brk {
		if _fcae := _cedd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _eafg)); _fcae != nil {
			return _fcae
		}
	}
	return nil
}
func (_cbcae *CT_WebPublishObject) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cbcae.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cbcae.DivIdAttr)})
	if _cbcae.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cbcae.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cbcae.DestinationFileAttr)})
	if _cbcae.TitleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cbcae.TitleAttr)})
	}
	if _cbcae.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcae.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type Chartsheet struct{ CT_Chartsheet }

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_faaac *CT_OleObject) ValidateWithPath(path string) error {
	if _gddfbff := _faaac.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _gddfbff != nil {
		return _gddfbff
	}
	if _bcfed := _faaac.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _bcfed != nil {
		return _bcfed
	}
	if _faaac.ObjectPr != nil {
		if _fgeagf := _faaac.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _fgeagf != nil {
			return _fgeagf
		}
	}
	return nil
}

// Validate validates the CT_CellSmartTags and its children
func (_cbcf *CT_CellSmartTags) Validate() error {
	return _cbcf.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_gcfb *CT_CellStyle) ValidateWithPath(path string) error {
	if _gcfb.ExtLst != nil {
		if _deef := _gcfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deef != nil {
			return _deef
		}
	}
	return nil
}
func (_bcbeec *CT_MdxMetadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcbeec.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bcbeec.CountAttr)})
	}
	e.EncodeToken(start)
	_abbcf := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u006d\u0064\u0078"}}
	for _, _bebbd := range _bcbeec.Mdx {
		e.EncodeElement(_bebbd, _abbcf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionsChoice and its children, prefixing error messages with path
func (_bbebe *CT_RevisionsChoice) ValidateWithPath(path string) error {
	for _dabaa, _daabfc := range _bbebe.Rrc {
		if _gdede := _daabfc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _dabaa)); _gdede != nil {
			return _gdede
		}
	}
	for _ggeb, _fdcgc := range _bbebe.Rm {
		if _aaacc := _fdcgc.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _ggeb)); _aaacc != nil {
			return _aaacc
		}
	}
	for _gdbad, _bfded := range _bbebe.Rcv {
		if _bgfeb := _bfded.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _gdbad)); _bgfeb != nil {
			return _bgfeb
		}
	}
	for _eaegc, _cbdec := range _bbebe.Rsnm {
		if _cggge := _cbdec.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _eaegc)); _cggge != nil {
			return _cggge
		}
	}
	for _cdcbe, _gageea := range _bbebe.Ris {
		if _cgcgb := _gageea.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _cdcbe)); _cgcgb != nil {
			return _cgcgb
		}
	}
	for _ebbde, _dfdde := range _bbebe.Rcc {
		if _bgfaa := _dfdde.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _ebbde)); _bgfaa != nil {
			return _bgfaa
		}
	}
	for _fgddd, _cagcbg := range _bbebe.Rfmt {
		if _cfdfe := _cagcbg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _fgddd)); _cfdfe != nil {
			return _cfdfe
		}
	}
	for _dbbbe, _dfgab := range _bbebe.Raf {
		if _bgcec := _dfgab.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _dbbbe)); _bgcec != nil {
			return _bgcec
		}
	}
	for _agadc, _cbggd := range _bbebe.Rdn {
		if _gcfed := _cbggd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _agadc)); _gcfed != nil {
			return _gcfed
		}
	}
	for _agffb, _dcfef := range _bbebe.Rcmt {
		if _gbebf := _dcfef.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _agffb)); _gbebf != nil {
			return _gbebf
		}
	}
	for _edabe, _agaff := range _bbebe.Rqt {
		if _gfddf := _agaff.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _edabe)); _gfddf != nil {
			return _gfddf
		}
	}
	for _daeda, _acadg := range _bbebe.Rcft {
		if _cbefd := _acadg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _daeda)); _cbefd != nil {
			return _cbefd
		}
	}
	return nil
}

// Validate validates the CT_QueryTable and its children
func (_ggffg *CT_QueryTable) Validate() error {
	return _ggffg.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}
type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}

// Validate validates the CT_PCDSDTCEntriesChoice and its children
func (_bdbdc *CT_PCDSDTCEntriesChoice) Validate() error {
	return _bdbdc.ValidateWithPath("\u0043\u0054\u005fPC\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the CT_Hyperlinks and its children
func (_ggcgg *CT_Hyperlinks) Validate() error {
	return _ggcgg.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}
func (_ggcfa *CT_NumFmt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eadcf := range start.Attr {
		if _eadcf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_dadcd, _gbafcc := _dd.ParseUint(_eadcf.Value, 10, 32)
			if _gbafcc != nil {
				return _gbafcc
			}
			_ggcfa.NumFmtIdAttr = uint32(_dadcd)
			continue
		}
		if _eadcf.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_dafg := _eadcf.Value
			_ggcfa.FormatCodeAttr = _dafg
			continue
		}
	}
	for {
		_afbced, _gccbb := d.Token()
		if _gccbb != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _gccbb)
		}
		if _gbfb, _dbgbf := _afbced.(_a.EndElement); _dbgbf && _gbfb.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SortBy byte

func (_cfgbfe *CT_SheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebaef := range start.Attr {
		if _ebaef.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_eacce, _fdddbe := _dd.ParseBool(_ebaef.Value)
			if _fdddbe != nil {
				return _fdddbe
			}
			_cfgbfe.WindowProtectionAttr = &_eacce
			continue
		}
		if _ebaef.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_ecfdfe, _egdeee := _dd.ParseBool(_ebaef.Value)
			if _egdeee != nil {
				return _egdeee
			}
			_cfgbfe.ShowFormulasAttr = &_ecfdfe
			continue
		}
		if _ebaef.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_acdbg, _bdaeaa := _dd.ParseBool(_ebaef.Value)
			if _bdaeaa != nil {
				return _bdaeaa
			}
			_cfgbfe.ShowGridLinesAttr = &_acdbg
			continue
		}
		if _ebaef.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_dbebg, _ecdee := _dd.ParseBool(_ebaef.Value)
			if _ecdee != nil {
				return _ecdee
			}
			_cfgbfe.ShowRowColHeadersAttr = &_dbebg
			continue
		}
		if _ebaef.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_cfacb, _fgbbf := _dd.ParseBool(_ebaef.Value)
			if _fgbbf != nil {
				return _fgbbf
			}
			_cfgbfe.ShowZerosAttr = &_cfacb
			continue
		}
		if _ebaef.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_gada, _dgadff := _dd.ParseBool(_ebaef.Value)
			if _dgadff != nil {
				return _dgadff
			}
			_cfgbfe.RightToLeftAttr = &_gada
			continue
		}
		if _ebaef.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_caadc, _edcb := _dd.ParseBool(_ebaef.Value)
			if _edcb != nil {
				return _edcb
			}
			_cfgbfe.TabSelectedAttr = &_caadc
			continue
		}
		if _ebaef.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_adadag, _fegfaf := _dd.ParseBool(_ebaef.Value)
			if _fegfaf != nil {
				return _fegfaf
			}
			_cfgbfe.ShowRulerAttr = &_adadag
			continue
		}
		if _ebaef.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_ddege, _fdgfc := _dd.ParseBool(_ebaef.Value)
			if _fdgfc != nil {
				return _fdgfc
			}
			_cfgbfe.ShowOutlineSymbolsAttr = &_ddege
			continue
		}
		if _ebaef.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_dfecb, _cfdba := _dd.ParseBool(_ebaef.Value)
			if _cfdba != nil {
				return _cfdba
			}
			_cfgbfe.DefaultGridColorAttr = &_dfecb
			continue
		}
		if _ebaef.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_fdcgf, _egdea := _dd.ParseBool(_ebaef.Value)
			if _egdea != nil {
				return _egdea
			}
			_cfgbfe.ShowWhiteSpaceAttr = &_fdcgf
			continue
		}
		if _ebaef.Name.Local == "\u0076\u0069\u0065\u0077" {
			_cfgbfe.ViewAttr.UnmarshalXMLAttr(_ebaef)
			continue
		}
		if _ebaef.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_dagaf := _ebaef.Value
			_cfgbfe.TopLeftCellAttr = &_dagaf
			continue
		}
		if _ebaef.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_fbaae, _dffcc := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _dffcc != nil {
				return _dffcc
			}
			_faecca := uint32(_fbaae)
			_cfgbfe.ColorIdAttr = &_faecca
			continue
		}
		if _ebaef.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_cgbfc, _dgbbf := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _dgbbf != nil {
				return _dgbbf
			}
			_ccegdc := uint32(_cgbfc)
			_cfgbfe.ZoomScaleAttr = &_ccegdc
			continue
		}
		if _ebaef.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_eefcdb, _ceacde := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _ceacde != nil {
				return _ceacde
			}
			_afedb := uint32(_eefcdb)
			_cfgbfe.ZoomScaleNormalAttr = &_afedb
			continue
		}
		if _ebaef.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_befgdb, _aafegf := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _aafegf != nil {
				return _aafegf
			}
			_cagac := uint32(_befgdb)
			_cfgbfe.ZoomScaleSheetLayoutViewAttr = &_cagac
			continue
		}
		if _ebaef.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_aeeae, _ggfg := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _ggfg != nil {
				return _ggfg
			}
			_cedgc := uint32(_aeeae)
			_cfgbfe.ZoomScalePageLayoutViewAttr = &_cedgc
			continue
		}
		if _ebaef.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_gedfbe, _degac := _dd.ParseUint(_ebaef.Value, 10, 32)
			if _degac != nil {
				return _degac
			}
			_cfgbfe.WorkbookViewIdAttr = uint32(_gedfbe)
			continue
		}
	}
_deadc:
	for {
		_bcgfd, _aecde := d.Token()
		if _aecde != nil {
			return _aecde
		}
		switch _gdeef := _bcgfd.(type) {
		case _a.StartElement:
			switch _gdeef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_cfgbfe.Pane = NewCT_Pane()
				if _dgcga := d.DecodeElement(_cfgbfe.Pane, &_gdeef); _dgcga != nil {
					return _dgcga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_abafbb := NewCT_Selection()
				if _cagga := d.DecodeElement(_abafbb, &_gdeef); _cagga != nil {
					return _cagga
				}
				_cfgbfe.Selection = append(_cfgbfe.Selection, _abafbb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_aeaed := NewCT_PivotSelection()
				if _afgfef := d.DecodeElement(_aeaed, &_gdeef); _afgfef != nil {
					return _afgfef
				}
				_cfgbfe.PivotSelection = append(_cfgbfe.PivotSelection, _aeaed)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfgbfe.ExtLst = NewCT_ExtensionList()
				if _deabga := d.DecodeElement(_cfgbfe.ExtLst, &_gdeef); _deabga != nil {
					return _deabga
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _gdeef.Name)
				if _abeaeb := d.Skip(); _abeaeb != nil {
					return _abeaeb
				}
			}
		case _a.EndElement:
			break _deadc
		case _a.CharData:
		}
	}
	return nil
}
func (_ecfcb *ST_PatternType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ecfcb = 0
	case "\u006e\u006f\u006e\u0065":
		*_ecfcb = 1
	case "\u0073\u006f\u006ci\u0064":
		*_ecfcb = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_ecfcb = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_ecfcb = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_ecfcb = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_ecfcb = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_ecfcb = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_ecfcb = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_ecfcb = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_ecfcb = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_ecfcb = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_ecfcb = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_ecfcb = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_ecfcb = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_ecfcb = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_ecfcb = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_ecfcb = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_ecfcb = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_ecfcb = 19
	}
	return nil
}

// Validate validates the CT_SingleXmlCells and its children
func (_fdcge *CT_SingleXmlCells) Validate() error {
	return _fdcge.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_ebac *CT_ChartFormat) ValidateWithPath(path string) error {
	if _gfeb := _ebac.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _gfeb != nil {
		return _gfeb
	}
	return nil
}
func (_eafaf ST_UnderlineValues) Validate() error { return _eafaf.ValidateWithPath("") }
func (_dbeabe ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _dbeabe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbeabe))
	}
	return nil
}

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

func (_dbfdf *CT_Groups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _beega := range start.Attr {
		if _beega.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eccd, _ceffe := _dd.ParseUint(_beega.Value, 10, 32)
			if _ceffe != nil {
				return _ceffe
			}
			_dcddcc := uint32(_eccd)
			_dbfdf.CountAttr = &_dcddcc
			continue
		}
	}
_acffe:
	for {
		_bedbg, _egcb := d.Token()
		if _egcb != nil {
			return _egcb
		}
		switch _eadd := _bedbg.(type) {
		case _a.StartElement:
			switch _eadd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_ebfda := NewCT_LevelGroup()
				if _abaec := d.DecodeElement(_ebfda, &_eadd); _abaec != nil {
					return _abaec
				}
				_dbfdf.Group = append(_dbfdf.Group, _ebfda)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _eadd.Name)
				if _afgd := d.Skip(); _afgd != nil {
					return _afgd
				}
			}
		case _a.EndElement:
			break _acffe
		case _a.CharData:
		}
	}
	return nil
}
func (_fceacg ST_PaneState) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbaee := _a.Attr{}
	_cbaee.Name = name
	switch _fceacg {
	case ST_PaneStateUnset:
		_cbaee.Value = ""
	case ST_PaneStateSplit:
		_cbaee.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_cbaee.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_cbaee.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _cbaee, nil
}

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_agcag *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _agcag.ExtLst != nil {
		if _ffag := _agcag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffag != nil {
			return _ffag
		}
	}
	return nil
}

// Validate validates the CT_FunctionGroups and its children
func (_fcgdg *CT_FunctionGroups) Validate() error {
	return _fcgdg.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}
func NewCT_Missing() *CT_Missing { _ffbbc := &CT_Missing{}; return _ffbbc }

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_fbcfa *Chartsheet) ValidateWithPath(path string) error {
	if _fgbee := _fbcfa.CT_Chartsheet.ValidateWithPath(path); _fgbee != nil {
		return _fgbee
	}
	return nil
}

// Validate validates the CT_Mdx and its children
func (_fagd *CT_Mdx) Validate() error {
	return _fagd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_fbe *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _fbe.ExtLst != nil {
		if _facg := _fbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _facg != nil {
			return _facg
		}
	}
	return nil
}

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

func (_cdgbf *CT_GroupItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdbb := range start.Attr {
		if _bdbb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecfe, _fgeba := _dd.ParseUint(_bdbb.Value, 10, 32)
			if _fgeba != nil {
				return _fgeba
			}
			_ddggdb := uint32(_ecfe)
			_cdgbf.CountAttr = &_ddggdb
			continue
		}
	}
_ceda:
	for {
		_deeag, _dgede := d.Token()
		if _dgede != nil {
			return _dgede
		}
		switch _eacc := _deeag.(type) {
		case _a.StartElement:
			switch _eacc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_dacaga := NewCT_GroupItemsChoice()
				if _bgedf := d.DecodeElement(&_dacaga.M, &_eacc); _bgedf != nil {
					return _bgedf
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _dacaga)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_dfcge := NewCT_GroupItemsChoice()
				if _gbaab := d.DecodeElement(&_dfcge.N, &_eacc); _gbaab != nil {
					return _gbaab
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _dfcge)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cbcff := NewCT_GroupItemsChoice()
				if _dgfed := d.DecodeElement(&_cbcff.B, &_eacc); _dgfed != nil {
					return _dgfed
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _cbcff)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_acgff := NewCT_GroupItemsChoice()
				if _eacde := d.DecodeElement(&_acgff.E, &_eacc); _eacde != nil {
					return _eacde
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _acgff)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bdcb := NewCT_GroupItemsChoice()
				if _cggee := d.DecodeElement(&_bdcb.S, &_eacc); _cggee != nil {
					return _cggee
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _bdcb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_dfccg := NewCT_GroupItemsChoice()
				if _bfca := d.DecodeElement(&_dfccg.D, &_eacc); _bfca != nil {
					return _bfca
				}
				_cdgbf.GroupItemsChoice = append(_cdgbf.GroupItemsChoice, _dfccg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _eacc.Name)
				if _edbff := d.Skip(); _edbff != nil {
					return _edbff
				}
			}
		case _a.EndElement:
			break _ceda
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Workbook() *CT_Workbook {
	_bedeaa := &CT_Workbook{}
	_bedeaa.Sheets = NewCT_Sheets()
	return _bedeaa
}
func (_aed *CT_BorderPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbf := range start.Attr {
		if _fbf.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_aed.StyleAttr.UnmarshalXMLAttr(_fbf)
			continue
		}
	}
_gaba:
	for {
		_dcf, _cbe := d.Token()
		if _cbe != nil {
			return _cbe
		}
		switch _egca := _dcf.(type) {
		case _a.StartElement:
			switch _egca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_aed.Color = NewCT_Color()
				if _egfg := d.DecodeElement(_aed.Color, &_egca); _egfg != nil {
					return _egfg
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _egca.Name)
				if _fcc := d.Skip(); _fcc != nil {
					return _fcc
				}
			}
		case _a.EndElement:
			break _gaba
		case _a.CharData:
		}
	}
	return nil
}
func (_ecdcgf *CT_WebPublishObjects) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdefed := range start.Attr {
		if _cdefed.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbffc, _gecbd := _dd.ParseUint(_cdefed.Value, 10, 32)
			if _gecbd != nil {
				return _gecbd
			}
			_bbbfb := uint32(_dbffc)
			_ecdcgf.CountAttr = &_bbbfb
			continue
		}
	}
_cbfad:
	for {
		_gfeab, _caeab := d.Token()
		if _caeab != nil {
			return _caeab
		}
		switch _cfffea := _gfeab.(type) {
		case _a.StartElement:
			switch _cfffea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_bggfc := NewCT_WebPublishObject()
				if _caaff := d.DecodeElement(_bggfc, &_cfffea); _caaff != nil {
					return _caaff
				}
				_ecdcgf.WebPublishObject = append(_ecdcgf.WebPublishObject, _bggfc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _cfffea.Name)
				if _cfbfd := d.Skip(); _cfbfd != nil {
					return _cfbfd
				}
			}
		case _a.EndElement:
			break _cbfad
		case _a.CharData:
		}
	}
	return nil
}
func (_cfgdc *CT_ObjectAnchor) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfgdc.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgdc.MoveWithCellsAttr))})
	}
	if _cfgdc.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgdc.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_gfec := _a.StartElement{Name: _a.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_cfgdc.From, _gfec)
	_ggcfc := _a.StartElement{Name: _a.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_cfgdc.To, _ggcfc)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MdxMetadata and its children
func (_gcdfae *CT_MdxMetadata) Validate() error {
	return _gcdfae.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_ebfc *CT_Dimensions) ValidateWithPath(path string) error {
	for _gcff, _aaae := range _ebfc.Dimension {
		if _baba := _aaae.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _gcff)); _baba != nil {
			return _baba
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_egag *CT_DataBinding) ValidateWithPath(path string) error { return nil }
func NewCT_Consolidation() *CT_Consolidation {
	_bgbgd := &CT_Consolidation{}
	_bgbgd.RangeSets = NewCT_RangeSets()
	return _bgbgd
}

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_bfgcdb *CT_TableFormula) ValidateWithPath(path string) error { return nil }
func (_dbcbf *ST_FormulaExpression) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_adecdd, _afefbc := d.Token()
	if _afefbc != nil {
		return _afefbc
	}
	if _ggegf, _ecddg := _adecdd.(_a.EndElement); _ecddg && _ggegf.Name == start.Name {
		*_dbcbf = 1
		return nil
	}
	if _dgdaffc, _edgdgg := _adecdd.(_a.CharData); !_edgdgg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adecdd)
	} else {
		switch string(_dgdaffc) {
		case "":
			*_dbcbf = 0
		case "\u0072\u0065\u0066":
			*_dbcbf = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_dbcbf = 2
		case "\u0061\u0072\u0065\u0061":
			*_dbcbf = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_dbcbf = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_dbcbf = 5
		}
	}
	_adecdd, _afefbc = d.Token()
	if _afefbc != nil {
		return _afefbc
	}
	if _dddaee, _bcafg := _adecdd.(_a.EndElement); _bcafg && _dddaee.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adecdd)
}

// Validate validates the CT_FileSharing and its children
func (_cbeb *CT_FileSharing) Validate() error {
	return _cbeb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}
func (_cacgc ST_DynamicFilterType) Validate() error { return _cacgc.ValidateWithPath("") }

type CT_Tables struct {

	// Count of Tables
	CountAttr    *uint32
	TablesChoice []*CT_TablesChoice
}

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_cddag *CT_RElt) ValidateWithPath(path string) error {
	if _cddag.RPr != nil {
		if _eaebf := _cddag.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _eaebf != nil {
			return _eaebf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_gcaagf *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }
func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_ccad := &CT_ConditionalFormats{}
	return _ccad
}
func (_fgadd *CT_IgnoredError) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _fgadd.SqrefAttr)})
	if _fgadd.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.EvalErrorAttr))})
	}
	if _fgadd.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.TwoDigitTextYearAttr))})
	}
	if _fgadd.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.NumberStoredAsTextAttr))})
	}
	if _fgadd.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.FormulaAttr))})
	}
	if _fgadd.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.FormulaRangeAttr))})
	}
	if _fgadd.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.UnlockedFormulaAttr))})
	}
	if _fgadd.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.EmptyCellReferenceAttr))})
	}
	if _fgadd.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.ListDataValidationAttr))})
	}
	if _fgadd.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fgadd.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_SmartTagShow byte
type ST_PrintError byte

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_ggbba *CT_Map) ValidateWithPath(path string) error {
	if _ggbba.DataBinding != nil {
		if _decde := _ggbba.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _decde != nil {
			return _decde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_gecce *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }
func (_bceb *CT_Cell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccf := range start.Attr {
		if _ccf.Name.Local == "\u0072" {
			_agf := _ccf.Value
			_bceb.RAttr = &_agf
			continue
		}
		if _ccf.Name.Local == "\u0073" {
			_bege, _dacd := _dd.ParseUint(_ccf.Value, 10, 32)
			if _dacd != nil {
				return _dacd
			}
			_gdbg := uint32(_bege)
			_bceb.SAttr = &_gdbg
			continue
		}
		if _ccf.Name.Local == "\u0074" {
			_bceb.TAttr.UnmarshalXMLAttr(_ccf)
			continue
		}
		if _ccf.Name.Local == "\u0063\u006d" {
			_dccf, _facfa := _dd.ParseUint(_ccf.Value, 10, 32)
			if _facfa != nil {
				return _facfa
			}
			_dgfc := uint32(_dccf)
			_bceb.CmAttr = &_dgfc
			continue
		}
		if _ccf.Name.Local == "\u0076\u006d" {
			_bfc, _fcff := _dd.ParseUint(_ccf.Value, 10, 32)
			if _fcff != nil {
				return _fcff
			}
			_gfedd := uint32(_bfc)
			_bceb.VmAttr = &_gfedd
			continue
		}
		if _ccf.Name.Local == "\u0070\u0068" {
			_fgae, _egbba := _dd.ParseBool(_ccf.Value)
			if _egbba != nil {
				return _egbba
			}
			_bceb.PhAttr = &_fgae
			continue
		}
	}
_gecg:
	for {
		_dgbb, _geed := d.Token()
		if _geed != nil {
			return _geed
		}
		switch _abgg := _dgbb.(type) {
		case _a.StartElement:
			switch _abgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_bceb.F = NewCT_CellFormula()
				if _faef := d.DecodeElement(_bceb.F, &_abgg); _faef != nil {
					return _faef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_bceb.V = new(string)
				if _dcdgb := d.DecodeElement(_bceb.V, &_abgg); _dcdgb != nil {
					return _dcdgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_bceb.Is = NewCT_Rst()
				if _eadf := d.DecodeElement(_bceb.Is, &_abgg); _eadf != nil {
					return _eadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bceb.ExtLst = NewCT_ExtensionList()
				if _fbfe := d.DecodeElement(_bceb.ExtLst, &_abgg); _fbfe != nil {
					return _fbfe
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _abgg.Name)
				if _bgdf := d.Skip(); _bgdf != nil {
					return _bgdf
				}
			}
		case _a.EndElement:
			break _gecg
		case _a.CharData:
		}
	}
	return nil
}
func (_cgdfa ST_DdeValueType) ValidateWithPath(path string) error {
	switch _cgdfa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgdfa))
	}
	return nil
}

type Comments struct{ CT_Comments }

// Validate validates the CT_OutlinePr and its children
func (_aeeeg *CT_OutlinePr) Validate() error {
	return _aeeeg.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}
func NewCT_Items() *CT_Items { _cbfb := &CT_Items{}; return _cbfb }
func NewCT_CacheSource() *CT_CacheSource {
	_cfd := &CT_CacheSource{}
	_cfd.TypeAttr = ST_SourceType(1)
	return _cfd
}

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_bfdbd *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _ecfdfb, _fgbda := range _bfdbd.Kpi {
		if _gecfbf := _fgbda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _ecfdfb)); _gecfbf != nil {
			return _gecfbf
		}
	}
	return nil
}
func (_egcab *CT_DdeItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gbafc:
	for {
		_beab, _eacdg := d.Token()
		if _eacdg != nil {
			return _eacdg
		}
		switch _bbabf := _beab.(type) {
		case _a.StartElement:
			switch _bbabf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_feefb := NewCT_DdeItem()
				if _bddae := d.DecodeElement(_feefb, &_bbabf); _bddae != nil {
					return _bddae
				}
				_egcab.DdeItem = append(_egcab.DdeItem, _feefb)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _bbabf.Name)
				if _ffbgb := d.Skip(); _ffbgb != nil {
					return _ffbgb
				}
			}
		case _a.EndElement:
			break _gbafc
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MergeCell and its children
func (_agadg *CT_MergeCell) Validate() error {
	return _agadg.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}
func NewCT_MetadataBlock() *CT_MetadataBlock { _bgeeg := &CT_MetadataBlock{}; return _bgeeg }
func NewCT_ChartsheetView() *CT_ChartsheetView {
	_bcec := &CT_ChartsheetView{}
	return _bcec
}
func (_addea *CT_MeasureDimensionMap) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _addea.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_addea.MeasureGroupAttr)})
	}
	if _addea.DimensionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _fd.Sprintf("\u0025\u0076", *_addea.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egbgd ST_TextHAlign) String() string {
	switch _egbgd {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_bffg *CT_CfRule) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cggb := range start.Attr {
		if _cggb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bffg.TypeAttr.UnmarshalXMLAttr(_cggb)
			continue
		}
		if _cggb.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_egfcd, _fadd := _dd.ParseUint(_cggb.Value, 10, 32)
			if _fadd != nil {
				return _fadd
			}
			_bafa := uint32(_egfcd)
			_bffg.DxfIdAttr = &_bafa
			continue
		}
		if _cggb.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_abcbf, _fbgc := _dd.ParseInt(_cggb.Value, 10, 32)
			if _fbgc != nil {
				return _fbgc
			}
			_bffg.PriorityAttr = int32(_abcbf)
			continue
		}
		if _cggb.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_efde, _eeba := _dd.ParseBool(_cggb.Value)
			if _eeba != nil {
				return _eeba
			}
			_bffg.StopIfTrueAttr = &_efde
			continue
		}
		if _cggb.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_fab, _dfcf := _dd.ParseBool(_cggb.Value)
			if _dfcf != nil {
				return _dfcf
			}
			_bffg.AboveAverageAttr = &_fab
			continue
		}
		if _cggb.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_abgcd, _bgfe := _dd.ParseBool(_cggb.Value)
			if _bgfe != nil {
				return _bgfe
			}
			_bffg.PercentAttr = &_abgcd
			continue
		}
		if _cggb.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_geaa, _geca := _dd.ParseBool(_cggb.Value)
			if _geca != nil {
				return _geca
			}
			_bffg.BottomAttr = &_geaa
			continue
		}
		if _cggb.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_bffg.OperatorAttr.UnmarshalXMLAttr(_cggb)
			continue
		}
		if _cggb.Name.Local == "\u0074\u0065\u0078\u0074" {
			_ggag := _cggb.Value
			_bffg.TextAttr = &_ggag
			continue
		}
		if _cggb.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_bffg.TimePeriodAttr.UnmarshalXMLAttr(_cggb)
			continue
		}
		if _cggb.Name.Local == "\u0072\u0061\u006e\u006b" {
			_cdc, _aefa := _dd.ParseUint(_cggb.Value, 10, 32)
			if _aefa != nil {
				return _aefa
			}
			_gbfd := uint32(_cdc)
			_bffg.RankAttr = &_gbfd
			continue
		}
		if _cggb.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_cgfe, _dgfbe := _dd.ParseInt(_cggb.Value, 10, 32)
			if _dgfbe != nil {
				return _dgfbe
			}
			_gfcf := int32(_cgfe)
			_bffg.StdDevAttr = &_gfcf
			continue
		}
		if _cggb.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_dcff, _fcgd := _dd.ParseBool(_cggb.Value)
			if _fcgd != nil {
				return _fcgd
			}
			_bffg.EqualAverageAttr = &_dcff
			continue
		}
	}
_dgfbc:
	for {
		_bade, _accf := d.Token()
		if _accf != nil {
			return _accf
		}
		switch _defg := _bade.(type) {
		case _a.StartElement:
			switch _defg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _ceed string
				if _cfgg := d.DecodeElement(&_ceed, &_defg); _cfgg != nil {
					return _cfgg
				}
				_bffg.Formula = append(_bffg.Formula, _ceed)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_bffg.ColorScale = NewCT_ColorScale()
				if _cdfg := d.DecodeElement(_bffg.ColorScale, &_defg); _cdfg != nil {
					return _cdfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_bffg.DataBar = NewCT_DataBar()
				if _bdaf := d.DecodeElement(_bffg.DataBar, &_defg); _bdaf != nil {
					return _bdaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_bffg.IconSet = NewCT_IconSet()
				if _ccag := d.DecodeElement(_bffg.IconSet, &_defg); _ccag != nil {
					return _ccag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bffg.ExtLst = NewCT_ExtensionList()
				if _deedb := d.DecodeElement(_bffg.ExtLst, &_defg); _deedb != nil {
					return _deedb
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _defg.Name)
				if _acba := d.Skip(); _acba != nil {
					return _acba
				}
			}
		case _a.EndElement:
			break _dgfbc
		case _a.CharData:
		}
	}
	return nil
}

type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _b.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_SharedItemsChoice and its children
func (_ggaec *CT_SharedItemsChoice) Validate() error {
	return _ggaec.ValidateWithPath("C\u0054_\u0053\u0068\u0061\u0072\u0065\u0064\u0049\u0074e\u006d\u0073\u0043\u0068oi\u0063\u0065")
}

type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}

// Validate validates the CT_Comments and its children
func (_adac *CT_Comments) Validate() error {
	return _adac.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_deceg ST_CfType) ValidateWithPath(path string) error {
	switch _deceg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deceg))
	}
	return nil
}
func NewCT_Cols() *CT_Cols { _bddc := &CT_Cols{}; return _bddc }

// Validate validates the CT_CalculatedMembers and its children
func (_cggf *CT_CalculatedMembers) Validate() error {
	return _cggf.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}
func (_adafdb ST_Orientation) Validate() error { return _adafdb.ValidateWithPath("") }
func NewCT_Dxf() *CT_Dxf                       { _gfgc := &CT_Dxf{}; return _gfgc }

// Validate validates the StyleSheet and its children
func (_bgdae *StyleSheet) Validate() error {
	return _bgdae.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}
func (_ecdbe *CT_UnderlineProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gdbddd := range start.Attr {
		if _gdbddd.Name.Local == "\u0076\u0061\u006c" {
			_ecdbe.ValAttr.UnmarshalXMLAttr(_gdbddd)
			continue
		}
	}
	for {
		_bbafg, _efefd := d.Token()
		if _efefd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _efefd)
		}
		if _ebecc, _agddg := _bbafg.(_a.EndElement); _agddg && _ebecc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_fccg *CT_Connection) ValidateWithPath(path string) error {
	if _daag := _fccg.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _daag != nil {
		return _daag
	}
	if _fccg.DbPr != nil {
		if _efbf := _fccg.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _efbf != nil {
			return _efbf
		}
	}
	if _fccg.OlapPr != nil {
		if _dgcb := _fccg.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _dgcb != nil {
			return _dgcb
		}
	}
	if _fccg.WebPr != nil {
		if _dbeb := _fccg.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _dbeb != nil {
			return _dbeb
		}
	}
	if _fccg.TextPr != nil {
		if _afae := _fccg.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _afae != nil {
			return _afae
		}
	}
	if _fccg.Parameters != nil {
		if _fca := _fccg.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _fca != nil {
			return _fca
		}
	}
	if _fccg.ExtLst != nil {
		if _gegb := _fccg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gegb != nil {
			return _gegb
		}
	}
	return nil
}
func (_fabfg ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _fabfg {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fabfg))
	}
	return nil
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

func (_ggegb *CT_PageItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ggegb.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_abcbe ST_TimePeriod) String() string {
	switch _abcbe {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ccbaab ST_PrintError) String() string {
	switch _ccbaab {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}
func (_dccdb *CT_FontFamily) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dccdb.ValAttr = 0
	for _, _cfdab := range start.Attr {
		if _cfdab.Name.Local == "\u0076\u0061\u006c" {
			_fcacb, _gbeaa := _dd.ParseInt(_cfdab.Value, 10, 64)
			if _gbeaa != nil {
				return _gbeaa
			}
			_dccdb.ValAttr = _fcacb
			continue
		}
	}
	for {
		_dagce, _babcb := d.Token()
		if _babcb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _babcb)
		}
		if _bgbb, _cebbd := _dagce.(_a.EndElement); _cebbd && _bgbb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_ecgga := &CT_QueryTableRefresh{}
	_ecgga.QueryTableFields = NewCT_QueryTableFields()
	return _ecgga
}
func (_ecddd *CT_pivotTableDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecddd.Location = NewCT_Location()
	for _, _fcgdc := range start.Attr {
		if _fcgdc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfcfae := _fcgdc.Value
			_ecddd.NameAttr = _bfcfae
			continue
		}
		if _fcgdc.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_afcafb, _aefbc := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _aefbc != nil {
				return _aefbc
			}
			_ecddd.CacheIdAttr = uint32(_afcafb)
			continue
		}
		if _fcgdc.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_cfdacg, _geffd := _dd.ParseBool(_fcgdc.Value)
			if _geffd != nil {
				return _geffd
			}
			_ecddd.DataOnRowsAttr = &_cfdacg
			continue
		}
		if _fcgdc.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gebgc, _ffded := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _ffded != nil {
				return _ffded
			}
			_eccgg := uint32(_gebgc)
			_ecddd.DataPositionAttr = &_eccgg
			continue
		}
		if _fcgdc.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bbgcg := _fcgdc.Value
			_ecddd.DataCaptionAttr = _bbgcg
			continue
		}
		if _fcgdc.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bgaca := _fcgdc.Value
			_ecddd.GrandTotalCaptionAttr = &_bgaca
			continue
		}
		if _fcgdc.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_baefe := _fcgdc.Value
			_ecddd.ErrorCaptionAttr = &_baefe
			continue
		}
		if _fcgdc.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_ebfcd, _begcfa := _dd.ParseBool(_fcgdc.Value)
			if _begcfa != nil {
				return _begcfa
			}
			_ecddd.ShowErrorAttr = &_ebfcd
			continue
		}
		if _fcgdc.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_aacag := _fcgdc.Value
			_ecddd.MissingCaptionAttr = &_aacag
			continue
		}
		if _fcgdc.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_egbdb, _dfdga := _dd.ParseBool(_fcgdc.Value)
			if _dfdga != nil {
				return _dfdga
			}
			_ecddd.ShowMissingAttr = &_egbdb
			continue
		}
		if _fcgdc.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_fafgd := _fcgdc.Value
			_ecddd.PageStyleAttr = &_fafgd
			continue
		}
		if _fcgdc.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_aecca := _fcgdc.Value
			_ecddd.PivotTableStyleAttr = &_aecca
			continue
		}
		if _fcgdc.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_dceee := _fcgdc.Value
			_ecddd.VacatedStyleAttr = &_dceee
			continue
		}
		if _fcgdc.Name.Local == "\u0074\u0061\u0067" {
			_edaff := _fcgdc.Value
			_ecddd.TagAttr = &_edaff
			continue
		}
		if _fcgdc.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_fdgfd, _abcfcd := _dd.ParseUint(_fcgdc.Value, 10, 8)
			if _abcfcd != nil {
				return _abcfcd
			}
			_faada := uint8(_fdgfd)
			_ecddd.UpdatedVersionAttr = &_faada
			continue
		}
		if _fcgdc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_edbbd, _dfgfe := _dd.ParseUint(_fcgdc.Value, 10, 8)
			if _dfgfe != nil {
				return _dfgfe
			}
			_eeaag := uint8(_edbbd)
			_ecddd.MinRefreshableVersionAttr = &_eeaag
			continue
		}
		if _fcgdc.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_efeagd, _acbcaf := _dd.ParseBool(_fcgdc.Value)
			if _acbcaf != nil {
				return _acbcaf
			}
			_ecddd.AsteriskTotalsAttr = &_efeagd
			continue
		}
		if _fcgdc.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_fedbfd, _deceb := _dd.ParseBool(_fcgdc.Value)
			if _deceb != nil {
				return _deceb
			}
			_ecddd.ShowItemsAttr = &_fedbfd
			continue
		}
		if _fcgdc.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_ecbcc, _bdabf := _dd.ParseBool(_fcgdc.Value)
			if _bdabf != nil {
				return _bdabf
			}
			_ecddd.EditDataAttr = &_ecbcc
			continue
		}
		if _fcgdc.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_bfggb, _gddgcc := _dd.ParseBool(_fcgdc.Value)
			if _gddgcc != nil {
				return _gddgcc
			}
			_ecddd.DisableFieldListAttr = &_bfggb
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_decdf, _cbgbc := _dd.ParseBool(_fcgdc.Value)
			if _cbgbc != nil {
				return _cbgbc
			}
			_ecddd.ShowCalcMbrsAttr = &_decdf
			continue
		}
		if _fcgdc.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_ggfdd, _gceec := _dd.ParseBool(_fcgdc.Value)
			if _gceec != nil {
				return _gceec
			}
			_ecddd.VisualTotalsAttr = &_ggfdd
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_cbaab, _edbac := _dd.ParseBool(_fcgdc.Value)
			if _edbac != nil {
				return _edbac
			}
			_ecddd.ShowMultipleLabelAttr = &_cbaab
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_acecdc, _adbba := _dd.ParseBool(_fcgdc.Value)
			if _adbba != nil {
				return _adbba
			}
			_ecddd.ShowDataDropDownAttr = &_acecdc
			continue
		}
		if _fcgdc.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_bfgcbd, _geffe := _dd.ParseBool(_fcgdc.Value)
			if _geffe != nil {
				return _geffe
			}
			_ecddd.ShowDrillAttr = &_bfgcbd
			continue
		}
		if _fcgdc.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_cdaag, _fddcfg := _dd.ParseBool(_fcgdc.Value)
			if _fddcfg != nil {
				return _fddcfg
			}
			_ecddd.PrintDrillAttr = &_cdaag
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_bdabb, _becgc := _dd.ParseBool(_fcgdc.Value)
			if _becgc != nil {
				return _becgc
			}
			_ecddd.ShowMemberPropertyTipsAttr = &_bdabb
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_eabfb, _dccgcga := _dd.ParseBool(_fcgdc.Value)
			if _dccgcga != nil {
				return _dccgcga
			}
			_ecddd.ShowDataTipsAttr = &_eabfb
			continue
		}
		if _fcgdc.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_fcafde, _gcgbd := _dd.ParseBool(_fcgdc.Value)
			if _gcgbd != nil {
				return _gcgbd
			}
			_ecddd.EnableWizardAttr = &_fcafde
			continue
		}
		if _fcgdc.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_gfaecd, _ebgaa := _dd.ParseBool(_fcgdc.Value)
			if _ebgaa != nil {
				return _ebgaa
			}
			_ecddd.EnableDrillAttr = &_gfaecd
			continue
		}
		if _fcgdc.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_bbgee, _gfgfe := _dd.ParseBool(_fcgdc.Value)
			if _gfgfe != nil {
				return _gfgfe
			}
			_ecddd.EnableFieldPropertiesAttr = &_bbgee
			continue
		}
		if _fcgdc.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_fdaecc, _cgbgcf := _dd.ParseBool(_fcgdc.Value)
			if _cgbgcf != nil {
				return _cgbgcf
			}
			_ecddd.PreserveFormattingAttr = &_fdaecc
			continue
		}
		if _fcgdc.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_acaafg, _efdcg := _dd.ParseBool(_fcgdc.Value)
			if _efdcg != nil {
				return _efdcg
			}
			_ecddd.UseAutoFormattingAttr = &_acaafg
			continue
		}
		if _fcgdc.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_aafae, _cbdcab := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _cbdcab != nil {
				return _cbdcab
			}
			_bcgcd := uint32(_aafae)
			_ecddd.PageWrapAttr = &_bcgcd
			continue
		}
		if _fcgdc.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_gceaaf, _feac := _dd.ParseBool(_fcgdc.Value)
			if _feac != nil {
				return _feac
			}
			_ecddd.PageOverThenDownAttr = &_gceaaf
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_bcgfb, _gafca := _dd.ParseBool(_fcgdc.Value)
			if _gafca != nil {
				return _gafca
			}
			_ecddd.SubtotalHiddenItemsAttr = &_bcgfb
			continue
		}
		if _fcgdc.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_dgfcec, _fcaabd := _dd.ParseBool(_fcgdc.Value)
			if _fcaabd != nil {
				return _fcaabd
			}
			_ecddd.RowGrandTotalsAttr = &_dgfcec
			continue
		}
		if _fcgdc.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_ffcaa, _cedfbg := _dd.ParseBool(_fcgdc.Value)
			if _cedfbg != nil {
				return _cedfbg
			}
			_ecddd.ColGrandTotalsAttr = &_ffcaa
			continue
		}
		if _fcgdc.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_beaca, _eebdbg := _dd.ParseBool(_fcgdc.Value)
			if _eebdbg != nil {
				return _eebdbg
			}
			_ecddd.FieldPrintTitlesAttr = &_beaca
			continue
		}
		if _fcgdc.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_fcbgaa, _fcbdf := _dd.ParseBool(_fcgdc.Value)
			if _fcbdf != nil {
				return _fcbdf
			}
			_ecddd.ItemPrintTitlesAttr = &_fcbgaa
			continue
		}
		if _fcgdc.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_eeffb, _gdgaba := _dd.ParseBool(_fcgdc.Value)
			if _gdgaba != nil {
				return _gdgaba
			}
			_ecddd.MergeItemAttr = &_eeffb
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_gfdbed, _fadcg := _dd.ParseBool(_fcgdc.Value)
			if _fadcg != nil {
				return _fadcg
			}
			_ecddd.ShowDropZonesAttr = &_gfdbed
			continue
		}
		if _fcgdc.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gcddd, _ggbbb := _dd.ParseUint(_fcgdc.Value, 10, 8)
			if _ggbbb != nil {
				return _ggbbb
			}
			_ggfeed := uint8(_gcddd)
			_ecddd.CreatedVersionAttr = &_ggfeed
			continue
		}
		if _fcgdc.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_cbedf, _ebfge := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _ebfge != nil {
				return _ebfge
			}
			_eabea := uint32(_cbedf)
			_ecddd.IndentAttr = &_eabea
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_gadbeg, _eecee := _dd.ParseBool(_fcgdc.Value)
			if _eecee != nil {
				return _eecee
			}
			_ecddd.ShowEmptyRowAttr = &_gadbeg
			continue
		}
		if _fcgdc.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_acddc, _bgcdg := _dd.ParseBool(_fcgdc.Value)
			if _bgcdg != nil {
				return _bgcdg
			}
			_ecddd.ShowEmptyColAttr = &_acddc
			continue
		}
		if _fcgdc.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_gddaf, _dbgffe := _dd.ParseBool(_fcgdc.Value)
			if _dbgffe != nil {
				return _dbgffe
			}
			_ecddd.ShowHeadersAttr = &_gddaf
			continue
		}
		if _fcgdc.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_afaeg, _ccggf := _dd.ParseBool(_fcgdc.Value)
			if _ccggf != nil {
				return _ccggf
			}
			_ecddd.CompactAttr = &_afaeg
			continue
		}
		if _fcgdc.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_baggc, _cfadc := _dd.ParseBool(_fcgdc.Value)
			if _cfadc != nil {
				return _cfadc
			}
			_ecddd.OutlineAttr = &_baggc
			continue
		}
		if _fcgdc.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_ecbbf, _egebaf := _dd.ParseBool(_fcgdc.Value)
			if _egebaf != nil {
				return _egebaf
			}
			_ecddd.OutlineDataAttr = &_ecbbf
			continue
		}
		if _fcgdc.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_edbaad, _deceaa := _dd.ParseBool(_fcgdc.Value)
			if _deceaa != nil {
				return _deceaa
			}
			_ecddd.CompactDataAttr = &_edbaad
			continue
		}
		if _fcgdc.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_cegfa, _ecgdcg := _dd.ParseBool(_fcgdc.Value)
			if _ecgdcg != nil {
				return _ecgdcg
			}
			_ecddd.PublishedAttr = &_cegfa
			continue
		}
		if _fcgdc.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_caedc, _ccbgd := _dd.ParseBool(_fcgdc.Value)
			if _ccbgd != nil {
				return _ccbgd
			}
			_ecddd.GridDropZonesAttr = &_caedc
			continue
		}
		if _fcgdc.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_egccf, _cgbaee := _dd.ParseBool(_fcgdc.Value)
			if _cgbaee != nil {
				return _cgbaee
			}
			_ecddd.ImmersiveAttr = &_egccf
			continue
		}
		if _fcgdc.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_aeacb, _babga := _dd.ParseBool(_fcgdc.Value)
			if _babga != nil {
				return _babga
			}
			_ecddd.MultipleFieldFiltersAttr = &_aeacb
			continue
		}
		if _fcgdc.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_ggeeb, _cdgbgc := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _cdgbgc != nil {
				return _cdgbgc
			}
			_eefbd := uint32(_ggeeb)
			_ecddd.ChartFormatAttr = &_eefbd
			continue
		}
		if _fcgdc.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_fdecf := _fcgdc.Value
			_ecddd.RowHeaderCaptionAttr = &_fdecf
			continue
		}
		if _fcgdc.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_bccc := _fcgdc.Value
			_ecddd.ColHeaderCaptionAttr = &_bccc
			continue
		}
		if _fcgdc.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_cacgb, _fegcb := _dd.ParseBool(_fcgdc.Value)
			if _fegcb != nil {
				return _fegcb
			}
			_ecddd.FieldListSortAscendingAttr = &_cacgb
			continue
		}
		if _fcgdc.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_dedfc, _bffge := _dd.ParseBool(_fcgdc.Value)
			if _bffge != nil {
				return _bffge
			}
			_ecddd.MdxSubqueriesAttr = &_dedfc
			continue
		}
		if _fcgdc.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_agacb, _dcbcae := _dd.ParseBool(_fcgdc.Value)
			if _dcbcae != nil {
				return _dcbcae
			}
			_ecddd.CustomListSortAttr = &_agacb
			continue
		}
		if _fcgdc.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_dgeeda, _afgbf := _dd.ParseUint(_fcgdc.Value, 10, 32)
			if _afgbf != nil {
				return _afgbf
			}
			_gggce := uint32(_dgeeda)
			_ecddd.AutoFormatIdAttr = &_gggce
			continue
		}
		if _fcgdc.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_geeaf, _degacb := _dd.ParseBool(_fcgdc.Value)
			if _degacb != nil {
				return _degacb
			}
			_ecddd.ApplyNumberFormatsAttr = &_geeaf
			continue
		}
		if _fcgdc.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_acgdf, _edbebg := _dd.ParseBool(_fcgdc.Value)
			if _edbebg != nil {
				return _edbebg
			}
			_ecddd.ApplyBorderFormatsAttr = &_acgdf
			continue
		}
		if _fcgdc.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebgead, _afdfbd := _dd.ParseBool(_fcgdc.Value)
			if _afdfbd != nil {
				return _afdfbd
			}
			_ecddd.ApplyFontFormatsAttr = &_ebgead
			continue
		}
		if _fcgdc.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ecbddf, _fgdef := _dd.ParseBool(_fcgdc.Value)
			if _fgdef != nil {
				return _fgdef
			}
			_ecddd.ApplyPatternFormatsAttr = &_ecbddf
			continue
		}
		if _fcgdc.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_egadfe, _gfcbb := _dd.ParseBool(_fcgdc.Value)
			if _gfcbb != nil {
				return _gfcbb
			}
			_ecddd.ApplyAlignmentFormatsAttr = &_egadfe
			continue
		}
		if _fcgdc.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfebe, _fddba := _dd.ParseBool(_fcgdc.Value)
			if _fddba != nil {
				return _fddba
			}
			_ecddd.ApplyWidthHeightFormatsAttr = &_dfebe
			continue
		}
	}
_ebgad:
	for {
		_dbaeba, _dfgeb := d.Token()
		if _dfgeb != nil {
			return _dfgeb
		}
		switch _cdacf := _dbaeba.(type) {
		case _a.StartElement:
			switch _cdacf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _debfc := d.DecodeElement(_ecddd.Location, &_cdacf); _debfc != nil {
					return _debfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ecddd.PivotFields = NewCT_PivotFields()
				if _cabdae := d.DecodeElement(_ecddd.PivotFields, &_cdacf); _cabdae != nil {
					return _cabdae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_ecddd.RowFields = NewCT_RowFields()
				if _dgdeg := d.DecodeElement(_ecddd.RowFields, &_cdacf); _dgdeg != nil {
					return _dgdeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_ecddd.RowItems = NewCT_rowItems()
				if _dfcbe := d.DecodeElement(_ecddd.RowItems, &_cdacf); _dfcbe != nil {
					return _dfcbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_ecddd.ColFields = NewCT_ColFields()
				if _cfdee := d.DecodeElement(_ecddd.ColFields, &_cdacf); _cfdee != nil {
					return _cfdee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_ecddd.ColItems = NewCT_colItems()
				if _ageda := d.DecodeElement(_ecddd.ColItems, &_cdacf); _ageda != nil {
					return _ageda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ecddd.PageFields = NewCT_PageFields()
				if _dcgabe := d.DecodeElement(_ecddd.PageFields, &_cdacf); _dcgabe != nil {
					return _dcgabe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_ecddd.DataFields = NewCT_DataFields()
				if _cebdb := d.DecodeElement(_ecddd.DataFields, &_cdacf); _cebdb != nil {
					return _cebdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_ecddd.Formats = NewCT_Formats()
				if _accbcg := d.DecodeElement(_ecddd.Formats, &_cdacf); _accbcg != nil {
					return _accbcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_ecddd.ConditionalFormats = NewCT_ConditionalFormats()
				if _gedgc := d.DecodeElement(_ecddd.ConditionalFormats, &_cdacf); _gedgc != nil {
					return _gedgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_ecddd.ChartFormats = NewCT_ChartFormats()
				if _ccbfff := d.DecodeElement(_ecddd.ChartFormats, &_cdacf); _ccbfff != nil {
					return _ccbfff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_ecddd.PivotHierarchies = NewCT_PivotHierarchies()
				if _bgbbcg := d.DecodeElement(_ecddd.PivotHierarchies, &_cdacf); _bgbbcg != nil {
					return _bgbbcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_ecddd.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _efbgbc := d.DecodeElement(_ecddd.PivotTableStyleInfo, &_cdacf); _efbgbc != nil {
					return _efbgbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_ecddd.Filters = NewCT_PivotFilters()
				if _egeeb := d.DecodeElement(_ecddd.Filters, &_cdacf); _egeeb != nil {
					return _egeeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_ecddd.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _bedfd := d.DecodeElement(_ecddd.RowHierarchiesUsage, &_cdacf); _bedfd != nil {
					return _bedfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_ecddd.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _beeaf := d.DecodeElement(_ecddd.ColHierarchiesUsage, &_cdacf); _beeaf != nil {
					return _beeaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecddd.ExtLst = NewCT_ExtensionList()
				if _fccae := d.DecodeElement(_ecddd.ExtLst, &_cdacf); _fccae != nil {
					return _fccae
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _cdacf.Name)
				if _decbc := d.Skip(); _decbc != nil {
					return _decbc
				}
			}
		case _a.EndElement:
			break _ebgad
		case _a.CharData:
		}
	}
	return nil
}
func (_gfeaeb *CT_ReviewedRevisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _adacb := range start.Attr {
		if _adacb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dggaf, _dgacbe := _dd.ParseUint(_adacb.Value, 10, 32)
			if _dgacbe != nil {
				return _dgacbe
			}
			_febgb := uint32(_dggaf)
			_gfeaeb.CountAttr = &_febgb
			continue
		}
	}
_beagd:
	for {
		_cfbab, _ecfa := d.Token()
		if _ecfa != nil {
			return _ecfa
		}
		switch _efaef := _cfbab.(type) {
		case _a.StartElement:
			switch _efaef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_gbgfcd := NewCT_Reviewed()
				if _ffcede := d.DecodeElement(_gbgfcd, &_efaef); _ffcede != nil {
					return _ffcede
				}
				_gfeaeb.Reviewed = append(_gfeaeb.Reviewed, _gbgfcd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _efaef.Name)
				if _fcgcad := d.Skip(); _fcgcad != nil {
					return _fcgcad
				}
			}
		case _a.EndElement:
			break _beagd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PageBreak() *CT_PageBreak { _dgbgg := &CT_PageBreak{}; return _dgbgg }
func (_adebc *ST_rwColActionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_begcc, _ggaeaa := d.Token()
	if _ggaeaa != nil {
		return _ggaeaa
	}
	if _dggcafe, _agabg := _begcc.(_a.EndElement); _agabg && _dggcafe.Name == start.Name {
		*_adebc = 1
		return nil
	}
	if _cacag, _gabbcd := _begcc.(_a.CharData); !_gabbcd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _begcc)
	} else {
		switch string(_cacag) {
		case "":
			*_adebc = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_adebc = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_adebc = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_adebc = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_adebc = 4
		}
	}
	_begcc, _ggaeaa = d.Token()
	if _ggaeaa != nil {
		return _ggaeaa
	}
	if _deadadg, _bddcaa := _begcc.(_a.EndElement); _bddcaa && _deadadg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _begcc)
}
func (_ecefb ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _ecefb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecefb))
	}
	return nil
}
func (_beda *CT_ColHierarchiesUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _beda.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_beda.CountAttr)})
	}
	e.EncodeToken(start)
	_cccg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063ol\u0048i\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065"}}
	for _, _adcaa := range _beda.ColHierarchyUsage {
		e.EncodeElement(_adcaa, _cccg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_eegeb *CT_MetadataType) ValidateWithPath(path string) error { return nil }
func NewCT_QueryTableField() *CT_QueryTableField                   { _cfdcaf := &CT_QueryTableField{}; return _cfdcaf }
func (_cbcbcg *CT_PivotAreaReference) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbcbcg.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cbcbcg.FieldAttr)})
	}
	if _cbcbcg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cbcbcg.CountAttr)})
	}
	if _cbcbcg.SelectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.SelectedAttr))})
	}
	if _cbcbcg.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.ByPositionAttr))})
	}
	if _cbcbcg.RelativeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.RelativeAttr))})
	}
	if _cbcbcg.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.DefaultSubtotalAttr))})
	}
	if _cbcbcg.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.SumSubtotalAttr))})
	}
	if _cbcbcg.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.CountASubtotalAttr))})
	}
	if _cbcbcg.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.AvgSubtotalAttr))})
	}
	if _cbcbcg.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.MaxSubtotalAttr))})
	}
	if _cbcbcg.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.MinSubtotalAttr))})
	}
	if _cbcbcg.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.ProductSubtotalAttr))})
	}
	if _cbcbcg.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.CountSubtotalAttr))})
	}
	if _cbcbcg.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.StdDevSubtotalAttr))})
	}
	if _cbcbcg.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.StdDevPSubtotalAttr))})
	}
	if _cbcbcg.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.VarSubtotalAttr))})
	}
	if _cbcbcg.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbcbcg.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _cbcbcg.X != nil {
		_bfgeae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _eagge := range _cbcbcg.X {
			e.EncodeElement(_eagge, _bfgeae)
		}
	}
	if _cbcbcg.ExtLst != nil {
		_dgdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbcbcg.ExtLst, _dgdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aceeca *CT_Tables) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aceeca.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aceeca.CountAttr)})
	}
	e.EncodeToken(start)
	for _, _eeea := range _aceeca.TablesChoice {
		_eeea.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_WebPublishItems() *CT_WebPublishItems {
	_cedff := &CT_WebPublishItems{}
	return _cedff
}
func (_acgcee *CT_IgnoredErrors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ccefg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0069\u0067n\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _dadgd := range _acgcee.IgnoredError {
		e.EncodeElement(_dadgd, _ccefg)
	}
	if _acgcee.ExtLst != nil {
		_bgga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acgcee.ExtLst, _bgga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gccgb ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _gccgb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gccgb))
	}
	return nil
}

// Validate validates the CT_GroupItems and its children
func (_eeadff *CT_GroupItems) Validate() error {
	return _eeadff.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}
func (_egcgg *CT_CustomSheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _egcgg.GuidAttr)})
	if _egcgg.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgg.ScaleAttr)})
	}
	if _egcgg.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgg.ColorIdAttr)})
	}
	if _egcgg.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowPageBreaksAttr))})
	}
	if _egcgg.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowFormulasAttr))})
	}
	if _egcgg.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowGridLinesAttr))})
	}
	if _egcgg.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowRowColAttr))})
	}
	if _egcgg.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.OutlineSymbolsAttr))})
	}
	if _egcgg.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ZeroValuesAttr))})
	}
	if _egcgg.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.FitToPageAttr))})
	}
	if _egcgg.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.PrintAreaAttr))})
	}
	if _egcgg.FilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.FilterAttr))})
	}
	if _egcgg.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowAutoFilterAttr))})
	}
	if _egcgg.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.HiddenRowsAttr))})
	}
	if _egcgg.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.HiddenColumnsAttr))})
	}
	if _egcgg.StateAttr != ST_SheetStateUnset {
		_dabee, _fgbdfg := _egcgg.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _fgbdfg != nil {
			return _fgbdfg
		}
		start.Attr = append(start.Attr, _dabee)
	}
	if _egcgg.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.FilterUniqueAttr))})
	}
	if _egcgg.ViewAttr != ST_SheetViewTypeUnset {
		_abbg, _gaff := _egcgg.ViewAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _gaff != nil {
			return _gaff
		}
		start.Attr = append(start.Attr, _abbg)
	}
	if _egcgg.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egcgg.ShowRulerAttr))})
	}
	if _egcgg.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_egcgg.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _egcgg.Pane != nil {
		_caabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_egcgg.Pane, _caabd)
	}
	if _egcgg.Selection != nil {
		_aggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_egcgg.Selection, _aggd)
	}
	if _egcgg.RowBreaks != nil {
		_acaga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_egcgg.RowBreaks, _acaga)
	}
	if _egcgg.ColBreaks != nil {
		_bgcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_egcgg.ColBreaks, _bgcf)
	}
	if _egcgg.PageMargins != nil {
		_fcbc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_egcgg.PageMargins, _fcbc)
	}
	if _egcgg.PrintOptions != nil {
		_edea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0070\u0072i\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_egcgg.PrintOptions, _edea)
	}
	if _egcgg.PageSetup != nil {
		_gadbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_egcgg.PageSetup, _gadbe)
	}
	if _egcgg.HeaderFooter != nil {
		_fffcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_egcgg.HeaderFooter, _fffcd)
	}
	if _egcgg.AutoFilter != nil {
		_dfbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_egcgg.AutoFilter, _dfbg)
	}
	if _egcgg.ExtLst != nil {
		_ddae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egcgg.ExtLst, _ddae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_dgadc := &CT_MetadataStringIndex{}
	return _dgadc
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_addfga *CT_RevisionQueryTableField) Validate() error {
	return _addfga.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}
func (_gbfgdd *CT_Consolidation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbfgdd.RangeSets = NewCT_RangeSets()
	for _, _dgde := range start.Attr {
		if _dgde.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_facfe, _gcgf := _dd.ParseBool(_dgde.Value)
			if _gcgf != nil {
				return _gcgf
			}
			_gbfgdd.AutoPageAttr = &_facfe
			continue
		}
	}
_bccd:
	for {
		_ccgf, _dacbd := d.Token()
		if _dacbd != nil {
			return _dacbd
		}
		switch _eegb := _ccgf.(type) {
		case _a.StartElement:
			switch _eegb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_gbfgdd.Pages = NewCT_Pages()
				if _gbfdb := d.DecodeElement(_gbfgdd.Pages, &_eegb); _gbfdb != nil {
					return _gbfdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _edbbe := d.DecodeElement(_gbfgdd.RangeSets, &_eegb); _edbbe != nil {
					return _edbbe
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _eegb.Name)
				if _efbbg := d.Skip(); _efbbg != nil {
					return _efbbg
				}
			}
		case _a.EndElement:
			break _bccd
		case _a.CharData:
		}
	}
	return nil
}
func (_febdd ST_Qualifier) String() string {
	switch _febdd {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PageSetup and its children
func (_ecdeb *CT_PageSetup) Validate() error {
	return _ecdeb.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}
func NewCT_Color() *CT_Color { _dba := &CT_Color{}; return _dba }
func (_gdaff *PivotTableDefinition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _gdaff.CT_pivotTableDefinition.MarshalXML(e, start)
}
func NewCT_Boolean() *CT_Boolean {
	_fgb := &CT_Boolean{}
	return _fgb
}
func (_ggeg *CT_MergeCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ggeg.CountAttr)})
	}
	e.EncodeToken(start)
	_eefdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _eefea := range _ggeg.MergeCell {
		e.EncodeElement(_eefea, _eefdd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dbecf ST_PhoneticType) Validate() error { return _dbecf.ValidateWithPath("") }

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}

func (_fbge *CT_CustomProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dgfgf := range start.Attr {
		if _dgfgf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgfgf.Name.Local == "\u0069\u0064" || _dgfgf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgfgf.Name.Local == "\u0069\u0064" {
			_eddg := _dgfgf.Value
			_fbge.IdAttr = _eddg
			continue
		}
		if _dgfgf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abbf := _dgfgf.Value
			_fbge.NameAttr = _abbf
			continue
		}
	}
	for {
		_adga, _gcce := d.Token()
		if _gcce != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _gcce)
		}
		if _cbeabd, _dfee := _adga.(_a.EndElement); _dfee && _cbeabd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdgbdg *ST_TimePeriod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdabg, _dggbgd := d.Token()
	if _dggbgd != nil {
		return _dggbgd
	}
	if _dcfba, _ebaba := _bdabg.(_a.EndElement); _ebaba && _dcfba.Name == start.Name {
		*_bdgbdg = 1
		return nil
	}
	if _ebccg, _bcefbe := _bdabg.(_a.CharData); !_bcefbe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdabg)
	} else {
		switch string(_ebccg) {
		case "":
			*_bdgbdg = 0
		case "\u0074\u006f\u0064a\u0079":
			*_bdgbdg = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_bdgbdg = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_bdgbdg = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_bdgbdg = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_bdgbdg = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_bdgbdg = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_bdgbdg = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_bdgbdg = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_bdgbdg = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_bdgbdg = 10
		}
	}
	_bdabg, _dggbgd = d.Token()
	if _dggbgd != nil {
		return _dggbgd
	}
	if _baacc, _ebefff := _bdabg.(_a.EndElement); _ebefff && _baacc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdabg)
}
func (_gfbbd *CT_WebPublishItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _caegg := range start.Attr {
		if _caegg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aeagc, _fecag := _dd.ParseUint(_caegg.Value, 10, 32)
			if _fecag != nil {
				return _fecag
			}
			_bfdgd := uint32(_aeagc)
			_gfbbd.CountAttr = &_bfdgd
			continue
		}
	}
_fbcbgc:
	for {
		_dbfff, _fffcaa := d.Token()
		if _fffcaa != nil {
			return _fffcaa
		}
		switch _aeebd := _dbfff.(type) {
		case _a.StartElement:
			switch _aeebd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_faegd := NewCT_WebPublishItem()
				if _gabgdg := d.DecodeElement(_faegd, &_aeebd); _gabgdg != nil {
					return _gabgdg
				}
				_gfbbd.WebPublishItem = append(_gfbbd.WebPublishItem, _faegd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _aeebd.Name)
				if _ccbfb := d.Skip(); _ccbfb != nil {
					return _ccbfb
				}
			}
		case _a.EndElement:
			break _fbcbgc
		case _a.CharData:
		}
	}
	return nil
}

type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}

// Validate validates the CT_VolMain and its children
func (_gadcg *CT_VolMain) Validate() error {
	return _gadcg.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}
func (_cgbc *CT_Color) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgbc.AutoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgbc.AutoAttr))})
	}
	if _cgbc.IndexedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbc.IndexedAttr)})
	}
	if _cgbc.RgbAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0067\u0062"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbc.RgbAttr)})
	}
	if _cgbc.ThemeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbc.ThemeAttr)})
	}
	if _cgbc.TintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cgbc.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_IconSet and its children
func (_dcgce *CT_IconSet) Validate() error {
	return _dcgce.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_fcbdae *CT_DdeItems) ValidateWithPath(path string) error {
	for _ecdcdf, _fgdec := range _fcbdae.DdeItem {
		if _gbac := _fgdec.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _ecdcdf)); _gbac != nil {
			return _gbac
		}
	}
	return nil
}
func NewCT_XmlPr() *CT_XmlPr { _baebge := &CT_XmlPr{}; return _baebge }

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

func (_agddca ST_Scope) Validate() error { return _agddca.ValidateWithPath("") }

// Validate validates the CT_DynamicFilter and its children
func (_ffdf *CT_DynamicFilter) Validate() error {
	return _ffdf.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}

// Validate validates the CT_PatternFill and its children
func (_gbagc *CT_PatternFill) Validate() error {
	return _gbagc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}
func (_ecbabb ST_Pane) String() string {
	switch _ecbabb {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_ceeb *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _acea, _fcfad := range _ceeb.CustomSheetView {
		if _abccc := _fcfad.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _acea)); _abccc != nil {
			return _abccc
		}
	}
	return nil
}

// Validate validates the CT_RPrElt and its children
func (_afdbe *CT_RPrElt) Validate() error {
	return _afdbe.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_cefga *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _ffbgba, _cadad := range _cefga.SheetId {
		if _defdee := _cadad.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _ffbgba)); _defdee != nil {
			return _defdee
		}
	}
	return nil
}
func NewCT_Fill() *CT_Fill                 { _cgdd := &CT_Fill{}; _cgdd.FillChoice = NewCT_FillChoice(); return _cgdd }
func NewCT_IgnoredError() *CT_IgnoredError { _geaae := &CT_IgnoredError{}; return _geaae }
func (_bfdad *CT_WebPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fabab := range start.Attr {
		if _fabab.Name.Local == "\u0078\u006d\u006c" {
			_gcceg, _eeffc := _dd.ParseBool(_fabab.Value)
			if _eeffc != nil {
				return _eeffc
			}
			_bfdad.XmlAttr = &_gcceg
			continue
		}
		if _fabab.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_cggde, _ecadca := _dd.ParseBool(_fabab.Value)
			if _ecadca != nil {
				return _ecadca
			}
			_bfdad.SourceDataAttr = &_cggde
			continue
		}
		if _fabab.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_cfdce, _egdga := _dd.ParseBool(_fabab.Value)
			if _egdga != nil {
				return _egdga
			}
			_bfdad.ParsePreAttr = &_cfdce
			continue
		}
		if _fabab.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_cecec, _bggbg := _dd.ParseBool(_fabab.Value)
			if _bggbg != nil {
				return _bggbg
			}
			_bfdad.ConsecutiveAttr = &_cecec
			continue
		}
		if _fabab.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_ffgee, _cdaae := _dd.ParseBool(_fabab.Value)
			if _cdaae != nil {
				return _cdaae
			}
			_bfdad.FirstRowAttr = &_ffgee
			continue
		}
		if _fabab.Name.Local == "\u0078\u006c\u0039\u0037" {
			_eddab, _dedf := _dd.ParseBool(_fabab.Value)
			if _dedf != nil {
				return _dedf
			}
			_bfdad.Xl97Attr = &_eddab
			continue
		}
		if _fabab.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_becffg, _dceag := _dd.ParseBool(_fabab.Value)
			if _dceag != nil {
				return _dceag
			}
			_bfdad.TextDatesAttr = &_becffg
			continue
		}
		if _fabab.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_edbec, _bdaag := _dd.ParseBool(_fabab.Value)
			if _bdaag != nil {
				return _bdaag
			}
			_bfdad.Xl2000Attr = &_edbec
			continue
		}
		if _fabab.Name.Local == "\u0075\u0072\u006c" {
			_dcafef := _fabab.Value
			_bfdad.UrlAttr = &_dcafef
			continue
		}
		if _fabab.Name.Local == "\u0070\u006f\u0073\u0074" {
			_fceeg := _fabab.Value
			_bfdad.PostAttr = &_fceeg
			continue
		}
		if _fabab.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_gaaada, _accdg := _dd.ParseBool(_fabab.Value)
			if _accdg != nil {
				return _accdg
			}
			_bfdad.HtmlTablesAttr = &_gaaada
			continue
		}
		if _fabab.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_bfdad.HtmlFormatAttr.UnmarshalXMLAttr(_fabab)
			continue
		}
		if _fabab.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_adgffc := _fabab.Value
			_bfdad.EditPageAttr = &_adgffc
			continue
		}
	}
_cfbd:
	for {
		_becce, _dbfad := d.Token()
		if _dbfad != nil {
			return _dbfad
		}
		switch _efaba := _becce.(type) {
		case _a.StartElement:
			switch _efaba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_bfdad.Tables = NewCT_Tables()
				if _cfbba := d.DecodeElement(_bfdad.Tables, &_efaba); _cfbba != nil {
					return _cfbba
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _efaba.Name)
				if _bgdeba := d.Skip(); _bgdeba != nil {
					return _bgdeba
				}
			}
		case _a.EndElement:
			break _cfbd
		case _a.CharData:
		}
	}
	return nil
}
func (_gcfd *CT_BorderPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gcfd.StyleAttr != ST_BorderStyleUnset {
		_gdf, _gcef := _gcfd.StyleAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _gcef != nil {
			return _gcef
		}
		start.Attr = append(start.Attr, _gdf)
	}
	e.EncodeToken(start)
	if _gcfd.Color != nil {
		_ddc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
		e.EncodeElement(_gcfd.Color, _ddc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_dddgeg *Users) ValidateWithPath(path string) error {
	if _ccefcb := _dddgeg.CT_Users.ValidateWithPath(path); _ccefcb != nil {
		return _ccefcb
	}
	return nil
}

type CT_Authors struct {

	// Author
	Author []string
}

func NewCT_MdxMetadata() *CT_MdxMetadata { _abgbg := &CT_MdxMetadata{}; return _abgbg }

// Validate validates the CT_FunctionGroup and its children
func (_agggc *CT_FunctionGroup) Validate() error {
	return _agggc.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}
func NewCT_Sheet() *CT_Sheet { _bfccd := &CT_Sheet{}; return _bfccd }
func (_ffcace *ST_PivotAreaType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cagcca, _cbcaf := d.Token()
	if _cbcaf != nil {
		return _cbcaf
	}
	if _acacdf, _efaed := _cagcca.(_a.EndElement); _efaed && _acacdf.Name == start.Name {
		*_ffcace = 1
		return nil
	}
	if _cebbe, _abfac := _cagcca.(_a.CharData); !_abfac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cagcca)
	} else {
		switch string(_cebbe) {
		case "":
			*_ffcace = 0
		case "\u006e\u006f\u006e\u0065":
			*_ffcace = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_ffcace = 2
		case "\u0064\u0061\u0074\u0061":
			*_ffcace = 3
		case "\u0061\u006c\u006c":
			*_ffcace = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_ffcace = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_ffcace = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_ffcace = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ffcace = 8
		}
	}
	_cagcca, _cbcaf = d.Token()
	if _cbcaf != nil {
		return _cbcaf
	}
	if _fffff, _dfgfb := _cagcca.(_a.EndElement); _dfgfb && _fffff.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cagcca)
}

type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

func NewCT_OleSize() *CT_OleSize { _dbeeeg := &CT_OleSize{}; return _dbeeeg }

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_geab *CT_FontScheme) ValidateWithPath(path string) error {
	if _geab.ValAttr == ST_FontSchemeUnset {
		return _fd.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbfc := _geab.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bbfc != nil {
		return _bbfc
	}
	return nil
}
func (_eaded *CT_DataValidations) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdff := range start.Attr {
		if _cdff.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_decad, _dfbea := _dd.ParseBool(_cdff.Value)
			if _dfbea != nil {
				return _dfbea
			}
			_eaded.DisablePromptsAttr = &_decad
			continue
		}
		if _cdff.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_cegc, _gbgc := _dd.ParseUint(_cdff.Value, 10, 32)
			if _gbgc != nil {
				return _gbgc
			}
			_geag := uint32(_cegc)
			_eaded.XWindowAttr = &_geag
			continue
		}
		if _cdff.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_cdcee, _cabe := _dd.ParseUint(_cdff.Value, 10, 32)
			if _cabe != nil {
				return _cabe
			}
			_dbce := uint32(_cdcee)
			_eaded.YWindowAttr = &_dbce
			continue
		}
		if _cdff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eegd, _abfe := _dd.ParseUint(_cdff.Value, 10, 32)
			if _abfe != nil {
				return _abfe
			}
			_aeceg := uint32(_eegd)
			_eaded.CountAttr = &_aeceg
			continue
		}
	}
_fdfga:
	for {
		_ggfae, _aegdd := d.Token()
		if _aegdd != nil {
			return _aegdd
		}
		switch _addf := _ggfae.(type) {
		case _a.StartElement:
			switch _addf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_cdcg := NewCT_DataValidation()
				if _bbbae := d.DecodeElement(_cdcg, &_addf); _bbbae != nil {
					return _bbbae
				}
				_eaded.DataValidation = append(_eaded.DataValidation, _cdcg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _addf.Name)
				if _fegd := d.Skip(); _fegd != nil {
					return _fegd
				}
			}
		case _a.EndElement:
			break _fdfga
		case _a.CharData:
		}
	}
	return nil
}
func (_bgbee *Table) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bgbee.CT_Table = *NewCT_Table()
	for _, _dbfab := range start.Attr {
		if _dbfab.Name.Local == "\u0069\u0064" {
			_cecee, _fcebd := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _fcebd != nil {
				return _fcebd
			}
			_bgbee.IdAttr = uint32(_cecee)
			continue
		}
		if _dbfab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agcgc := _dbfab.Value
			_bgbee.NameAttr = &_agcgc
			continue
		}
		if _dbfab.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_aafgb := _dbfab.Value
			_bgbee.DisplayNameAttr = _aafgb
			continue
		}
		if _dbfab.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bfeeag := _dbfab.Value
			_bgbee.CommentAttr = &_bfeeag
			continue
		}
		if _dbfab.Name.Local == "\u0072\u0065\u0066" {
			_ddbccc := _dbfab.Value
			_bgbee.RefAttr = _ddbccc
			continue
		}
		if _dbfab.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_bgbee.TableTypeAttr.UnmarshalXMLAttr(_dbfab)
			continue
		}
		if _dbfab.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_degbg, _baccbe := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _baccbe != nil {
				return _baccbe
			}
			_dbfdb := uint32(_degbg)
			_bgbee.HeaderRowCountAttr = &_dbfdb
			continue
		}
		if _dbfab.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_ddfga, _edcbg := _dd.ParseBool(_dbfab.Value)
			if _edcbg != nil {
				return _edcbg
			}
			_bgbee.InsertRowAttr = &_ddfga
			continue
		}
		if _dbfab.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_ffcdd, _ddebf := _dd.ParseBool(_dbfab.Value)
			if _ddebf != nil {
				return _ddebf
			}
			_bgbee.InsertRowShiftAttr = &_ffcdd
			continue
		}
		if _dbfab.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_eadgd, _bbafd := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _bbafd != nil {
				return _bbafd
			}
			_gbaga := uint32(_eadgd)
			_bgbee.TotalsRowCountAttr = &_gbaga
			continue
		}
		if _dbfab.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_fedef, _eedaa := _dd.ParseBool(_dbfab.Value)
			if _eedaa != nil {
				return _eedaa
			}
			_bgbee.TotalsRowShownAttr = &_fedef
			continue
		}
		if _dbfab.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_eeaagg, _efggg := _dd.ParseBool(_dbfab.Value)
			if _efggg != nil {
				return _efggg
			}
			_bgbee.PublishedAttr = &_eeaagg
			continue
		}
		if _dbfab.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_gbgga, _ggdaec := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _ggdaec != nil {
				return _ggdaec
			}
			_daedae := uint32(_gbgga)
			_bgbee.HeaderRowDxfIdAttr = &_daedae
			continue
		}
		if _dbfab.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_gccgeb, _cfdad := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _cfdad != nil {
				return _cfdad
			}
			_eaeed := uint32(_gccgeb)
			_bgbee.DataDxfIdAttr = &_eaeed
			continue
		}
		if _dbfab.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_fcbfd, _fffdee := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _fffdee != nil {
				return _fffdee
			}
			_bfbgg := uint32(_fcbfd)
			_bgbee.TotalsRowDxfIdAttr = &_bfbgg
			continue
		}
		if _dbfab.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cbdag, _dccdc := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _dccdc != nil {
				return _dccdc
			}
			_acdbbg := uint32(_cbdag)
			_bgbee.HeaderRowBorderDxfIdAttr = &_acdbbg
			continue
		}
		if _dbfab.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_faaabf, _dcfcdg := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _dcfcdg != nil {
				return _dcfcdg
			}
			_bdgaf := uint32(_faaabf)
			_bgbee.TableBorderDxfIdAttr = &_bdgaf
			continue
		}
		if _dbfab.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_cecae, _afeefb := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _afeefb != nil {
				return _afeefb
			}
			_feacg := uint32(_cecae)
			_bgbee.TotalsRowBorderDxfIdAttr = &_feacg
			continue
		}
		if _dbfab.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_fagcaf := _dbfab.Value
			_bgbee.HeaderRowCellStyleAttr = &_fagcaf
			continue
		}
		if _dbfab.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_ceecf := _dbfab.Value
			_bgbee.DataCellStyleAttr = &_ceecf
			continue
		}
		if _dbfab.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_cbfae := _dbfab.Value
			_bgbee.TotalsRowCellStyleAttr = &_cbfae
			continue
		}
		if _dbfab.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_dgbabf, _bgcba := _dd.ParseUint(_dbfab.Value, 10, 32)
			if _bgcba != nil {
				return _bgcba
			}
			_eeefgd := uint32(_dgbabf)
			_bgbee.ConnectionIdAttr = &_eeefgd
			continue
		}
	}
_aeeaed:
	for {
		_bddgg, _ffbfd := d.Token()
		if _ffbfd != nil {
			return _ffbfd
		}
		switch _afcbdd := _bddgg.(type) {
		case _a.StartElement:
			switch _afcbdd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_bgbee.AutoFilter = NewCT_AutoFilter()
				if _cdceb := d.DecodeElement(_bgbee.AutoFilter, &_afcbdd); _cdceb != nil {
					return _cdceb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_bgbee.SortState = NewCT_SortState()
				if _fcdad := d.DecodeElement(_bgbee.SortState, &_afcbdd); _fcdad != nil {
					return _fcdad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _aggbc := d.DecodeElement(_bgbee.TableColumns, &_afcbdd); _aggbc != nil {
					return _aggbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_bgbee.TableStyleInfo = NewCT_TableStyleInfo()
				if _dcacf := d.DecodeElement(_bgbee.TableStyleInfo, &_afcbdd); _dcacf != nil {
					return _dcacf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgbee.ExtLst = NewCT_ExtensionList()
				if _bdba := d.DecodeElement(_bgbee.ExtLst, &_afcbdd); _bdba != nil {
					return _bdba
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _afcbdd.Name)
				if _ggdaeg := d.Skip(); _ggdaeg != nil {
					return _ggdaeg
				}
			}
		case _a.EndElement:
			break _aeeaed
		case _a.CharData:
		}
	}
	return nil
}
func (_afce *CT_RowHierarchiesUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afce.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_afce.CountAttr)})
	}
	e.EncodeToken(start)
	_gfeee := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0072ow\u0048i\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065"}}
	for _, _edbaa := range _afce.RowHierarchyUsage {
		e.EncodeElement(_edbaa, _gfeee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffeba ST_TotalsRowFunction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ffeba.String(), start)
}
func (_fbcbd *CT_Parameter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbcbd.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.NameAttr)})
	}
	if _fbcbd.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.SqlTypeAttr)})
	}
	if _fbcbd.ParameterTypeAttr != ST_ParameterTypeUnset {
		_cdfda, _cdfdb := _fbcbd.ParameterTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _cdfdb != nil {
			return _cdfdb
		}
		start.Attr = append(start.Attr, _cdfda)
	}
	if _fbcbd.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbd.RefreshOnChangeAttr))})
	}
	if _fbcbd.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.PromptAttr)})
	}
	if _fbcbd.BooleanAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbd.BooleanAttr))})
	}
	if _fbcbd.DoubleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.DoubleAttr)})
	}
	if _fbcbd.IntegerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.IntegerAttr)})
	}
	if _fbcbd.StringAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.StringAttr)})
	}
	if _fbcbd.CellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbd.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdedea *CT_SmartTagType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cdedea.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_cdedea.NamespaceUriAttr)})
	}
	if _cdedea.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdedea.NameAttr)})
	}
	if _cdedea.UrlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_cdedea.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdebg *CT_FillChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _cdebg.PatternFill != nil {
		_aadee := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdebg.PatternFill, _aadee)
	} else if _cdebg.GradientFill != nil {
		_cbeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0067\u0072a\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cdebg.GradientFill, _cbeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afaedb ST_FormatAction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_afaedb.String(), start)
}
func (_gcdea *CT_SheetIdMap) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebgea := range start.Attr {
		if _ebgea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abdaa, _afabde := _dd.ParseUint(_ebgea.Value, 10, 32)
			if _afabde != nil {
				return _afabde
			}
			_fccbf := uint32(_abdaa)
			_gcdea.CountAttr = &_fccbf
			continue
		}
	}
_cgddd:
	for {
		_caeea, _bcgcbc := d.Token()
		if _bcgcbc != nil {
			return _bcgcbc
		}
		switch _dcfda := _caeea.(type) {
		case _a.StartElement:
			switch _dcfda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_afggd := NewCT_SheetId()
				if _facee := d.DecodeElement(_afggd, &_dcfda); _facee != nil {
					return _facee
				}
				_gcdea.SheetId = append(_gcdea.SheetId, _afggd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _dcfda.Name)
				if _agfgg := d.Skip(); _agfgg != nil {
					return _agfgg
				}
			}
		case _a.EndElement:
			break _cgddd
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PageSetUpPr() *CT_PageSetUpPr { _bedaa := &CT_PageSetUpPr{}; return _bedaa }
func NewCT_FutureMetadata() *CT_FutureMetadata {
	_bfcg := &CT_FutureMetadata{}
	return _bfcg
}

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_dbfea *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_dbfea.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _dbfea.GuidAttr)
	}
	if _dbbff := _dbfea.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _dbbff != nil {
		return _dbbff
	}
	if _aggdg := _dbfea.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _aggdg != nil {
		return _aggdg
	}
	if _dbfea.Pane != nil {
		if _beecf := _dbfea.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _beecf != nil {
			return _beecf
		}
	}
	if _dbfea.Selection != nil {
		if _afgee := _dbfea.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _afgee != nil {
			return _afgee
		}
	}
	if _dbfea.RowBreaks != nil {
		if _gace := _dbfea.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _gace != nil {
			return _gace
		}
	}
	if _dbfea.ColBreaks != nil {
		if _gdff := _dbfea.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _gdff != nil {
			return _gdff
		}
	}
	if _dbfea.PageMargins != nil {
		if _fcda := _dbfea.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _fcda != nil {
			return _fcda
		}
	}
	if _dbfea.PrintOptions != nil {
		if _cegg := _dbfea.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _cegg != nil {
			return _cegg
		}
	}
	if _dbfea.PageSetup != nil {
		if _fcec := _dbfea.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fcec != nil {
			return _fcec
		}
	}
	if _dbfea.HeaderFooter != nil {
		if _cgaef := _dbfea.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cgaef != nil {
			return _cgaef
		}
	}
	if _dbfea.AutoFilter != nil {
		if _gbcef := _dbfea.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gbcef != nil {
			return _gbcef
		}
	}
	if _dbfea.ExtLst != nil {
		if _geaec := _dbfea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geaec != nil {
			return _geaec
		}
	}
	return nil
}
func (_egbgg *CT_SheetData) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _egbgg.Row != nil {
		_agaaed := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u006f\u0077"}}
		for _, _cedea := range _egbgg.Row {
			e.EncodeElement(_cedea, _agaaed)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_RPrElt() *CT_RPrElt { _ddfcfg := &CT_RPrElt{}; return _ddfcfg }
func NewCT_ExternalReferences() *CT_ExternalReferences {
	_bfada := &CT_ExternalReferences{}
	return _bfada
}
func (_gffdf *CT_Items) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gffdf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gffdf.CountAttr)})
	}
	e.EncodeToken(start)
	_deabg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u0074\u0065\u006d"}}
	for _, _cbeaf := range _gffdf.Item {
		e.EncodeElement(_cbeaf, _deabg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_geaggd *CT_Xf) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cabfff := range start.Attr {
		if _cabfff.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_degdda, _gadaa := _dd.ParseUint(_cabfff.Value, 10, 32)
			if _gadaa != nil {
				return _gadaa
			}
			_fdcgagf := uint32(_degdda)
			_geaggd.NumFmtIdAttr = &_fdcgagf
			continue
		}
		if _cabfff.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_fafea, _afced := _dd.ParseUint(_cabfff.Value, 10, 32)
			if _afced != nil {
				return _afced
			}
			_bgefd := uint32(_fafea)
			_geaggd.FontIdAttr = &_bgefd
			continue
		}
		if _cabfff.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_geadee, _afcbd := _dd.ParseUint(_cabfff.Value, 10, 32)
			if _afcbd != nil {
				return _afcbd
			}
			_ccbdc := uint32(_geadee)
			_geaggd.FillIdAttr = &_ccbdc
			continue
		}
		if _cabfff.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_gaedd, _adcaab := _dd.ParseUint(_cabfff.Value, 10, 32)
			if _adcaab != nil {
				return _adcaab
			}
			_cggbgb := uint32(_gaedd)
			_geaggd.BorderIdAttr = &_cggbgb
			continue
		}
		if _cabfff.Name.Local == "\u0078\u0066\u0049\u0064" {
			_ebebf, _adefe := _dd.ParseUint(_cabfff.Value, 10, 32)
			if _adefe != nil {
				return _adefe
			}
			_bccfcd := uint32(_ebebf)
			_geaggd.XfIdAttr = &_bccfcd
			continue
		}
		if _cabfff.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_ccggg, _gfbdf := _dd.ParseBool(_cabfff.Value)
			if _gfbdf != nil {
				return _gfbdf
			}
			_geaggd.QuotePrefixAttr = &_ccggg
			continue
		}
		if _cabfff.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_daace, _dfcad := _dd.ParseBool(_cabfff.Value)
			if _dfcad != nil {
				return _dfcad
			}
			_geaggd.PivotButtonAttr = &_daace
			continue
		}
		if _cabfff.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_dbece, _bgddcf := _dd.ParseBool(_cabfff.Value)
			if _bgddcf != nil {
				return _bgddcf
			}
			_geaggd.ApplyNumberFormatAttr = &_dbece
			continue
		}
		if _cabfff.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_fdcgfd, _dgecde := _dd.ParseBool(_cabfff.Value)
			if _dgecde != nil {
				return _dgecde
			}
			_geaggd.ApplyFontAttr = &_fdcgfd
			continue
		}
		if _cabfff.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_ccdda, _acbgb := _dd.ParseBool(_cabfff.Value)
			if _acbgb != nil {
				return _acbgb
			}
			_geaggd.ApplyFillAttr = &_ccdda
			continue
		}
		if _cabfff.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_eeceg, _bddege := _dd.ParseBool(_cabfff.Value)
			if _bddege != nil {
				return _bddege
			}
			_geaggd.ApplyBorderAttr = &_eeceg
			continue
		}
		if _cabfff.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_aaacd, _eeecfe := _dd.ParseBool(_cabfff.Value)
			if _eeecfe != nil {
				return _eeecfe
			}
			_geaggd.ApplyAlignmentAttr = &_aaacd
			continue
		}
		if _cabfff.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_cfeee, _bdaab := _dd.ParseBool(_cabfff.Value)
			if _bdaab != nil {
				return _bdaab
			}
			_geaggd.ApplyProtectionAttr = &_cfeee
			continue
		}
	}
_fdedf:
	for {
		_bcedd, _ggfef := d.Token()
		if _ggfef != nil {
			return _ggfef
		}
		switch _feeacc := _bcedd.(type) {
		case _a.StartElement:
			switch _feeacc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_geaggd.Alignment = NewCT_CellAlignment()
				if _ebgfa := d.DecodeElement(_geaggd.Alignment, &_feeacc); _ebgfa != nil {
					return _ebgfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_geaggd.Protection = NewCT_CellProtection()
				if _baaaea := d.DecodeElement(_geaggd.Protection, &_feeacc); _baaaea != nil {
					return _baaaea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geaggd.ExtLst = NewCT_ExtensionList()
				if _gefacd := d.DecodeElement(_geaggd.ExtLst, &_feeacc); _gefacd != nil {
					return _gefacd
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _feeacc.Name)
				if _agbbbd := d.Skip(); _agbbbd != nil {
					return _agbbbd
				}
			}
		case _a.EndElement:
			break _fdedf
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Groups and its children
func (_bfgadg *CT_Groups) Validate() error {
	return _bfgadg.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}
func (_afggcba *CT_VolType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afggcba.TypeAttr = ST_VolDepType(1)
	for _, _bdafb := range start.Attr {
		if _bdafb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_afggcba.TypeAttr.UnmarshalXMLAttr(_bdafb)
			continue
		}
	}
_degae:
	for {
		_egebae, _dacdbc := d.Token()
		if _dacdbc != nil {
			return _dacdbc
		}
		switch _cecff := _egebae.(type) {
		case _a.StartElement:
			switch _cecff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_daccc := NewCT_VolMain()
				if _ebged := d.DecodeElement(_daccc, &_cecff); _ebged != nil {
					return _ebged
				}
				_afggcba.Main = append(_afggcba.Main, _daccc)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _cecff.Name)
				if _ccgbfe := d.Skip(); _ccgbfe != nil {
					return _ccgbfe
				}
			}
		case _a.EndElement:
			break _degae
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionComment and its children
func (_accfg *CT_RevisionComment) Validate() error {
	return _accfg.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}
func NewCT_Control() *CT_Control { _eeda := &CT_Control{}; return _eeda }
func NewCT_PageSetup() *CT_PageSetup {
	_bfgfa := &CT_PageSetup{}
	return _bfgfa
}

// Validate validates the CT_Map and its children
func (_dedbc *CT_Map) Validate() error {
	return _dedbc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}
func (_gefcd *CT_Extension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dedcb := range start.Attr {
		if _dedcb.Name.Local == "\u0075\u0072\u0069" {
			_abdc := _dedcb.Value
			_gefcd.UriAttr = &_abdc
			continue
		}
	}
_efbfb:
	for {
		_aeeaf, _fgcba := d.Token()
		if _fgcba != nil {
			return _fgcba
		}
		switch _fedbf := _aeeaf.(type) {
		case _a.StartElement:
			switch _fedbf.Name {
			default:
				if _fffdd, _debcg := _ff.CreateElement(_fedbf); _debcg != nil {
					return _debcg
				} else {
					if _dgbef := d.DecodeElement(_fffdd, &_fedbf); _dgbef != nil {
						return _dgbef
					}
					_gefcd.Any = _fffdd
				}
			}
		case _a.EndElement:
			break _efbfb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_InputCells() *CT_InputCells { _ffdgd := &CT_InputCells{}; return _ffdgd }

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

func (_fgfga *ST_CfType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fgfga = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_fgfga = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_fgfga = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_fgfga = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_fgfga = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_fgfga = 5
	case "\u0074\u006f\u00701\u0030":
		*_fgfga = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_fgfga = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_fgfga = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_fgfga = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_fgfga = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_fgfga = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_fgfga = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_fgfga = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_fgfga = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_fgfga = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_fgfga = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fgfga = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_fgfga = 18
	}
	return nil
}
func (_bdfgfg *CT_PivotCaches) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_bgacc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074C\u0061\u0063\u0068\u0065"}}
	for _, _ccgce := range _bdfgfg.PivotCache {
		e.EncodeElement(_ccgce, _bgacc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_rwColActionType byte

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_eccea *CT_CellAlignment) ValidateWithPath(path string) error {
	if _egbe := _eccea.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _egbe != nil {
		return _egbe
	}
	if _gafg := _eccea.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _gafg != nil {
		return _gafg
	}
	return nil
}

// Validate validates the Revisions and its children
func (_bcdebc *Revisions) Validate() error {
	return _bcdebc.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}
func (_bfgggd *ST_CfType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfeeeg, _badga := d.Token()
	if _badga != nil {
		return _badga
	}
	if _bdeedb, _cacbc := _dfeeeg.(_a.EndElement); _cacbc && _bdeedb.Name == start.Name {
		*_bfgggd = 1
		return nil
	}
	if _edfef, _fdeeg := _dfeeeg.(_a.CharData); !_fdeeg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfeeeg)
	} else {
		switch string(_edfef) {
		case "":
			*_bfgggd = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_bfgggd = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_bfgggd = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_bfgggd = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_bfgggd = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_bfgggd = 5
		case "\u0074\u006f\u00701\u0030":
			*_bfgggd = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_bfgggd = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_bfgggd = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_bfgggd = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_bfgggd = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_bfgggd = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_bfgggd = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_bfgggd = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_bfgggd = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_bfgggd = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_bfgggd = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bfgggd = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_bfgggd = 18
		}
	}
	_dfeeeg, _badga = d.Token()
	if _badga != nil {
		return _badga
	}
	if _efbge, _dcefgg := _dfeeeg.(_a.EndElement); _dcefgg && _efbge.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfeeeg)
}

type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_CellAlignment and its children
func (_baae *CT_CellAlignment) Validate() error {
	return _baae.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}
func NewCT_XmlCellPr() *CT_XmlCellPr {
	_aabdf := &CT_XmlCellPr{}
	_aabdf.XmlPr = NewCT_XmlPr()
	return _aabdf
}

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_bcbcd *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _gdded := _bcbcd.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _gdded != nil {
		return _gdded
	}
	if _bcbcd.QueryTableDeletedFields != nil {
		if _gdacab := _bcbcd.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _gdacab != nil {
			return _gdacab
		}
	}
	if _bcbcd.SortState != nil {
		if _cafee := _bcbcd.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _cafee != nil {
			return _cafee
		}
	}
	if _bcbcd.ExtLst != nil {
		if _fafgc := _bcbcd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fafgc != nil {
			return _fafgc
		}
	}
	return nil
}

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

func NewCT_ExternalReference() *CT_ExternalReference {
	_aadfe := &CT_ExternalReference{}
	return _aadfe
}
func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_bdbeb := &CT_PivotAreaReferences{}
	return _bdbeb
}
func (_fcad *CT_CustomFilters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fcad.AndAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcad.AndAttr))})
	}
	e.EncodeToken(start)
	_dccgf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0063\u0075s\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _cbagd := range _fcad.CustomFilter {
		e.EncodeElement(_cbagd, _dccgf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dadfa ST_PaneState) Validate() error { return _dadfa.ValidateWithPath("") }
func (_ebddc ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _ebddc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebddc))
	}
	return nil
}

// Validate validates the CT_RevisionRowColumn and its children
func (_deeee *CT_RevisionRowColumn) Validate() error {
	return _deeee.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}
func NewCT_FunctionGroup() *CT_FunctionGroup {
	_gbge := &CT_FunctionGroup{}
	return _gbge
}

type CalcChain struct{ CT_CalcChain }

func (_bbffd *CT_FontScheme) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_bfacf, _aggde := _bbffd.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
	if _aggde != nil {
		return _aggde
	}
	start.Attr = append(start.Attr, _bfacf)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func _bbbge(_afaec bool) uint8 {
	if _afaec {
		return 1
	}
	return 0
}

type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gegad *CT_MemberProperties) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gegad.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gegad.CountAttr)})
	}
	e.EncodeToken(start)
	_febd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0070"}}
	for _, _adff := range _gegad.Mp {
		e.EncodeElement(_adff, _febd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggcd *CT_DdeValue) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daeb := range start.Attr {
		if _daeb.Name.Local == "\u0074" {
			_ggcd.TAttr.UnmarshalXMLAttr(_daeb)
			continue
		}
	}
_gdegc:
	for {
		_abeed, _dacfa := d.Token()
		if _dacfa != nil {
			return _dacfa
		}
		switch _dfde := _abeed.(type) {
		case _a.StartElement:
			switch _dfde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _bcbag := d.DecodeElement(&_ggcd.Val, &_dfde); _bcbag != nil {
					return _bcbag
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _dfde.Name)
				if _aacfb := d.Skip(); _aacfb != nil {
					return _aacfb
				}
			}
		case _a.EndElement:
			break _gdegc
		case _a.CharData:
		}
	}
	return nil
}
func (_gbea *CT_CalculatedMembers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbea.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gbea.CountAttr)})
	}
	e.EncodeToken(start)
	_eaad := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061t\u0065\u0064\u004d\u0065mb\u0065\u0072"}}
	for _, _cfae := range _gbea.CalculatedMember {
		e.EncodeElement(_cfae, _eaad)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eefgeb ST_DvAspect) String() string {
	switch _eefgeb {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}

type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_WebPublishObjects and its children
func (_fccec *CT_WebPublishObjects) Validate() error {
	return _fccec.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}
func (_facdf *CT_XmlColumnPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _facdf.MapIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _fd.Sprintf("\u0025\u0076", _facdf.XpathAttr)})
	if _facdf.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_facdf.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _facdf.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _facdf.ExtLst != nil {
		_ggafe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_facdf.ExtLst, _ggafe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfbbe *CT_String) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbfgaa := range start.Attr {
		if _fbfgaa.Name.Local == "\u0076" {
			_aedca := _fbfgaa.Value
			_cfbbe.VAttr = _aedca
			continue
		}
		if _fbfgaa.Name.Local == "\u0075" {
			_fgcad, _ggdde := _dd.ParseBool(_fbfgaa.Value)
			if _ggdde != nil {
				return _ggdde
			}
			_cfbbe.UAttr = &_fgcad
			continue
		}
		if _fbfgaa.Name.Local == "\u0066" {
			_bfafgc, _caed := _dd.ParseBool(_fbfgaa.Value)
			if _caed != nil {
				return _caed
			}
			_cfbbe.FAttr = &_bfafgc
			continue
		}
		if _fbfgaa.Name.Local == "\u0063" {
			_cbgbbe := _fbfgaa.Value
			_cfbbe.CAttr = &_cbgbbe
			continue
		}
		if _fbfgaa.Name.Local == "\u0063\u0070" {
			_bgfecc, _adbfd := _dd.ParseUint(_fbfgaa.Value, 10, 32)
			if _adbfd != nil {
				return _adbfd
			}
			_cegadb := uint32(_bgfecc)
			_cfbbe.CpAttr = &_cegadb
			continue
		}
		if _fbfgaa.Name.Local == "\u0069\u006e" {
			_daadf, _gaece := _dd.ParseUint(_fbfgaa.Value, 10, 32)
			if _gaece != nil {
				return _gaece
			}
			_dbeab := uint32(_daadf)
			_cfbbe.InAttr = &_dbeab
			continue
		}
		if _fbfgaa.Name.Local == "\u0062\u0063" {
			_ceggf := _fbfgaa.Value
			_cfbbe.BcAttr = &_ceggf
			continue
		}
		if _fbfgaa.Name.Local == "\u0066\u0063" {
			_cbeeb := _fbfgaa.Value
			_cfbbe.FcAttr = &_cbeeb
			continue
		}
		if _fbfgaa.Name.Local == "\u0069" {
			_fefbf, _cbga := _dd.ParseBool(_fbfgaa.Value)
			if _cbga != nil {
				return _cbga
			}
			_cfbbe.IAttr = &_fefbf
			continue
		}
		if _fbfgaa.Name.Local == "\u0075\u006e" {
			_bggbad, _fccgbf := _dd.ParseBool(_fbfgaa.Value)
			if _fccgbf != nil {
				return _fccgbf
			}
			_cfbbe.UnAttr = &_bggbad
			continue
		}
		if _fbfgaa.Name.Local == "\u0073\u0074" {
			_edcbc, _ebceg := _dd.ParseBool(_fbfgaa.Value)
			if _ebceg != nil {
				return _ebceg
			}
			_cfbbe.StAttr = &_edcbc
			continue
		}
		if _fbfgaa.Name.Local == "\u0062" {
			_accad, _gdffg := _dd.ParseBool(_fbfgaa.Value)
			if _gdffg != nil {
				return _gdffg
			}
			_cfbbe.BAttr = &_accad
			continue
		}
	}
_bcacge:
	for {
		_cbdga, _ggedeb := d.Token()
		if _ggedeb != nil {
			return _ggedeb
		}
		switch _dcaf := _cbdga.(type) {
		case _a.StartElement:
			switch _dcaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fceca := NewCT_Tuples()
				if _egagd := d.DecodeElement(_fceca, &_dcaf); _egagd != nil {
					return _egagd
				}
				_cfbbe.Tpls = append(_cfbbe.Tpls, _fceca)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_acafc := NewCT_X()
				if _aacgab := d.DecodeElement(_acafc, &_dcaf); _aacgab != nil {
					return _aacgab
				}
				_cfbbe.X = append(_cfbbe.X, _acafc)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _dcaf.Name)
				if _agadf := d.Skip(); _agadf != nil {
					return _agadf
				}
			}
		case _a.EndElement:
			break _bcacge
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_fafbg *CT_PCDKPI) ValidateWithPath(path string) error { return nil }
func (_gaegad *CT_RangePr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccbeg := range start.Attr {
		if _ccbeg.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_gdfab, _adebf := _dd.ParseBool(_ccbeg.Value)
			if _adebf != nil {
				return _adebf
			}
			_gaegad.AutoStartAttr = &_gdfab
			continue
		}
		if _ccbeg.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_dgfee, _agfegd := _dd.ParseBool(_ccbeg.Value)
			if _agfegd != nil {
				return _agfegd
			}
			_gaegad.AutoEndAttr = &_dgfee
			continue
		}
		if _ccbeg.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_gaegad.GroupByAttr.UnmarshalXMLAttr(_ccbeg)
			continue
		}
		if _ccbeg.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_bcfag, _faefg := _dd.ParseFloat(_ccbeg.Value, 64)
			if _faefg != nil {
				return _faefg
			}
			_gaegad.StartNumAttr = &_bcfag
			continue
		}
		if _ccbeg.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_gcaff, _dggfda := _dd.ParseFloat(_ccbeg.Value, 64)
			if _dggfda != nil {
				return _dggfda
			}
			_gaegad.EndNumAttr = &_gcaff
			continue
		}
		if _ccbeg.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_daabbd, _bfbbd := ParseStdlibTime(_ccbeg.Value)
			if _bfbbd != nil {
				return _bfbbd
			}
			_gaegad.StartDateAttr = &_daabbd
			continue
		}
		if _ccbeg.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_aaddaf, _edeed := ParseStdlibTime(_ccbeg.Value)
			if _edeed != nil {
				return _edeed
			}
			_gaegad.EndDateAttr = &_aaddaf
			continue
		}
		if _ccbeg.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_acbae, _fcfbb := _dd.ParseFloat(_ccbeg.Value, 64)
			if _fcfbb != nil {
				return _fcfbb
			}
			_gaegad.GroupIntervalAttr = &_acbae
			continue
		}
	}
	for {
		_bfbcbe, _ccdfb := d.Token()
		if _ccdfb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _ccdfb)
		}
		if _gbgceg, _eacbd := _bfbcbe.(_a.EndElement); _eacbd && _gbgceg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egecc *ST_ConditionalFormattingOperator) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cadaef, _beceed := d.Token()
	if _beceed != nil {
		return _beceed
	}
	if _eacgd, _feggd := _cadaef.(_a.EndElement); _feggd && _eacgd.Name == start.Name {
		*_egecc = 1
		return nil
	}
	if _cccdg, _fffacf := _cadaef.(_a.CharData); !_fffacf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cadaef)
	} else {
		switch string(_cccdg) {
		case "":
			*_egecc = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_egecc = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_egecc = 2
		case "\u0065\u0071\u0075a\u006c":
			*_egecc = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_egecc = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_egecc = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_egecc = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_egecc = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_egecc = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_egecc = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_egecc = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_egecc = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_egecc = 12
		}
	}
	_cadaef, _beceed = d.Token()
	if _beceed != nil {
		return _beceed
	}
	if _aececg, _feada := _cadaef.(_a.EndElement); _feada && _aececg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cadaef)
}
func (_cegbb *CT_Scenarios) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cegbb.CurrentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cegbb.CurrentAttr)})
	}
	if _cegbb.ShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_cegbb.ShowAttr)})
	}
	if _cegbb.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_cegbb.SqrefAttr)})
	}
	e.EncodeToken(start)
	_dcffde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _ccdca := range _cegbb.Scenario {
		e.EncodeElement(_ccdca, _dcffde)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_cbca := &CT_ColHierarchiesUsage{}
	return _cbca
}
func (_dcgff ST_GroupBy) ValidateWithPath(path string) error {
	switch _dcgff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcgff))
	}
	return nil
}
func (_bdecb ST_UpdateLinks) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dfbfe := _a.Attr{}
	_dfbfe.Name = name
	switch _bdecb {
	case ST_UpdateLinksUnset:
		_dfbfe.Value = ""
	case ST_UpdateLinksUserSet:
		_dfbfe.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_dfbfe.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_dfbfe.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _dfbfe, nil
}
func (_ecebe *CT_Scenario) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcgbd := range start.Attr {
		if _dcgbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afefc := _dcgbd.Value
			_ecebe.NameAttr = _afefc
			continue
		}
		if _dcgbd.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_ccbcc, _addae := _dd.ParseBool(_dcgbd.Value)
			if _addae != nil {
				return _addae
			}
			_ecebe.LockedAttr = &_ccbcc
			continue
		}
		if _dcgbd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ffdfa, _cgfgd := _dd.ParseBool(_dcgbd.Value)
			if _cgfgd != nil {
				return _cgfgd
			}
			_ecebe.HiddenAttr = &_ffdfa
			continue
		}
		if _dcgbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fgefe, _edbgg := _dd.ParseUint(_dcgbd.Value, 10, 32)
			if _edbgg != nil {
				return _edbgg
			}
			_begcfe := uint32(_fgefe)
			_ecebe.CountAttr = &_begcfe
			continue
		}
		if _dcgbd.Name.Local == "\u0075\u0073\u0065\u0072" {
			_becdd := _dcgbd.Value
			_ecebe.UserAttr = &_becdd
			continue
		}
		if _dcgbd.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bgcca := _dcgbd.Value
			_ecebe.CommentAttr = &_bgcca
			continue
		}
	}
_cdfcd:
	for {
		_efeg, _dgfgd := d.Token()
		if _dgfgd != nil {
			return _dgfgd
		}
		switch _acfgc := _efeg.(type) {
		case _a.StartElement:
			switch _acfgc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_bdcbd := NewCT_InputCells()
				if _aabda := d.DecodeElement(_bdcbd, &_acfgc); _aabda != nil {
					return _aabda
				}
				_ecebe.InputCells = append(_ecebe.InputCells, _bdcbd)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _acfgc.Name)
				if _cfbcgd := d.Skip(); _cfbcgd != nil {
					return _cfbcgd
				}
			}
		case _a.EndElement:
			break _cdfcd
		case _a.CharData:
		}
	}
	return nil
}

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}

func (_gbege *CT_NumFmts) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbege.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gbege.CountAttr)})
	}
	e.EncodeToken(start)
	if _gbege.NumFmt != nil {
		_bdbbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006e\u0075\u006d\u0046\u006d\u0074"}}
		for _, _baadbf := range _gbege.NumFmt {
			e.EncodeElement(_baadbf, _bdbbg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ddebb *ST_GroupBy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cacdg, _feedeg := d.Token()
	if _feedeg != nil {
		return _feedeg
	}
	if _fegcea, _ffagg := _cacdg.(_a.EndElement); _ffagg && _fegcea.Name == start.Name {
		*_ddebb = 1
		return nil
	}
	if _acbaed, _bdabeb := _cacdg.(_a.CharData); !_bdabeb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cacdg)
	} else {
		switch string(_acbaed) {
		case "":
			*_ddebb = 0
		case "\u0072\u0061\u006eg\u0065":
			*_ddebb = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_ddebb = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_ddebb = 3
		case "\u0068\u006f\u0075r\u0073":
			*_ddebb = 4
		case "\u0064\u0061\u0079\u0073":
			*_ddebb = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_ddebb = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_ddebb = 7
		case "\u0079\u0065\u0061r\u0073":
			*_ddebb = 8
		}
	}
	_cacdg, _feedeg = d.Token()
	if _feedeg != nil {
		return _feedeg
	}
	if _bfgdc, _agfbc := _cacdg.(_a.EndElement); _agfbc && _bfgdc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cacdg)
}
func NewCT_CacheFields() *CT_CacheFields {
	_fbg := &CT_CacheFields{}
	return _fbg
}
func NewCT_DataBinding() *CT_DataBinding { _acebg := &CT_DataBinding{}; return _acebg }
func (_ccgbde ST_RefMode) ValidateWithPath(path string) error {
	switch _ccgbde {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccgbde))
	}
	return nil
}
func (_ggcf *CT_Filters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggcf.BlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ggcf.BlankAttr))})
	}
	if _ggcf.CalendarTypeAttr != _b.ST_CalendarTypeUnset {
		_cbceb, _aeacc := _ggcf.CalendarTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _aeacc != nil {
			return _aeacc
		}
		start.Attr = append(start.Attr, _cbceb)
	}
	e.EncodeToken(start)
	if _ggcf.Filter != nil {
		_eefb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u006c\u0074\u0065\u0072"}}
		for _, _gced := range _ggcf.Filter {
			e.EncodeElement(_gced, _eefb)
		}
	}
	if _ggcf.DateGroupItem != nil {
		_ggbgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d"}}
		for _, _cfbef := range _ggcf.DateGroupItem {
			e.EncodeElement(_cfbef, _ggbgb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalDefinedName and its children
func (_faafd *CT_ExternalDefinedName) Validate() error {
	return _faafd.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

// Validate validates the CT_CellSmartTag and its children
func (_cced *CT_CellSmartTag) Validate() error {
	return _cced.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_eeegf *Dialogsheet) ValidateWithPath(path string) error {
	if _edbfd := _eeegf.CT_Dialogsheet.ValidateWithPath(path); _edbfd != nil {
		return _edbfd
	}
	return nil
}

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_dcbdc *CT_Dxf) ValidateWithPath(path string) error {
	if _dcbdc.Font != nil {
		if _agda := _dcbdc.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _agda != nil {
			return _agda
		}
	}
	if _dcbdc.NumFmt != nil {
		if _debaf := _dcbdc.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _debaf != nil {
			return _debaf
		}
	}
	if _dcbdc.Fill != nil {
		if _fffb := _dcbdc.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _fffb != nil {
			return _fffb
		}
	}
	if _dcbdc.Alignment != nil {
		if _bdaea := _dcbdc.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _bdaea != nil {
			return _bdaea
		}
	}
	if _dcbdc.Border != nil {
		if _cgabb := _dcbdc.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _cgabb != nil {
			return _cgabb
		}
	}
	if _dcbdc.Protection != nil {
		if _gdgb := _dcbdc.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _gdgb != nil {
			return _gdgb
		}
	}
	if _dcbdc.ExtLst != nil {
		if _faceg := _dcbdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faceg != nil {
			return _faceg
		}
	}
	return nil
}

// Validate validates the CT_PivotAreaReference and its children
func (_gaafcd *CT_PivotAreaReference) Validate() error {
	return _gaafcd.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}
func (_gfaac ST_Pane) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gfaac.String(), start)
}

type CT_MdxChoice struct {

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}
type Table struct{ CT_Table }

func (_ecga *CT_Cfvo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecga.TypeAttr = ST_CfvoType(1)
	for _, _deca := range start.Attr {
		if _deca.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecga.TypeAttr.UnmarshalXMLAttr(_deca)
			continue
		}
		if _deca.Name.Local == "\u0076\u0061\u006c" {
			_cfabb := _deca.Value
			_ecga.ValAttr = &_cfabb
			continue
		}
		if _deca.Name.Local == "\u0067\u0074\u0065" {
			_abaf, _eegab := _dd.ParseBool(_deca.Value)
			if _eegab != nil {
				return _eegab
			}
			_ecga.GteAttr = &_abaf
			continue
		}
	}
_aage:
	for {
		_dgebb, _acge := d.Token()
		if _acge != nil {
			return _acge
		}
		switch _aggc := _dgebb.(type) {
		case _a.StartElement:
			switch _aggc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecga.ExtLst = NewCT_ExtensionList()
				if _bdec := d.DecodeElement(_ecga.ExtLst, &_aggc); _bdec != nil {
					return _bdec
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _aggc.Name)
				if _egea := d.Skip(); _egea != nil {
					return _egea
				}
			}
		case _a.EndElement:
			break _aage
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_ggfbf *CT_Pages) ValidateWithPath(path string) error {
	for _gbcac, _afbed := range _ggfbf.Page {
		if _faea := _afbed.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _gbcac)); _faea != nil {
			return _faea
		}
	}
	return nil
}
func NewCT_CellSmartTags() *CT_CellSmartTags { _effb := &CT_CellSmartTags{}; return _effb }

// Validate validates the CT_ProtectedRange and its children
func (_fdffb *CT_ProtectedRange) Validate() error {
	return _fdffb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}

// Validate validates the CT_SheetIdMap and its children
func (_bddcb *CT_SheetIdMap) Validate() error {
	return _bddcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}

// ValidateWithPath validates the CT_PCDSDTCEntriesChoice and its children, prefixing error messages with path
func (_dfdff *CT_PCDSDTCEntriesChoice) ValidateWithPath(path string) error {
	if _dfdff.M != nil {
		if _edcce := _dfdff.M.ValidateWithPath(path + "\u002f\u004d"); _edcce != nil {
			return _edcce
		}
	}
	if _dfdff.N != nil {
		if _egcggc := _dfdff.N.ValidateWithPath(path + "\u002f\u004e"); _egcggc != nil {
			return _egcggc
		}
	}
	if _dfdff.E != nil {
		if _abgga := _dfdff.E.ValidateWithPath(path + "\u002f\u0045"); _abgga != nil {
			return _abgga
		}
	}
	if _dfdff.S != nil {
		if _fdbgc := _dfdff.S.ValidateWithPath(path + "\u002f\u0053"); _fdbgc != nil {
			return _fdbgc
		}
	}
	return nil
}
func (_cdbdff ST_FileType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cdbdff.String(), start)
}

// Validate validates the CT_Selection and its children
func (_cfcfc *CT_Selection) Validate() error {
	return _cfcfc.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_dbebb *CT_Row) ValidateWithPath(path string) error {
	for _fceeb, _cfgba := range _dbebb.C {
		if _gceggc := _cfgba.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _fceeb)); _gceggc != nil {
			return _gceggc
		}
	}
	if _dbebb.ExtLst != nil {
		if _gfacf := _dbebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfacf != nil {
			return _gfacf
		}
	}
	return nil
}
func (_gdc *CT_CacheSource) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdc.TypeAttr = ST_SourceType(1)
	for _, _efab := range start.Attr {
		if _efab.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gdc.TypeAttr.UnmarshalXMLAttr(_efab)
			continue
		}
		if _efab.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_defa, _dbcb := _dd.ParseUint(_efab.Value, 10, 32)
			if _dbcb != nil {
				return _dbcb
			}
			_eba := uint32(_defa)
			_gdc.ConnectionIdAttr = &_eba
			continue
		}
	}
_bgfd:
	for {
		_beg, _cfbg := d.Token()
		if _cfbg != nil {
			return _cfbg
		}
		switch _dge := _beg.(type) {
		case _a.StartElement:
			switch _dge.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_gdc.CacheSourceChoice = NewCT_CacheSourceChoice()
				if _ebe := d.DecodeElement(&_gdc.CacheSourceChoice.WorksheetSource, &_dge); _ebe != nil {
					return _ebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_gdc.CacheSourceChoice = NewCT_CacheSourceChoice()
				if _abf := d.DecodeElement(&_gdc.CacheSourceChoice.Consolidation, &_dge); _abf != nil {
					return _abf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdc.CacheSourceChoice = NewCT_CacheSourceChoice()
				if _cbea := d.DecodeElement(&_gdc.CacheSourceChoice.ExtLst, &_dge); _cbea != nil {
					return _cbea
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _dge.Name)
				if _eca := d.Skip(); _eca != nil {
					return _eca
				}
			}
		case _a.EndElement:
			break _bgfd
		case _a.CharData:
		}
	}
	return nil
}
func (_eebdf *ST_UnderlineValues) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_eebdf = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_eebdf = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_eebdf = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_eebdf = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_eebdf = 4
	case "\u006e\u006f\u006e\u0065":
		*_eebdf = 5
	}
	return nil
}
func (_ebabga ST_TotalsRowFunction) Validate() error { return _ebabga.ValidateWithPath("") }
func (_baefb *CT_GradientStop) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_baefb.Color = NewCT_Color()
	for _, _fgebb := range start.Attr {
		if _fgebb.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_geddb, _cedce := _dd.ParseFloat(_fgebb.Value, 64)
			if _cedce != nil {
				return _cedce
			}
			_baefb.PositionAttr = _geddb
			continue
		}
	}
_eagc:
	for {
		_eeacf, _edbd := d.Token()
		if _edbd != nil {
			return _edbd
		}
		switch _fffddd := _eeacf.(type) {
		case _a.StartElement:
			switch _fffddd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _dadg := d.DecodeElement(_baefb.Color, &_fffddd); _dadg != nil {
					return _dadg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _fffddd.Name)
				if _accfe := d.Skip(); _accfe != nil {
					return _accfe
				}
			}
		case _a.EndElement:
			break _eagc
		case _a.CharData:
		}
	}
	return nil
}
func (_bfggd ST_CellComments) String() string {
	switch _bfggd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}
func (_gafec *ST_TextVAlign) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gafec = 0
	case "\u0074\u006f\u0070":
		*_gafec = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_gafec = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_gafec = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_gafec = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_gafec = 5
	}
	return nil
}
func NewCT_RangeSets() *CT_RangeSets {
	_bcffd := &CT_RangeSets{}
	return _bcffd
}
func (_ecba *CT_ColFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgdd := range start.Attr {
		if _bgdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfac, _bbddf := _dd.ParseUint(_bgdd.Value, 10, 32)
			if _bbddf != nil {
				return _bbddf
			}
			_ecfdc := uint32(_bfac)
			_ecba.CountAttr = &_ecfdc
			continue
		}
	}
_gadg:
	for {
		_gaegb, _bfde := d.Token()
		if _bfde != nil {
			return _bfde
		}
		switch _cgcf := _gaegb.(type) {
		case _a.StartElement:
			switch _cgcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_dfe := NewCT_Field()
				if _cbac := d.DecodeElement(_dfe, &_cgcf); _cbac != nil {
					return _cbac
				}
				_ecba.Field = append(_ecba.Field, _dfe)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _cgcf.Name)
				if _cdbb := d.Skip(); _cdbb != nil {
					return _cdbb
				}
			}
		case _a.EndElement:
			break _gadg
		case _a.CharData:
		}
	}
	return nil
}
func (_fagacd *CT_ObjectPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fagacd.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.LockedAttr))})
	}
	if _fagacd.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.DefaultSizeAttr))})
	}
	if _fagacd.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.PrintAttr))})
	}
	if _fagacd.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.DisabledAttr))})
	}
	if _fagacd.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.UiObjectAttr))})
	}
	if _fagacd.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.AutoFillAttr))})
	}
	if _fagacd.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.AutoLineAttr))})
	}
	if _fagacd.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.AutoPictAttr))})
	}
	if _fagacd.MacroAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_fagacd.MacroAttr)})
	}
	if _fagacd.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fagacd.AltTextAttr)})
	}
	if _fagacd.DdeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0064\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fagacd.DdeAttr))})
	}
	if _fagacd.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fagacd.IdAttr)})
	}
	e.EncodeToken(start)
	_ccfaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_fagacd.Anchor, _ccfaa)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WebPr and its children
func (_dcffad *CT_WebPr) Validate() error {
	return _dcffad.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}
func (_ddcfbd *CT_RangeSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ddcfbd.I1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0031"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.I1Attr)})
	}
	if _ddcfbd.I2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0032"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.I2Attr)})
	}
	if _ddcfbd.I3Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0033"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.I3Attr)})
	}
	if _ddcfbd.I4Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0034"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.I4Attr)})
	}
	if _ddcfbd.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.RefAttr)})
	}
	if _ddcfbd.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.NameAttr)})
	}
	if _ddcfbd.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.SheetAttr)})
	}
	if _ddcfbd.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddcfbd.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_faaee ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _faaee {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_faaee))
	}
	return nil
}
func (_dgadb *CT_Fill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dgadb.FillChoice.MarshalXML(e, _a.StartElement{})
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type SingleXmlCells struct{ CT_SingleXmlCells }

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_dadbf *CT_ServerFormat) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PhoneticPr and its children
func (_ebadg *CT_PhoneticPr) Validate() error {
	return _ebadg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

func (_degfac *CT_PivotCacheRecords) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _degfac.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_degfac.CountAttr)})
	}
	e.EncodeToken(start)
	if _degfac.R != nil {
		_gcbce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072"}}
		for _, _cccd := range _degfac.R {
			e.EncodeElement(_cccd, _gcbce)
		}
	}
	if _degfac.ExtLst != nil {
		_dgdee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_degfac.ExtLst, _dgdee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_bdaga := &CT_RevisionSheetRename{}
	return _bdaga
}
func (_bagbgd *ST_TimePeriod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bagbgd = 0
	case "\u0074\u006f\u0064a\u0079":
		*_bagbgd = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_bagbgd = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_bagbgd = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_bagbgd = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_bagbgd = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_bagbgd = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_bagbgd = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_bagbgd = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_bagbgd = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_bagbgd = 10
	}
	return nil
}

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_fecddg *CT_RgbColor) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DbPr and its children
func (_ddbf *CT_DbPr) Validate() error {
	return _ddbf.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}

// Validate validates the CT_SmartTagTypes and its children
func (_deecg *CT_SmartTagTypes) Validate() error {
	return _deecg.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}

// Validate validates the CT_OlapPr and its children
func (_caefb *CT_OlapPr) Validate() error {
	return _caefb.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)

type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}

func (_bfef *CT_ConditionalFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bfef.ScopeAttr != ST_ScopeUnset {
		_deec, _begd := _bfef.ScopeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _begd != nil {
			return _begd
		}
		start.Attr = append(start.Attr, _deec)
	}
	if _bfef.TypeAttr != ST_TypeUnset {
		_bbdde, _aaaf := _bfef.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _aaaf != nil {
			return _aaaf
		}
		start.Attr = append(start.Attr, _bbdde)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _fd.Sprintf("\u0025\u0076", _bfef.PriorityAttr)})
	e.EncodeToken(start)
	_ffaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074A\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_bfef.PivotAreas, _ffaf)
	if _bfef.ExtLst != nil {
		_ffga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfef.ExtLst, _ffga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomChartsheetView and its children
func (_ecccc *CT_CustomChartsheetView) Validate() error {
	return _ecccc.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}
func (_befade *ST_SortMethod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aacfbb, _dgadd := d.Token()
	if _dgadd != nil {
		return _dgadd
	}
	if _bbdfd, _ceaedc := _aacfbb.(_a.EndElement); _ceaedc && _bbdfd.Name == start.Name {
		*_befade = 1
		return nil
	}
	if _fdace, _bedefg := _aacfbb.(_a.CharData); !_bedefg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aacfbb)
	} else {
		switch string(_fdace) {
		case "":
			*_befade = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_befade = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_befade = 2
		case "\u006e\u006f\u006e\u0065":
			*_befade = 3
		}
	}
	_aacfbb, _dgadd = d.Token()
	if _dgadd != nil {
		return _dgadd
	}
	if _dgfgc, _gcbced := _aacfbb.(_a.EndElement); _gcbced && _dgfgc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aacfbb)
}

// Validate validates the CT_ServerFormats and its children
func (_bcgfaa *CT_ServerFormats) Validate() error {
	return _bcgfaa.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

// Validate validates the CT_CacheField and its children
func (_caf *CT_CacheField) Validate() error {
	return _caf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}
func (_fbcff *CT_I) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bffcf := range start.Attr {
		if _bffcf.Name.Local == "\u0074" {
			_fbcff.TAttr.UnmarshalXMLAttr(_bffcf)
			continue
		}
		if _bffcf.Name.Local == "\u0072" {
			_adbgg, _afbb := _dd.ParseUint(_bffcf.Value, 10, 32)
			if _afbb != nil {
				return _afbb
			}
			_ecafd := uint32(_adbgg)
			_fbcff.RAttr = &_ecafd
			continue
		}
		if _bffcf.Name.Local == "\u0069" {
			_degdd, _ffcad := _dd.ParseUint(_bffcf.Value, 10, 32)
			if _ffcad != nil {
				return _ffcad
			}
			_abbfe := uint32(_degdd)
			_fbcff.IAttr = &_abbfe
			continue
		}
	}
_eeed:
	for {
		_cfcee, _abfge := d.Token()
		if _abfge != nil {
			return _abfge
		}
		switch _ecafde := _cfcee.(type) {
		case _a.StartElement:
			switch _ecafde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_aefbe := NewCT_X()
				if _afcga := d.DecodeElement(_aefbe, &_ecafde); _afcga != nil {
					return _afcga
				}
				_fbcff.X = append(_fbcff.X, _aefbe)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _ecafde.Name)
				if _ggdga := d.Skip(); _ggdga != nil {
					return _ggdga
				}
			}
		case _a.EndElement:
			break _eeed
		case _a.CharData:
		}
	}
	return nil
}
func (_gadbaa *CT_RgbColor) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acdga := range start.Attr {
		if _acdga.Name.Local == "\u0072\u0067\u0062" {
			_acbce := _acdga.Value
			_gadbaa.RgbAttr = &_acbce
			continue
		}
	}
	for {
		_aaaae, _beccbc := d.Token()
		if _beccbc != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _beccbc)
		}
		if _ddfbc, _deecd := _aaaae.(_a.EndElement); _deecd && _ddfbc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FontChoice() *CT_FontChoice { _cgac := &CT_FontChoice{}; return _cgac }
func (_bgbed *CT_PCDSCPage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgbed.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgbed.CountAttr)})
	}
	e.EncodeToken(start)
	if _bgbed.PageItem != nil {
		_gfbac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _acaed := range _bgbed.PageItem {
			e.EncodeElement(_acaed, _gfbac)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gcgae ST_PaneState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gcgae.String(), start)
}
func (_bgacce ST_SheetViewType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dbdbc := _a.Attr{}
	_dbdbc.Name = name
	switch _bgacce {
	case ST_SheetViewTypeUnset:
		_dbdbc.Value = ""
	case ST_SheetViewTypeNormal:
		_dbdbc.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_dbdbc.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_dbdbc.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _dbdbc, nil
}

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_gfgf *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _gfgf.TypeAttr == ST_DynamicFilterTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbdfc := _gfgf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fbdfc != nil {
		return _fbdfc
	}
	return nil
}

// Validate validates the CT_DataConsolidate and its children
func (_cbef *CT_DataConsolidate) Validate() error {
	return _cbef.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}

// ValidateWithPath validates the CT_CacheSourceChoice and its children, prefixing error messages with path
func (_ecccg *CT_CacheSourceChoice) ValidateWithPath(path string) error {
	if _ecccg.WorksheetSource != nil {
		if _affe := _ecccg.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _affe != nil {
			return _affe
		}
	}
	if _ecccg.Consolidation != nil {
		if _dccc := _ecccg.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _dccc != nil {
			return _dccc
		}
	}
	if _ecccg.ExtLst != nil {
		if _gfcgd := _ecccg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfcgd != nil {
			return _gfcgd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_cfdca *CT_DataRefs) ValidateWithPath(path string) error {
	for _cfbgge, _gegca := range _cfdca.DataRef {
		if _agbac := _gegca.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _cfbgge)); _agbac != nil {
			return _agbac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_efabgd *CT_CustomFilter) ValidateWithPath(path string) error {
	if _agddb := _efabgd.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _agddb != nil {
		return _agddb
	}
	return nil
}
func (_fbgcbb *Connections) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069:\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073"
	return _fbgcbb.CT_Connections.MarshalXML(e, start)
}
func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_gddda := &CT_ObjectAnchor{}
	_gddda.From = _fc.NewFrom()
	_gddda.To = _fc.NewTo()
	return _gddda
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_fabcd *CT_Hyperlink) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Scenario and its children
func (_cabge *CT_Scenario) Validate() error {
	return _cabge.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}
func (_ggg *CT_BooleanProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggg.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ggg.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_ddbaf *CT_Col) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FutureMetadata and its children
func (_gadc *CT_FutureMetadata) Validate() error {
	return _gadc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_defe *CT_ObjectPr) ValidateWithPath(path string) error {
	if _cdafb := _defe.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _cdafb != nil {
		return _cdafb
	}
	return nil
}

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_cdbea *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _cdbea.ValAttr == _b.ST_VerticalAlignRunUnset {
		return _fd.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbafa := _cdbea.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fbafa != nil {
		return _fbafa
	}
	return nil
}
func (_dfeag ST_VolDepType) String() string {
	switch _dfeag {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_efdaeb *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _ebgaf, _dcdbf := range _efdaeb.PCDSDTCEntriesChoice {
		if _ebbce := _dcdbf.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0050\u0043\u0044\u0053D\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073C\u0068\u006f\u0069c\u0065[\u0025\u0064\u005d", path, _ebgaf)); _ebbce != nil {
			return _ebbce
		}
	}
	return nil
}

type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

func (_ggegdb ST_TotalsRowFunction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cafbbg := _a.Attr{}
	_cafbbg.Name = name
	switch _ggegdb {
	case ST_TotalsRowFunctionUnset:
		_cafbbg.Value = ""
	case ST_TotalsRowFunctionNone:
		_cafbbg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_cafbbg.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_cafbbg.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_cafbbg.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_cafbbg.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_cafbbg.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_cafbbg.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_cafbbg.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_cafbbg.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_cafbbg.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _cafbbg, nil
}
func (_ffbfa *CT_TupleCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ffbfa.Entries != nil {
		_aebee := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_ffbfa.Entries, _aebee)
	}
	if _ffbfa.Sets != nil {
		_bdgdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_ffbfa.Sets, _bdgdd)
	}
	if _ffbfa.QueryCache != nil {
		_afbac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0071\u0075\u0065\u0072\u0079C\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_ffbfa.QueryCache, _afbac)
	}
	if _ffbfa.ServerFormats != nil {
		_bbcgaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_ffbfa.ServerFormats, _bbcgaa)
	}
	if _ffbfa.ExtLst != nil {
		_caedf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffbfa.ExtLst, _caedf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

// Validate validates the CT_SheetPr and its children
func (_ceaff *CT_SheetPr) Validate() error {
	return _ceaff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_gdccb *CT_SheetBackgroundPicture) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gacfc := range start.Attr {
		if _gacfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gacfc.Name.Local == "\u0069\u0064" || _gacfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gacfc.Name.Local == "\u0069\u0064" {
			_edgddc := _gacfc.Value
			_gdccb.IdAttr = _edgddc
			continue
		}
	}
	for {
		_agcebc, _egfdg := d.Token()
		if _egfdg != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _egfdg)
		}
		if _gcefc, _cdedf := _agcebc.(_a.EndElement); _cdedf && _gcefc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_beeccf := &CT_QueryTableDeletedFields{}
	return _beeccf
}
func (_deebdf ST_MdxFunctionType) String() string {
	switch _deebdf {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_fdfaf *CT_Selection) ValidateWithPath(path string) error {
	if _cccfd := _fdfaf.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _cccfd != nil {
		return _cccfd
	}
	return nil
}

// Validate validates the CT_FontSize and its children
func (_bcgf *CT_FontSize) Validate() error {
	return _bcgf.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}
func (_gacae *CT_Pane) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecegd := range start.Attr {
		if _ecegd.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_abegca, _agcgb := _dd.ParseFloat(_ecegd.Value, 64)
			if _agcgb != nil {
				return _agcgb
			}
			_gacae.XSplitAttr = &_abegca
			continue
		}
		if _ecegd.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_acggf, _afbaa := _dd.ParseFloat(_ecegd.Value, 64)
			if _afbaa != nil {
				return _afbaa
			}
			_gacae.YSplitAttr = &_acggf
			continue
		}
		if _ecegd.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_acdad := _ecegd.Value
			_gacae.TopLeftCellAttr = &_acdad
			continue
		}
		if _ecegd.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_gacae.ActivePaneAttr.UnmarshalXMLAttr(_ecegd)
			continue
		}
		if _ecegd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_gacae.StateAttr.UnmarshalXMLAttr(_ecegd)
			continue
		}
	}
	for {
		_bffba, _acdgc := d.Token()
		if _acdgc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _acdgc)
		}
		if _bcgbd, _fgbba := _bffba.(_a.EndElement); _fgbba && _bcgbd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}
type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_afgab ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _afgab {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afgab))
	}
	return nil
}
func (_ebbf *CT_PCDSDTCEntries) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ebbf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ebbf.CountAttr)})
	}
	e.EncodeToken(start)
	for _, _cbaac := range _ebbf.PCDSDTCEntriesChoice {
		_cbaac.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_cadec *CT_Reviewed) ValidateWithPath(path string) error { return nil }
func (_dafdb ST_CellType) Validate() error                     { return _dafdb.ValidateWithPath("") }
func (_gedd *CT_Border) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgfc := range start.Attr {
		if _bgfc.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_cdf, _ceb := _dd.ParseBool(_bgfc.Value)
			if _ceb != nil {
				return _ceb
			}
			_gedd.DiagonalUpAttr = &_cdf
			continue
		}
		if _bgfc.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_cfe, _ccd := _dd.ParseBool(_bgfc.Value)
			if _ccd != nil {
				return _ccd
			}
			_gedd.DiagonalDownAttr = &_cfe
			continue
		}
		if _bgfc.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_bdcg, _gbcg := _dd.ParseBool(_bgfc.Value)
			if _gbcg != nil {
				return _gbcg
			}
			_gedd.OutlineAttr = &_bdcg
			continue
		}
	}
_ggbg:
	for {
		_aadc, _aec := d.Token()
		if _aec != nil {
			return _aec
		}
		switch _edab := _aadc.(type) {
		case _a.StartElement:
			switch _edab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_gedd.Start = NewCT_BorderPr()
				if _aece := d.DecodeElement(_gedd.Start, &_edab); _aece != nil {
					return _aece
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_gedd.End = NewCT_BorderPr()
				if _bcg := d.DecodeElement(_gedd.End, &_edab); _bcg != nil {
					return _bcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_gedd.Left = NewCT_BorderPr()
				if _gadf := d.DecodeElement(_gedd.Left, &_edab); _gadf != nil {
					return _gadf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_gedd.Right = NewCT_BorderPr()
				if _ecb := d.DecodeElement(_gedd.Right, &_edab); _ecb != nil {
					return _ecb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_gedd.Top = NewCT_BorderPr()
				if _fef := d.DecodeElement(_gedd.Top, &_edab); _fef != nil {
					return _fef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_gedd.Bottom = NewCT_BorderPr()
				if _aacb := d.DecodeElement(_gedd.Bottom, &_edab); _aacb != nil {
					return _aacb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_gedd.Diagonal = NewCT_BorderPr()
				if _eaf := d.DecodeElement(_gedd.Diagonal, &_edab); _eaf != nil {
					return _eaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_gedd.Vertical = NewCT_BorderPr()
				if _gggf := d.DecodeElement(_gedd.Vertical, &_edab); _gggf != nil {
					return _gggf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_gedd.Horizontal = NewCT_BorderPr()
				if _gggfb := d.DecodeElement(_gedd.Horizontal, &_edab); _gggfb != nil {
					return _gggfb
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _edab.Name)
				if _gee := d.Skip(); _gee != nil {
					return _gee
				}
			}
		case _a.EndElement:
			break _ggbg
		case _a.CharData:
		}
	}
	return nil
}

type ST_BorderStyle byte

func NewCT_PageFields() *CT_PageFields { _egbcf := &CT_PageFields{}; return _egbcf }
func (_bbebb *Chartsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbebb.CT_Chartsheet = *NewCT_Chartsheet()
_eafdcg:
	for {
		_gdddb, _gcfgc := d.Token()
		if _gcfgc != nil {
			return _gcfgc
		}
		switch _bdbg := _gdddb.(type) {
		case _a.StartElement:
			switch _bdbg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bbebb.SheetPr = NewCT_ChartsheetPr()
				if _cfaggd := d.DecodeElement(_bbebb.SheetPr, &_bdbg); _cfaggd != nil {
					return _cfaggd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _acdff := d.DecodeElement(_bbebb.SheetViews, &_bdbg); _acdff != nil {
					return _acdff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bbebb.SheetProtection = NewCT_ChartsheetProtection()
				if _cecbfc := d.DecodeElement(_bbebb.SheetProtection, &_bdbg); _cecbfc != nil {
					return _cecbfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bbebb.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _gaege := d.DecodeElement(_bbebb.CustomSheetViews, &_bdbg); _gaege != nil {
					return _gaege
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bbebb.PageMargins = NewCT_PageMargins()
				if _bfefb := d.DecodeElement(_bbebb.PageMargins, &_bdbg); _bfefb != nil {
					return _bfefb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bbebb.PageSetup = NewCT_CsPageSetup()
				if _cccbf := d.DecodeElement(_bbebb.PageSetup, &_bdbg); _cccbf != nil {
					return _cccbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bbebb.HeaderFooter = NewCT_HeaderFooter()
				if _fabaf := d.DecodeElement(_bbebb.HeaderFooter, &_bdbg); _fabaf != nil {
					return _fabaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _babdg := d.DecodeElement(_bbebb.Drawing, &_bdbg); _babdg != nil {
					return _babdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bbebb.LegacyDrawing = NewCT_LegacyDrawing()
				if _fcace := d.DecodeElement(_bbebb.LegacyDrawing, &_bdbg); _fcace != nil {
					return _fcace
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bbebb.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _dgegd := d.DecodeElement(_bbebb.LegacyDrawingHF, &_bdbg); _dgegd != nil {
					return _dgegd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bbebb.DrawingHF = NewCT_DrawingHF()
				if _fcgbbc := d.DecodeElement(_bbebb.DrawingHF, &_bdbg); _fcgbbc != nil {
					return _fcgbbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_bbebb.Picture = NewCT_SheetBackgroundPicture()
				if _gcceb := d.DecodeElement(_bbebb.Picture, &_bdbg); _gcceb != nil {
					return _gcceb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_bbebb.WebPublishItems = NewCT_WebPublishItems()
				if _aefgg := d.DecodeElement(_bbebb.WebPublishItems, &_bdbg); _aefgg != nil {
					return _aefgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbebb.ExtLst = NewCT_ExtensionList()
				if _eabfa := d.DecodeElement(_bbebb.ExtLst, &_bdbg); _eabfa != nil {
					return _eabfa
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _bdbg.Name)
				if _ddgfg := d.Skip(); _ddgfg != nil {
					return _ddgfg
				}
			}
		case _a.EndElement:
			break _eafdcg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_gfddb *CT_SortCondition) ValidateWithPath(path string) error {
	if _ecbbd := _gfddb.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _ecbbd != nil {
		return _ecbbd
	}
	if _gcdag := _gfddb.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _gcdag != nil {
		return _gcdag
	}
	return nil
}

// Validate validates the CT_ObjectPr and its children
func (_adfab *CT_ObjectPr) Validate() error {
	return _adfab.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}
func (_dbfd *CT_CellSmartTag) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _caec := range start.Attr {
		if _caec.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fgad, _facc := _dd.ParseUint(_caec.Value, 10, 32)
			if _facc != nil {
				return _facc
			}
			_dbfd.TypeAttr = uint32(_fgad)
			continue
		}
		if _caec.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_gbfg, _ccfa := _dd.ParseBool(_caec.Value)
			if _ccfa != nil {
				return _ccfa
			}
			_dbfd.DeletedAttr = &_gbfg
			continue
		}
		if _caec.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_eaga, _fcd := _dd.ParseBool(_caec.Value)
			if _fcd != nil {
				return _fcd
			}
			_dbfd.XmlBasedAttr = &_eaga
			continue
		}
	}
_gdef:
	for {
		_efb, _fbda := d.Token()
		if _fbda != nil {
			return _fbda
		}
		switch _gbce := _efb.(type) {
		case _a.StartElement:
			switch _gbce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_bdef := NewCT_CellSmartTagPr()
				if _dcb := d.DecodeElement(_bdef, &_gbce); _dcb != nil {
					return _dcb
				}
				_dbfd.CellSmartTagPr = append(_dbfd.CellSmartTagPr, _bdef)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _gbce.Name)
				if _fgeb := d.Skip(); _fgeb != nil {
					return _fgeb
				}
			}
		case _a.EndElement:
			break _gdef
		case _a.CharData:
		}
	}
	return nil
}
func (_dggca *CT_CalculatedItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbce := range start.Attr {
		if _cbce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fce, _fgge := _dd.ParseUint(_cbce.Value, 10, 32)
			if _fgge != nil {
				return _fgge
			}
			_faegc := uint32(_fce)
			_dggca.CountAttr = &_faegc
			continue
		}
	}
_ddce:
	for {
		_gcefd, _bdf := d.Token()
		if _bdf != nil {
			return _bdf
		}
		switch _aca := _gcefd.(type) {
		case _a.StartElement:
			switch _aca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_faegcf := NewCT_CalculatedItem()
				if _aadf := d.DecodeElement(_faegcf, &_aca); _aadf != nil {
					return _aadf
				}
				_dggca.CalculatedItem = append(_dggca.CalculatedItem, _faegcf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _aca.Name)
				if _agce := d.Skip(); _agce != nil {
					return _agce
				}
			}
		case _a.EndElement:
			break _ddce
		case _a.CharData:
		}
	}
	return nil
}
func (_afbd *CT_ExtensionList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _afbd.Ext != nil {
		_cege := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0065\u0078\u0074"}}
		for _, _cbgeb := range _afbd.Ext {
			e.EncodeElement(_cbgeb, _cege)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fbecd ST_TableType) Validate() error { return _fbecd.ValidateWithPath("") }

// Validate validates the CT_TextField and its children
func (_gafdf *CT_TextField) Validate() error {
	return _gafdf.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}

func (_fgagac ST_GroupBy) Validate() error { return _fgagac.ValidateWithPath("") }
func (_fgccec *CT_RevisionCustomView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fgccec.GuidAttr)})
	_dgabc, _gebfaa := _fgccec.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _gebfaa != nil {
		return _gebfaa
	}
	start.Attr = append(start.Attr, _dgabc)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_RPrEltChoice struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}

func (_agaaa *CT_RevisionSheetRename) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _agaaa.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _agaaa.OldNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _agaaa.NewNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _agaaa.RIdAttr)})
	if _agaaa.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_agaaa.UaAttr))})
	}
	if _agaaa.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_agaaa.RaAttr))})
	}
	e.EncodeToken(start)
	if _agaaa.ExtLst != nil {
		_dedea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agaaa.ExtLst, _dedea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggbdc *ST_Pane) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggbdc = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_ggbdc = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_ggbdc = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_ggbdc = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_ggbdc = 4
	}
	return nil
}
func (_ebacb *CT_Sst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dedcgf := range start.Attr {
		if _dedcgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfcdb, _dfcbg := _dd.ParseUint(_dedcgf.Value, 10, 32)
			if _dfcbg != nil {
				return _dfcbg
			}
			_dffafe := uint32(_dfcdb)
			_ebacb.CountAttr = &_dffafe
			continue
		}
		if _dedcgf.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_dbcfa, _ggegg := _dd.ParseUint(_dedcgf.Value, 10, 32)
			if _ggegg != nil {
				return _ggegg
			}
			_ccfcc := uint32(_dbcfa)
			_ebacb.UniqueCountAttr = &_ccfcc
			continue
		}
	}
_gggdg:
	for {
		_ddeeg, _dfebd := d.Token()
		if _dfebd != nil {
			return _dfebd
		}
		switch _fcdcd := _ddeeg.(type) {
		case _a.StartElement:
			switch _fcdcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_edebg := NewCT_Rst()
				if _deebd := d.DecodeElement(_edebg, &_fcdcd); _deebd != nil {
					return _deebd
				}
				_ebacb.Si = append(_ebacb.Si, _edebg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebacb.ExtLst = NewCT_ExtensionList()
				if _bddcgd := d.DecodeElement(_ebacb.ExtLst, &_fcdcd); _bddcgd != nil {
					return _bddcgd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _fcdcd.Name)
				if _dbdcc := d.Skip(); _dbdcc != nil {
					return _dbdcc
				}
			}
		case _a.EndElement:
			break _gggdg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RevisionMove() *CT_RevisionMove { _bccgce := &CT_RevisionMove{}; return _bccgce }

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_dcfcd *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_dfdbe *CT_OleObjects) ValidateWithPath(path string) error {
	for _ddagb, _eecafd := range _dfdbe.OleObject {
		if _gfdbcd := _eecafd.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _ddagb)); _gfdbcd != nil {
			return _gfdbcd
		}
	}
	return nil
}
func (_eced *CT_CustomProperties) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dbbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _abcc := range _eced.CustomPr {
		e.EncodeElement(_abcc, _dbbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _b.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}
type ST_VolDepType byte

func (_bfbb *CT_FutureMetadata) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bfbb.NameAttr)})
	if _bfbb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bfbb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bfbb.Bk != nil {
		_dfafe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006b"}}
		for _, _dcbeca := range _bfbb.Bk {
			e.EncodeElement(_dcbeca, _dfafe)
		}
	}
	if _bfbb.ExtLst != nil {
		_edffa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfbb.ExtLst, _edffa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ccagg *CT_FieldsUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccagg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ccagg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ccagg.FieldUsage != nil {
		_gcda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u0065\u006c\u0064U\u0073\u0061\u0067\u0065"}}
		for _, _bcgbe := range _ccagg.FieldUsage {
			e.EncodeElement(_bcgbe, _gcda)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bece *CT_ChartFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _bece.ChartAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _bece.FormatAttr)})
	if _bece.SeriesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bece.SeriesAttr))})
	}
	e.EncodeToken(start)
	_ceae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_bece.PivotArea, _ceae)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eggfb *CT_Tuple) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eggfb.FldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eggfb.FldAttr)})
	}
	if _eggfb.HierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_eggfb.HierAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _fd.Sprintf("\u0025\u0076", _eggfb.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CacheHierarchies() *CT_CacheHierarchies { _bbdg := &CT_CacheHierarchies{}; return _bbdg }

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_adba *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }
func (_adab *CT_CalculatedMembers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffce := range start.Attr {
		if _ffce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gggc, _gega := _dd.ParseUint(_ffce.Value, 10, 32)
			if _gega != nil {
				return _gega
			}
			_cddf := uint32(_gggc)
			_adab.CountAttr = &_cddf
			continue
		}
	}
_cbb:
	for {
		_fbbf, _bcea := d.Token()
		if _bcea != nil {
			return _bcea
		}
		switch _fbce := _fbbf.(type) {
		case _a.StartElement:
			switch _fbce.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_dcae := NewCT_CalculatedMember()
				if _bbed := d.DecodeElement(_dcae, &_fbce); _bbed != nil {
					return _bbed
				}
				_adab.CalculatedMember = append(_adab.CalculatedMember, _dcae)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _fbce.Name)
				if _gafb := d.Skip(); _gafb != nil {
					return _gafb
				}
			}
		case _a.EndElement:
			break _cbb
		case _a.CharData:
		}
	}
	return nil
}
func (_eebbf *CT_rowItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cecgad := range start.Attr {
		if _cecgad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_befag, _dgdce := _dd.ParseUint(_cecgad.Value, 10, 32)
			if _dgdce != nil {
				return _dgdce
			}
			_ffggf := uint32(_befag)
			_eebbf.CountAttr = &_ffggf
			continue
		}
	}
_efadd:
	for {
		_gfcbbc, _fddfc := d.Token()
		if _fddfc != nil {
			return _fddfc
		}
		switch _ececbg := _gfcbbc.(type) {
		case _a.StartElement:
			switch _ececbg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_ffegce := NewCT_I()
				if _gfbg := d.DecodeElement(_ffegce, &_ececbg); _gfbg != nil {
					return _gfbg
				}
				_eebbf.I = append(_eebbf.I, _ffegce)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _ececbg.Name)
				if _fbbeda := d.Skip(); _fbbeda != nil {
					return _fbbeda
				}
			}
		case _a.EndElement:
			break _efadd
		case _a.CharData:
		}
	}
	return nil
}
func (_gafgb ST_ExternalConnectionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gafgb.String(), start)
}
func (_fgacd *CT_RElt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_edcaa:
	for {
		_eeaea, _baead := d.Token()
		if _baead != nil {
			return _baead
		}
		switch _aeedd := _eeaea.(type) {
		case _a.StartElement:
			switch _aeedd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_fgacd.RPr = NewCT_RPrElt()
				if _gbfaef := d.DecodeElement(_fgacd.RPr, &_aeedd); _gbfaef != nil {
					return _gbfaef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _aeceb := d.DecodeElement(&_fgacd.T, &_aeedd); _aeceb != nil {
					return _aeceb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _aeedd.Name)
				if _dffec := d.Skip(); _dffec != nil {
					return _dffec
				}
			}
		case _a.EndElement:
			break _edcaa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_ProtectedRanges() *CT_ProtectedRanges { _feccgc := &CT_ProtectedRanges{}; return _feccgc }
func NewCT_BookView() *CT_BookView {
	_ebda := &CT_BookView{}
	return _ebda
}
func (_aeef *CT_Cfvo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_dggg, _acfcb := _aeef.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _acfcb != nil {
		return _acfcb
	}
	start.Attr = append(start.Attr, _dggg)
	if _aeef.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_aeef.ValAttr)})
	}
	if _aeef.GteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aeef.GteAttr))})
	}
	e.EncodeToken(start)
	if _aeef.ExtLst != nil {
		_dgca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeef.ExtLst, _dgca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_deeae *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

type ST_MdxKPIProperty byte

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_gaageg *CT_QueryTableField) ValidateWithPath(path string) error {
	if _gaageg.ExtLst != nil {
		if _ceace := _gaageg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceace != nil {
			return _ceace
		}
	}
	return nil
}
func NewCT_RowFields() *CT_RowFields {
	_gfgbc := &CT_RowFields{}
	return _gfgbc
}
func (_afgga *CT_CustomFilters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edeb := range start.Attr {
		if _edeb.Name.Local == "\u0061\u006e\u0064" {
			_bfgdd, _egda := _dd.ParseBool(_edeb.Value)
			if _egda != nil {
				return _egda
			}
			_afgga.AndAttr = &_bfgdd
			continue
		}
	}
_dcfdf:
	for {
		_eead, _ddeb := d.Token()
		if _ddeb != nil {
			return _ddeb
		}
		switch _gbdag := _eead.(type) {
		case _a.StartElement:
			switch _gbdag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_acacd := NewCT_CustomFilter()
				if _ggae := d.DecodeElement(_acacd, &_gbdag); _ggae != nil {
					return _ggae
				}
				_afgga.CustomFilter = append(_afgga.CustomFilter, _acacd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _gbdag.Name)
				if _abcgb := d.Skip(); _abcgb != nil {
					return _abcgb
				}
			}
		case _a.EndElement:
			break _dcfdf
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_gaccg *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }
func NewCT_Map() *CT_Map                                               { _bggc := &CT_Map{}; return _bggc }

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

func NewCT_Top10() *CT_Top10 { _dadeg := &CT_Top10{}; return _dadeg }

// Validate validates the CT_Schema and its children
func (_ggdag *CT_Schema) Validate() error {
	return _ggdag.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}

type CT_RevisionsChoice struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}

// Validate validates the CT_IconFilter and its children
func (_cfdcd *CT_IconFilter) Validate() error {
	return _cfdcd.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}

// Validate validates the CT_CommentList and its children
func (_edgc *CT_CommentList) Validate() error {
	return _edgc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}
func (_ceeec *CT_RevisionRowColumnChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ceeec.Undo != nil {
		_efgef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0075\u006e\u0064\u006f"}}
		for _, _bgbcg := range _ceeec.Undo {
			e.EncodeElement(_bgbcg, _efgef)
		}
	} else if _ceeec.Rcc != nil {
		_effga := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0063\u0063"}}
		for _, _dfddc := range _ceeec.Rcc {
			e.EncodeElement(_dfddc, _effga)
		}
	} else if _ceeec.Rfmt != nil {
		_babbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0066\u006d\u0074"}}
		for _, _cbbdc := range _ceeec.Rfmt {
			e.EncodeElement(_cbbdc, _babbg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func NewCT_ReviewedRevisions() *CT_ReviewedRevisions {
	_ebgff := &CT_ReviewedRevisions{}
	return _ebgff
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_eaaa *CT_Missing) ValidateWithPath(path string) error {
	for _ddfcf, _eagfb := range _eaaa.Tpls {
		if _aebce := _eagfb.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _ddfcf)); _aebce != nil {
			return _aebce
		}
	}
	for _gedba, _ddaeeg := range _eaaa.X {
		if _dbfaf := _ddaeeg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _gedba)); _dbfaf != nil {
			return _dbfaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_fcbfa *CT_FontSize) ValidateWithPath(path string) error { return nil }
func NewCT_Selection() *CT_Selection                           { _cfcacb := &CT_Selection{}; return _cfcacb }

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_cdgb *CT_ColFields) ValidateWithPath(path string) error {
	for _bbbbd, _gbb := range _cdgb.Field {
		if _febb := _gbb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _bbbbd)); _febb != nil {
			return _febb
		}
	}
	return nil
}
func (_aadb *CT_Error) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acda := range start.Attr {
		if _acda.Name.Local == "\u0076" {
			_fgdbe := _acda.Value
			_aadb.VAttr = _fgdbe
			continue
		}
		if _acda.Name.Local == "\u0075" {
			_caeg, _cbcga := _dd.ParseBool(_acda.Value)
			if _cbcga != nil {
				return _cbcga
			}
			_aadb.UAttr = &_caeg
			continue
		}
		if _acda.Name.Local == "\u0066" {
			_eegbd, _bcbdac := _dd.ParseBool(_acda.Value)
			if _bcbdac != nil {
				return _bcbdac
			}
			_aadb.FAttr = &_eegbd
			continue
		}
		if _acda.Name.Local == "\u0063" {
			_dgdec := _acda.Value
			_aadb.CAttr = &_dgdec
			continue
		}
		if _acda.Name.Local == "\u0063\u0070" {
			_bafbg, _dcdda := _dd.ParseUint(_acda.Value, 10, 32)
			if _dcdda != nil {
				return _dcdda
			}
			_babae := uint32(_bafbg)
			_aadb.CpAttr = &_babae
			continue
		}
		if _acda.Name.Local == "\u0069\u006e" {
			_fdfcb, _gegbf := _dd.ParseUint(_acda.Value, 10, 32)
			if _gegbf != nil {
				return _gegbf
			}
			_bgfdae := uint32(_fdfcb)
			_aadb.InAttr = &_bgfdae
			continue
		}
		if _acda.Name.Local == "\u0062\u0063" {
			_cgdafe := _acda.Value
			_aadb.BcAttr = &_cgdafe
			continue
		}
		if _acda.Name.Local == "\u0066\u0063" {
			_ffgc := _acda.Value
			_aadb.FcAttr = &_ffgc
			continue
		}
		if _acda.Name.Local == "\u0069" {
			_gcegc, _cefcge := _dd.ParseBool(_acda.Value)
			if _cefcge != nil {
				return _cefcge
			}
			_aadb.IAttr = &_gcegc
			continue
		}
		if _acda.Name.Local == "\u0075\u006e" {
			_aaea, _dfdcg := _dd.ParseBool(_acda.Value)
			if _dfdcg != nil {
				return _dfdcg
			}
			_aadb.UnAttr = &_aaea
			continue
		}
		if _acda.Name.Local == "\u0073\u0074" {
			_eafca, _gbdce := _dd.ParseBool(_acda.Value)
			if _gbdce != nil {
				return _gbdce
			}
			_aadb.StAttr = &_eafca
			continue
		}
		if _acda.Name.Local == "\u0062" {
			_beebe, _acca := _dd.ParseBool(_acda.Value)
			if _acca != nil {
				return _acca
			}
			_aadb.BAttr = &_beebe
			continue
		}
	}
_edgd:
	for {
		_cegd, _deddf := d.Token()
		if _deddf != nil {
			return _deddf
		}
		switch _fegf := _cegd.(type) {
		case _a.StartElement:
			switch _fegf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_aadb.Tpls = NewCT_Tuples()
				if _gabd := d.DecodeElement(_aadb.Tpls, &_fegf); _gabd != nil {
					return _gabd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fdff := NewCT_X()
				if _cdcb := d.DecodeElement(_fdff, &_fegf); _cdcb != nil {
					return _cdcb
				}
				_aadb.X = append(_aadb.X, _fdff)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _fegf.Name)
				if _babg := d.Skip(); _babg != nil {
					return _babg
				}
			}
		case _a.EndElement:
			break _edgd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the MapInfo and its children
func (_dbeeag *MapInfo) Validate() error {
	return _dbeeag.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}
func (_beeagb ST_BorderStyle) String() string {
	switch _beeagb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}
func (_gfbbaa ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _gfbbaa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfbbaa))
	}
	return nil
}
func (_afcgae ST_ConditionalFormattingOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cegbf := _a.Attr{}
	_cegbf.Name = name
	switch _afcgae {
	case ST_ConditionalFormattingOperatorUnset:
		_cegbf.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_cegbf.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_cegbf.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_cegbf.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_cegbf.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_cegbf.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_cegbf.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_cegbf.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_cegbf.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_cegbf.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_cegbf.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_cegbf.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_cegbf.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _cegbf, nil
}

// Validate validates the CT_CustomSheetView and its children
func (_gaecf *CT_CustomSheetView) Validate() error {
	return _gaecf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}
func (_ebadf *CT_Hyperlinks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eaed:
	for {
		_aebbad, _ebabf := d.Token()
		if _ebabf != nil {
			return _ebabf
		}
		switch _adcf := _aebbad.(type) {
		case _a.StartElement:
			switch _adcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_fecef := NewCT_Hyperlink()
				if _acbdd := d.DecodeElement(_fecef, &_adcf); _acbdd != nil {
					return _acbdd
				}
				_ebadf.Hyperlink = append(_ebadf.Hyperlink, _fecef)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _adcf.Name)
				if _dbbdf := d.Skip(); _dbbdf != nil {
					return _dbbdf
				}
			}
		case _a.EndElement:
			break _eaed
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

func (_ebdcda *ST_DynamicFilterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dcfefb, _fgbbbf := d.Token()
	if _fgbbbf != nil {
		return _fgbbbf
	}
	if _eceag, _gcabce := _dcfefb.(_a.EndElement); _gcabce && _eceag.Name == start.Name {
		*_ebdcda = 1
		return nil
	}
	if _gbffaf, _cddce := _dcfefb.(_a.CharData); !_cddce {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcfefb)
	} else {
		switch string(_gbffaf) {
		case "":
			*_ebdcda = 0
		case "\u006e\u0075\u006c\u006c":
			*_ebdcda = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_ebdcda = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_ebdcda = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_ebdcda = 4
		case "\u0074\u006f\u0064a\u0079":
			*_ebdcda = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_ebdcda = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_ebdcda = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_ebdcda = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_ebdcda = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_ebdcda = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_ebdcda = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_ebdcda = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ebdcda = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ebdcda = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_ebdcda = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_ebdcda = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_ebdcda = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_ebdcda = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_ebdcda = 19
		case "\u0051\u0031":
			*_ebdcda = 20
		case "\u0051\u0032":
			*_ebdcda = 21
		case "\u0051\u0033":
			*_ebdcda = 22
		case "\u0051\u0034":
			*_ebdcda = 23
		case "\u004d\u0031":
			*_ebdcda = 24
		case "\u004d\u0032":
			*_ebdcda = 25
		case "\u004d\u0033":
			*_ebdcda = 26
		case "\u004d\u0034":
			*_ebdcda = 27
		case "\u004d\u0035":
			*_ebdcda = 28
		case "\u004d\u0036":
			*_ebdcda = 29
		case "\u004d\u0037":
			*_ebdcda = 30
		case "\u004d\u0038":
			*_ebdcda = 31
		case "\u004d\u0039":
			*_ebdcda = 32
		case "\u004d\u0031\u0030":
			*_ebdcda = 33
		case "\u004d\u0031\u0031":
			*_ebdcda = 34
		case "\u004d\u0031\u0032":
			*_ebdcda = 35
		}
	}
	_dcfefb, _fgbbbf = d.Token()
	if _fgbbbf != nil {
		return _fgbbbf
	}
	if _caefd, _aeddg := _dcfefb.(_a.EndElement); _aeddg && _caefd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcfefb)
}
func (_ccffgd ST_RevisionAction) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ccffgd.String(), start)
}
func NewPivotCacheDefinition() *PivotCacheDefinition {
	_adfbee := &PivotCacheDefinition{}
	_adfbee.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _adfbee
}
func (_cedfd *CT_ExternalSheetNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ccefc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _bbcaf := range _cedfd.SheetName {
		e.EncodeElement(_bbcaf, _ccefc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ddbfa *ST_CredMethod) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ddbfa = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_ddbfa = 1
	case "\u006e\u006f\u006e\u0065":
		*_ddbfa = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_ddbfa = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_ddbfa = 4
	}
	return nil
}
func NewCT_Record() *CT_Record {
	_bcege := &CT_Record{}
	return _bcege
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_beaf *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _bcffg, _cbafg := range _beaf.PivotHierarchy {
		if _ebcdb := _cbafg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _bcffg)); _ebcdb != nil {
			return _ebcdb
		}
	}
	return nil
}

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_be *AG_RevData) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_dfccgf *CT_PivotFields) ValidateWithPath(path string) error {
	for _cbbbb, _bdegc := range _dfccgf.PivotField {
		if _cfece := _bdegc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _cbbbb)); _cfece != nil {
			return _cfece
		}
	}
	return nil
}
func (_eedadb *CT_TableParts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgfgda := range start.Attr {
		if _fgfgda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gedce, _ggacac := _dd.ParseUint(_fgfgda.Value, 10, 32)
			if _ggacac != nil {
				return _ggacac
			}
			_dbcgf := uint32(_gedce)
			_eedadb.CountAttr = &_dbcgf
			continue
		}
	}
_bfaa:
	for {
		_cdfad, _bdgbd := d.Token()
		if _bdgbd != nil {
			return _bdgbd
		}
		switch _edefgf := _cdfad.(type) {
		case _a.StartElement:
			switch _edefgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_fdfbab := NewCT_TablePart()
				if _ebbeff := d.DecodeElement(_fdfbab, &_edefgf); _ebbeff != nil {
					return _ebbeff
				}
				_eedadb.TablePart = append(_eedadb.TablePart, _fdfbab)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _edefgf.Name)
				if _afeace := d.Skip(); _afeace != nil {
					return _afeace
				}
			}
		case _a.EndElement:
			break _bfaa
		case _a.CharData:
		}
	}
	return nil
}
func (_ffcac *CT_Filter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffcac.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcac.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SortState and its children
func (_ebadef *CT_SortState) Validate() error {
	return _ebadef.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}
func (_feefac *CT_X) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfabd := range start.Attr {
		if _dfabd.Name.Local == "\u0076" {
			_febfb, _fbfag := _dd.ParseInt(_dfabd.Value, 10, 32)
			if _fbfag != nil {
				return _fbfag
			}
			_cbgdg := int32(_febfb)
			_feefac.VAttr = &_cbgdg
			continue
		}
	}
	for {
		_beeab, _efcfgf := d.Token()
		if _efcfgf != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _efcfgf)
		}
		if _becde, _ebcgb := _beeab.(_a.EndElement); _ebcgb && _becde.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SharedItems and its children
func (_gdcga *CT_SharedItems) Validate() error {
	return _gdcga.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}
func NewCT_PCDKPIs() *CT_PCDKPIs { _acbbe := &CT_PCDKPIs{}; return _acbbe }

// Validate validates the CT_CellSmartTagPr and its children
func (_cfdc *CT_CellSmartTagPr) Validate() error {
	return _cfdc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_efcee *CT_MdxKPI) ValidateWithPath(path string) error {
	if _efcee.PAttr == ST_MdxKPIPropertyUnset {
		return _fd.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _gbcbc := _efcee.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _gbcbc != nil {
		return _gbcbc
	}
	return nil
}
func (_cfgaa *CT_CustomWorkbookView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _cfgaa.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfgaa.GuidAttr)})
	if _cfgaa.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.AutoUpdateAttr))})
	}
	if _cfgaa.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_cfgaa.MergeIntervalAttr)})
	}
	if _cfgaa.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ChangesSavedWinAttr))})
	}
	if _cfgaa.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.OnlySyncAttr))})
	}
	if _cfgaa.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.PersonalViewAttr))})
	}
	if _cfgaa.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.IncludePrintSettingsAttr))})
	}
	if _cfgaa.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.IncludeHiddenRowColAttr))})
	}
	if _cfgaa.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.MaximizedAttr))})
	}
	if _cfgaa.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.MinimizedAttr))})
	}
	if _cfgaa.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ShowHorizontalScrollAttr))})
	}
	if _cfgaa.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ShowVerticalScrollAttr))})
	}
	if _cfgaa.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ShowSheetTabsAttr))})
	}
	if _cfgaa.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_cfgaa.XWindowAttr)})
	}
	if _cfgaa.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_cfgaa.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", _cfgaa.WindowWidthAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _cfgaa.WindowHeightAttr)})
	if _cfgaa.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_cfgaa.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfgaa.ActiveSheetIdAttr)})
	if _cfgaa.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ShowFormulaBarAttr))})
	}
	if _cfgaa.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cfgaa.ShowStatusbarAttr))})
	}
	if _cfgaa.ShowCommentsAttr != ST_CommentsUnset {
		_eacb, _acceg := _cfgaa.ShowCommentsAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _acceg != nil {
			return _acceg
		}
		start.Attr = append(start.Attr, _eacb)
	}
	if _cfgaa.ShowObjectsAttr != ST_ObjectsUnset {
		_cfba, _dcbeg := _cfgaa.ShowObjectsAttr.MarshalXMLAttr(_a.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _dcbeg != nil {
			return _dcbeg
		}
		start.Attr = append(start.Attr, _cfba)
	}
	e.EncodeToken(start)
	if _cfgaa.ExtLst != nil {
		_bbffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfgaa.ExtLst, _bbffe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Revisions struct{ RevisionsChoice []*CT_RevisionsChoice }

func (_aabaf *CT_CustomSheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aabaf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gddg := range start.Attr {
		if _gddg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_abafd := _gddg.Value
			_aabaf.GuidAttr = _abafd
			continue
		}
		if _gddg.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_cggg, _fdgdf := _dd.ParseUint(_gddg.Value, 10, 32)
			if _fdgdf != nil {
				return _fdgdf
			}
			_fabd := uint32(_cggg)
			_aabaf.ScaleAttr = &_fabd
			continue
		}
		if _gddg.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_babc, _eecc := _dd.ParseUint(_gddg.Value, 10, 32)
			if _eecc != nil {
				return _eecc
			}
			_adgdf := uint32(_babc)
			_aabaf.ColorIdAttr = &_adgdf
			continue
		}
		if _gddg.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_afca, _ccac := _dd.ParseBool(_gddg.Value)
			if _ccac != nil {
				return _ccac
			}
			_aabaf.ShowPageBreaksAttr = &_afca
			continue
		}
		if _gddg.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_bggd, _edee := _dd.ParseBool(_gddg.Value)
			if _edee != nil {
				return _edee
			}
			_aabaf.ShowFormulasAttr = &_bggd
			continue
		}
		if _gddg.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_afcg, _acgg := _dd.ParseBool(_gddg.Value)
			if _acgg != nil {
				return _acgg
			}
			_aabaf.ShowGridLinesAttr = &_afcg
			continue
		}
		if _gddg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_aegag, _egebc := _dd.ParseBool(_gddg.Value)
			if _egebc != nil {
				return _egebc
			}
			_aabaf.ShowRowColAttr = &_aegag
			continue
		}
		if _gddg.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_aaef, _afbce := _dd.ParseBool(_gddg.Value)
			if _afbce != nil {
				return _afbce
			}
			_aabaf.OutlineSymbolsAttr = &_aaef
			continue
		}
		if _gddg.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_cdaef, _ceeac := _dd.ParseBool(_gddg.Value)
			if _ceeac != nil {
				return _ceeac
			}
			_aabaf.ZeroValuesAttr = &_cdaef
			continue
		}
		if _gddg.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_dcbd, _cecg := _dd.ParseBool(_gddg.Value)
			if _cecg != nil {
				return _cecg
			}
			_aabaf.FitToPageAttr = &_dcbd
			continue
		}
		if _gddg.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_ggbef, _acce := _dd.ParseBool(_gddg.Value)
			if _acce != nil {
				return _acce
			}
			_aabaf.PrintAreaAttr = &_ggbef
			continue
		}
		if _gddg.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_ecacb, _fdce := _dd.ParseBool(_gddg.Value)
			if _fdce != nil {
				return _fdce
			}
			_aabaf.FilterAttr = &_ecacb
			continue
		}
		if _gddg.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_fgce, _bgfag := _dd.ParseBool(_gddg.Value)
			if _bgfag != nil {
				return _bgfag
			}
			_aabaf.ShowAutoFilterAttr = &_fgce
			continue
		}
		if _gddg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_ggfc, _gbbb := _dd.ParseBool(_gddg.Value)
			if _gbbb != nil {
				return _gbbb
			}
			_aabaf.HiddenRowsAttr = &_ggfc
			continue
		}
		if _gddg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_dgge, _eabb := _dd.ParseBool(_gddg.Value)
			if _eabb != nil {
				return _eabb
			}
			_aabaf.HiddenColumnsAttr = &_dgge
			continue
		}
		if _gddg.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_aabaf.StateAttr.UnmarshalXMLAttr(_gddg)
			continue
		}
		if _gddg.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_gabbg, _abfc := _dd.ParseBool(_gddg.Value)
			if _abfc != nil {
				return _abfc
			}
			_aabaf.FilterUniqueAttr = &_gabbg
			continue
		}
		if _gddg.Name.Local == "\u0076\u0069\u0065\u0077" {
			_aabaf.ViewAttr.UnmarshalXMLAttr(_gddg)
			continue
		}
		if _gddg.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_dbae, _gedf := _dd.ParseBool(_gddg.Value)
			if _gedf != nil {
				return _gedf
			}
			_aabaf.ShowRulerAttr = &_dbae
			continue
		}
		if _gddg.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_gdgaa := _gddg.Value
			_aabaf.TopLeftCellAttr = &_gdgaa
			continue
		}
	}
_bdafa:
	for {
		_aeced, _feeb := d.Token()
		if _feeb != nil {
			return _feeb
		}
		switch _dffac := _aeced.(type) {
		case _a.StartElement:
			switch _dffac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_aabaf.Pane = NewCT_Pane()
				if _ffcfe := d.DecodeElement(_aabaf.Pane, &_dffac); _ffcfe != nil {
					return _ffcfe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_aabaf.Selection = NewCT_Selection()
				if _bdeff := d.DecodeElement(_aabaf.Selection, &_dffac); _bdeff != nil {
					return _bdeff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_aabaf.RowBreaks = NewCT_PageBreak()
				if _aadcd := d.DecodeElement(_aabaf.RowBreaks, &_dffac); _aadcd != nil {
					return _aadcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_aabaf.ColBreaks = NewCT_PageBreak()
				if _cdbgg := d.DecodeElement(_aabaf.ColBreaks, &_dffac); _cdbgg != nil {
					return _cdbgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_aabaf.PageMargins = NewCT_PageMargins()
				if _aadda := d.DecodeElement(_aabaf.PageMargins, &_dffac); _aadda != nil {
					return _aadda
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_aabaf.PrintOptions = NewCT_PrintOptions()
				if _cfaad := d.DecodeElement(_aabaf.PrintOptions, &_dffac); _cfaad != nil {
					return _cfaad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_aabaf.PageSetup = NewCT_PageSetup()
				if _gebfa := d.DecodeElement(_aabaf.PageSetup, &_dffac); _gebfa != nil {
					return _gebfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aabaf.HeaderFooter = NewCT_HeaderFooter()
				if _daec := d.DecodeElement(_aabaf.HeaderFooter, &_dffac); _daec != nil {
					return _daec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_aabaf.AutoFilter = NewCT_AutoFilter()
				if _bdfb := d.DecodeElement(_aabaf.AutoFilter, &_dffac); _bdfb != nil {
					return _bdfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aabaf.ExtLst = NewCT_ExtensionList()
				if _cffgf := d.DecodeElement(_aabaf.ExtLst, &_dffac); _cffgf != nil {
					return _cffgf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _dffac.Name)
				if _dage := d.Skip(); _dage != nil {
					return _dage
				}
			}
		case _a.EndElement:
			break _bdafa
		case _a.CharData:
		}
	}
	return nil
}
func (_gbddf ST_SortMethod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gbddf.String(), start)
}

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

func (_beaff ST_rwColActionType) ValidateWithPath(path string) error {
	switch _beaff {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beaff))
	}
	return nil
}
func (_fcgeg *CT_SheetPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgcaf := range start.Attr {
		if _fgcaf.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_gfggd, _fbegg := _dd.ParseBool(_fgcaf.Value)
			if _fbegg != nil {
				return _fbegg
			}
			_fcgeg.SyncHorizontalAttr = &_gfggd
			continue
		}
		if _fgcaf.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_efafc, _ebggb := _dd.ParseBool(_fgcaf.Value)
			if _ebggb != nil {
				return _ebggb
			}
			_fcgeg.SyncVerticalAttr = &_efafc
			continue
		}
		if _fgcaf.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_eabdcg := _fgcaf.Value
			_fcgeg.SyncRefAttr = &_eabdcg
			continue
		}
		if _fgcaf.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_bceac, _fccdeg := _dd.ParseBool(_fgcaf.Value)
			if _fccdeg != nil {
				return _fccdeg
			}
			_fcgeg.TransitionEvaluationAttr = &_bceac
			continue
		}
		if _fgcaf.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_dcadf, _dgagf := _dd.ParseBool(_fgcaf.Value)
			if _dgagf != nil {
				return _dgagf
			}
			_fcgeg.TransitionEntryAttr = &_dcadf
			continue
		}
		if _fgcaf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_gdfgf, _gefab := _dd.ParseBool(_fgcaf.Value)
			if _gefab != nil {
				return _gefab
			}
			_fcgeg.PublishedAttr = &_gdfgf
			continue
		}
		if _fgcaf.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_fgcgfg := _fgcaf.Value
			_fcgeg.CodeNameAttr = &_fgcgfg
			continue
		}
		if _fgcaf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_ffgfd, _eeegd := _dd.ParseBool(_fgcaf.Value)
			if _eeegd != nil {
				return _eeegd
			}
			_fcgeg.FilterModeAttr = &_ffgfd
			continue
		}
		if _fgcaf.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_dcbgad, _gcdd := _dd.ParseBool(_fgcaf.Value)
			if _gcdd != nil {
				return _gcdd
			}
			_fcgeg.EnableFormatConditionsCalculationAttr = &_dcbgad
			continue
		}
	}
_ceeca:
	for {
		_adgca, _cfebg := d.Token()
		if _cfebg != nil {
			return _cfebg
		}
		switch _eefag := _adgca.(type) {
		case _a.StartElement:
			switch _eefag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_fcgeg.TabColor = NewCT_Color()
				if _ccegg := d.DecodeElement(_fcgeg.TabColor, &_eefag); _ccegg != nil {
					return _ccegg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_fcgeg.OutlinePr = NewCT_OutlinePr()
				if _ageca := d.DecodeElement(_fcgeg.OutlinePr, &_eefag); _ageca != nil {
					return _ageca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_fcgeg.PageSetUpPr = NewCT_PageSetUpPr()
				if _bcfdbb := d.DecodeElement(_fcgeg.PageSetUpPr, &_eefag); _bcfdbb != nil {
					return _bcfdbb
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _eefag.Name)
				if _gaaac := d.Skip(); _gaaac != nil {
					return _gaaac
				}
			}
		case _a.EndElement:
			break _ceeca
		case _a.CharData:
		}
	}
	return nil
}
func (_bfbfg *CT_QueryTableDeletedFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afccbf := range start.Attr {
		if _afccbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cgffe, _dbdf := _dd.ParseUint(_afccbf.Value, 10, 32)
			if _dbdf != nil {
				return _dbdf
			}
			_cggc := uint32(_cgffe)
			_bfbfg.CountAttr = &_cggc
			continue
		}
	}
_gabeg:
	for {
		_gabgbg, _efabc := d.Token()
		if _efabc != nil {
			return _efabc
		}
		switch _ddadc := _gabgbg.(type) {
		case _a.StartElement:
			switch _ddadc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_cbdgd := NewCT_DeletedField()
				if _aaafe := d.DecodeElement(_cbdgd, &_ddadc); _aaafe != nil {
					return _aaafe
				}
				_bfbfg.DeletedField = append(_bfbfg.DeletedField, _cbdgd)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _ddadc.Name)
				if _fegdg := d.Skip(); _fegdg != nil {
					return _fegdg
				}
			}
		case _a.EndElement:
			break _gabeg
		case _a.CharData:
		}
	}
	return nil
}
func (_fbcaf *CT_PivotSelection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbcaf.PaneAttr != ST_PaneUnset {
		_dbfdfg, _fdgde := _fbcaf.PaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _fdgde != nil {
			return _fdgde
		}
		start.Attr = append(start.Attr, _dbfdfg)
	}
	if _fbcaf.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcaf.ShowHeaderAttr))})
	}
	if _fbcaf.LabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcaf.LabelAttr))})
	}
	if _fbcaf.DataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcaf.DataAttr))})
	}
	if _fbcaf.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcaf.ExtendableAttr))})
	}
	if _fbcaf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.CountAttr)})
	}
	if _fbcaf.AxisAttr != ST_AxisUnset {
		_gecdb, _cbbcf := _fbcaf.AxisAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _cbbcf != nil {
			return _cbbcf
		}
		start.Attr = append(start.Attr, _gecdb)
	}
	if _fbcaf.DimensionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.DimensionAttr)})
	}
	if _fbcaf.StartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.StartAttr)})
	}
	if _fbcaf.MinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.MinAttr)})
	}
	if _fbcaf.MaxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.MaxAttr)})
	}
	if _fbcaf.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.ActiveRowAttr)})
	}
	if _fbcaf.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.ActiveColAttr)})
	}
	if _fbcaf.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.PreviousRowAttr)})
	}
	if _fbcaf.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.PreviousColAttr)})
	}
	if _fbcaf.ClickAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.ClickAttr)})
	}
	if _fbcaf.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcaf.IdAttr)})
	}
	e.EncodeToken(start)
	_aaagd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_fbcaf.PivotArea, _aaagd)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cdbcb ST_CfType) Validate() error { return _cdbcb.ValidateWithPath("") }

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_gffef *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _ggggd := _gffef.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _ggggd != nil {
		return _ggggd
	}
	if _gffef.ExtLst != nil {
		if _daafa := _gffef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daafa != nil {
			return _daafa
		}
	}
	return nil
}

// Validate validates the CT_MdxSet and its children
func (_gdbdd *CT_MdxSet) Validate() error {
	return _gdbdd.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_bdcea *CT_SharedUser) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_bdcea.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _bdcea.GuidAttr)
	}
	if _bdcea.ExtLst != nil {
		if _ccedg := _bdcea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccedg != nil {
			return _ccedg
		}
	}
	return nil
}
func (_bdace ST_Scope) ValidateWithPath(path string) error {
	switch _bdace {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdace))
	}
	return nil
}
func (_fgfdc *ST_FontScheme) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fgfdc = 0
	case "\u006e\u006f\u006e\u0065":
		*_fgfdc = 1
	case "\u006d\u0061\u006ao\u0072":
		*_fgfdc = 2
	case "\u006d\u0069\u006eo\u0072":
		*_fgfdc = 3
	}
	return nil
}

// Validate validates the CT_PrintOptions and its children
func (_fffaae *CT_PrintOptions) Validate() error {
	return _fffaae.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}
func (_bdgad *ST_SortType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bffgd, _gabbc := d.Token()
	if _gabbc != nil {
		return _gabbc
	}
	if _dfedb, _bgbafg := _bffgd.(_a.EndElement); _bgbafg && _dfedb.Name == start.Name {
		*_bdgad = 1
		return nil
	}
	if _gddgcg, _baaaee := _bffgd.(_a.CharData); !_baaaee {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bffgd)
	} else {
		switch string(_gddgcg) {
		case "":
			*_bdgad = 0
		case "\u006e\u006f\u006e\u0065":
			*_bdgad = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_bdgad = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_bdgad = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_bdgad = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_bdgad = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_bdgad = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_bdgad = 7
		}
	}
	_bffgd, _gabbc = d.Token()
	if _gabbc != nil {
		return _gabbc
	}
	if _bggca, _cbeef := _bffgd.(_a.EndElement); _cbeef && _bggca.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bffgd)
}
func (_dffef *CT_RevisionMoveChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_facae := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
		_ffcfg := NewCT_UndoInfo()
		if _gfbfg := d.DecodeElement(_ffcfg, &_facae); _gfbfg != nil {
			return _gfbfg
		}
		_dffef.Undo = append(_dffef.Undo, _ffcfg)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
		_fdcae := NewCT_RevisionCellChange()
		if _ebecbb := d.DecodeElement(_fdcae, &_facae); _ebecbb != nil {
			return _ebecbb
		}
		_dffef.Rcc = append(_dffef.Rcc, _fdcae)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
		_dcaee := NewCT_RevisionFormatting()
		if _cdeba := d.DecodeElement(_dcaee, &_facae); _cdeba != nil {
			return _cdeba
		}
		_dffef.Rfmt = append(_dffef.Rfmt, _dcaee)
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _facae.Name)
		if _gcdcg := d.Skip(); _gcdcg != nil {
			return _gcdcg
		}
	}
	return nil
}
func (_fcafdf *ST_PhoneticType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fcafdf = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_fcafdf = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_fcafdf = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_fcafdf = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_fcafdf = 4
	}
	return nil
}
func (_fddab *CT_PatternFill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbcca := range start.Attr {
		if _dbcca.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_fddab.PatternTypeAttr.UnmarshalXMLAttr(_dbcca)
			continue
		}
	}
_eaeebg:
	for {
		_aacdde, _ffecb := d.Token()
		if _ffecb != nil {
			return _ffecb
		}
		switch _bafad := _aacdde.(type) {
		case _a.StartElement:
			switch _bafad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_fddab.FgColor = NewCT_Color()
				if _fade := d.DecodeElement(_fddab.FgColor, &_bafad); _fade != nil {
					return _fade
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_fddab.BgColor = NewCT_Color()
				if _dabgc := d.DecodeElement(_fddab.BgColor, &_bafad); _dabgc != nil {
					return _dabgc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _bafad.Name)
				if _ceccfg := d.Skip(); _ceccfg != nil {
					return _ceccfg
				}
			}
		case _a.EndElement:
			break _eaeebg
		case _a.CharData:
		}
	}
	return nil
}
func (_ffged *CT_PivotDimension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcbgb := range start.Attr {
		if _fcbgb.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_faffgg, _cfafc := _dd.ParseBool(_fcbgb.Value)
			if _cfafc != nil {
				return _cfafc
			}
			_ffged.MeasureAttr = &_faffgg
			continue
		}
		if _fcbgb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgeec := _fcbgb.Value
			_ffged.NameAttr = _dgeec
			continue
		}
		if _fcbgb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gbecd := _fcbgb.Value
			_ffged.UniqueNameAttr = _gbecd
			continue
		}
		if _fcbgb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_geegbc := _fcbgb.Value
			_ffged.CaptionAttr = _geegbc
			continue
		}
	}
	for {
		_edfeb, _cdefe := d.Token()
		if _cdefe != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _cdefe)
		}
		if _gefgb, _cfbaca := _edfeb.(_a.EndElement); _cfbaca && _gefgb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewMetadata() *Metadata {
	_edggg := &Metadata{}
	_edggg.CT_Metadata = *NewCT_Metadata()
	return _edggg
}
func (_afdeb ST_TextVAlign) String() string {
	switch _afdeb {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func NewCT_VolTopicRef() *CT_VolTopicRef { _dffeg := &CT_VolTopicRef{}; return _dffeg }

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_ffece *CT_Query) ValidateWithPath(path string) error {
	if _ffece.Tpls != nil {
		if _gacgb := _ffece.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _gacgb != nil {
			return _gacgb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_ccccc *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }
func NewCT_FileVersion() *CT_FileVersion                                      { _cdgda := &CT_FileVersion{}; return _cdgda }

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_fefee *CT_PageItem) ValidateWithPath(path string) error { return nil }
func (_affadc ST_SortType) String() string {
	switch _affadc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}

func (_dbbdff ST_TimePeriod) ValidateWithPath(path string) error {
	switch _dbbdff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbbdff))
	}
	return nil
}

// Validate validates the CT_MetadataStringIndex and its children
func (_baddg *CT_MetadataStringIndex) Validate() error {
	return _baddg.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}
func NewCT_CustomFilters() *CT_CustomFilters {
	_bggeg := &CT_CustomFilters{}
	return _bggeg
}
func (_dggcc *CT_WorkbookProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dggcc.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookPasswordAttr)})
	}
	if _dggcc.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookPasswordCharacterSetAttr)})
	}
	if _dggcc.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsPasswordAttr)})
	}
	if _dggcc.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsPasswordCharacterSetAttr)})
	}
	if _dggcc.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dggcc.LockStructureAttr))})
	}
	if _dggcc.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dggcc.LockWindowsAttr))})
	}
	if _dggcc.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dggcc.LockRevisionAttr))})
	}
	if _dggcc.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsAlgorithmNameAttr)})
	}
	if _dggcc.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsHashValueAttr)})
	}
	if _dggcc.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsSaltValueAttr)})
	}
	if _dggcc.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.RevisionsSpinCountAttr)})
	}
	if _dggcc.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookAlgorithmNameAttr)})
	}
	if _dggcc.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookHashValueAttr)})
	}
	if _dggcc.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookSaltValueAttr)})
	}
	if _dggcc.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dggcc.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gebcc *CT_MdxChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbcgc := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
		_gebcc.T = NewCT_MdxTuple()
		if _cbgcb := d.DecodeElement(_gebcc.T, &_bbcgc); _cbgcb != nil {
			return _cbgcb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
		_gebcc.Ms = NewCT_MdxSet()
		if _cgggf := d.DecodeElement(_gebcc.Ms, &_bbcgc); _cgggf != nil {
			return _cgggf
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
		_gebcc.P = NewCT_MdxMemeberProp()
		if _cccae := d.DecodeElement(_gebcc.P, &_bbcgc); _cccae != nil {
			return _cccae
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
		_gebcc.K = NewCT_MdxKPI()
		if _edcfe := d.DecodeElement(_gebcc.K, &_bbcgc); _edcfe != nil {
			return _edcfe
		}
	default:
		_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0064\u0078C\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bbcgc.Name)
		if _cadae := d.Skip(); _cadae != nil {
			return _cadae
		}
	}
	return nil
}
func NewCT_ColorScale() *CT_ColorScale { _beea := &CT_ColorScale{}; return _beea }

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_dfggfa *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _aebaag, _aeffb := range _dfggfa.WebPublishItem {
		if _egcgca := _aeffb.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _aebaag)); _egcgca != nil {
			return _egcgca
		}
	}
	return nil
}
func (_aeee *CT_BooleanProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgd := range start.Attr {
		if _fgd.Name.Local == "\u0076\u0061\u006c" {
			_eefd, _dca := _dd.ParseBool(_fgd.Value)
			if _dca != nil {
				return _dca
			}
			_aeee.ValAttr = &_eefd
			continue
		}
	}
	for {
		_cae, _gfe := d.Token()
		if _gfe != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _gfe)
		}
		if _cga, _dbc := _cae.(_a.EndElement); _dbc && _cga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_baffdd ST_PhoneticAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_baffdd.String(), start)
}
func (_edfec *CT_OleObject) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcdgc := range start.Attr {
		if _fcdgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcdgc.Name.Local == "\u0069\u0064" || _fcdgc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcdgc.Name.Local == "\u0069\u0064" {
			_egcfdd := _fcdgc.Value
			_edfec.IdAttr = &_egcfdd
			continue
		}
		if _fcdgc.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_fcdgd := _fcdgc.Value
			_edfec.ProgIdAttr = &_fcdgd
			continue
		}
		if _fcdgc.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_edfec.DvAspectAttr.UnmarshalXMLAttr(_fcdgc)
			continue
		}
		if _fcdgc.Name.Local == "\u006c\u0069\u006e\u006b" {
			_bedfb := _fcdgc.Value
			_edfec.LinkAttr = &_bedfb
			continue
		}
		if _fcdgc.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_edfec.OleUpdateAttr.UnmarshalXMLAttr(_fcdgc)
			continue
		}
		if _fcdgc.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_gaeeb, _ebdcfg := _dd.ParseBool(_fcdgc.Value)
			if _ebdcfg != nil {
				return _ebdcfg
			}
			_edfec.AutoLoadAttr = &_gaeeb
			continue
		}
		if _fcdgc.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_eaaef, _fadfg := _dd.ParseUint(_fcdgc.Value, 10, 32)
			if _fadfg != nil {
				return _fadfg
			}
			_edfec.ShapeIdAttr = uint32(_eaaef)
			continue
		}
	}
_cfagd:
	for {
		_gfad, _accfab := d.Token()
		if _accfab != nil {
			return _accfab
		}
		switch _dffafd := _gfad.(type) {
		case _a.StartElement:
			switch _dffafd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_edfec.ObjectPr = NewCT_ObjectPr()
				if _ababb := d.DecodeElement(_edfec.ObjectPr, &_dffafd); _ababb != nil {
					return _ababb
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _dffafd.Name)
				if _cecce := d.Skip(); _cecce != nil {
					return _cecce
				}
			}
		case _a.EndElement:
			break _cfagd
		case _a.CharData:
		}
	}
	return nil
}

type Revisions struct{ CT_Revisions }

func (_dggccf ST_VerticalAlignment) String() string {
	switch _dggccf {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_cegbd *CT_PivotFilters) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbgag := range start.Attr {
		if _gbgag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdgba, _edbfa := _dd.ParseUint(_gbgag.Value, 10, 32)
			if _edbfa != nil {
				return _edbfa
			}
			_cdad := uint32(_bdgba)
			_cegbd.CountAttr = &_cdad
			continue
		}
	}
_bdgdfe:
	for {
		_dfgdb, _deeff := d.Token()
		if _deeff != nil {
			return _deeff
		}
		switch _cdbab := _dfgdb.(type) {
		case _a.StartElement:
			switch _cdbab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_fdbbba := NewCT_PivotFilter()
				if _fdfdb := d.DecodeElement(_fdbbba, &_cdbab); _fdfdb != nil {
					return _fdfdb
				}
				_cegbd.Filter = append(_cegbd.Filter, _fdbbba)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _cdbab.Name)
				if _cebbf := d.Skip(); _cebbf != nil {
					return _cebbf
				}
			}
		case _a.EndElement:
			break _bdgdfe
		case _a.CharData:
		}
	}
	return nil
}
func (_aede *CT_Fills) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aede.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aede.CountAttr)})
	}
	e.EncodeToken(start)
	if _aede.Fill != nil {
		_fefag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u006c\u006c"}}
		for _, _agbd := range _aede.Fill {
			e.EncodeElement(_agbd, _fefag)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_FieldsUsage() *CT_FieldsUsage { _fdagg := &CT_FieldsUsage{}; return _fdagg }

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_agefe *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _beagb, _gaacb := range _agefe.SmartTagType {
		if _adfgg := _gaacb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _beagb)); _adfgg != nil {
			return _adfgg
		}
	}
	return nil
}
func NewCT_Hyperlink() *CT_Hyperlink { _ffbd := &CT_Hyperlink{}; return _ffbd }

type CT_Record struct{ RecordChoice []*CT_RecordChoice }

func NewCT_MRUColors() *CT_MRUColors { _cebae := &CT_MRUColors{}; return _cebae }
func (_dacef *CT_SmartTagType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbfed := range start.Attr {
		if _fbfed.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_adgaac := _fbfed.Value
			_dacef.NamespaceUriAttr = &_adgaac
			continue
		}
		if _fbfed.Name.Local == "\u006e\u0061\u006d\u0065" {
			_beafgc := _fbfed.Value
			_dacef.NameAttr = &_beafgc
			continue
		}
		if _fbfed.Name.Local == "\u0075\u0072\u006c" {
			_baaee := _fbfed.Value
			_dacef.UrlAttr = &_baaee
			continue
		}
	}
	for {
		_efaff, _aeecb := d.Token()
		if _aeecb != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _aeecb)
		}
		if _fbfea, _fcccec := _efaff.(_a.EndElement); _fcccec && _fbfea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfga *CT_DataFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfga.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfga.CountAttr)})
	}
	e.EncodeToken(start)
	_gaaef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _bdab := range _gfga.DataField {
		e.EncodeElement(_bdab, _gaaef)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_ffage *CT_Members) ValidateWithPath(path string) error {
	for _gafbd, _gdfaf := range _ffage.Member {
		if _beccb := _gdfaf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _gafbd)); _beccb != nil {
			return _beccb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_ebff *CT_ExternalLink) ValidateWithPath(path string) error {
	if _ffdgc := _ebff.ExternalLinkChoice.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065"); _ffdgc != nil {
		return _ffdgc
	}
	if _ebff.ExtLst != nil {
		if _bbeda := _ebff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbeda != nil {
			return _bbeda
		}
	}
	return nil
}

// Validate validates the CT_MetadataRecord and its children
func (_gafef *CT_MetadataRecord) Validate() error {
	return _gafef.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}
func NewCT_PivotAreas() *CT_PivotAreas {
	_bagac := &CT_PivotAreas{}
	return _bagac
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_gccge *CT_SheetProtection) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_DataFields and its children
func (_eebdb *CT_DataFields) Validate() error {
	return _eebdb.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}
func NewCT_TableStyleElement() *CT_TableStyleElement {
	_ddeba := &CT_TableStyleElement{}
	_ddeba.TypeAttr = ST_TableStyleType(1)
	return _ddeba
}
func (_eccfa *CT_TableColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _eccfa.IdAttr)})
	if _eccfa.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _eccfa.NameAttr)})
	if _eccfa.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_cgfeg, _afddf := _eccfa.TotalsRowFunctionAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _afddf != nil {
			return _afddf
		}
		start.Attr = append(start.Attr, _cgfeg)
	}
	if _eccfa.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.TotalsRowLabelAttr)})
	}
	if _eccfa.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.QueryTableFieldIdAttr)})
	}
	if _eccfa.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.HeaderRowDxfIdAttr)})
	}
	if _eccfa.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.DataDxfIdAttr)})
	}
	if _eccfa.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.TotalsRowDxfIdAttr)})
	}
	if _eccfa.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.HeaderRowCellStyleAttr)})
	}
	if _eccfa.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.DataCellStyleAttr)})
	}
	if _eccfa.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eccfa.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _eccfa.CalculatedColumnFormula != nil {
		_gdecf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u0061\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006cu\u006d\u006e\u0046o\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_eccfa.CalculatedColumnFormula, _gdecf)
	}
	if _eccfa.TotalsRowFormula != nil {
		_agegac := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0074\u006f\u0074\u0061\u006c\u0073\u0052o\u0077\u0046\u006f\u0072mu\u006c\u0061"}}
		e.EncodeElement(_eccfa.TotalsRowFormula, _agegac)
	}
	if _eccfa.XmlColumnPr != nil {
		_dcbfc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0078\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_eccfa.XmlColumnPr, _dcbfc)
	}
	if _eccfa.ExtLst != nil {
		_cdcbeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eccfa.ExtLst, _cdcbeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ceagb *CT_PivotHierarchies) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ceagb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ceagb.CountAttr)})
	}
	e.EncodeToken(start)
	_cfdaf := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0069\u0076\u006f\u0074H\u0069\u0065r\u0061\u0072\u0063\u0068\u0079"}}
	for _, _afddg := range _ceagb.PivotHierarchy {
		e.EncodeElement(_afddg, _cfdaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_becb *CT_CommentPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_becb.Anchor = NewCT_ObjectAnchor()
	for _, _ggee := range start.Attr {
		if _ggee.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_affeb, _egacb := _dd.ParseBool(_ggee.Value)
			if _egacb != nil {
				return _egacb
			}
			_becb.LockedAttr = &_affeb
			continue
		}
		if _ggee.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_eccb, _debf := _dd.ParseBool(_ggee.Value)
			if _debf != nil {
				return _debf
			}
			_becb.DefaultSizeAttr = &_eccb
			continue
		}
		if _ggee.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_beec, _dcffa := _dd.ParseBool(_ggee.Value)
			if _dcffa != nil {
				return _dcffa
			}
			_becb.PrintAttr = &_beec
			continue
		}
		if _ggee.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_ffbg, _adec := _dd.ParseBool(_ggee.Value)
			if _adec != nil {
				return _adec
			}
			_becb.DisabledAttr = &_ffbg
			continue
		}
		if _ggee.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_abfa, _bcfa := _dd.ParseBool(_ggee.Value)
			if _bcfa != nil {
				return _bcfa
			}
			_becb.AutoFillAttr = &_abfa
			continue
		}
		if _ggee.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_cgdaf, _gdba := _dd.ParseBool(_ggee.Value)
			if _gdba != nil {
				return _gdba
			}
			_becb.AutoLineAttr = &_cgdaf
			continue
		}
		if _ggee.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_ecbce := _ggee.Value
			_becb.AltTextAttr = &_ecbce
			continue
		}
		if _ggee.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_becb.TextHAlignAttr.UnmarshalXMLAttr(_ggee)
			continue
		}
		if _ggee.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_becb.TextVAlignAttr.UnmarshalXMLAttr(_ggee)
			continue
		}
		if _ggee.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_bbfb, _ggac := _dd.ParseBool(_ggee.Value)
			if _ggac != nil {
				return _ggac
			}
			_becb.LockTextAttr = &_bbfb
			continue
		}
		if _ggee.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_gcdc, _gdbb := _dd.ParseBool(_ggee.Value)
			if _gdbb != nil {
				return _gdbb
			}
			_becb.JustLastXAttr = &_gcdc
			continue
		}
		if _ggee.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_eeabd, _dbeee := _dd.ParseBool(_ggee.Value)
			if _dbeee != nil {
				return _dbeee
			}
			_becb.AutoScaleAttr = &_eeabd
			continue
		}
	}
_bdaaf:
	for {
		_adbd, _abgcc := d.Token()
		if _abgcc != nil {
			return _abgcc
		}
		switch _dddd := _adbd.(type) {
		case _a.StartElement:
			switch _dddd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _bdfc := d.DecodeElement(_becb.Anchor, &_dddd); _bdfc != nil {
					return _bdfc
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _dddd.Name)
				if _gdcf := d.Skip(); _gdcf != nil {
					return _gdcf
				}
			}
		case _a.EndElement:
			break _bdaaf
		case _a.CharData:
		}
	}
	return nil
}
func (_bfgab ST_DataValidationOperator) String() string {
	switch _bfgab {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_eccg *CT_Boolean) ValidateWithPath(path string) error {
	for _cgc, _gbf := range _eccg.X {
		if _ega := _gbf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _cgc)); _ega != nil {
			return _ega
		}
	}
	return nil
}
func (_eccdg *CT_PivotFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _eccdg.FldAttr)})
	if _eccdg.MpFldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.MpFldAttr)})
	}
	_bcfda, _dddaeg := _eccdg.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dddaeg != nil {
		return _dddaeg
	}
	start.Attr = append(start.Attr, _bcfda)
	if _eccdg.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _eccdg.IdAttr)})
	if _eccdg.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.IMeasureHierAttr)})
	}
	if _eccdg.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.IMeasureFldAttr)})
	}
	if _eccdg.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.NameAttr)})
	}
	if _eccdg.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.DescriptionAttr)})
	}
	if _eccdg.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.StringValue1Attr)})
	}
	if _eccdg.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _fd.Sprintf("\u0025\u0076", *_eccdg.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_dcgcec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_eccdg.AutoFilter, _dcgcec)
	if _eccdg.ExtLst != nil {
		_aeafg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eccdg.ExtLst, _aeafg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}

func (_egfaf *CT_Row) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bbcagc := range start.Attr {
		if _bbcagc.Name.Local == "\u0072" {
			_gbeba, _ecdag := _dd.ParseUint(_bbcagc.Value, 10, 32)
			if _ecdag != nil {
				return _ecdag
			}
			_befcd := uint32(_gbeba)
			_egfaf.RAttr = &_befcd
			continue
		}
		if _bbcagc.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_cgecbb, _affbf := ParseSliceST_CellSpans(_bbcagc.Value)
			if _affbf != nil {
				return _affbf
			}
			_egfaf.SpansAttr = &_cgecbb
			continue
		}
		if _bbcagc.Name.Local == "\u0073" {
			_acaeg, _aeefe := _dd.ParseUint(_bbcagc.Value, 10, 32)
			if _aeefe != nil {
				return _aeefe
			}
			_aeefeb := uint32(_acaeg)
			_egfaf.SAttr = &_aeefeb
			continue
		}
		if _bbcagc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_fcabd, _aabdcb := _dd.ParseBool(_bbcagc.Value)
			if _aabdcb != nil {
				return _aabdcb
			}
			_egfaf.CustomFormatAttr = &_fcabd
			continue
		}
		if _bbcagc.Name.Local == "\u0068\u0074" {
			_ccfbf, _bfefe := _dd.ParseFloat(_bbcagc.Value, 64)
			if _bfefe != nil {
				return _bfefe
			}
			_egfaf.HtAttr = &_ccfbf
			continue
		}
		if _bbcagc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_eagfc, _fceac := _dd.ParseBool(_bbcagc.Value)
			if _fceac != nil {
				return _fceac
			}
			_egfaf.HiddenAttr = &_eagfc
			continue
		}
		if _bbcagc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_egade, _acdeed := _dd.ParseBool(_bbcagc.Value)
			if _acdeed != nil {
				return _acdeed
			}
			_egfaf.CustomHeightAttr = &_egade
			continue
		}
		if _bbcagc.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_cagccb, _caeaa := _dd.ParseUint(_bbcagc.Value, 10, 8)
			if _caeaa != nil {
				return _caeaa
			}
			_dbbdb := uint8(_cagccb)
			_egfaf.OutlineLevelAttr = &_dbbdb
			continue
		}
		if _bbcagc.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_cgdfg, _caebc := _dd.ParseBool(_bbcagc.Value)
			if _caebc != nil {
				return _caebc
			}
			_egfaf.CollapsedAttr = &_cgdfg
			continue
		}
		if _bbcagc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_gbbbbg, _aafbd := _dd.ParseBool(_bbcagc.Value)
			if _aafbd != nil {
				return _aafbd
			}
			_egfaf.ThickTopAttr = &_gbbbbg
			continue
		}
		if _bbcagc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_dbaef, _cfcae := _dd.ParseBool(_bbcagc.Value)
			if _cfcae != nil {
				return _cfcae
			}
			_egfaf.ThickBotAttr = &_dbaef
			continue
		}
		if _bbcagc.Name.Local == "\u0070\u0068" {
			_dgdgb, _ebdfe := _dd.ParseBool(_bbcagc.Value)
			if _ebdfe != nil {
				return _ebdfe
			}
			_egfaf.PhAttr = &_dgdgb
			continue
		}
	}
_begec:
	for {
		_gadcf, _dddbgf := d.Token()
		if _dddbgf != nil {
			return _dddbgf
		}
		switch _dbcbd := _gadcf.(type) {
		case _a.StartElement:
			switch _dbcbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_fcgbbd := NewCT_Cell()
				if _abdfc := d.DecodeElement(_fcgbbd, &_dbcbd); _abdfc != nil {
					return _abdfc
				}
				_egfaf.C = append(_egfaf.C, _fcgbbd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egfaf.ExtLst = NewCT_ExtensionList()
				if _fefef := d.DecodeElement(_egfaf.ExtLst, &_dbcbd); _fefef != nil {
					return _fefef
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _dbcbd.Name)
				if _afddd := d.Skip(); _afddd != nil {
					return _afddd
				}
			}
		case _a.EndElement:
			break _begec
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColHierarchiesUsage and its children
func (_cebd *CT_ColHierarchiesUsage) Validate() error {
	return _cebd.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}
func (_fcccc *ST_CellComments) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fcccc = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcccc = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_fcccc = 2
	case "\u0061\u0074\u0045n\u0064":
		*_fcccc = 3
	}
	return nil
}
func (_eddeef ST_DataValidationType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eddeef.String(), start)
}
func (_bgfcd *CT_Sst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgfcd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfcd.CountAttr)})
	}
	if _bgfcd.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfcd.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _bgfcd.Si != nil {
		_cfged := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0069"}}
		for _, _cecda := range _bgfcd.Si {
			e.EncodeElement(_cecda, _cfged)
		}
	}
	if _bgfcd.ExtLst != nil {
		_eeega := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgfcd.ExtLst, _eeega)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_feadec ST_ParameterType) String() string {
	switch _feadec {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}
func NewCT_RevisionsChoice() *CT_RevisionsChoice { _fgbbg := &CT_RevisionsChoice{}; return _fgbbg }
func (_eacba ST_Comments) String() string {
	switch _eacba {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}

// Validate validates the ExternalLink and its children
func (_ccdece *ExternalLink) Validate() error {
	return _ccdece.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func (_afcdga *CT_OleSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _afcdga.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dadcb *CT_RevisionCellChange) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dadcb.Nc = NewCT_Cell()
	for _, _ffgac := range start.Attr {
		if _ffgac.Name.Local == "\u0073\u0049\u0064" {
			_aedaf, _efcdf := _dd.ParseUint(_ffgac.Value, 10, 32)
			if _efcdf != nil {
				return _efcdf
			}
			_dadcb.SIdAttr = uint32(_aedaf)
			continue
		}
		if _ffgac.Name.Local == "\u006f\u0064\u0078\u0066" {
			_gaegda, _cfcef := _dd.ParseBool(_ffgac.Value)
			if _cfcef != nil {
				return _cfcef
			}
			_dadcb.OdxfAttr = &_gaegda
			continue
		}
		if _ffgac.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_ddeaf, _deabc := _dd.ParseBool(_ffgac.Value)
			if _deabc != nil {
				return _deabc
			}
			_dadcb.XfDxfAttr = &_ddeaf
			continue
		}
		if _ffgac.Name.Local == "\u0073" {
			_dcgfg, _bggac := _dd.ParseBool(_ffgac.Value)
			if _bggac != nil {
				return _bggac
			}
			_dadcb.SAttr = &_dcgfg
			continue
		}
		if _ffgac.Name.Local == "\u0064\u0078\u0066" {
			_ebfdab, _ecaee := _dd.ParseBool(_ffgac.Value)
			if _ecaee != nil {
				return _ecaee
			}
			_dadcb.DxfAttr = &_ebfdab
			continue
		}
		if _ffgac.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_adcdd, _abbbde := _dd.ParseUint(_ffgac.Value, 10, 32)
			if _abbbde != nil {
				return _abbbde
			}
			_gaadg := uint32(_adcdd)
			_dadcb.NumFmtIdAttr = &_gaadg
			continue
		}
		if _ffgac.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_abec, _fggfd := _dd.ParseBool(_ffgac.Value)
			if _fggfd != nil {
				return _fggfd
			}
			_dadcb.QuotePrefixAttr = &_abec
			continue
		}
		if _ffgac.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_gbbfe, _baeae := _dd.ParseBool(_ffgac.Value)
			if _baeae != nil {
				return _baeae
			}
			_dadcb.OldQuotePrefixAttr = &_gbbfe
			continue
		}
		if _ffgac.Name.Local == "\u0070\u0068" {
			_egbdc, _addac := _dd.ParseBool(_ffgac.Value)
			if _addac != nil {
				return _addac
			}
			_dadcb.PhAttr = &_egbdc
			continue
		}
		if _ffgac.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_gfbbf, _eacca := _dd.ParseBool(_ffgac.Value)
			if _eacca != nil {
				return _eacca
			}
			_dadcb.OldPhAttr = &_gfbbf
			continue
		}
		if _ffgac.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_cfgca, _efafg := _dd.ParseBool(_ffgac.Value)
			if _efafg != nil {
				return _efafg
			}
			_dadcb.EndOfListFormulaUpdateAttr = &_cfgca
			continue
		}
		if _ffgac.Name.Local == "\u0072\u0049\u0064" {
			_bgefa, _gfbdca := _dd.ParseUint(_ffgac.Value, 10, 32)
			if _gfbdca != nil {
				return _gfbdca
			}
			_dadcb.RIdAttr = uint32(_bgefa)
			continue
		}
		if _ffgac.Name.Local == "\u0075\u0061" {
			_badaf, _agaca := _dd.ParseBool(_ffgac.Value)
			if _agaca != nil {
				return _agaca
			}
			_dadcb.UaAttr = &_badaf
			continue
		}
		if _ffgac.Name.Local == "\u0072\u0061" {
			_fggba, _bdacc := _dd.ParseBool(_ffgac.Value)
			if _bdacc != nil {
				return _bdacc
			}
			_dadcb.RaAttr = &_fggba
			continue
		}
	}
_bceff:
	for {
		_caeee, _dbdfg := d.Token()
		if _dbdfg != nil {
			return _dbdfg
		}
		switch _abbcfb := _caeee.(type) {
		case _a.StartElement:
			switch _abbcfb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_dadcb.Oc = NewCT_Cell()
				if _cfbag := d.DecodeElement(_dadcb.Oc, &_abbcfb); _cfbag != nil {
					return _cfbag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _dagec := d.DecodeElement(_dadcb.Nc, &_abbcfb); _dagec != nil {
					return _dagec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_dadcb.Odxf = NewCT_Dxf()
				if _fefde := d.DecodeElement(_dadcb.Odxf, &_abbcfb); _fefde != nil {
					return _fefde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_dadcb.Ndxf = NewCT_Dxf()
				if _aadbc := d.DecodeElement(_dadcb.Ndxf, &_abbcfb); _aadbc != nil {
					return _aadbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dadcb.ExtLst = NewCT_ExtensionList()
				if _ddgff := d.DecodeElement(_dadcb.ExtLst, &_abbcfb); _ddgff != nil {
					return _ddgff
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _abbcfb.Name)
				if _dggbc := d.Skip(); _dggbc != nil {
					return _dggbc
				}
			}
		case _a.EndElement:
			break _bceff
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MeasureGroups and its children
func (_gaacg *CT_MeasureGroups) Validate() error {
	return _gaacg.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}
func (_gabeef ST_CredMethod) ValidateWithPath(path string) error {
	switch _gabeef {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gabeef))
	}
	return nil
}

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

func (_dfcb *CT_DdeItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _dfcb.DdeItem != nil {
		_ccacb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _bgbd := range _dfcb.DdeItem {
			e.EncodeElement(_bgbd, _ccacb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dceagg ST_FormulaExpression) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dceagg.String(), start)
}

// Validate validates the CT_ExternalSheetDataSet and its children
func (_dgccc *CT_ExternalSheetDataSet) Validate() error {
	return _dgccc.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}
func NewCT_DateGroupItem() *CT_DateGroupItem {
	_bafdb := &CT_DateGroupItem{}
	_bafdb.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _bafdb
}

// Validate validates the CT_RevisionCellChange and its children
func (_bdfeb *CT_RevisionCellChange) Validate() error {
	return _bdfeb.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_cc *CT_AutoFilter) ValidateWithPath(path string) error {
	for _bfe, _gb := range _cc.FilterColumn {
		if _gaa := _gb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _bfe)); _gaa != nil {
			return _gaa
		}
	}
	if _cc.SortState != nil {
		if _adf := _cc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _adf != nil {
			return _adf
		}
	}
	if _cc.ExtLst != nil {
		if _bef := _cc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bef != nil {
			return _bef
		}
	}
	return nil
}
func (_bagbd *ST_DataValidationType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_accae, _gdeaa := d.Token()
	if _gdeaa != nil {
		return _gdeaa
	}
	if _dbfdec, _baee := _accae.(_a.EndElement); _baee && _dbfdec.Name == start.Name {
		*_bagbd = 1
		return nil
	}
	if _dgegcg, _gfgcb := _accae.(_a.CharData); !_gfgcb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _accae)
	} else {
		switch string(_dgegcg) {
		case "":
			*_bagbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_bagbd = 1
		case "\u0077\u0068\u006fl\u0065":
			*_bagbd = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_bagbd = 3
		case "\u006c\u0069\u0073\u0074":
			*_bagbd = 4
		case "\u0064\u0061\u0074\u0065":
			*_bagbd = 5
		case "\u0074\u0069\u006d\u0065":
			*_bagbd = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_bagbd = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_bagbd = 8
		}
	}
	_accae, _gdeaa = d.Token()
	if _gdeaa != nil {
		return _gdeaa
	}
	if _aecag, _gedcde := _accae.(_a.EndElement); _gedcde && _aecag.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _accae)
}

// Validate validates the CT_PivotHierarchies and its children
func (_dcfaa *CT_PivotHierarchies) Validate() error {
	return _dcfaa.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_cgbdg *CT_SortState) ValidateWithPath(path string) error {
	if _aegac := _cgbdg.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _aegac != nil {
		return _aegac
	}
	for _bebae, _dgegbf := range _cgbdg.SortCondition {
		if _eadag := _dgegbf.ValidateWithPath(_fd.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _bebae)); _eadag != nil {
			return _eadag
		}
	}
	if _cgbdg.ExtLst != nil {
		if _faeed := _cgbdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faeed != nil {
			return _faeed
		}
	}
	return nil
}
func (_fdebe *CT_Query) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffac := range start.Attr {
		if _ffac.Name.Local == "\u006d\u0064\u0078" {
			_eageb := _ffac.Value
			_fdebe.MdxAttr = _eageb
			continue
		}
	}
_egecg:
	for {
		_cfeecd, _afdc := d.Token()
		if _afdc != nil {
			return _afdc
		}
		switch _gbeec := _cfeecd.(type) {
		case _a.StartElement:
			switch _gbeec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fdebe.Tpls = NewCT_Tuples()
				if _faafdd := d.DecodeElement(_fdebe.Tpls, &_gbeec); _faafdd != nil {
					return _faafdd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _gbeec.Name)
				if _ddafae := d.Skip(); _ddafae != nil {
					return _ddafae
				}
			}
		case _a.EndElement:
			break _egecg
		case _a.CharData:
		}
	}
	return nil
}
func (_dcdgf ST_TableType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dcdgf.String(), start)
}
func NewCT_ColorFilter() *CT_ColorFilter { _gedag := &CT_ColorFilter{}; return _gedag }

// Validate validates the CT_RevisionDefinedName and its children
func (_ebgfb *CT_RevisionDefinedName) Validate() error {
	return _ebgfb.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_eggbe *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _acecd, _afgfe := range _eggbe.RowHierarchyUsage {
		if _bggfe := _afgfe.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _acecd)); _bggfe != nil {
			return _bggfe
		}
	}
	return nil
}
func (_aabae *CT_ExternalReferences) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ddgdb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0065xt\u0065r\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _bbceb := range _aabae.ExternalReference {
		e.EncodeElement(_bbceb, _ddgdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_dedgd *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _ffae, _gfged := range _dedgd.Rc {
		if _gedca := _gfged.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _ffae)); _gedca != nil {
			return _gedca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_fgefd *CT_MapInfo) ValidateWithPath(path string) error {
	for _ebbb, _bfdge := range _fgefd.Schema {
		if _eedad := _bfdge.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _ebbb)); _eedad != nil {
			return _eedad
		}
	}
	for _dgae, _fffad := range _fgefd.Map {
		if _aeeec := _fffad.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _dgae)); _aeeec != nil {
			return _aeeec
		}
	}
	return nil
}
func (_agbea ST_WebSourceType) String() string {
	switch _agbea {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}
func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_bfaea := &CT_ConditionalFormat{}
	_bfaea.PivotAreas = NewCT_PivotAreas()
	return _bfaea
}
func (_gffdc ST_CredMethod) String() string {
	switch _gffdc {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}
func NewCT_TableColumns() *CT_TableColumns { _afdcc := &CT_TableColumns{}; return _afdcc }
func (_bdacbc *CT_RevisionMove) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eegee := range start.Attr {
		if _eegee.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fgbged, _dbfbgc := _dd.ParseUint(_eegee.Value, 10, 32)
			if _dbfbgc != nil {
				return _dbfbgc
			}
			_bdacbc.SheetIdAttr = uint32(_fgbged)
			continue
		}
		if _eegee.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_cegca := _eegee.Value
			_bdacbc.SourceAttr = _cegca
			continue
		}
		if _eegee.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_adbff := _eegee.Value
			_bdacbc.DestinationAttr = _adbff
			continue
		}
		if _eegee.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ebgda, _efgdgd := _dd.ParseUint(_eegee.Value, 10, 32)
			if _efgdgd != nil {
				return _efgdgd
			}
			_gfgee := uint32(_ebgda)
			_bdacbc.SourceSheetIdAttr = &_gfgee
			continue
		}
		if _eegee.Name.Local == "\u0072\u0049\u0064" {
			_cbdea, _dggab := _dd.ParseUint(_eegee.Value, 10, 32)
			if _dggab != nil {
				return _dggab
			}
			_bdacbc.RIdAttr = uint32(_cbdea)
			continue
		}
		if _eegee.Name.Local == "\u0075\u0061" {
			_gbdg, _dgaaa := _dd.ParseBool(_eegee.Value)
			if _dgaaa != nil {
				return _dgaaa
			}
			_bdacbc.UaAttr = &_gbdg
			continue
		}
		if _eegee.Name.Local == "\u0072\u0061" {
			_edfdc, _bcagb := _dd.ParseBool(_eegee.Value)
			if _bcagb != nil {
				return _bcagb
			}
			_bdacbc.RaAttr = &_edfdc
			continue
		}
	}
_feced:
	for {
		_bdaba, _deaef := d.Token()
		if _deaef != nil {
			return _deaef
		}
		switch _beffdd := _bdaba.(type) {
		case _a.StartElement:
			switch _beffdd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_eedfbg := NewCT_RevisionMoveChoice()
				if _aeebc := d.DecodeElement(&_eedfbg.Undo, &_beffdd); _aeebc != nil {
					return _aeebc
				}
				_bdacbc.RevisionMoveChoice = append(_bdacbc.RevisionMoveChoice, _eedfbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_eagdd := NewCT_RevisionMoveChoice()
				if _ecbcd := d.DecodeElement(&_eagdd.Rcc, &_beffdd); _ecbcd != nil {
					return _ecbcd
				}
				_bdacbc.RevisionMoveChoice = append(_bdacbc.RevisionMoveChoice, _eagdd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_gcdee := NewCT_RevisionMoveChoice()
				if _fcfae := d.DecodeElement(&_gcdee.Rfmt, &_beffdd); _fcfae != nil {
					return _fcfae
				}
				_bdacbc.RevisionMoveChoice = append(_bdacbc.RevisionMoveChoice, _gcdee)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _beffdd.Name)
				if _egbeeg := d.Skip(); _egbeeg != nil {
					return _egbeeg
				}
			}
		case _a.EndElement:
			break _feced
		case _a.CharData:
		}
	}
	return nil
}

type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_affeg *CT_MetadataStrings) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _affeg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_affeg.CountAttr)})
	}
	e.EncodeToken(start)
	_ccgfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
	for _, _gcfga := range _affeg.S {
		e.EncodeElement(_gcfga, _ccgfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbdedf ST_SourceType) ValidateWithPath(path string) error {
	switch _bbdedf {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbdedf))
	}
	return nil
}

type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dedag ST_MdxSetOrder) String() string {
	switch _dedag {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}
func (_egbbd *ST_MdxFunctionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_egbbd = 0
	case "\u006d":
		*_egbbd = 1
	case "\u0076":
		*_egbbd = 2
	case "\u0073":
		*_egbbd = 3
	case "\u0063":
		*_egbbd = 4
	case "\u0072":
		*_egbbd = 5
	case "\u0070":
		*_egbbd = 6
	case "\u006b":
		*_egbbd = 7
	}
	return nil
}
func (_bbgbf ST_SortMethod) Validate() error { return _bbgbf.ValidateWithPath("") }
func (_fgafcab *ST_TextVAlign) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_geeada, _dffad := d.Token()
	if _dffad != nil {
		return _dffad
	}
	if _eaaecc, _cafbfd := _geeada.(_a.EndElement); _cafbfd && _eaaecc.Name == start.Name {
		*_fgafcab = 1
		return nil
	}
	if _fegbgb, _faceac := _geeada.(_a.CharData); !_faceac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geeada)
	} else {
		switch string(_fegbgb) {
		case "":
			*_fgafcab = 0
		case "\u0074\u006f\u0070":
			*_fgafcab = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fgafcab = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_fgafcab = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_fgafcab = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fgafcab = 5
		}
	}
	_geeada, _dffad = d.Token()
	if _dffad != nil {
		return _dffad
	}
	if _edfabc, _agdda := _geeada.(_a.EndElement); _agdda && _edfabc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geeada)
}

// Validate validates the CT_TableParts and its children
func (_bgdfc *CT_TableParts) Validate() error {
	return _bgdfc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_adgd *CT_Controls) ValidateWithPath(path string) error {
	for _gbgf, _ddbge := range _adgd.Control {
		if _eefad := _ddbge.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _gbgf)); _eefad != nil {
			return _eefad
		}
	}
	return nil
}
func (_cegea ST_TextVAlign) ValidateWithPath(path string) error {
	switch _cegea {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cegea))
	}
	return nil
}
func NewCT_PivotFilters() *CT_PivotFilters { _gbegf := &CT_PivotFilters{}; return _gbegf }
func (_edagf ST_PivotFilterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gefecb := _a.Attr{}
	_gefecb.Name = name
	switch _edagf {
	case ST_PivotFilterTypeUnset:
		_gefecb.Value = ""
	case ST_PivotFilterTypeUnknown:
		_gefecb.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_gefecb.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_gefecb.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_gefecb.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_gefecb.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_gefecb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_gefecb.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_gefecb.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_gefecb.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_gefecb.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_gefecb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_gefecb.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_gefecb.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_gefecb.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_gefecb.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_gefecb.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_gefecb.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_gefecb.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_gefecb.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_gefecb.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_gefecb.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_gefecb.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_gefecb.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_gefecb.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_gefecb.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_gefecb.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_gefecb.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_gefecb.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_gefecb.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_gefecb.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_gefecb.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_gefecb.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_gefecb.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_gefecb.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_gefecb.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_gefecb.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_gefecb.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_gefecb.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_gefecb.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_gefecb.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_gefecb.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_gefecb.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_gefecb.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_gefecb.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_gefecb.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_gefecb.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_gefecb.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_gefecb.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_gefecb.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_gefecb.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_gefecb.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_gefecb.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_gefecb.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_gefecb.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_gefecb.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_gefecb.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_gefecb.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_gefecb.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_gefecb.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_gefecb.Value = "\u004d\u0031\u0032"
	}
	return _gefecb, nil
}
func (_ccbb *CT_MetadataBlocks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeadda := range start.Attr {
		if _eeadda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbdfe, _aefaed := _dd.ParseUint(_eeadda.Value, 10, 32)
			if _aefaed != nil {
				return _aefaed
			}
			_cafe := uint32(_fbdfe)
			_ccbb.CountAttr = &_cafe
			continue
		}
	}
_caafa:
	for {
		_agaga, _eccff := d.Token()
		if _eccff != nil {
			return _eccff
		}
		switch _daacb := _agaga.(type) {
		case _a.StartElement:
			switch _daacb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_cbgd := NewCT_MetadataBlock()
				if _febadd := d.DecodeElement(_cbgd, &_daacb); _febadd != nil {
					return _febadd
				}
				_ccbb.Bk = append(_ccbb.Bk, _cbgd)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _daacb.Name)
				if _gbedc := d.Skip(); _gbedc != nil {
					return _gbedc
				}
			}
		case _a.EndElement:
			break _caafa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RgbColor() *CT_RgbColor { _bfcdd := &CT_RgbColor{}; return _bfcdd }
func (_fgadgc *Worksheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fgadgc.CT_Worksheet = *NewCT_Worksheet()
_faeag:
	for {
		_affed, _dfadbc := d.Token()
		if _dfadbc != nil {
			return _dfadbc
		}
		switch _aacfef := _affed.(type) {
		case _a.StartElement:
			switch _aacfef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fgadgc.SheetPr = NewCT_SheetPr()
				if _gbdcg := d.DecodeElement(_fgadgc.SheetPr, &_aacfef); _gbdcg != nil {
					return _gbdcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_fgadgc.Dimension = NewCT_SheetDimension()
				if _bddge := d.DecodeElement(_fgadgc.Dimension, &_aacfef); _bddge != nil {
					return _bddge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fgadgc.SheetViews = NewCT_SheetViews()
				if _fadedb := d.DecodeElement(_fgadgc.SheetViews, &_aacfef); _fadedb != nil {
					return _fadedb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_fgadgc.SheetFormatPr = NewCT_SheetFormatPr()
				if _fbeebe := d.DecodeElement(_fgadgc.SheetFormatPr, &_aacfef); _fbeebe != nil {
					return _fbeebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dedgg := NewCT_Cols()
				if _ebecd := d.DecodeElement(_dedgg, &_aacfef); _ebecd != nil {
					return _ebecd
				}
				_fgadgc.Cols = append(_fgadgc.Cols, _dedgg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _accfgc := d.DecodeElement(_fgadgc.SheetData, &_aacfef); _accfgc != nil {
					return _accfgc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_fgadgc.SheetCalcPr = NewCT_SheetCalcPr()
				if _dcaab := d.DecodeElement(_fgadgc.SheetCalcPr, &_aacfef); _dcaab != nil {
					return _dcaab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fgadgc.SheetProtection = NewCT_SheetProtection()
				if _abgcf := d.DecodeElement(_fgadgc.SheetProtection, &_aacfef); _abgcf != nil {
					return _abgcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_fgadgc.ProtectedRanges = NewCT_ProtectedRanges()
				if _gafgf := d.DecodeElement(_fgadgc.ProtectedRanges, &_aacfef); _gafgf != nil {
					return _gafgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_fgadgc.Scenarios = NewCT_Scenarios()
				if _afccg := d.DecodeElement(_fgadgc.Scenarios, &_aacfef); _afccg != nil {
					return _afccg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fgadgc.AutoFilter = NewCT_AutoFilter()
				if _cegge := d.DecodeElement(_fgadgc.AutoFilter, &_aacfef); _cegge != nil {
					return _cegge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fgadgc.SortState = NewCT_SortState()
				if _cbdfa := d.DecodeElement(_fgadgc.SortState, &_aacfef); _cbdfa != nil {
					return _cbdfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_fgadgc.DataConsolidate = NewCT_DataConsolidate()
				if _acbddf := d.DecodeElement(_fgadgc.DataConsolidate, &_aacfef); _acbddf != nil {
					return _acbddf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fgadgc.CustomSheetViews = NewCT_CustomSheetViews()
				if _cbefaf := d.DecodeElement(_fgadgc.CustomSheetViews, &_aacfef); _cbefaf != nil {
					return _cbefaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_fgadgc.MergeCells = NewCT_MergeCells()
				if _dffaa := d.DecodeElement(_fgadgc.MergeCells, &_aacfef); _dffaa != nil {
					return _dffaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_fgadgc.PhoneticPr = NewCT_PhoneticPr()
				if _febcd := d.DecodeElement(_fgadgc.PhoneticPr, &_aacfef); _febcd != nil {
					return _febcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_geddbdc := NewCT_ConditionalFormatting()
				if _ccadd := d.DecodeElement(_geddbdc, &_aacfef); _ccadd != nil {
					return _ccadd
				}
				_fgadgc.ConditionalFormatting = append(_fgadgc.ConditionalFormatting, _geddbdc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_fgadgc.DataValidations = NewCT_DataValidations()
				if _aaadfg := d.DecodeElement(_fgadgc.DataValidations, &_aacfef); _aaadfg != nil {
					return _aaadfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_fgadgc.Hyperlinks = NewCT_Hyperlinks()
				if _beceg := d.DecodeElement(_fgadgc.Hyperlinks, &_aacfef); _beceg != nil {
					return _beceg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_fgadgc.PrintOptions = NewCT_PrintOptions()
				if _gegcaa := d.DecodeElement(_fgadgc.PrintOptions, &_aacfef); _gegcaa != nil {
					return _gegcaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fgadgc.PageMargins = NewCT_PageMargins()
				if _gcdcf := d.DecodeElement(_fgadgc.PageMargins, &_aacfef); _gcdcf != nil {
					return _gcdcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fgadgc.PageSetup = NewCT_PageSetup()
				if _gcfdg := d.DecodeElement(_fgadgc.PageSetup, &_aacfef); _gcfdg != nil {
					return _gcfdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fgadgc.HeaderFooter = NewCT_HeaderFooter()
				if _cgaee := d.DecodeElement(_fgadgc.HeaderFooter, &_aacfef); _cgaee != nil {
					return _cgaee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_fgadgc.RowBreaks = NewCT_PageBreak()
				if _decfac := d.DecodeElement(_fgadgc.RowBreaks, &_aacfef); _decfac != nil {
					return _decfac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_fgadgc.ColBreaks = NewCT_PageBreak()
				if _ecabd := d.DecodeElement(_fgadgc.ColBreaks, &_aacfef); _ecabd != nil {
					return _ecabd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_fgadgc.CustomProperties = NewCT_CustomProperties()
				if _dbfgg := d.DecodeElement(_fgadgc.CustomProperties, &_aacfef); _dbfgg != nil {
					return _dbfgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_fgadgc.CellWatches = NewCT_CellWatches()
				if _gccfe := d.DecodeElement(_fgadgc.CellWatches, &_aacfef); _gccfe != nil {
					return _gccfe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_fgadgc.IgnoredErrors = NewCT_IgnoredErrors()
				if _geeeg := d.DecodeElement(_fgadgc.IgnoredErrors, &_aacfef); _geeeg != nil {
					return _geeeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_fgadgc.SmartTags = NewCT_SmartTags()
				if _fgacbe := d.DecodeElement(_fgadgc.SmartTags, &_aacfef); _fgacbe != nil {
					return _fgacbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_fgadgc.Drawing = NewCT_Drawing()
				if _cecabb := d.DecodeElement(_fgadgc.Drawing, &_aacfef); _cecabb != nil {
					return _cecabb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fgadgc.LegacyDrawing = NewCT_LegacyDrawing()
				if _dggdb := d.DecodeElement(_fgadgc.LegacyDrawing, &_aacfef); _dggdb != nil {
					return _dggdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fgadgc.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _gebfd := d.DecodeElement(_fgadgc.LegacyDrawingHF, &_aacfef); _gebfd != nil {
					return _gebfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fgadgc.DrawingHF = NewCT_DrawingHF()
				if _fgcge := d.DecodeElement(_fgadgc.DrawingHF, &_aacfef); _fgcge != nil {
					return _fgcge
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_fgadgc.Picture = NewCT_SheetBackgroundPicture()
				if _fgdaeg := d.DecodeElement(_fgadgc.Picture, &_aacfef); _fgdaeg != nil {
					return _fgdaeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_fgadgc.OleObjects = NewCT_OleObjects()
				if _bdcad := d.DecodeElement(_fgadgc.OleObjects, &_aacfef); _bdcad != nil {
					return _bdcad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_fgadgc.Controls = NewCT_Controls()
				if _cdfce := d.DecodeElement(_fgadgc.Controls, &_aacfef); _cdfce != nil {
					return _cdfce
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_fgadgc.WebPublishItems = NewCT_WebPublishItems()
				if _cfecgb := d.DecodeElement(_fgadgc.WebPublishItems, &_aacfef); _cfecgb != nil {
					return _cfecgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_fgadgc.TableParts = NewCT_TableParts()
				if _bfdbgg := d.DecodeElement(_fgadgc.TableParts, &_aacfef); _bfdbgg != nil {
					return _bfdbgg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgadgc.ExtLst = NewCT_ExtensionList()
				if _ceefd := d.DecodeElement(_fgadgc.ExtLst, &_aacfef); _ceefd != nil {
					return _ceefd
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _aacfef.Name)
				if _gdfbce := d.Skip(); _gdfbce != nil {
					return _gdfbce
				}
			}
		case _a.EndElement:
			break _faeag
		case _a.CharData:
		}
	}
	return nil
}
func (_edacc *ST_TextHAlign) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_edacc = 0
	case "\u006c\u0065\u0066\u0074":
		*_edacc = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_edacc = 2
	case "\u0072\u0069\u0067h\u0074":
		*_edacc = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_edacc = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_edacc = 5
	}
	return nil
}

type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}

// Validate validates the CT_SheetFormatPr and its children
func (_bfcdf *CT_SheetFormatPr) Validate() error {
	return _bfcdf.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}

type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}

func (_degcga *ST_SortType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_degcga = 0
	case "\u006e\u006f\u006e\u0065":
		*_degcga = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_degcga = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_degcga = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_degcga = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_degcga = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_degcga = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_degcga = 7
	}
	return nil
}

type ST_DdeValueType byte

// Validate validates the CT_Stylesheet and its children
func (_beccc *CT_Stylesheet) Validate() error {
	return _beccc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}

type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

func (_gcbcd *CT_ExternalSheetName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gccg := range start.Attr {
		if _gccg.Name.Local == "\u0076\u0061\u006c" {
			_dbaed := _gccg.Value
			_gcbcd.ValAttr = &_dbaed
			continue
		}
	}
	for {
		_dedac, _bceg := d.Token()
		if _bceg != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _bceg)
		}
		if _bdgfa, _fdfa := _dedac.(_a.EndElement); _fdfa && _bdgfa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

func (_fcag *CT_ControlPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcag.Anchor = NewCT_ObjectAnchor()
	for _, _bdfd := range start.Attr {
		if _bdfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bdfd.Name.Local == "\u0069\u0064" || _bdfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bdfd.Name.Local == "\u0069\u0064" {
			_dgbe := _bdfd.Value
			_fcag.IdAttr = &_dgbe
			continue
		}
		if _bdfd.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_cfbgg, _fcagf := _dd.ParseBool(_bdfd.Value)
			if _fcagf != nil {
				return _fcagf
			}
			_fcag.AutoPictAttr = &_cfbgg
			continue
		}
		if _bdfd.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cgbaa := _bdfd.Value
			_fcag.MacroAttr = &_cgbaa
			continue
		}
		if _bdfd.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_eagg, _ggda := _dd.ParseBool(_bdfd.Value)
			if _ggda != nil {
				return _ggda
			}
			_fcag.LockedAttr = &_eagg
			continue
		}
		if _bdfd.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_dgee, _faffc := _dd.ParseBool(_bdfd.Value)
			if _faffc != nil {
				return _faffc
			}
			_fcag.RecalcAlwaysAttr = &_dgee
			continue
		}
		if _bdfd.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_bfgde, _fefga := _dd.ParseBool(_bdfd.Value)
			if _fefga != nil {
				return _fefga
			}
			_fcag.UiObjectAttr = &_bfgde
			continue
		}
		if _bdfd.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_cabg, _bbagdb := _dd.ParseBool(_bdfd.Value)
			if _bbagdb != nil {
				return _bbagdb
			}
			_fcag.AutoFillAttr = &_cabg
			continue
		}
		if _bdfd.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_becc, _eade := _dd.ParseBool(_bdfd.Value)
			if _eade != nil {
				return _eade
			}
			_fcag.PrintAttr = &_becc
			continue
		}
		if _bdfd.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_afgg, _afgb := _dd.ParseBool(_bdfd.Value)
			if _afgb != nil {
				return _afgb
			}
			_fcag.DisabledAttr = &_afgg
			continue
		}
		if _bdfd.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_eecb, _acgce := _dd.ParseBool(_bdfd.Value)
			if _acgce != nil {
				return _acgce
			}
			_fcag.AutoLineAttr = &_eecb
			continue
		}
		if _bdfd.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_bgdg := _bdfd.Value
			_fcag.ListFillRangeAttr = &_bgdg
			continue
		}
		if _bdfd.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_gfgdb := _bdfd.Value
			_fcag.LinkedCellAttr = &_gfgdb
			continue
		}
		if _bdfd.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_gaaag := _bdfd.Value
			_fcag.AltTextAttr = &_gaaag
			continue
		}
		if _bdfd.Name.Local == "\u0063\u0066" {
			_aeca := _bdfd.Value
			_fcag.CfAttr = &_aeca
			continue
		}
		if _bdfd.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_efeeb, _fgea := _dd.ParseBool(_bdfd.Value)
			if _fgea != nil {
				return _fgea
			}
			_fcag.DefaultSizeAttr = &_efeeb
			continue
		}
	}
_gcfdb:
	for {
		_egeb, _eacfg := d.Token()
		if _eacfg != nil {
			return _eacfg
		}
		switch _afcd := _egeb.(type) {
		case _a.StartElement:
			switch _afcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _aeda := d.DecodeElement(_fcag.Anchor, &_afcd); _aeda != nil {
					return _aeda
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _afcd.Name)
				if _deafd := d.Skip(); _deafd != nil {
					return _deafd
				}
			}
		case _a.EndElement:
			break _gcfdb
		case _a.CharData:
		}
	}
	return nil
}
func (_gfbb *CT_CalcPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gfbb.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbb.CalcIdAttr)})
	}
	if _gfbb.CalcModeAttr != ST_CalcModeUnset {
		_daae, _cgbe := _gfbb.CalcModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _cgbe != nil {
			return _cgbe
		}
		start.Attr = append(start.Attr, _daae)
	}
	if _gfbb.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.FullCalcOnLoadAttr))})
	}
	if _gfbb.RefModeAttr != ST_RefModeUnset {
		_fgg, _eabe := _gfbb.RefModeAttr.MarshalXMLAttr(_a.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _eabe != nil {
			return _eabe
		}
		start.Attr = append(start.Attr, _fgg)
	}
	if _gfbb.IterateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.IterateAttr))})
	}
	if _gfbb.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbb.IterateCountAttr)})
	}
	if _gfbb.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbb.IterateDeltaAttr)})
	}
	if _gfbb.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.FullPrecisionAttr))})
	}
	if _gfbb.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.CalcCompletedAttr))})
	}
	if _gfbb.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.CalcOnSaveAttr))})
	}
	if _gfbb.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.ConcurrentCalcAttr))})
	}
	if _gfbb.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfbb.ConcurrentManualCountAttr)})
	}
	if _gfbb.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfbb.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FileVersion and its children
func (_bbbfa *CT_FileVersion) Validate() error {
	return _bbbfa.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}
func (_agdcec ST_VolDepType) ValidateWithPath(path string) error {
	switch _agdcec {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agdcec))
	}
	return nil
}
func (_dacfgg ST_TextHAlign) Validate() error { return _dacfgg.ValidateWithPath("") }
func NewCT_FileSharing() *CT_FileSharing      { _adfdf := &CT_FileSharing{}; return _adfdf }
func (_egec *CT_Col) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _egec.MinAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _egec.MaxAttr)})
	if _egec.WidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_egec.WidthAttr)})
	}
	if _egec.StyleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_egec.StyleAttr)})
	}
	if _egec.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egec.HiddenAttr))})
	}
	if _egec.BestFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egec.BestFitAttr))})
	}
	if _egec.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egec.CustomWidthAttr))})
	}
	if _egec.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egec.PhoneticAttr))})
	}
	if _egec.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_egec.OutlineLevelAttr)})
	}
	if _egec.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_egec.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}
type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

func NewCT_CustomProperties() *CT_CustomProperties { _cgabe := &CT_CustomProperties{}; return _cgabe }

// Validate validates the CT_BooleanProperty and its children
func (_ebfb *CT_BooleanProperty) Validate() error {
	return _ebfb.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}
func (_ccbddd ST_Type) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_degfg := _a.Attr{}
	_degfg.Name = name
	switch _ccbddd {
	case ST_TypeUnset:
		_degfg.Value = ""
	case ST_TypeNone:
		_degfg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_degfg.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_degfg.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_degfg.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _degfg, nil
}
func (_cbfgea *ST_ParameterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cbfgea = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_cbfgea = 1
	case "\u0076\u0061\u006cu\u0065":
		*_cbfgea = 2
	case "\u0063\u0065\u006c\u006c":
		*_cbfgea = 3
	}
	return nil
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}
type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

func (_dgfcg ST_FormulaExpression) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gdgcb := _a.Attr{}
	_gdgcb.Name = name
	switch _dgfcg {
	case ST_FormulaExpressionUnset:
		_gdgcb.Value = ""
	case ST_FormulaExpressionRef:
		_gdgcb.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_gdgcb.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_gdgcb.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_gdgcb.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_gdgcb.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _gdgcb, nil
}

type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_ddaab *CT_Sheet) ValidateWithPath(path string) error {
	if _eagba := _ddaab.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _eagba != nil {
		return _eagba
	}
	return nil
}
func (_cebcc *CT_RevisionComment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cebcc.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _cebcc.CellAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cebcc.GuidAttr)})
	if _cebcc.ActionAttr != ST_RevisionActionUnset {
		_geega, _caead := _cebcc.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _caead != nil {
			return _caead
		}
		start.Attr = append(start.Attr, _geega)
	}
	if _cebcc.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cebcc.AlwaysShowAttr))})
	}
	if _cebcc.OldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cebcc.OldAttr))})
	}
	if _cebcc.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cebcc.HiddenRowAttr))})
	}
	if _cebcc.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cebcc.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _cebcc.AuthorAttr)})
	if _cebcc.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _fd.Sprintf("\u0025\u0076", *_cebcc.OldLengthAttr)})
	}
	if _cebcc.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _fd.Sprintf("\u0025\u0076", *_cebcc.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_fbddd *CT_String) ValidateWithPath(path string) error {
	for _bgadcd, _dcfce := range _fbddd.Tpls {
		if _debcbg := _dcfce.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _bgadcd)); _debcbg != nil {
			return _debcbg
		}
	}
	for _fddea, _efcgd := range _fbddd.X {
		if _dbfccd := _efcgd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fddea)); _dbfccd != nil {
			return _dbfccd
		}
	}
	return nil
}
func NewCT_SmartTagTypes() *CT_SmartTagTypes {
	_cfbce := &CT_SmartTagTypes{}
	return _cfbce
}

// Validate validates the CT_DdeValue and its children
func (_bceee *CT_DdeValue) Validate() error {
	return _bceee.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}
func (_acgeb *CT_PivotHierarchies) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aegee := range start.Attr {
		if _aegee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_efedab, _ecefef := _dd.ParseUint(_aegee.Value, 10, 32)
			if _ecefef != nil {
				return _ecefef
			}
			_fddaa := uint32(_efedab)
			_acgeb.CountAttr = &_fddaa
			continue
		}
	}
_gfaa:
	for {
		_gdcdbf, _afgdd := d.Token()
		if _afgdd != nil {
			return _afgdd
		}
		switch _afdgd := _gdcdbf.(type) {
		case _a.StartElement:
			switch _afdgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_bacaf := NewCT_PivotHierarchy()
				if _acagag := d.DecodeElement(_bacaf, &_afdgd); _acagag != nil {
					return _acagag
				}
				_acgeb.PivotHierarchy = append(_acgeb.PivotHierarchy, _bacaf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _afdgd.Name)
				if _fdefe := d.Skip(); _fdefe != nil {
					return _fdefe
				}
			}
		case _a.EndElement:
			break _gfaa
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_XmlColumnPr and its children
func (_eaccg *CT_XmlColumnPr) Validate() error {
	return _eaccg.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

func (_addgb *CT_CellWatches) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gbgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _dcea := range _addgb.CellWatch {
		e.EncodeElement(_dcea, _gbgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}
type CT_Fill struct{ FillChoice *CT_FillChoice }

func (_dabdd ST_rwColActionType) Validate() error { return _dabdd.ValidateWithPath("") }

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

func (_aeeb *CT_FutureMetadataBlock) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _aeeb.ExtLst != nil {
		_acbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeeb.ExtLst, _acbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbaff *CT_FilterColumnChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fffbb := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
		_bbaff.Filters = NewCT_Filters()
		if _abead := d.DecodeElement(_bbaff.Filters, &_fffbb); _abead != nil {
			return _abead
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
		_bbaff.Top10 = NewCT_Top10()
		if _fcddb := d.DecodeElement(_bbaff.Top10, &_fffbb); _fcddb != nil {
			return _fcddb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
		_bbaff.CustomFilters = NewCT_CustomFilters()
		if _gdgc := d.DecodeElement(_bbaff.CustomFilters, &_fffbb); _gdgc != nil {
			return _gdgc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
		_bbaff.DynamicFilter = NewCT_DynamicFilter()
		if _ecbab := d.DecodeElement(_bbaff.DynamicFilter, &_fffbb); _ecbab != nil {
			return _ecbab
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
		_bbaff.ColorFilter = NewCT_ColorFilter()
		if _ccbef := d.DecodeElement(_bbaff.ColorFilter, &_fffbb); _ccbef != nil {
			return _ccbef
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
		_bbaff.IconFilter = NewCT_IconFilter()
		if _dffd := d.DecodeElement(_bbaff.IconFilter, &_fffbb); _dffd != nil {
			return _dffd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
		_bbaff.ExtLst = NewCT_ExtensionList()
		if _gbef := d.DecodeElement(_bbaff.ExtLst, &_fffbb); _gbef != nil {
			return _gbef
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fffbb.Name)
		if _ecbbc := d.Skip(); _ecbbc != nil {
			return _ecbbc
		}
	}
	return nil
}
func (_febdf *Sst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069\u003a\u0073\u0073\u0074"
	return _febdf.CT_Sst.MarshalXML(e, start)
}
func (_gbcc *CT_CacheField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecfd := range start.Attr {
		if _ecfd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcce := _ecfd.Value
			_gbcc.NameAttr = _fcce
			continue
		}
		if _ecfd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fdb := _ecfd.Value
			_gbcc.CaptionAttr = &_fdb
			continue
		}
		if _ecfd.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_aaab := _ecfd.Value
			_gbcc.PropertyNameAttr = &_aaab
			continue
		}
		if _ecfd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_fddf, _bcdb := _dd.ParseBool(_ecfd.Value)
			if _bcdb != nil {
				return _bcdb
			}
			_gbcc.ServerFieldAttr = &_fddf
			continue
		}
		if _ecfd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_eddc, _fec := _dd.ParseBool(_ecfd.Value)
			if _fec != nil {
				return _fec
			}
			_gbcc.UniqueListAttr = &_eddc
			continue
		}
		if _ecfd.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_cffbb, _abb := _dd.ParseUint(_ecfd.Value, 10, 32)
			if _abb != nil {
				return _abb
			}
			_faeg := uint32(_cffbb)
			_gbcc.NumFmtIdAttr = &_faeg
			continue
		}
		if _ecfd.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_fcg := _ecfd.Value
			_gbcc.FormulaAttr = &_fcg
			continue
		}
		if _ecfd.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_befa, _fgbd := _dd.ParseInt(_ecfd.Value, 10, 32)
			if _fgbd != nil {
				return _fgbd
			}
			_gfed := int32(_befa)
			_gbcc.SqlTypeAttr = &_gfed
			continue
		}
		if _ecfd.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_cgaa, _bca := _dd.ParseInt(_ecfd.Value, 10, 32)
			if _bca != nil {
				return _bca
			}
			_dece := int32(_cgaa)
			_gbcc.HierarchyAttr = &_dece
			continue
		}
		if _ecfd.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_dgbg, _bda := _dd.ParseUint(_ecfd.Value, 10, 32)
			if _bda != nil {
				return _bda
			}
			_bde := uint32(_dgbg)
			_gbcc.LevelAttr = &_bde
			continue
		}
		if _ecfd.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_ecce, _egg := _dd.ParseBool(_ecfd.Value)
			if _egg != nil {
				return _egg
			}
			_gbcc.DatabaseFieldAttr = &_ecce
			continue
		}
		if _ecfd.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_ced, _gcab := _dd.ParseUint(_ecfd.Value, 10, 32)
			if _gcab != nil {
				return _gcab
			}
			_fbde := uint32(_ced)
			_gbcc.MappingCountAttr = &_fbde
			continue
		}
		if _ecfd.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_aecef, _cgce := _dd.ParseBool(_ecfd.Value)
			if _cgce != nil {
				return _cgce
			}
			_gbcc.MemberPropertyFieldAttr = &_aecef
			continue
		}
	}
_afeb:
	for {
		_fea, _fdag := d.Token()
		if _fdag != nil {
			return _fdag
		}
		switch _gefb := _fea.(type) {
		case _a.StartElement:
			switch _gefb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_gbcc.SharedItems = NewCT_SharedItems()
				if _cdg := d.DecodeElement(_gbcc.SharedItems, &_gefb); _cdg != nil {
					return _cdg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_gbcc.FieldGroup = NewCT_FieldGroup()
				if _adfg := d.DecodeElement(_gbcc.FieldGroup, &_gefb); _adfg != nil {
					return _adfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_bfdc := NewCT_X()
				if _dfdb := d.DecodeElement(_bfdc, &_gefb); _dfdb != nil {
					return _dfdb
				}
				_gbcc.MpMap = append(_gbcc.MpMap, _bfdc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbcc.ExtLst = NewCT_ExtensionList()
				if _gbee := d.DecodeElement(_gbcc.ExtLst, &_gefb); _gbee != nil {
					return _gbee
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _gefb.Name)
				if _facf := d.Skip(); _facf != nil {
					return _facf
				}
			}
		case _a.EndElement:
			break _afeb
		case _a.CharData:
		}
	}
	return nil
}
func (_bffaa *CT_IndexedColors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eacge:
	for {
		_ccgc, _bbcbed := d.Token()
		if _bbcbed != nil {
			return _bbcbed
		}
		switch _dbda := _ccgc.(type) {
		case _a.StartElement:
			switch _dbda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_eeged := NewCT_RgbColor()
				if _cfgae := d.DecodeElement(_eeged, &_dbda); _cfgae != nil {
					return _cfgae
				}
				_bffaa.RgbColor = append(_bffaa.RgbColor, _eeged)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _dbda.Name)
				if _aaaa := d.Skip(); _aaaa != nil {
					return _aaaa
				}
			}
		case _a.EndElement:
			break _eacge
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Sheets and its children
func (_dbbcg *CT_Sheets) Validate() error {
	return _dbbcg.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}
func (_gcaagd *CT_ExternalDefinedName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gcaagd.NameAttr)})
	if _gcaagd.RefersToAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gcaagd.RefersToAttr)})
	}
	if _gcaagd.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gcaagd.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_geg *CT_CacheField) ValidateWithPath(path string) error {
	if _geg.SharedItems != nil {
		if _cgcb := _geg.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _cgcb != nil {
			return _cgcb
		}
	}
	if _geg.FieldGroup != nil {
		if _gabaf := _geg.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _gabaf != nil {
			return _gabaf
		}
	}
	for _dag, _gdga := range _geg.MpMap {
		if _fag := _gdga.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _dag)); _fag != nil {
			return _fag
		}
	}
	if _geg.ExtLst != nil {
		if _gdbc := _geg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbc != nil {
			return _gdbc
		}
	}
	return nil
}
func (_dedda ST_SheetState) ValidateWithPath(path string) error {
	switch _dedda {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dedda))
	}
	return nil
}
func NewCT_SharedUser() *CT_SharedUser {
	_affad := &CT_SharedUser{}
	_affad.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _affad
}
func (_bcfcg *CT_TableColumns) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcfcg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bcfcg.CountAttr)})
	}
	e.EncodeToken(start)
	_aacced := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}}
	for _, _ebfeb := range _bcfcg.TableColumn {
		e.EncodeElement(_ebfeb, _aacced)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_MetadataTypes() *CT_MetadataTypes { _ggfad := &CT_MetadataTypes{}; return _ggfad }
func (_cafg *CT_Index) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _cafg.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eagfe *ST_CfvoType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_eagfe = 0
	case "\u006e\u0075\u006d":
		*_eagfe = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_eagfe = 2
	case "\u006d\u0061\u0078":
		*_eagfe = 3
	case "\u006d\u0069\u006e":
		*_eagfe = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_eagfe = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_eagfe = 6
	}
	return nil
}
func (_gcadb *CT_DeletedField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gcadb.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_String() *CT_String { _gbbfg := &CT_String{}; return _gbbfg }
func NewCT_Col() *CT_Col       { _eaca := &CT_Col{}; return _eaca }

// Validate validates the CT_MdxKPI and its children
func (_bedaf *CT_MdxKPI) Validate() error {
	return _bedaf.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}
func (_gfaeae *ST_Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbcacg, _cfabg := d.Token()
	if _cfabg != nil {
		return _cfabg
	}
	if _bcfaf, _bfcbf := _dbcacg.(_a.EndElement); _bfcbf && _bcfaf.Name == start.Name {
		*_gfaeae = 1
		return nil
	}
	if _agadcd, _egcffa := _dbcacg.(_a.CharData); !_egcffa {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbcacg)
	} else {
		switch string(_agadcd) {
		case "":
			*_gfaeae = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_gfaeae = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_gfaeae = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_gfaeae = 3
		}
	}
	_dbcacg, _cfabg = d.Token()
	if _cfabg != nil {
		return _cfabg
	}
	if _daefg, _bgdbeb := _dbcacg.(_a.EndElement); _bgdbeb && _daefg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbcacg)
}
func NewCT_CellProtection() *CT_CellProtection { _ffdd := &CT_CellProtection{}; return _ffdd }
func (_cfegad ST_FontScheme) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eecegc := _a.Attr{}
	_eecegc.Name = name
	switch _cfegad {
	case ST_FontSchemeUnset:
		_eecegc.Value = ""
	case ST_FontSchemeNone:
		_eecegc.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_eecegc.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_eecegc.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _eecegc, nil
}
func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_gcffc := &CT_pivotTableDefinition{}
	_gcffc.Location = NewCT_Location()
	return _gcffc
}

type CT_TablesChoice struct {

	// No Value
	M *CT_TableMissing

	// Character Value
	S *CT_XStringElement

	// Index
	X *CT_Index
}

func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_gbfbf := &CT_VerticalAlignFontProperty{}
	_gbfbf.ValAttr = _b.ST_VerticalAlignRun(1)
	return _gbfbf
}

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_Orientation byte

// Validate validates the CT_DeletedField and its children
func (_fdad *CT_DeletedField) Validate() error {
	return _fdad.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}
func (_ccebd ST_MdxKPIProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ccebd.String(), start)
}

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_cbf *CT_BorderPr) ValidateWithPath(path string) error {
	if _dcad := _cbf.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _dcad != nil {
		return _dcad
	}
	if _cbf.Color != nil {
		if _faf := _cbf.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _faf != nil {
			return _faf
		}
	}
	return nil
}
func (_acagdd ST_PaneState) ValidateWithPath(path string) error {
	switch _acagdd {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acagdd))
	}
	return nil
}
func (_eeebd ST_HtmlFmt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eeebd.String(), start)
}

type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _b.ST_VerticalAlignRun
}
type ST_TimePeriod byte

func (_cacae ST_CfvoType) Validate() error { return _cacae.ValidateWithPath("") }
func (_gbadd ST_SortType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eggac := _a.Attr{}
	_eggac.Name = name
	switch _gbadd {
	case ST_SortTypeUnset:
		_eggac.Value = ""
	case ST_SortTypeNone:
		_eggac.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_eggac.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_eggac.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_eggac.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_eggac.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_eggac.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_eggac.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _eggac, nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}

func (_bbcccc *EG_ExtensionList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbcccc.Ext != nil {
		_bddfba := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0065\u0078\u0074"}}
		for _, _ecede := range _bbcccc.Ext {
			e.EncodeElement(_ecede, _bddfba)
		}
	}
	return nil
}
func NewCT_DateTime() *CT_DateTime { _gegg := &CT_DateTime{}; return _gegg }
func (_acaff *ST_TotalsRowFunction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcabeee, _cgfbe := d.Token()
	if _cgfbe != nil {
		return _cgfbe
	}
	if _cgbece, _ceeeca := _fcabeee.(_a.EndElement); _ceeeca && _cgbece.Name == start.Name {
		*_acaff = 1
		return nil
	}
	if _bgbcd, _cbfeg := _fcabeee.(_a.CharData); !_cbfeg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcabeee)
	} else {
		switch string(_bgbcd) {
		case "":
			*_acaff = 0
		case "\u006e\u006f\u006e\u0065":
			*_acaff = 1
		case "\u0073\u0075\u006d":
			*_acaff = 2
		case "\u006d\u0069\u006e":
			*_acaff = 3
		case "\u006d\u0061\u0078":
			*_acaff = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_acaff = 5
		case "\u0063\u006f\u0075n\u0074":
			*_acaff = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_acaff = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_acaff = 8
		case "\u0076\u0061\u0072":
			*_acaff = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_acaff = 10
		}
	}
	_fcabeee, _cgfbe = d.Token()
	if _cgfbe != nil {
		return _cgfbe
	}
	if _caafc, _gddbec := _fcabeee.(_a.EndElement); _gddbec && _caafc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcabeee)
}
func (_gacba *CT_CsPageSetup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fefcf := range start.Attr {
		if _fefcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fefcf.Name.Local == "\u0069\u0064" || _fefcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fefcf.Name.Local == "\u0069\u0064" {
			_egfgg := _fefcf.Value
			_gacba.IdAttr = &_egfgg
			continue
		}
		if _fefcf.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_fecd, _fddbd := _dd.ParseBool(_fefcf.Value)
			if _fddbd != nil {
				return _fddbd
			}
			_gacba.BlackAndWhiteAttr = &_fecd
			continue
		}
		if _fefcf.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_bfbea := _fefcf.Value
			_gacba.PaperWidthAttr = &_bfbea
			continue
		}
		if _fefcf.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_gcae, _eddec := _dd.ParseUint(_fefcf.Value, 10, 32)
			if _eddec != nil {
				return _eddec
			}
			_dfgeg := uint32(_gcae)
			_gacba.FirstPageNumberAttr = &_dfgeg
			continue
		}
		if _fefcf.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_gacba.OrientationAttr.UnmarshalXMLAttr(_fefcf)
			continue
		}
		if _fefcf.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_bgdfg, _bfea := _dd.ParseBool(_fefcf.Value)
			if _bfea != nil {
				return _bfea
			}
			_gacba.UsePrinterDefaultsAttr = &_bgdfg
			continue
		}
		if _fefcf.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_eeac, _deacg := _dd.ParseUint(_fefcf.Value, 10, 32)
			if _deacg != nil {
				return _deacg
			}
			_ddbeb := uint32(_eeac)
			_gacba.PaperSizeAttr = &_ddbeb
			continue
		}
		if _fefcf.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_gfgg, _decb := _dd.ParseBool(_fefcf.Value)
			if _decb != nil {
				return _decb
			}
			_gacba.DraftAttr = &_gfgg
			continue
		}
		if _fefcf.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_adbde, _acdf := _dd.ParseBool(_fefcf.Value)
			if _acdf != nil {
				return _acdf
			}
			_gacba.UseFirstPageNumberAttr = &_adbde
			continue
		}
		if _fefcf.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_gddd, _aabbg := _dd.ParseUint(_fefcf.Value, 10, 32)
			if _aabbg != nil {
				return _aabbg
			}
			_eegc := uint32(_gddd)
			_gacba.HorizontalDpiAttr = &_eegc
			continue
		}
		if _fefcf.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cfgd, _bddca := _dd.ParseUint(_fefcf.Value, 10, 32)
			if _bddca != nil {
				return _bddca
			}
			_cbag := uint32(_cfgd)
			_gacba.VerticalDpiAttr = &_cbag
			continue
		}
		if _fefcf.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_dafc, _dcfd := _dd.ParseUint(_fefcf.Value, 10, 32)
			if _dcfd != nil {
				return _dcfd
			}
			_caad := uint32(_dafc)
			_gacba.CopiesAttr = &_caad
			continue
		}
		if _fefcf.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bfbg := _fefcf.Value
			_gacba.PaperHeightAttr = &_bfbg
			continue
		}
	}
	for {
		_eabad, _efef := d.Token()
		if _efef != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _efef)
		}
		if _bdegg, _adfa := _eabad.(_a.EndElement); _adfa && _bdegg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gccfeg ST_VolValueType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dafffd := _a.Attr{}
	_dafffd.Name = name
	switch _gccfeg {
	case ST_VolValueTypeUnset:
		_dafffd.Value = ""
	case ST_VolValueTypeB:
		_dafffd.Value = "\u0062"
	case ST_VolValueTypeN:
		_dafffd.Value = "\u006e"
	case ST_VolValueTypeE:
		_dafffd.Value = "\u0065"
	case ST_VolValueTypeS:
		_dafffd.Value = "\u0073"
	}
	return _dafffd, nil
}

// Validate validates the CT_RecordChoice and its children
func (_ffeaf *CT_RecordChoice) Validate() error {
	return _ffeaf.ValidateWithPath("\u0043T\u005fR\u0065\u0063\u006f\u0072\u0064\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_fcagb *ST_PrintError) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fcagb = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_fcagb = 1
	case "\u0062\u006c\u0061n\u006b":
		*_fcagb = 2
	case "\u0064\u0061\u0073\u0068":
		*_fcagb = 3
	case "\u004e\u0041":
		*_fcagb = 4
	}
	return nil
}

type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_gceea *CT_WebPublishing) ValidateWithPath(path string) error {
	if _afbcc := _gceea.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _afbcc != nil {
		return _afbcc
	}
	return nil
}
func (_dfaef *CT_CellStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cadc := range start.Attr {
		if _cadc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgag := _cadc.Value
			_dfaef.NameAttr = &_bgag
			continue
		}
		if _cadc.Name.Local == "\u0078\u0066\u0049\u0064" {
			_cbff, _ddgdg := _dd.ParseUint(_cadc.Value, 10, 32)
			if _ddgdg != nil {
				return _ddgdg
			}
			_dfaef.XfIdAttr = uint32(_cbff)
			continue
		}
		if _cadc.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_eggc, _cbcgc := _dd.ParseUint(_cadc.Value, 10, 32)
			if _cbcgc != nil {
				return _cbcgc
			}
			_abgc := uint32(_eggc)
			_dfaef.BuiltinIdAttr = &_abgc
			continue
		}
		if _cadc.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_dgbgb, _bced := _dd.ParseUint(_cadc.Value, 10, 32)
			if _bced != nil {
				return _bced
			}
			_becf := uint32(_dgbgb)
			_dfaef.ILevelAttr = &_becf
			continue
		}
		if _cadc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gbfgd, _gcfa := _dd.ParseBool(_cadc.Value)
			if _gcfa != nil {
				return _gcfa
			}
			_dfaef.HiddenAttr = &_gbfgd
			continue
		}
		if _cadc.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_gaae, _deab := _dd.ParseBool(_cadc.Value)
			if _deab != nil {
				return _deab
			}
			_dfaef.CustomBuiltinAttr = &_gaae
			continue
		}
	}
_cece:
	for {
		_ebfd, _bcda := d.Token()
		if _bcda != nil {
			return _bcda
		}
		switch _eeca := _ebfd.(type) {
		case _a.StartElement:
			switch _eeca.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfaef.ExtLst = NewCT_ExtensionList()
				if _cfdg := d.DecodeElement(_dfaef.ExtLst, &_eeca); _cfdg != nil {
					return _cfdg
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _eeca.Name)
				if _faff := d.Skip(); _faff != nil {
					return _faff
				}
			}
		case _a.EndElement:
			break _cece
		case _a.CharData:
		}
	}
	return nil
}
func (_bfcef *ST_FileType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bfgfaf, _fadg := d.Token()
	if _fadg != nil {
		return _fadg
	}
	if _aabfa, _ccfce := _bfgfaf.(_a.EndElement); _ccfce && _aabfa.Name == start.Name {
		*_bfcef = 1
		return nil
	}
	if _dfabe, _eacdba := _bfgfaf.(_a.CharData); !_eacdba {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgfaf)
	} else {
		switch string(_dfabe) {
		case "":
			*_bfcef = 0
		case "\u006d\u0061\u0063":
			*_bfcef = 1
		case "\u0077\u0069\u006e":
			*_bfcef = 2
		case "\u0064\u006f\u0073":
			*_bfcef = 3
		case "\u006c\u0069\u006e":
			*_bfcef = 4
		case "\u006f\u0074\u0068e\u0072":
			*_bfcef = 5
		}
	}
	_bfgfaf, _fadg = d.Token()
	if _fadg != nil {
		return _fadg
	}
	if _bedafa, _gdcde := _bfgfaf.(_a.EndElement); _gdcde && _bedafa.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgfaf)
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_dgdaf *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _bdaeg, _fcaca := range _dgdaf.MeasureGroup {
		if _cbeabg := _fcaca.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _bdaeg)); _cbeabg != nil {
			return _cbeabg
		}
	}
	return nil
}
func NewCT_AutoFilter() *CT_AutoFilter { _dfd := &CT_AutoFilter{}; return _dfd }

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

type CT_RevisionMoveChoice struct {

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting
}
type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}
type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

func (_dgc *CT_CalcPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecdf := range start.Attr {
		if _ecdf.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_dadb, _fefg := _dd.ParseUint(_ecdf.Value, 10, 32)
			if _fefg != nil {
				return _fefg
			}
			_eaa := uint32(_dadb)
			_dgc.CalcIdAttr = &_eaa
			continue
		}
		if _ecdf.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_dgc.CalcModeAttr.UnmarshalXMLAttr(_ecdf)
			continue
		}
		if _ecdf.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_aefg, _eggd := _dd.ParseBool(_ecdf.Value)
			if _eggd != nil {
				return _eggd
			}
			_dgc.FullCalcOnLoadAttr = &_aefg
			continue
		}
		if _ecdf.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_dgc.RefModeAttr.UnmarshalXMLAttr(_ecdf)
			continue
		}
		if _ecdf.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_gdeb, _eee := _dd.ParseBool(_ecdf.Value)
			if _eee != nil {
				return _eee
			}
			_dgc.IterateAttr = &_gdeb
			continue
		}
		if _ecdf.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_adbg, _fed := _dd.ParseUint(_ecdf.Value, 10, 32)
			if _fed != nil {
				return _fed
			}
			_ffdg := uint32(_adbg)
			_dgc.IterateCountAttr = &_ffdg
			continue
		}
		if _ecdf.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_cgge, _fbb := _dd.ParseFloat(_ecdf.Value, 64)
			if _fbb != nil {
				return _fbb
			}
			_dgc.IterateDeltaAttr = &_cgge
			continue
		}
		if _ecdf.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_bafb, _bgde := _dd.ParseBool(_ecdf.Value)
			if _bgde != nil {
				return _bgde
			}
			_dgc.FullPrecisionAttr = &_bafb
			continue
		}
		if _ecdf.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_bbba, _fbc := _dd.ParseBool(_ecdf.Value)
			if _fbc != nil {
				return _fbc
			}
			_dgc.CalcCompletedAttr = &_bbba
			continue
		}
		if _ecdf.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_agac, _bfeg := _dd.ParseBool(_ecdf.Value)
			if _bfeg != nil {
				return _bfeg
			}
			_dgc.CalcOnSaveAttr = &_agac
			continue
		}
		if _ecdf.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_facd, _afbf := _dd.ParseBool(_ecdf.Value)
			if _afbf != nil {
				return _afbf
			}
			_dgc.ConcurrentCalcAttr = &_facd
			continue
		}
		if _ecdf.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_dacff, _fgbff := _dd.ParseUint(_ecdf.Value, 10, 32)
			if _fgbff != nil {
				return _fgbff
			}
			_fcca := uint32(_dacff)
			_dgc.ConcurrentManualCountAttr = &_fcca
			continue
		}
		if _ecdf.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_geaf, _eafe := _dd.ParseBool(_ecdf.Value)
			if _eafe != nil {
				return _eafe
			}
			_dgc.ForceFullCalcAttr = &_geaf
			continue
		}
	}
	for {
		_bfad, _afc := d.Token()
		if _afc != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _afc)
		}
		if _bcbd, _cfaa := _bfad.(_a.EndElement); _cfaa && _bcbd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_fdfef *CT_ExternalDefinedNames) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fdfef.DefinedName != nil {
		_gaefg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}}
		for _, _cabfd := range _fdfef.DefinedName {
			e.EncodeElement(_cabfd, _gaefg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_UpdateLinks byte

func (_facca ST_ConditionalFormattingOperator) String() string {
	switch _facca {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}
func NewComments() *Comments {
	_dcceg := &Comments{}
	_dcceg.CT_Comments = *NewCT_Comments()
	return _dcceg
}
func (_cfgbg *ST_SmartTagShow) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cfgbg = 0
	case "\u0061\u006c\u006c":
		*_cfgbg = 1
	case "\u006e\u006f\u006e\u0065":
		*_cfgbg = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_cfgbg = 3
	}
	return nil
}
func (_dedef ST_UnderlineValues) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dedef.String(), start)
}

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_bbdb *CT_CellStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbdb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bbdb.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bbdb.XfIdAttr)})
	if _bbdb.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _fd.Sprintf("\u0025\u0076", *_bbdb.BuiltinIdAttr)})
	}
	if _bbdb.ILevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_bbdb.ILevelAttr)})
	}
	if _bbdb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbdb.HiddenAttr))})
	}
	if _bbdb.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbdb.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _bbdb.ExtLst != nil {
		_cgfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bbdb.ExtLst, _cgfb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_affdc *Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069:\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _affdc.CT_Comments.MarshalXML(e, start)
}

// Validate validates the CT_ColFields and its children
func (_cffa *CT_ColFields) Validate() error {
	return _cffa.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_afcbe *CT_Sets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gddecg := range start.Attr {
		if _gddecg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fadac, _gcdegg := _dd.ParseUint(_gddecg.Value, 10, 32)
			if _gcdegg != nil {
				return _gcdegg
			}
			_ggbeb := uint32(_fadac)
			_afcbe.CountAttr = &_ggbeb
			continue
		}
	}
_ccefb:
	for {
		_bcbcfe, _badg := d.Token()
		if _badg != nil {
			return _badg
		}
		switch _gcaab := _bcbcfe.(type) {
		case _a.StartElement:
			switch _gcaab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_acadgd := NewCT_Set()
				if _faaae := d.DecodeElement(_acadgd, &_gcaab); _faaae != nil {
					return _faaae
				}
				_afcbe.Set = append(_afcbe.Set, _acadgd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _gcaab.Name)
				if _dbged := d.Skip(); _dbged != nil {
					return _dbged
				}
			}
		case _a.EndElement:
			break _ccefb
		case _a.CharData:
		}
	}
	return nil
}
func (_aggdd ST_Scope) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dcafec := _a.Attr{}
	_dcafec.Name = name
	switch _aggdd {
	case ST_ScopeUnset:
		_dcafec.Value = ""
	case ST_ScopeSelection:
		_dcafec.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_dcafec.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_dcafec.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _dcafec, nil
}
func (_eagbb *CT_WebPublishing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eagbb.CssAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0073\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eagbb.CssAttr))})
	}
	if _eagbb.ThicketAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eagbb.ThicketAttr))})
	}
	if _eagbb.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eagbb.LongFileNamesAttr))})
	}
	if _eagbb.VmlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eagbb.VmlAttr))})
	}
	if _eagbb.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eagbb.AllowPngAttr))})
	}
	if _eagbb.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_aefadg, _bcbdba := _eagbb.TargetScreenSizeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _bcbdba != nil {
			return _bcbdba
		}
		start.Attr = append(start.Attr, _aefadg)
	}
	if _eagbb.DpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0070\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_eagbb.DpiAttr)})
	}
	if _eagbb.CodePageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eagbb.CodePageAttr)})
	}
	if _eagbb.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eagbb.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebffg ST_PhoneticType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_acabdg := _a.Attr{}
	_acabdg.Name = name
	switch _ebffg {
	case ST_PhoneticTypeUnset:
		_acabdg.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_acabdg.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_acabdg.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_acabdg.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_acabdg.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _acabdg, nil
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

type MapInfo struct{ CT_MapInfo }

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_dbggd *CT_XStringElement) ValidateWithPath(path string) error { return nil }
func (_abaab *CT_PhoneticPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _abaab.FontIdAttr)})
	if _abaab.TypeAttr != ST_PhoneticTypeUnset {
		_egacbf, _bebe := _abaab.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bebe != nil {
			return _bebe
		}
		start.Attr = append(start.Attr, _egacbf)
	}
	if _abaab.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_gaadb, _eabee := _abaab.AlignmentAttr.MarshalXMLAttr(_a.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _eabee != nil {
			return _eabee
		}
		start.Attr = append(start.Attr, _gaadb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gfc *AG_RevData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fb := range start.Attr {
		if _fb.Name.Local == "\u0072\u0049\u0064" {
			_bb, _gec := _dd.ParseUint(_fb.Value, 10, 32)
			if _gec != nil {
				return _gec
			}
			_gfc.RIdAttr = uint32(_bb)
			continue
		}
		if _fb.Name.Local == "\u0075\u0061" {
			_cd, _egf := _dd.ParseBool(_fb.Value)
			if _egf != nil {
				return _egf
			}
			_gfc.UaAttr = &_cd
			continue
		}
		if _fb.Name.Local == "\u0072\u0061" {
			_gff, _gd := _dd.ParseBool(_fb.Value)
			if _gd != nil {
				return _gd
			}
			_gfc.RaAttr = &_gff
			continue
		}
	}
	for {
		_ab, _dcc := d.Token()
		if _dcc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _dcc)
		}
		if _dfc, _de := _ab.(_a.EndElement); _de && _dfc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TablesChoice() *CT_TablesChoice { _cfegg := &CT_TablesChoice{}; return _cfegg }
func (_fgdcae *CT_PCDSCPage) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfac := range start.Attr {
		if _cfac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_beddd, _gcefda := _dd.ParseUint(_cfac.Value, 10, 32)
			if _gcefda != nil {
				return _gcefda
			}
			_dgbfcb := uint32(_beddd)
			_fgdcae.CountAttr = &_dgbfcb
			continue
		}
	}
_cegb:
	for {
		_efecc, _ebfdae := d.Token()
		if _ebfdae != nil {
			return _ebfdae
		}
		switch _eadg := _efecc.(type) {
		case _a.StartElement:
			switch _eadg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_aadcc := NewCT_PageItem()
				if _gbbfa := d.DecodeElement(_aadcc, &_eadg); _gbbfa != nil {
					return _gbbfa
				}
				_fgdcae.PageItem = append(_fgdcae.PageItem, _aadcc)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _eadg.Name)
				if _eedfe := d.Skip(); _eedfe != nil {
					return _eedfe
				}
			}
		case _a.EndElement:
			break _cegb
		case _a.CharData:
		}
	}
	return nil
}
func (_deged *CT_ExternalRow) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eccaa := range start.Attr {
		if _eccaa.Name.Local == "\u0072" {
			_ccfe, _babea := _dd.ParseUint(_eccaa.Value, 10, 32)
			if _babea != nil {
				return _babea
			}
			_deged.RAttr = uint32(_ccfe)
			continue
		}
	}
_dcfed:
	for {
		_cdcbd, _fffde := d.Token()
		if _fffde != nil {
			return _fffde
		}
		switch _fegb := _cdcbd.(type) {
		case _a.StartElement:
			switch _fegb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_dbgc := NewCT_ExternalCell()
				if _afaa := d.DecodeElement(_dbgc, &_fegb); _afaa != nil {
					return _afaa
				}
				_deged.Cell = append(_deged.Cell, _dbgc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _fegb.Name)
				if _cgfaa := d.Skip(); _cgfaa != nil {
					return _cgfaa
				}
			}
		case _a.EndElement:
			break _dcfed
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_dgaac := &CT_RevisionCellChange{}
	_dgaac.Nc = NewCT_Cell()
	return _dgaac
}

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_fbbcf *CT_RowFields) ValidateWithPath(path string) error {
	for _ggbgf, _gdfbe := range _fbbcf.Field {
		if _egdde := _gdfbe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _ggbgf)); _egdde != nil {
			return _egdde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_fdggb *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _fdggb.ActionAttr == ST_rwColActionTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _egfgab := _fdggb.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _egfgab != nil {
		return _egfgab
	}
	for _gaadcc, _debba := range _fdggb.RevisionRowColumnChoice {
		if _fcfbaf := _debba.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0052\u006f\u0077\u0043\u006f\u006c\u0075m\u006e\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gaadcc)); _fcfbaf != nil {
			return _fcfbaf
		}
	}
	return nil
}
func (_dbbafb *CT_MetadataBlock) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_ecdcc:
	for {
		_cfeea, _edbc := d.Token()
		if _edbc != nil {
			return _edbc
		}
		switch _feccc := _cfeea.(type) {
		case _a.StartElement:
			switch _feccc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_gegec := NewCT_MetadataRecord()
				if _dbeef := d.DecodeElement(_gegec, &_feccc); _dbeef != nil {
					return _dbeef
				}
				_dbbafb.Rc = append(_dbbafb.Rc, _gegec)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _feccc.Name)
				if _gdac := d.Skip(); _gdac != nil {
					return _gdac
				}
			}
		case _a.EndElement:
			break _ecdcc
		case _a.CharData:
		}
	}
	return nil
}

type ST_Axis byte

// Validate validates the CT_PivotHierarchy and its children
func (_cfdcb *CT_PivotHierarchy) Validate() error {
	return _cfdcb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}

func (_egaab *CT_Index) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecdde := range start.Attr {
		if _ecdde.Name.Local == "\u0076" {
			_caaf, _ggcddb := _dd.ParseUint(_ecdde.Value, 10, 32)
			if _ggcddb != nil {
				return _ggcddb
			}
			_egaab.VAttr = uint32(_caaf)
			continue
		}
	}
	for {
		_dggag, _dddce := d.Token()
		if _dddce != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _dddce)
		}
		if _gddbe, _gedbc := _dggag.(_a.EndElement); _gedbc && _gddbe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_edfaa *CT_ServerFormats) ValidateWithPath(path string) error {
	for _eeaed, _aecbbe := range _edfaa.ServerFormat {
		if _gegcff := _aecbbe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _eeaed)); _gegcff != nil {
			return _gegcff
		}
	}
	return nil
}

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)

func NewEG_ExtensionList() *EG_ExtensionList {
	_agede := &EG_ExtensionList{}
	return _agede
}
func (_gcbcc *CT_SortCondition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbffe := range start.Attr {
		if _dbffe.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_bdcgb, _bgecf := _dd.ParseBool(_dbffe.Value)
			if _bgecf != nil {
				return _bgecf
			}
			_gcbcc.DescendingAttr = &_bdcgb
			continue
		}
		if _dbffe.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_gcbcc.SortByAttr.UnmarshalXMLAttr(_dbffe)
			continue
		}
		if _dbffe.Name.Local == "\u0072\u0065\u0066" {
			_beeda := _dbffe.Value
			_gcbcc.RefAttr = _beeda
			continue
		}
		if _dbffe.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_begece := _dbffe.Value
			_gcbcc.CustomListAttr = &_begece
			continue
		}
		if _dbffe.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_befgc, _ffbbba := _dd.ParseUint(_dbffe.Value, 10, 32)
			if _ffbbba != nil {
				return _ffbbba
			}
			_cegag := uint32(_befgc)
			_gcbcc.DxfIdAttr = &_cegag
			continue
		}
		if _dbffe.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_gcbcc.IconSetAttr.UnmarshalXMLAttr(_dbffe)
			continue
		}
		if _dbffe.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_dggcb, _dcdgag := _dd.ParseUint(_dbffe.Value, 10, 32)
			if _dcdgag != nil {
				return _dcdgag
			}
			_acbcab := uint32(_dggcb)
			_gcbcc.IconIdAttr = &_acbcab
			continue
		}
	}
	for {
		_agddc, _fefec := d.Token()
		if _fefec != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _fefec)
		}
		if _babda, _ddfgf := _agddc.(_a.EndElement); _ddfgf && _babda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_cadb *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }
func NewCT_PCDKPI() *CT_PCDKPI                                       { _ecegf := &CT_PCDKPI{}; return _ecegf }

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

func (_bbecb *CT_IconSet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbecb.IconSetAttr != ST_IconSetTypeUnset {
		_dagedf, _faagd := _bbecb.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _faagd != nil {
			return _faagd
		}
		start.Attr = append(start.Attr, _dagedf)
	}
	if _bbecb.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbecb.ShowValueAttr))})
	}
	if _bbecb.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbecb.PercentAttr))})
	}
	if _bbecb.ReverseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbecb.ReverseAttr))})
	}
	e.EncodeToken(start)
	_bebgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0066\u0076\u006f"}}
	for _, _cdbce := range _bbecb.Cfvo {
		e.EncodeElement(_cdbce, _bebgb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_FontScheme byte

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_ebbe *CT_CellXfs) ValidateWithPath(path string) error {
	for _cfge, _gggca := range _ebbe.Xf {
		if _egad := _gggca.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _cfge)); _egad != nil {
			return _egad
		}
	}
	return nil
}
func (_aggbf ST_TimePeriod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gggcb := _a.Attr{}
	_gggcb.Name = name
	switch _aggbf {
	case ST_TimePeriodUnset:
		_gggcb.Value = ""
	case ST_TimePeriodToday:
		_gggcb.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_gggcb.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_gggcb.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_gggcb.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_gggcb.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_gggcb.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_gggcb.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_gggcb.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_gggcb.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_gggcb.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _gggcb, nil
}

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_fdebc *CT_Formats) ValidateWithPath(path string) error {
	for _gfbef, _dgdcb := range _fdebc.Format {
		if _fdegba := _dgdcb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _gfbef)); _fdegba != nil {
			return _fdegba
		}
	}
	return nil
}
func NewCT_Controls() *CT_Controls { _gagcc := &CT_Controls{}; return _gagcc }

// Validate validates the CT_CacheFields and its children
func (_aga *CT_CacheFields) Validate() error {
	return _aga.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}

// Validate validates the Headers and its children
func (_bgaab *Headers) Validate() error {
	return _bgaab.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_bebg *CT_DeletedField) ValidateWithPath(path string) error { return nil }

type ST_DateTimeGrouping byte

func (_deafb *ST_TableStyleType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_deafb = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_deafb = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_deafb = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deafb = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deafb = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deafb = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_deafb = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_deafb = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_deafb = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_deafb = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_deafb = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_deafb = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_deafb = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_deafb = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deafb = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_deafb = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_deafb = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deafb = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_deafb = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_deafb = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_deafb = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deafb = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_deafb = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deafb = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_deafb = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_deafb = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_deafb = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_deafb = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_deafb = 28
	}
	return nil
}
func (_cfce *CT_GroupMembers) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cfce.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cfce.CountAttr)})
	}
	e.EncodeToken(start)
	_dgfd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0067\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _ffgd := range _cfce.GroupMember {
		e.EncodeElement(_ffgd, _dgfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcffac *CT_MergeCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abgaa := range start.Attr {
		if _abgaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddceb, _befcb := _dd.ParseUint(_abgaa.Value, 10, 32)
			if _befcb != nil {
				return _befcb
			}
			_bafde := uint32(_ddceb)
			_dcffac.CountAttr = &_bafde
			continue
		}
	}
_fadcb:
	for {
		_cfcec, _bfaegb := d.Token()
		if _bfaegb != nil {
			return _bfaegb
		}
		switch _agbbe := _cfcec.(type) {
		case _a.StartElement:
			switch _agbbe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_dcaba := NewCT_MergeCell()
				if _ecag := d.DecodeElement(_dcaba, &_agbbe); _ecag != nil {
					return _ecag
				}
				_dcffac.MergeCell = append(_dcffac.MergeCell, _dcaba)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _agbbe.Name)
				if _ddaa := d.Skip(); _ddaa != nil {
					return _ddaa
				}
			}
		case _a.EndElement:
			break _fadcb
		case _a.CharData:
		}
	}
	return nil
}

type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_cbcgg *CT_Sheets) ValidateWithPath(path string) error {
	for _fead, _adgfca := range _cbcgg.Sheet {
		if _edfdcb := _adgfca.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _fead)); _edfdcb != nil {
			return _edfdcb
		}
	}
	return nil
}

// Validate validates the Dialogsheet and its children
func (_dcaad *Dialogsheet) Validate() error {
	return _dcaad.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}
func (_bgdbe *CT_Break) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgdb := range start.Attr {
		if _fgdb.Name.Local == "\u0069\u0064" {
			_bbd, _dggc := _dd.ParseUint(_fgdb.Value, 10, 32)
			if _dggc != nil {
				return _dggc
			}
			_acb := uint32(_bbd)
			_bgdbe.IdAttr = &_acb
			continue
		}
		if _fgdb.Name.Local == "\u006d\u0069\u006e" {
			_ceeg, _bcb := _dd.ParseUint(_fgdb.Value, 10, 32)
			if _bcb != nil {
				return _bcb
			}
			_gdd := uint32(_ceeg)
			_bgdbe.MinAttr = &_gdd
			continue
		}
		if _fgdb.Name.Local == "\u006d\u0061\u0078" {
			_eccc, _cdfb := _dd.ParseUint(_fgdb.Value, 10, 32)
			if _cdfb != nil {
				return _cdfb
			}
			_cfa := uint32(_eccc)
			_bgdbe.MaxAttr = &_cfa
			continue
		}
		if _fgdb.Name.Local == "\u006d\u0061\u006e" {
			_fbdd, _fdf := _dd.ParseBool(_fgdb.Value)
			if _fdf != nil {
				return _fdf
			}
			_bgdbe.ManAttr = &_fbdd
			continue
		}
		if _fgdb.Name.Local == "\u0070\u0074" {
			_fgc, _bgba := _dd.ParseBool(_fgdb.Value)
			if _bgba != nil {
				return _bgba
			}
			_bgdbe.PtAttr = &_fgc
			continue
		}
	}
	for {
		_fdfg, _bcdg := d.Token()
		if _bcdg != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _bcdg)
		}
		if _gfde, _cgab := _fdfg.(_a.EndElement); _cgab && _gfde.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abeeaf ST_CredMethod) Validate() error { return _abeeaf.ValidateWithPath("") }
func NewCT_PivotSelection() *CT_PivotSelection {
	_dgaad := &CT_PivotSelection{}
	_dgaad.PivotArea = NewCT_PivotArea()
	return _dgaad
}
func NewCT_I() *CT_I { _adafd := &CT_I{}; return _adafd }

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

// Validate validates the CT_Dimensions and its children
func (_gbbgc *CT_Dimensions) Validate() error {
	return _gbbgc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}

type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

// Validate validates the CT_SheetData and its children
func (_cecga *CT_SheetData) Validate() error {
	return _cecga.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}

type ST_PatternType byte
type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}
type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_ddcg *CT_RPrElt) ValidateWithPath(path string) error {
	for _dbge, _ccgda := range _ddcg.RPrEltChoice {
		if _fbfd := _ccgda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0052Pr\u0045\u006c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _dbge)); _fbfd != nil {
			return _fbfd
		}
	}
	return nil
}
func (_cegadg *ST_PaneState) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cegadg = 0
	case "\u0073\u0070\u006ci\u0074":
		*_cegadg = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_cegadg = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_cegadg = 3
	}
	return nil
}
func NewCT_CellStyle() *CT_CellStyle { _eeef := &CT_CellStyle{}; return _eeef }
func (_aae *CT_BookViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0077\u006fr\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _fbab := range _aae.WorkbookView {
		e.EncodeElement(_fbab, _gfd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleSize and its children
func (_decba *CT_OleSize) Validate() error {
	return _decba.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_gecda *CT_RowHierarchiesUsage) Validate() error {
	return _gecda.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}

// Validate validates the CT_HierarchyUsage and its children
func (_bgaee *CT_HierarchyUsage) Validate() error {
	return _bgaee.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}

// Validate validates the CT_Sets and its children
func (_gceca *CT_Sets) Validate() error {
	return _gceca.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}
func (_aabba ST_CellType) ValidateWithPath(path string) error {
	switch _aabba {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aabba))
	}
	return nil
}
func NewCT_FontScheme() *CT_FontScheme {
	_addfg := &CT_FontScheme{}
	_addfg.ValAttr = ST_FontScheme(1)
	return _addfg
}
func (_bab *CT_Break) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bab.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bab.IdAttr)})
	}
	if _bab.MinAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_bab.MinAttr)})
	}
	if _bab.MaxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078"}, Value: _fd.Sprintf("\u0025\u0076", *_bab.MaxAttr)})
	}
	if _bab.ManAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bab.ManAttr))})
	}
	if _bab.PtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bab.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Tuples and its children
func (_fcfge *CT_Tuples) Validate() error {
	return _fcfge.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}
func NewCT_DataFields() *CT_DataFields { _ccacf := &CT_DataFields{}; return _ccacf }

type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

func (_adfbg *CT_SheetDimension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _adfbg.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_SheetView() *CT_SheetView { _cecca := &CT_SheetView{}; return _cecca }

// ValidateWithPath validates the CT_SharedItemsChoice and its children, prefixing error messages with path
func (_caaec *CT_SharedItemsChoice) ValidateWithPath(path string) error {
	if _caaec.M != nil {
		if _ccbede := _caaec.M.ValidateWithPath(path + "\u002f\u004d"); _ccbede != nil {
			return _ccbede
		}
	}
	if _caaec.N != nil {
		if _abbbc := _caaec.N.ValidateWithPath(path + "\u002f\u004e"); _abbbc != nil {
			return _abbbc
		}
	}
	if _caaec.B != nil {
		if _gedcd := _caaec.B.ValidateWithPath(path + "\u002f\u0042"); _gedcd != nil {
			return _gedcd
		}
	}
	if _caaec.E != nil {
		if _adcgda := _caaec.E.ValidateWithPath(path + "\u002f\u0045"); _adcgda != nil {
			return _adcgda
		}
	}
	if _caaec.S != nil {
		if _babed := _caaec.S.ValidateWithPath(path + "\u002f\u0053"); _babed != nil {
			return _babed
		}
	}
	if _caaec.D != nil {
		if _bgcbc := _caaec.D.ValidateWithPath(path + "\u002f\u0044"); _bgcbc != nil {
			return _bgcbc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_dadfb *CT_MergeCells) ValidateWithPath(path string) error {
	for _edcff, _badc := range _dadfb.MergeCell {
		if _ceecgc := _badc.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _edcff)); _ceecgc != nil {
			return _ceecgc
		}
	}
	return nil
}
func (_ceadc ST_MdxSetOrder) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bceddd := _a.Attr{}
	_bceddd.Name = name
	switch _ceadc {
	case ST_MdxSetOrderUnset:
		_bceddd.Value = ""
	case ST_MdxSetOrderU:
		_bceddd.Value = "\u0075"
	case ST_MdxSetOrderA:
		_bceddd.Value = "\u0061"
	case ST_MdxSetOrderD:
		_bceddd.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_bceddd.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_bceddd.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_bceddd.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_bceddd.Value = "\u006e\u0064"
	}
	return _bceddd, nil
}

type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_acdbb *CT_MetadataRecord) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _acdbb.TAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _acdbb.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_efe *CT_CellWatches) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_caee:
	for {
		_cagca, _addce := d.Token()
		if _addce != nil {
			return _addce
		}
		switch _affb := _cagca.(type) {
		case _a.StartElement:
			switch _affb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_bbbb := NewCT_CellWatch()
				if _eafc := d.DecodeElement(_bbbb, &_affb); _eafc != nil {
					return _eafc
				}
				_efe.CellWatch = append(_efe.CellWatch, _bbbb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _affb.Name)
				if _febfd := d.Skip(); _febfd != nil {
					return _febfd
				}
			}
		case _a.EndElement:
			break _caee
		case _a.CharData:
		}
	}
	return nil
}

type CT_SheetBackgroundPicture struct{ IdAttr string }

func (_fccfc ST_DataValidationOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fccfc.String(), start)
}
func NewCT_ExternalSheetData() *CT_ExternalSheetData {
	_defde := &CT_ExternalSheetData{}
	return _defde
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_aegf *CT_Control) ValidateWithPath(path string) error {
	if _aegf.ControlPr != nil {
		if _dcgaf := _aegf.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _dcgaf != nil {
			return _dcgaf
		}
	}
	return nil
}

// Validate validates the CT_ExternalRow and its children
func (_gdgfb *CT_ExternalRow) Validate() error {
	return _gdgfb.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}

// Validate validates the CT_FontChoice and its children
func (_ffadb *CT_FontChoice) Validate() error {
	return _ffadb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_aeaga *ST_FontScheme) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaaga, _ecacdc := d.Token()
	if _ecacdc != nil {
		return _ecacdc
	}
	if _gaabdef, _caadf := _gaaga.(_a.EndElement); _caadf && _gaabdef.Name == start.Name {
		*_aeaga = 1
		return nil
	}
	if _gcaec, _bgdcb := _gaaga.(_a.CharData); !_bgdcb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaaga)
	} else {
		switch string(_gcaec) {
		case "":
			*_aeaga = 0
		case "\u006e\u006f\u006e\u0065":
			*_aeaga = 1
		case "\u006d\u0061\u006ao\u0072":
			*_aeaga = 2
		case "\u006d\u0069\u006eo\u0072":
			*_aeaga = 3
		}
	}
	_gaaga, _ecacdc = d.Token()
	if _ecacdc != nil {
		return _ecacdc
	}
	if _baccbf, _effgg := _gaaga.(_a.EndElement); _effgg && _baccbf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaaga)
}

type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}

func NewCT_NumFmts() *CT_NumFmts { _ggfeeg := &CT_NumFmts{}; return _ggfeeg }
func (_fbgeg *ST_CredMethod) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eggbfg, _dacfd := d.Token()
	if _dacfd != nil {
		return _dacfd
	}
	if _dffgcf, _fgbfe := _eggbfg.(_a.EndElement); _fgbfe && _dffgcf.Name == start.Name {
		*_fbgeg = 1
		return nil
	}
	if _begce, _acfcd := _eggbfg.(_a.CharData); !_acfcd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggbfg)
	} else {
		switch string(_begce) {
		case "":
			*_fbgeg = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_fbgeg = 1
		case "\u006e\u006f\u006e\u0065":
			*_fbgeg = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_fbgeg = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_fbgeg = 4
		}
	}
	_eggbfg, _dacfd = d.Token()
	if _dacfd != nil {
		return _dacfd
	}
	if _gacdb, _bcddd := _eggbfg.(_a.EndElement); _bcddd && _gacdb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggbfg)
}
func NewCT_CellWatch() *CT_CellWatch { _aacc := &CT_CellWatch{}; return _aacc }

// Validate validates the CT_SortCondition and its children
func (_bgeede *CT_SortCondition) Validate() error {
	return _bgeede.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}
func (_bgbbb *CT_PivotTableStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgbbb.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bgbbb.NameAttr)})
	}
	if _bgbbb.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgbbb.ShowRowHeadersAttr))})
	}
	if _bgbbb.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgbbb.ShowColHeadersAttr))})
	}
	if _bgbbb.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgbbb.ShowRowStripesAttr))})
	}
	if _bgbbb.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgbbb.ShowColStripesAttr))})
	}
	if _bgbbb.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bgbbb.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Tables() *CT_Tables { _gfagdac := &CT_Tables{}; return _gfagdac }
func NewCT_Xf() *CT_Xf         { _ccgca := &CT_Xf{}; return _ccgca }

// Validate validates the CT_TableColumn and its children
func (_gcbgcb *CT_TableColumn) Validate() error {
	return _gcbgcb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_CacheSourceChoice and its children
func (_fcbe *CT_CacheSourceChoice) Validate() error {
	return _fcbe.ValidateWithPath("C\u0054_\u0043\u0061\u0063\u0068\u0065\u0053\u006f\u0075r\u0063\u0065\u0043\u0068oi\u0063\u0065")
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_eebdgd *StyleSheet) ValidateWithPath(path string) error {
	if _eefgb := _eebdgd.CT_Stylesheet.ValidateWithPath(path); _eefgb != nil {
		return _eefgb
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_cbgbb *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}
type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_accdc *ST_BorderStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_deafde, _bacae := d.Token()
	if _bacae != nil {
		return _bacae
	}
	if _cgedda, _ebfbd := _deafde.(_a.EndElement); _ebfbd && _cgedda.Name == start.Name {
		*_accdc = 1
		return nil
	}
	if _acadc, _fcbbe := _deafde.(_a.CharData); !_fcbbe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deafde)
	} else {
		switch string(_acadc) {
		case "":
			*_accdc = 0
		case "\u006e\u006f\u006e\u0065":
			*_accdc = 1
		case "\u0074\u0068\u0069\u006e":
			*_accdc = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_accdc = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_accdc = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_accdc = 5
		case "\u0074\u0068\u0069c\u006b":
			*_accdc = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_accdc = 7
		case "\u0068\u0061\u0069\u0072":
			*_accdc = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_accdc = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_accdc = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_accdc = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_accdc = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_accdc = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_accdc = 14
		}
	}
	_deafde, _bacae = d.Token()
	if _bacae != nil {
		return _bacae
	}
	if _aegedg, _dbbdfd := _deafde.(_a.EndElement); _dbbdfd && _aegedg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deafde)
}
func NewCT_PivotCache() *CT_PivotCache { _egggg := &CT_PivotCache{}; return _egggg }

// Validate validates the CT_PivotCacheDefinition and its children
func (_bfgdb *CT_PivotCacheDefinition) Validate() error {
	return _bfgdb.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_ddbcc *SingleXmlCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ddbcc.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_cfcaec:
	for {
		_gbffc, _fcbbd := d.Token()
		if _fcbbd != nil {
			return _fcbbd
		}
		switch _gfaaf := _gbffc.(type) {
		case _a.StartElement:
			switch _gfaaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_addcff := NewCT_SingleXmlCell()
				if _bagacg := d.DecodeElement(_addcff, &_gfaaf); _bagacg != nil {
					return _bagacg
				}
				_ddbcc.SingleXmlCell = append(_ddbcc.SingleXmlCell, _addcff)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _gfaaf.Name)
				if _fbdab := d.Skip(); _fbdab != nil {
					return _fbdab
				}
			}
		case _a.EndElement:
			break _cfcaec
		case _a.CharData:
		}
	}
	return nil
}
func (_dafae *CT_TablePart) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efcbd := range start.Attr {
		if _efcbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efcbd.Name.Local == "\u0069\u0064" || _efcbd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efcbd.Name.Local == "\u0069\u0064" {
			_adffb := _efcbd.Value
			_dafae.IdAttr = _adffb
			continue
		}
	}
	for {
		_eacdbf, _aebgb := d.Token()
		if _aebgb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _aebgb)
		}
		if _bfdbc, _dgggc := _eacdbf.(_a.EndElement); _dgggc && _bfdbc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_eacec ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _eacec {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eacec))
	}
	return nil
}

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

func (_ebgec *CT_Hyperlink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _ebgec.RefAttr)})
	if _ebgec.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ebgec.IdAttr)})
	}
	if _ebgec.LocationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_ebgec.LocationAttr)})
	}
	if _ebgec.TooltipAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_ebgec.TooltipAttr)})
	}
	if _ebgec.DisplayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_ebgec.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_ddgb *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _cdfd, _geae := range _ddgb.Xf {
		if _fgaca := _geae.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _cdfd)); _fgaca != nil {
			return _fgaca
		}
	}
	return nil
}
func (_dfdbb *PivotTableDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfdbb.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _becfb := range start.Attr {
		if _becfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cgade := _becfb.Value
			_dfdbb.NameAttr = _cgade
			continue
		}
		if _becfb.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_fbgg, _cfdafb := _dd.ParseUint(_becfb.Value, 10, 32)
			if _cfdafb != nil {
				return _cfdafb
			}
			_dfdbb.CacheIdAttr = uint32(_fbgg)
			continue
		}
		if _becfb.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_fbgcdd, _gcdagfb := _dd.ParseBool(_becfb.Value)
			if _gcdagfb != nil {
				return _gcdagfb
			}
			_dfdbb.DataOnRowsAttr = &_fbgcdd
			continue
		}
		if _becfb.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ccadc, _egggd := _dd.ParseUint(_becfb.Value, 10, 32)
			if _egggd != nil {
				return _egggd
			}
			_dcfedf := uint32(_ccadc)
			_dfdbb.DataPositionAttr = &_dcfedf
			continue
		}
		if _becfb.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_egeac := _becfb.Value
			_dfdbb.DataCaptionAttr = _egeac
			continue
		}
		if _becfb.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_fbbgf := _becfb.Value
			_dfdbb.GrandTotalCaptionAttr = &_fbbgf
			continue
		}
		if _becfb.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_adccf := _becfb.Value
			_dfdbb.ErrorCaptionAttr = &_adccf
			continue
		}
		if _becfb.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_dfbad, _bbabff := _dd.ParseBool(_becfb.Value)
			if _bbabff != nil {
				return _bbabff
			}
			_dfdbb.ShowErrorAttr = &_dfbad
			continue
		}
		if _becfb.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_agdfb := _becfb.Value
			_dfdbb.MissingCaptionAttr = &_agdfb
			continue
		}
		if _becfb.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_fbfcd, _cgcfdg := _dd.ParseBool(_becfb.Value)
			if _cgcfdg != nil {
				return _cgcfdg
			}
			_dfdbb.ShowMissingAttr = &_fbfcd
			continue
		}
		if _becfb.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_fdeeb := _becfb.Value
			_dfdbb.PageStyleAttr = &_fdeeb
			continue
		}
		if _becfb.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_eecefe := _becfb.Value
			_dfdbb.PivotTableStyleAttr = &_eecefe
			continue
		}
		if _becfb.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_cgaaa := _becfb.Value
			_dfdbb.VacatedStyleAttr = &_cgaaa
			continue
		}
		if _becfb.Name.Local == "\u0074\u0061\u0067" {
			_geabeb := _becfb.Value
			_dfdbb.TagAttr = &_geabeb
			continue
		}
		if _becfb.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_bfcee, _dfaeg := _dd.ParseUint(_becfb.Value, 10, 8)
			if _dfaeg != nil {
				return _dfaeg
			}
			_cffed := uint8(_bfcee)
			_dfdbb.UpdatedVersionAttr = &_cffed
			continue
		}
		if _becfb.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_fgebf, _gbdfc := _dd.ParseUint(_becfb.Value, 10, 8)
			if _gbdfc != nil {
				return _gbdfc
			}
			_eafcf := uint8(_fgebf)
			_dfdbb.MinRefreshableVersionAttr = &_eafcf
			continue
		}
		if _becfb.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_bgdff, _cdgcbf := _dd.ParseBool(_becfb.Value)
			if _cdgcbf != nil {
				return _cdgcbf
			}
			_dfdbb.AsteriskTotalsAttr = &_bgdff
			continue
		}
		if _becfb.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_fbege, _gbgcg := _dd.ParseBool(_becfb.Value)
			if _gbgcg != nil {
				return _gbgcg
			}
			_dfdbb.ShowItemsAttr = &_fbege
			continue
		}
		if _becfb.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_gedcab, _bfaga := _dd.ParseBool(_becfb.Value)
			if _bfaga != nil {
				return _bfaga
			}
			_dfdbb.EditDataAttr = &_gedcab
			continue
		}
		if _becfb.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_ggegd, _fafgbe := _dd.ParseBool(_becfb.Value)
			if _fafgbe != nil {
				return _fafgbe
			}
			_dfdbb.DisableFieldListAttr = &_ggegd
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_bcdaef, _cfabae := _dd.ParseBool(_becfb.Value)
			if _cfabae != nil {
				return _cfabae
			}
			_dfdbb.ShowCalcMbrsAttr = &_bcdaef
			continue
		}
		if _becfb.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_gabee, _ccbae := _dd.ParseBool(_becfb.Value)
			if _ccbae != nil {
				return _ccbae
			}
			_dfdbb.VisualTotalsAttr = &_gabee
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_cfedgf, _efeca := _dd.ParseBool(_becfb.Value)
			if _efeca != nil {
				return _efeca
			}
			_dfdbb.ShowMultipleLabelAttr = &_cfedgf
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_gefgd, _cdgbdc := _dd.ParseBool(_becfb.Value)
			if _cdgbdc != nil {
				return _cdgbdc
			}
			_dfdbb.ShowDataDropDownAttr = &_gefgd
			continue
		}
		if _becfb.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_dbdab, _bgegf := _dd.ParseBool(_becfb.Value)
			if _bgegf != nil {
				return _bgegf
			}
			_dfdbb.ShowDrillAttr = &_dbdab
			continue
		}
		if _becfb.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_dafdae, _bfdd := _dd.ParseBool(_becfb.Value)
			if _bfdd != nil {
				return _bfdd
			}
			_dfdbb.PrintDrillAttr = &_dafdae
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_adgec, _egfae := _dd.ParseBool(_becfb.Value)
			if _egfae != nil {
				return _egfae
			}
			_dfdbb.ShowMemberPropertyTipsAttr = &_adgec
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_eagff, _egcfeb := _dd.ParseBool(_becfb.Value)
			if _egcfeb != nil {
				return _egcfeb
			}
			_dfdbb.ShowDataTipsAttr = &_eagff
			continue
		}
		if _becfb.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_egdda, _cbaae := _dd.ParseBool(_becfb.Value)
			if _cbaae != nil {
				return _cbaae
			}
			_dfdbb.EnableWizardAttr = &_egdda
			continue
		}
		if _becfb.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_cgacc, _egaac := _dd.ParseBool(_becfb.Value)
			if _egaac != nil {
				return _egaac
			}
			_dfdbb.EnableDrillAttr = &_cgacc
			continue
		}
		if _becfb.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_gdefcg, _abdda := _dd.ParseBool(_becfb.Value)
			if _abdda != nil {
				return _abdda
			}
			_dfdbb.EnableFieldPropertiesAttr = &_gdefcg
			continue
		}
		if _becfb.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_bccde, _eagggd := _dd.ParseBool(_becfb.Value)
			if _eagggd != nil {
				return _eagggd
			}
			_dfdbb.PreserveFormattingAttr = &_bccde
			continue
		}
		if _becfb.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_eccdb, _egfge := _dd.ParseBool(_becfb.Value)
			if _egfge != nil {
				return _egfge
			}
			_dfdbb.UseAutoFormattingAttr = &_eccdb
			continue
		}
		if _becfb.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_gbfag, _ebfga := _dd.ParseUint(_becfb.Value, 10, 32)
			if _ebfga != nil {
				return _ebfga
			}
			_gecdf := uint32(_gbfag)
			_dfdbb.PageWrapAttr = &_gecdf
			continue
		}
		if _becfb.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_gaaecb, _fbfad := _dd.ParseBool(_becfb.Value)
			if _fbfad != nil {
				return _fbfad
			}
			_dfdbb.PageOverThenDownAttr = &_gaaecb
			continue
		}
		if _becfb.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_afded, _deeaeg := _dd.ParseBool(_becfb.Value)
			if _deeaeg != nil {
				return _deeaeg
			}
			_dfdbb.SubtotalHiddenItemsAttr = &_afded
			continue
		}
		if _becfb.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_bcbfc, _abgdce := _dd.ParseBool(_becfb.Value)
			if _abgdce != nil {
				return _abgdce
			}
			_dfdbb.RowGrandTotalsAttr = &_bcbfc
			continue
		}
		if _becfb.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_aceddg, _egcac := _dd.ParseBool(_becfb.Value)
			if _egcac != nil {
				return _egcac
			}
			_dfdbb.ColGrandTotalsAttr = &_aceddg
			continue
		}
		if _becfb.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_fdead, _ebacg := _dd.ParseBool(_becfb.Value)
			if _ebacg != nil {
				return _ebacg
			}
			_dfdbb.FieldPrintTitlesAttr = &_fdead
			continue
		}
		if _becfb.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_bbbgc, _bgcfa := _dd.ParseBool(_becfb.Value)
			if _bgcfa != nil {
				return _bgcfa
			}
			_dfdbb.ItemPrintTitlesAttr = &_bbbgc
			continue
		}
		if _becfb.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_egfcg, _aggcgf := _dd.ParseBool(_becfb.Value)
			if _aggcgf != nil {
				return _aggcgf
			}
			_dfdbb.MergeItemAttr = &_egfcg
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_cfdbae, _bdeee := _dd.ParseBool(_becfb.Value)
			if _bdeee != nil {
				return _bdeee
			}
			_dfdbb.ShowDropZonesAttr = &_cfdbae
			continue
		}
		if _becfb.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gbbdb, _cbgag := _dd.ParseUint(_becfb.Value, 10, 8)
			if _cbgag != nil {
				return _cbgag
			}
			_adfadf := uint8(_gbbdb)
			_dfdbb.CreatedVersionAttr = &_adfadf
			continue
		}
		if _becfb.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_gebdaba, _fggcg := _dd.ParseUint(_becfb.Value, 10, 32)
			if _fggcg != nil {
				return _fggcg
			}
			_dbeaag := uint32(_gebdaba)
			_dfdbb.IndentAttr = &_dbeaag
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_efffe, _bbfdc := _dd.ParseBool(_becfb.Value)
			if _bbfdc != nil {
				return _bbfdc
			}
			_dfdbb.ShowEmptyRowAttr = &_efffe
			continue
		}
		if _becfb.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_fffdf, _fdfed := _dd.ParseBool(_becfb.Value)
			if _fdfed != nil {
				return _fdfed
			}
			_dfdbb.ShowEmptyColAttr = &_fffdf
			continue
		}
		if _becfb.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_dfgabc, _fcdag := _dd.ParseBool(_becfb.Value)
			if _fcdag != nil {
				return _fcdag
			}
			_dfdbb.ShowHeadersAttr = &_dfgabc
			continue
		}
		if _becfb.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_eegbf, _ddccd := _dd.ParseBool(_becfb.Value)
			if _ddccd != nil {
				return _ddccd
			}
			_dfdbb.CompactAttr = &_eegbf
			continue
		}
		if _becfb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_eaega, _gegggg := _dd.ParseBool(_becfb.Value)
			if _gegggg != nil {
				return _gegggg
			}
			_dfdbb.OutlineAttr = &_eaega
			continue
		}
		if _becfb.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_bedef, _fbdce := _dd.ParseBool(_becfb.Value)
			if _fbdce != nil {
				return _fbdce
			}
			_dfdbb.OutlineDataAttr = &_bedef
			continue
		}
		if _becfb.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_cfeeca, _fbggf := _dd.ParseBool(_becfb.Value)
			if _fbggf != nil {
				return _fbggf
			}
			_dfdbb.CompactDataAttr = &_cfeeca
			continue
		}
		if _becfb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dfbgfg, _bcffae := _dd.ParseBool(_becfb.Value)
			if _bcffae != nil {
				return _bcffae
			}
			_dfdbb.PublishedAttr = &_dfbgfg
			continue
		}
		if _becfb.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_fdfcf, _egfaea := _dd.ParseBool(_becfb.Value)
			if _egfaea != nil {
				return _egfaea
			}
			_dfdbb.GridDropZonesAttr = &_fdfcf
			continue
		}
		if _becfb.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_facdg, _gfdbfb := _dd.ParseBool(_becfb.Value)
			if _gfdbfb != nil {
				return _gfdbfb
			}
			_dfdbb.ImmersiveAttr = &_facdg
			continue
		}
		if _becfb.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_aadff, _gacec := _dd.ParseBool(_becfb.Value)
			if _gacec != nil {
				return _gacec
			}
			_dfdbb.MultipleFieldFiltersAttr = &_aadff
			continue
		}
		if _becfb.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_acbacc, _cbgde := _dd.ParseUint(_becfb.Value, 10, 32)
			if _cbgde != nil {
				return _cbgde
			}
			_gcfaf := uint32(_acbacc)
			_dfdbb.ChartFormatAttr = &_gcfaf
			continue
		}
		if _becfb.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_aggfd := _becfb.Value
			_dfdbb.RowHeaderCaptionAttr = &_aggfd
			continue
		}
		if _becfb.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ccddg := _becfb.Value
			_dfdbb.ColHeaderCaptionAttr = &_ccddg
			continue
		}
		if _becfb.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_dadef, _ggege := _dd.ParseBool(_becfb.Value)
			if _ggege != nil {
				return _ggege
			}
			_dfdbb.FieldListSortAscendingAttr = &_dadef
			continue
		}
		if _becfb.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_bcfcd, _fedeg := _dd.ParseBool(_becfb.Value)
			if _fedeg != nil {
				return _fedeg
			}
			_dfdbb.MdxSubqueriesAttr = &_bcfcd
			continue
		}
		if _becfb.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_deabb, _cggdb := _dd.ParseBool(_becfb.Value)
			if _cggdb != nil {
				return _cggdb
			}
			_dfdbb.CustomListSortAttr = &_deabb
			continue
		}
		if _becfb.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fcbde, _fcgdgd := _dd.ParseUint(_becfb.Value, 10, 32)
			if _fcgdgd != nil {
				return _fcgdgd
			}
			_cadgd := uint32(_fcbde)
			_dfdbb.AutoFormatIdAttr = &_cadgd
			continue
		}
		if _becfb.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bdbfg, _gdedf := _dd.ParseBool(_becfb.Value)
			if _gdedf != nil {
				return _gdedf
			}
			_dfdbb.ApplyNumberFormatsAttr = &_bdbfg
			continue
		}
		if _becfb.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_eebfag, _efageb := _dd.ParseBool(_becfb.Value)
			if _efageb != nil {
				return _efageb
			}
			_dfdbb.ApplyBorderFormatsAttr = &_eebfag
			continue
		}
		if _becfb.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_eabfg, _abbgaa := _dd.ParseBool(_becfb.Value)
			if _abbgaa != nil {
				return _abbgaa
			}
			_dfdbb.ApplyFontFormatsAttr = &_eabfg
			continue
		}
		if _becfb.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fdecb, _ceeega := _dd.ParseBool(_becfb.Value)
			if _ceeega != nil {
				return _ceeega
			}
			_dfdbb.ApplyPatternFormatsAttr = &_fdecb
			continue
		}
		if _becfb.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bdbfd, _bgffag := _dd.ParseBool(_becfb.Value)
			if _bgffag != nil {
				return _bgffag
			}
			_dfdbb.ApplyAlignmentFormatsAttr = &_bdbfd
			continue
		}
		if _becfb.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dfcce, _fbfadd := _dd.ParseBool(_becfb.Value)
			if _fbfadd != nil {
				return _fbfadd
			}
			_dfdbb.ApplyWidthHeightFormatsAttr = &_dfcce
			continue
		}
	}
_abecc:
	for {
		_eggcaa, _eaadd := d.Token()
		if _eaadd != nil {
			return _eaadd
		}
		switch _eaced := _eggcaa.(type) {
		case _a.StartElement:
			switch _eaced.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _bbgef := d.DecodeElement(_dfdbb.Location, &_eaced); _bbgef != nil {
					return _bbgef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dfdbb.PivotFields = NewCT_PivotFields()
				if _bbgac := d.DecodeElement(_dfdbb.PivotFields, &_eaced); _bbgac != nil {
					return _bbgac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_dfdbb.RowFields = NewCT_RowFields()
				if _eagbg := d.DecodeElement(_dfdbb.RowFields, &_eaced); _eagbg != nil {
					return _eagbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_dfdbb.RowItems = NewCT_rowItems()
				if _dccce := d.DecodeElement(_dfdbb.RowItems, &_eaced); _dccce != nil {
					return _dccce
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_dfdbb.ColFields = NewCT_ColFields()
				if _degfed := d.DecodeElement(_dfdbb.ColFields, &_eaced); _degfed != nil {
					return _degfed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_dfdbb.ColItems = NewCT_colItems()
				if _defcg := d.DecodeElement(_dfdbb.ColItems, &_eaced); _defcg != nil {
					return _defcg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dfdbb.PageFields = NewCT_PageFields()
				if _gecde := d.DecodeElement(_dfdbb.PageFields, &_eaced); _gecde != nil {
					return _gecde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dfdbb.DataFields = NewCT_DataFields()
				if _gdgde := d.DecodeElement(_dfdbb.DataFields, &_eaced); _gdgde != nil {
					return _gdgde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_dfdbb.Formats = NewCT_Formats()
				if _faabf := d.DecodeElement(_dfdbb.Formats, &_eaced); _faabf != nil {
					return _faabf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_dfdbb.ConditionalFormats = NewCT_ConditionalFormats()
				if _dadgcab := d.DecodeElement(_dfdbb.ConditionalFormats, &_eaced); _dadgcab != nil {
					return _dadgcab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_dfdbb.ChartFormats = NewCT_ChartFormats()
				if _cffcd := d.DecodeElement(_dfdbb.ChartFormats, &_eaced); _cffcd != nil {
					return _cffcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_dfdbb.PivotHierarchies = NewCT_PivotHierarchies()
				if _bdggc := d.DecodeElement(_dfdbb.PivotHierarchies, &_eaced); _bdggc != nil {
					return _bdggc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_dfdbb.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _fdaff := d.DecodeElement(_dfdbb.PivotTableStyleInfo, &_eaced); _fdaff != nil {
					return _fdaff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_dfdbb.Filters = NewCT_PivotFilters()
				if _adafca := d.DecodeElement(_dfdbb.Filters, &_eaced); _adafca != nil {
					return _adafca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_dfdbb.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _adceg := d.DecodeElement(_dfdbb.RowHierarchiesUsage, &_eaced); _adceg != nil {
					return _adceg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_dfdbb.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _edgbb := d.DecodeElement(_dfdbb.ColHierarchiesUsage, &_eaced); _edgbb != nil {
					return _edgbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfdbb.ExtLst = NewCT_ExtensionList()
				if _bbdbc := d.DecodeElement(_dfdbb.ExtLst, &_eaced); _bbdbc != nil {
					return _bbdbc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _eaced.Name)
				if _cafacg := d.Skip(); _cafacg != nil {
					return _cafacg
				}
			}
		case _a.EndElement:
			break _abecc
		case _a.CharData:
		}
	}
	return nil
}
func (_gaac *CT_DrawingHF) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gaac.IdAttr)})
	if _gaac.LhoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LhoAttr)})
	}
	if _gaac.LheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LheAttr)})
	}
	if _gaac.LhfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0068\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LhfAttr)})
	}
	if _gaac.ChoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.ChoAttr)})
	}
	if _gaac.CheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.CheAttr)})
	}
	if _gaac.ChfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.ChfAttr)})
	}
	if _gaac.RhoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RhoAttr)})
	}
	if _gaac.RheAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RheAttr)})
	}
	if _gaac.RhfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0068\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RhfAttr)})
	}
	if _gaac.LfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LfoAttr)})
	}
	if _gaac.LfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LfeAttr)})
	}
	if _gaac.LffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0066\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.LffAttr)})
	}
	if _gaac.CfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.CfoAttr)})
	}
	if _gaac.CfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.CfeAttr)})
	}
	if _gaac.CffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.CffAttr)})
	}
	if _gaac.RfoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RfoAttr)})
	}
	if _gaac.RfeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RfeAttr)})
	}
	if _gaac.RffAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0066\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_gaac.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acbb *CT_DataBar) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_acbb.Color = NewCT_Color()
	for _, _abcga := range start.Attr {
		if _abcga.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_fdca, _gadgg := _dd.ParseUint(_abcga.Value, 10, 32)
			if _gadgg != nil {
				return _gadgg
			}
			_ggdad := uint32(_fdca)
			_acbb.MinLengthAttr = &_ggdad
			continue
		}
		if _abcga.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_gfgb, _fegc := _dd.ParseUint(_abcga.Value, 10, 32)
			if _fegc != nil {
				return _fegc
			}
			_ebbd := uint32(_gfgb)
			_acbb.MaxLengthAttr = &_ebbd
			continue
		}
		if _abcga.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_befdb, _dcgge := _dd.ParseBool(_abcga.Value)
			if _dcgge != nil {
				return _dcgge
			}
			_acbb.ShowValueAttr = &_befdb
			continue
		}
	}
_ecffg:
	for {
		_cefcg, _cfedf := d.Token()
		if _cfedf != nil {
			return _cfedf
		}
		switch _edeea := _cefcg.(type) {
		case _a.StartElement:
			switch _edeea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_geaece := NewCT_Cfvo()
				if _dcgfd := d.DecodeElement(_geaece, &_edeea); _dcgfd != nil {
					return _dcgfd
				}
				_acbb.Cfvo = append(_acbb.Cfvo, _geaece)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _edac := d.DecodeElement(_acbb.Color, &_edeea); _edac != nil {
					return _edac
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _edeea.Name)
				if _gbdbd := d.Skip(); _gbdbd != nil {
					return _gbdbd
				}
			}
		case _a.EndElement:
			break _ecffg
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_gaead *CT_IgnoredError) Validate() error {
	return _gaead.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}
func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_fddbb := &CT_MeasureDimensionMap{}
	return _fddbb
}
func (_fcded ST_rwColActionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fcded.String(), start)
}
func (_bagdd *ST_VerticalAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cbcebe, _gaagga := d.Token()
	if _gaagga != nil {
		return _gaagga
	}
	if _cdbeaa, _cfbagf := _cbcebe.(_a.EndElement); _cfbagf && _cdbeaa.Name == start.Name {
		*_bagdd = 1
		return nil
	}
	if _dddfc, _gfdebf := _cbcebe.(_a.CharData); !_gfdebf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbcebe)
	} else {
		switch string(_dddfc) {
		case "":
			*_bagdd = 0
		case "\u0074\u006f\u0070":
			*_bagdd = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_bagdd = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_bagdd = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_bagdd = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_bagdd = 5
		}
	}
	_cbcebe, _gaagga = d.Token()
	if _gaagga != nil {
		return _gaagga
	}
	if _efaffb, _cbggcd := _cbcebe.(_a.EndElement); _cbggcd && _efaffb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbcebe)
}
func (_baddc *CT_Missing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _baddc.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.UAttr))})
	}
	if _baddc.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.FAttr))})
	}
	if _baddc.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_baddc.CAttr)})
	}
	if _baddc.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_baddc.CpAttr)})
	}
	if _baddc.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_baddc.InAttr)})
	}
	if _baddc.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_baddc.BcAttr)})
	}
	if _baddc.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_baddc.FcAttr)})
	}
	if _baddc.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.IAttr))})
	}
	if _baddc.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.UnAttr))})
	}
	if _baddc.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.StAttr))})
	}
	if _baddc.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baddc.BAttr))})
	}
	e.EncodeToken(start)
	if _baddc.Tpls != nil {
		_bfaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		for _, _cfade := range _baddc.Tpls {
			e.EncodeElement(_cfade, _bfaee)
		}
	}
	if _baddc.X != nil {
		_bcgfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _gdbfca := range _baddc.X {
			e.EncodeElement(_gdbfca, _bcgfg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_PaneState byte
type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ecadfa *ST_IconSetType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_geaga, _gaebf := d.Token()
	if _gaebf != nil {
		return _gaebf
	}
	if _efbag, _fdbbc := _geaga.(_a.EndElement); _fdbbc && _efbag.Name == start.Name {
		*_ecadfa = 1
		return nil
	}
	if _eafegc, _adfafb := _geaga.(_a.CharData); !_adfafb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geaga)
	} else {
		switch string(_eafegc) {
		case "":
			*_ecadfa = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_ecadfa = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_ecadfa = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_ecadfa = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_ecadfa = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_ecadfa = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_ecadfa = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_ecadfa = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_ecadfa = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_ecadfa = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_ecadfa = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_ecadfa = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_ecadfa = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_ecadfa = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_ecadfa = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_ecadfa = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_ecadfa = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_ecadfa = 17
		}
	}
	_geaga, _gaebf = d.Token()
	if _gaebf != nil {
		return _gaebf
	}
	if _edgdb, _fbcebc := _geaga.(_a.EndElement); _fbcebc && _edgdb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geaga)
}
func (_ggccc ST_CellComments) Validate() error { return _ggccc.ValidateWithPath("") }
func (_befc *CT_DateGroupItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _befc.YearAttr)})
	if _befc.MonthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_befc.MonthAttr)})
	}
	if _befc.DayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_befc.DayAttr)})
	}
	if _befc.HourAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_befc.HourAttr)})
	}
	if _befc.MinuteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_befc.MinuteAttr)})
	}
	if _befc.SecondAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_befc.SecondAttr)})
	}
	_facbc, _ebgb := _befc.DateTimeGroupingAttr.MarshalXMLAttr(_a.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _ebgb != nil {
		return _ebgb
	}
	start.Attr = append(start.Attr, _facbc)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bacc *CT_Boolean) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _egcg := range start.Attr {
		if _egcg.Name.Local == "\u0076" {
			_acc, _bbc := _dd.ParseBool(_egcg.Value)
			if _bbc != nil {
				return _bbc
			}
			_bacc.VAttr = _acc
			continue
		}
		if _egcg.Name.Local == "\u0075" {
			_eccf, _ffcb := _dd.ParseBool(_egcg.Value)
			if _ffcb != nil {
				return _ffcb
			}
			_bacc.UAttr = &_eccf
			continue
		}
		if _egcg.Name.Local == "\u0066" {
			_bcf, _aag := _dd.ParseBool(_egcg.Value)
			if _aag != nil {
				return _aag
			}
			_bacc.FAttr = &_bcf
			continue
		}
		if _egcg.Name.Local == "\u0063" {
			_gbc := _egcg.Value
			_bacc.CAttr = &_gbc
			continue
		}
		if _egcg.Name.Local == "\u0063\u0070" {
			_dbb, _deg := _dd.ParseUint(_egcg.Value, 10, 32)
			if _deg != nil {
				return _deg
			}
			_bcc := uint32(_dbb)
			_bacc.CpAttr = &_bcc
			continue
		}
	}
_dcdd:
	for {
		_eef, _bcd := d.Token()
		if _bcd != nil {
			return _bcd
		}
		switch _dec := _eef.(type) {
		case _a.StartElement:
			switch _dec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bfag := NewCT_X()
				if _gdb := d.DecodeElement(_bfag, &_dec); _gdb != nil {
					return _gdb
				}
				_bacc.X = append(_bacc.X, _bfag)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _dec.Name)
				if _gcad := d.Skip(); _gcad != nil {
					return _gcad
				}
			}
		case _a.EndElement:
			break _dcdd
		case _a.CharData:
		}
	}
	return nil
}
func (_egdfa *CT_XmlColumnPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccdac := range start.Attr {
		if _ccdac.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_bdgea, _ecgcg := _dd.ParseUint(_ccdac.Value, 10, 32)
			if _ecgcg != nil {
				return _ecgcg
			}
			_egdfa.MapIdAttr = uint32(_bdgea)
			continue
		}
		if _ccdac.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_gcggc := _ccdac.Value
			_egdfa.XpathAttr = _gcggc
			continue
		}
		if _ccdac.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_efbgbd, _fcccb := _dd.ParseBool(_ccdac.Value)
			if _fcccb != nil {
				return _fcccb
			}
			_egdfa.DenormalizedAttr = &_efbgbd
			continue
		}
		if _ccdac.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_fbfdgg := _ccdac.Value
			_egdfa.XmlDataTypeAttr = _fbfdgg
			continue
		}
	}
_ecbde:
	for {
		_caace, _cebfe := d.Token()
		if _cebfe != nil {
			return _cebfe
		}
		switch _ececa := _caace.(type) {
		case _a.StartElement:
			switch _ececa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egdfa.ExtLst = NewCT_ExtensionList()
				if _ggega := d.DecodeElement(_egdfa.ExtLst, &_ececa); _ggega != nil {
					return _ggega
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _ececa.Name)
				if _edgdcf := d.Skip(); _edgdcf != nil {
					return _edgdcf
				}
			}
		case _a.EndElement:
			break _ecbde
		case _a.CharData:
		}
	}
	return nil
}
func (_cdbad ST_PaneState) String() string {
	switch _cdbad {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_fbgcb *CT_Dxfs) ValidateWithPath(path string) error {
	for _adaac, _dgfbcb := range _fbgcb.Dxf {
		if _fced := _dgfbcb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _adaac)); _fced != nil {
			return _fced
		}
	}
	return nil
}
func NewCT_Drawing() *CT_Drawing { _cfgag := &CT_Drawing{}; return _cfgag }

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_abcdg *CT_VolTopic) ValidateWithPath(path string) error {
	if _bdcgf := _abcdg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bdcgf != nil {
		return _bdcgf
	}
	for _gagefb, _cccece := range _abcdg.Tr {
		if _ggebe := _cccece.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _gagefb)); _ggebe != nil {
			return _ggebe
		}
	}
	return nil
}
func (_gbae *CT_GroupMembers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bdfda := range start.Attr {
		if _bdfda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdgce, _bbfcb := _dd.ParseUint(_bdfda.Value, 10, 32)
			if _bbfcb != nil {
				return _bbfcb
			}
			_bddeec := uint32(_gdgce)
			_gbae.CountAttr = &_bddeec
			continue
		}
	}
_gecgc:
	for {
		_cbfd, _dagac := d.Token()
		if _dagac != nil {
			return _dagac
		}
		switch _gecfc := _cbfd.(type) {
		case _a.StartElement:
			switch _gecfc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_ceceg := NewCT_GroupMember()
				if _beedd := d.DecodeElement(_ceceg, &_gecfc); _beedd != nil {
					return _beedd
				}
				_gbae.GroupMember = append(_gbae.GroupMember, _ceceg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _gecfc.Name)
				if _debec := d.Skip(); _debec != nil {
					return _debec
				}
			}
		case _a.EndElement:
			break _gecgc
		case _a.CharData:
		}
	}
	return nil
}
func (_deaeff ST_FormatAction) String() string {
	switch _deaeff {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}

type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_g.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_ExternalSheetData and its children
func (_ddab *CT_ExternalSheetData) Validate() error {
	return _ddab.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}
func (_bbgff *CT_Set) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgdbd := range start.Attr {
		if _fgdbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccdeg, _gegfg := _dd.ParseUint(_fgdbd.Value, 10, 32)
			if _gegfg != nil {
				return _gegfg
			}
			_fbecf := uint32(_ccdeg)
			_bbgff.CountAttr = &_fbecf
			continue
		}
		if _fgdbd.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_ddgedd, _ebcfa := _dd.ParseInt(_fgdbd.Value, 10, 32)
			if _ebcfa != nil {
				return _ebcfa
			}
			_bbgff.MaxRankAttr = int32(_ddgedd)
			continue
		}
		if _fgdbd.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_gbbec := _fgdbd.Value
			_bbgff.SetDefinitionAttr = _gbbec
			continue
		}
		if _fgdbd.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_bbgff.SortTypeAttr.UnmarshalXMLAttr(_fgdbd)
			continue
		}
		if _fgdbd.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_bgaecb, _aadefa := _dd.ParseBool(_fgdbd.Value)
			if _aadefa != nil {
				return _aadefa
			}
			_bbgff.QueryFailedAttr = &_bgaecb
			continue
		}
	}
_afbec:
	for {
		_abcfc, _caege := d.Token()
		if _caege != nil {
			return _caege
		}
		switch _gggdf := _abcfc.(type) {
		case _a.StartElement:
			switch _gggdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fbcag := NewCT_Tuples()
				if _bebgg := d.DecodeElement(_fbcag, &_gggdf); _bebgg != nil {
					return _bebgg
				}
				_bbgff.Tpls = append(_bbgff.Tpls, _fbcag)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_bbgff.SortByTuple = NewCT_Tuples()
				if _gfgfc := d.DecodeElement(_bbgff.SortByTuple, &_gggdf); _gfgfc != nil {
					return _gfgfc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _gggdf.Name)
				if _bbaag := d.Skip(); _bbaag != nil {
					return _bbaag
				}
			}
		case _a.EndElement:
			break _afbec
		case _a.CharData:
		}
	}
	return nil
}

type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_deffa ST_TextHAlign) ValidateWithPath(path string) error {
	switch _deffa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deffa))
	}
	return nil
}
func (_dbdbd ST_MdxKPIProperty) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gbfdbd := _a.Attr{}
	_gbfdbd.Name = name
	switch _dbdbd {
	case ST_MdxKPIPropertyUnset:
		_gbfdbd.Value = ""
	case ST_MdxKPIPropertyV:
		_gbfdbd.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_gbfdbd.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_gbfdbd.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_gbfdbd.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_gbfdbd.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_gbfdbd.Value = "\u006d"
	}
	return _gbfdbd, nil
}
func NewCT_Parameters() *CT_Parameters            { _ddedb := &CT_Parameters{}; return _ddedb }
func (_ggfge ST_CellFormulaType) Validate() error { return _ggfge.ValidateWithPath("") }
func (_dcbdee ST_FontScheme) ValidateWithPath(path string) error {
	switch _dcbdee {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcbdee))
	}
	return nil
}

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

func (_acd *CT_CacheSourceChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _acd.WorksheetSource != nil {
		_cgda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003awo\u0072\u006b\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_acd.WorksheetSource, _cgda)
	} else if _acd.Consolidation != nil {
		_bgaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_acd.Consolidation, _bgaa)
	} else if _acd.ExtLst != nil {
		_cabb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acd.ExtLst, _cabb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

// Validate validates the CT_FontScheme and its children
func (_agef *CT_FontScheme) Validate() error {
	return _agef.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}
func (_edcba *ST_HorizontalAlignment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgcdg, _fcbgd := d.Token()
	if _fcbgd != nil {
		return _fcbgd
	}
	if _edbeg, _dfbdba := _dgcdg.(_a.EndElement); _dfbdba && _edbeg.Name == start.Name {
		*_edcba = 1
		return nil
	}
	if _egegd, _ecccff := _dgcdg.(_a.CharData); !_ecccff {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgcdg)
	} else {
		switch string(_egegd) {
		case "":
			*_edcba = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_edcba = 1
		case "\u006c\u0065\u0066\u0074":
			*_edcba = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_edcba = 3
		case "\u0072\u0069\u0067h\u0074":
			*_edcba = 4
		case "\u0066\u0069\u006c\u006c":
			*_edcba = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_edcba = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_edcba = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_edcba = 8
		}
	}
	_dgcdg, _fcbgd = d.Token()
	if _fcbgd != nil {
		return _fcbgd
	}
	if _cecbff, _bcbca := _dgcdg.(_a.EndElement); _bcbca && _cecbff.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgcdg)
}

type ST_Qualifier byte
type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

func (_fddaag *ST_SheetViewType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgaag, _aafff := d.Token()
	if _aafff != nil {
		return _aafff
	}
	if _abbaae, _eaagcc := _dgaag.(_a.EndElement); _eaagcc && _abbaae.Name == start.Name {
		*_fddaag = 1
		return nil
	}
	if _bcgggc, _gebdf := _dgaag.(_a.CharData); !_gebdf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgaag)
	} else {
		switch string(_bcgggc) {
		case "":
			*_fddaag = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_fddaag = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_fddaag = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_fddaag = 3
		}
	}
	_dgaag, _aafff = d.Token()
	if _aafff != nil {
		return _aafff
	}
	if _cafgb, _adfea := _dgaag.(_a.EndElement); _adfea && _cafgb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgaag)
}
func (_bfee *CT_ConditionalFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdbfd := range start.Attr {
		if _cdbfd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffge, _abggc := _dd.ParseUint(_cdbfd.Value, 10, 32)
			if _abggc != nil {
				return _abggc
			}
			_degfb := uint32(_ffge)
			_bfee.CountAttr = &_degfb
			continue
		}
	}
_gabcg:
	for {
		_fdbdb, _aeeed := d.Token()
		if _aeeed != nil {
			return _aeeed
		}
		switch _fgda := _fdbdb.(type) {
		case _a.StartElement:
			switch _fgda.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_ggacf := NewCT_ConditionalFormat()
				if _cdae := d.DecodeElement(_ggacf, &_fgda); _cdae != nil {
					return _cdae
				}
				_bfee.ConditionalFormat = append(_bfee.ConditionalFormat, _ggacf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _fgda.Name)
				if _gdea := d.Skip(); _gdea != nil {
					return _gdea
				}
			}
		case _a.EndElement:
			break _gabcg
		case _a.CharData:
		}
	}
	return nil
}
func (_fdgac ST_PivotFilterType) String() string {
	switch _fdgac {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}
func (_dabcd *CT_Rst) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _dabcd.T != nil {
		_ccfde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074"}}
		_ff.AddPreserveSpaceAttr(&_ccfde, *_dabcd.T)
		e.EncodeElement(_dabcd.T, _ccfde)
	}
	if _dabcd.R != nil {
		_eefae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072"}}
		for _, _gbfgfb := range _dabcd.R {
			e.EncodeElement(_gbfgfb, _eefae)
		}
	}
	if _dabcd.RPh != nil {
		_dddge := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0050\u0068"}}
		for _, _aegeg := range _dabcd.RPh {
			e.EncodeElement(_aegeg, _dddge)
		}
	}
	if _dabcd.PhoneticPr != nil {
		_fcgbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0068\u006f\u006e\u0065t\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_dabcd.PhoneticPr, _fcgbd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewSingleXmlCells() *SingleXmlCells {
	_adbag := &SingleXmlCells{}
	_adbag.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _adbag
}
func NewVolTypes() *VolTypes {
	_deffef := &VolTypes{}
	_deffef.CT_VolTypes = *NewCT_VolTypes()
	return _deffef
}

// Validate validates the CT_HeaderFooter and its children
func (_bfdac *CT_HeaderFooter) Validate() error {
	return _bfdac.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_ecfgae *CT_FieldGroup) ValidateWithPath(path string) error {
	if _ecfgae.RangePr != nil {
		if _ggdb := _ecfgae.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _ggdb != nil {
			return _ggdb
		}
	}
	if _ecfgae.DiscretePr != nil {
		if _cefag := _ecfgae.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _cefag != nil {
			return _cefag
		}
	}
	if _ecfgae.GroupItems != nil {
		if _gcgad := _ecfgae.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _gcgad != nil {
			return _gcgad
		}
	}
	return nil
}
func (_agcb *CT_CellSmartTags) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _agcb.RAttr)})
	e.EncodeToken(start)
	_fdae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0063\u0065l\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _eeaa := range _agcb.CellSmartTag {
		e.EncodeElement(_eeaa, _fdae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eddbf *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_eddbf = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_eddbf = 1
	case "\u0063\u006f\u0075n\u0074":
		*_eddbf = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_eddbf = 3
	case "\u006d\u0061\u0078":
		*_eddbf = 4
	case "\u006d\u0069\u006e":
		*_eddbf = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_eddbf = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_eddbf = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_eddbf = 8
	case "\u0073\u0075\u006d":
		*_eddbf = 9
	case "\u0076\u0061\u0072":
		*_eddbf = 10
	case "\u0076\u0061\u0072\u0070":
		*_eddbf = 11
	}
	return nil
}
func (_feedd *ST_Comments) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_feedd = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_feedd = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_feedd = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_feedd = 3
	}
	return nil
}
func (_cgebc *ST_VolDepType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbcgg, _dabbd := d.Token()
	if _dabbd != nil {
		return _dabbd
	}
	if _aebcb, _edaffg := _bbcgg.(_a.EndElement); _edaffg && _aebcb.Name == start.Name {
		*_cgebc = 1
		return nil
	}
	if _aegedb, _bcbbcg := _bbcgg.(_a.CharData); !_bcbbcg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbcgg)
	} else {
		switch string(_aegedb) {
		case "":
			*_cgebc = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_cgebc = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_cgebc = 2
		}
	}
	_bbcgg, _dabbd = d.Token()
	if _dabbd != nil {
		return _dabbd
	}
	if _gddbg, _dccdcd := _bbcgg.(_a.EndElement); _dccdcd && _gddbg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbcgg)
}
func (_ggcag *Users) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggcag.CT_Users = *NewCT_Users()
	for _, _beggcf := range start.Attr {
		if _beggcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bffcd, _gaagcc := _dd.ParseUint(_beggcf.Value, 10, 32)
			if _gaagcc != nil {
				return _gaagcc
			}
			_dcebef := uint32(_bffcd)
			_ggcag.CountAttr = &_dcebef
			continue
		}
	}
_bcafc:
	for {
		_gcdeb, _afdee := d.Token()
		if _afdee != nil {
			return _afdee
		}
		switch _abgad := _gcdeb.(type) {
		case _a.StartElement:
			switch _abgad.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_adcag := NewCT_SharedUser()
				if _ecccf := d.DecodeElement(_adcag, &_abgad); _ecccf != nil {
					return _ecccf
				}
				_ggcag.UserInfo = append(_ggcag.UserInfo, _adcag)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _abgad.Name)
				if _dcdefc := d.Skip(); _dcdefc != nil {
					return _dcdefc
				}
			}
		case _a.EndElement:
			break _bcafc
		case _a.CharData:
		}
	}
	return nil
}
func (_bdcfg *CT_WorksheetSource) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdcfg.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcfg.RefAttr)})
	}
	if _bdcfg.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcfg.NameAttr)})
	}
	if _bdcfg.SheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcfg.SheetAttr)})
	}
	if _bdcfg.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcfg.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_aaec *CT_DefinedNames) ValidateWithPath(path string) error {
	for _cafa, _fgcgf := range _aaec.DefinedName {
		if _cdfgc := _fgcgf.ValidateWithPath(_fd.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _cafa)); _cdfgc != nil {
			return _cdfgc
		}
	}
	return nil
}
func (_fdcad *CT_WebPublishObjects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdcad.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fdcad.CountAttr)})
	}
	e.EncodeToken(start)
	_eefge := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006ci\u0073\u0068\u004f\u0062je\u0063\u0074"}}
	for _, _cefgaf := range _fdcad.WebPublishObject {
		e.EncodeElement(_cefgaf, _eefge)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aaceb *CT_PCDSDTCEntriesChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _aaceb.M != nil {
		_bcddg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006d"}}
		e.EncodeElement(_aaceb.M, _bcddg)
	} else if _aaceb.N != nil {
		_becad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		e.EncodeElement(_aaceb.N, _becad)
	} else if _aaceb.E != nil {
		_aeagf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0065"}}
		e.EncodeElement(_aaceb.E, _aeagf)
	} else if _aaceb.S != nil {
		_eebfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
		e.EncodeElement(_aaceb.S, _eebfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_faccb *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _faccb.TypeAttr == ST_TableStyleTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _abaefc := _faccb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _abaefc != nil {
		return _abaefc
	}
	return nil
}

type ST_UnderlineValues byte

func (_efgba *ST_PaneState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bdcbb, _bceebf := d.Token()
	if _bceebf != nil {
		return _bceebf
	}
	if _cabdb, _dbaefc := _bdcbb.(_a.EndElement); _dbaefc && _cabdb.Name == start.Name {
		*_efgba = 1
		return nil
	}
	if _gdgfdf, _gbcgf := _bdcbb.(_a.CharData); !_gbcgf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdcbb)
	} else {
		switch string(_gdgfdf) {
		case "":
			*_efgba = 0
		case "\u0073\u0070\u006ci\u0074":
			*_efgba = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_efgba = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_efgba = 3
		}
	}
	_bdcbb, _bceebf = d.Token()
	if _bceebf != nil {
		return _bceebf
	}
	if _edceg, _fegcc := _bdcbb.(_a.EndElement); _fegcc && _edceg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdcbb)
}
func (_agefb *CT_PatternFill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _agefb.PatternTypeAttr != ST_PatternTypeUnset {
		_aegdad, _bcefd := _agefb.PatternTypeAttr.MarshalXMLAttr(_a.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _bcefd != nil {
			return _bcefd
		}
		start.Attr = append(start.Attr, _aegdad)
	}
	e.EncodeToken(start)
	if _agefb.FgColor != nil {
		_agacee := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_agefb.FgColor, _agacee)
	}
	if _agefb.BgColor != nil {
		_bggbf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_agefb.BgColor, _bggbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ggcdg *CT_FillChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bbeea := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
		_ggcdg.PatternFill = NewCT_PatternFill()
		if _ddfcc := d.DecodeElement(_ggcdg.PatternFill, &_bbeea); _ddfcc != nil {
			return _ddfcc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
		_ggcdg.GradientFill = NewCT_GradientFill()
		if _aaede := d.DecodeElement(_ggcdg.GradientFill, &_bbeea); _aaede != nil {
			return _aaede
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _bbeea.Name)
		if _dgfa := d.Skip(); _dgfa != nil {
			return _dgfa
		}
	}
	return nil
}
func (_faeab *CT_RevisionMoveChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _faeab.Undo != nil {
		_aeaffg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0075\u006e\u0064\u006f"}}
		for _, _cdbebg := range _faeab.Undo {
			e.EncodeElement(_cdbebg, _aeaffg)
		}
	} else if _faeab.Rcc != nil {
		_adfafd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0063\u0063"}}
		for _, _bfcbe := range _faeab.Rcc {
			e.EncodeElement(_bfcbe, _adfafd)
		}
	} else if _faeab.Rfmt != nil {
		_fbebc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0066\u006d\u0074"}}
		for _, _ggadc := range _faeab.Rfmt {
			e.EncodeElement(_ggadc, _fbebc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecbbcg ST_DataValidationType) String() string {
	switch _ecbbcg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_eefga *CT_Set) ValidateWithPath(path string) error {
	if _fdgfe := _eefga.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fdgfe != nil {
		return _fdgfe
	}
	for _cdefa, _dfbcbg := range _eefga.Tpls {
		if _ffdc := _dfbcbg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _cdefa)); _ffdc != nil {
			return _ffdc
		}
	}
	if _eefga.SortByTuple != nil {
		if _fefded := _eefga.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _fefded != nil {
			return _fefded
		}
	}
	return nil
}
func (_ddfdc *ST_MdxKPIProperty) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdccd, _afcdgb := d.Token()
	if _afcdgb != nil {
		return _afcdgb
	}
	if _egcde, _cfcfb := _gdccd.(_a.EndElement); _cfcfb && _egcde.Name == start.Name {
		*_ddfdc = 1
		return nil
	}
	if _bdgcb, _afbefc := _gdccd.(_a.CharData); !_afbefc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdccd)
	} else {
		switch string(_bdgcb) {
		case "":
			*_ddfdc = 0
		case "\u0076":
			*_ddfdc = 1
		case "\u0067":
			*_ddfdc = 2
		case "\u0073":
			*_ddfdc = 3
		case "\u0074":
			*_ddfdc = 4
		case "\u0077":
			*_ddfdc = 5
		case "\u006d":
			*_ddfdc = 6
		}
	}
	_gdccd, _afcdgb = d.Token()
	if _afcdgb != nil {
		return _afcdgb
	}
	if _agefdgg, _agcaa := _gdccd.(_a.EndElement); _agcaa && _agefdgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdccd)
}
func (_eagef *CT_ReviewedRevisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eagef.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eagef.CountAttr)})
	}
	e.EncodeToken(start)
	_accaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _beefb := range _eagef.Reviewed {
		e.EncodeElement(_beefb, _accaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_SortType byte

// Validate validates the CT_RevisionMove and its children
func (_dfcef *CT_RevisionMove) Validate() error {
	return _dfcef.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}
func (_addgc ST_PhoneticType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_addgc.String(), start)
}
func (_bfccea *Headers) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bfccea.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _bfeaca := range start.Attr {
		if _bfeaca.Name.Local == "\u0067\u0075\u0069\u0064" {
			_aebafg := _bfeaca.Value
			_bfccea.GuidAttr = _aebafg
			continue
		}
		if _bfeaca.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_ebfdad := _bfeaca.Value
			_bfccea.LastGuidAttr = &_ebfdad
			continue
		}
		if _bfeaca.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_cabfc, _dbcfd := _dd.ParseBool(_bfeaca.Value)
			if _dbcfd != nil {
				return _dbcfd
			}
			_bfccea.SharedAttr = &_cabfc
			continue
		}
		if _bfeaca.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_dgcdd, _cbcca := _dd.ParseBool(_bfeaca.Value)
			if _cbcca != nil {
				return _cbcca
			}
			_bfccea.DiskRevisionsAttr = &_dgcdd
			continue
		}
		if _bfeaca.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_agcfg, _ebfac := _dd.ParseBool(_bfeaca.Value)
			if _ebfac != nil {
				return _ebfac
			}
			_bfccea.HistoryAttr = &_agcfg
			continue
		}
		if _bfeaca.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_aceef, _ddedg := _dd.ParseBool(_bfeaca.Value)
			if _ddedg != nil {
				return _ddedg
			}
			_bfccea.TrackRevisionsAttr = &_aceef
			continue
		}
		if _bfeaca.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_ddeebc, _agdbac := _dd.ParseBool(_bfeaca.Value)
			if _agdbac != nil {
				return _agdbac
			}
			_bfccea.ExclusiveAttr = &_ddeebc
			continue
		}
		if _bfeaca.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_bfcdca, _cffab := _dd.ParseUint(_bfeaca.Value, 10, 32)
			if _cffab != nil {
				return _cffab
			}
			_edgae := uint32(_bfcdca)
			_bfccea.RevisionIdAttr = &_edgae
			continue
		}
		if _bfeaca.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_edgfe, _adgaba := _dd.ParseInt(_bfeaca.Value, 10, 32)
			if _adgaba != nil {
				return _adgaba
			}
			_gbfac := int32(_edgfe)
			_bfccea.VersionAttr = &_gbfac
			continue
		}
		if _bfeaca.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_gbfcd, _cbfea := _dd.ParseBool(_bfeaca.Value)
			if _cbfea != nil {
				return _cbfea
			}
			_bfccea.KeepChangeHistoryAttr = &_gbfcd
			continue
		}
		if _bfeaca.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_eegdc, _acefb := _dd.ParseBool(_bfeaca.Value)
			if _acefb != nil {
				return _acefb
			}
			_bfccea.ProtectedAttr = &_eegdc
			continue
		}
		if _bfeaca.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_bbfdg, _gbcbe := _dd.ParseUint(_bfeaca.Value, 10, 32)
			if _gbcbe != nil {
				return _gbcbe
			}
			_cecab := uint32(_bbfdg)
			_bfccea.PreserveHistoryAttr = &_cecab
			continue
		}
	}
_bcceef:
	for {
		_ddgfff, _dfgbb := d.Token()
		if _dfgbb != nil {
			return _dfgbb
		}
		switch _bccgde := _ddgfff.(type) {
		case _a.StartElement:
			switch _bccgde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_ebeed := NewCT_RevisionHeader()
				if _cfecg := d.DecodeElement(_ebeed, &_bccgde); _cfecg != nil {
					return _cfecg
				}
				_bfccea.Header = append(_bfccea.Header, _ebeed)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _bccgde.Name)
				if _fgegd := d.Skip(); _fgegd != nil {
					return _fgegd
				}
			}
		case _a.EndElement:
			break _bcceef
		case _a.CharData:
		}
	}
	return nil
}

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

func (_gcgbe ST_TextHAlign) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gbggb := _a.Attr{}
	_gbggb.Name = name
	switch _gcgbe {
	case ST_TextHAlignUnset:
		_gbggb.Value = ""
	case ST_TextHAlignLeft:
		_gbggb.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_gbggb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_gbggb.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_gbggb.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_gbggb.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _gbggb, nil
}
func NewCT_Macrosheet() *CT_Macrosheet {
	_gcfca := &CT_Macrosheet{}
	_gcfca.SheetData = NewCT_SheetData()
	return _gcfca
}
func (_defaa *CT_OleItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _defaa.OleItem != nil {
		_aefd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _deefa := range _defaa.OleItem {
			e.EncodeElement(_deefa, _aefd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gcefg *CT_NumFmts) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcffd := range start.Attr {
		if _dcffd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbaeb, _daecab := _dd.ParseUint(_dcffd.Value, 10, 32)
			if _daecab != nil {
				return _daecab
			}
			_bcecga := uint32(_fbaeb)
			_gcefg.CountAttr = &_bcecga
			continue
		}
	}
_baddd:
	for {
		_fccdgd, _aadfef := d.Token()
		if _aadfef != nil {
			return _aadfef
		}
		switch _gbgdg := _fccdgd.(type) {
		case _a.StartElement:
			switch _gbgdg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_ebbdg := NewCT_NumFmt()
				if _eefgc := d.DecodeElement(_ebbdg, &_gbgdg); _eefgc != nil {
					return _eefgc
				}
				_gcefg.NumFmt = append(_gcefg.NumFmt, _ebbdg)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _gbgdg.Name)
				if _befca := d.Skip(); _befca != nil {
					return _befca
				}
			}
		case _a.EndElement:
			break _baddd
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CellWatch and its children
func (_fccaa *CT_CellWatch) Validate() error {
	return _fccaa.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}
func (_fbdcf *CT_Worksheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fbdcf.SheetData = NewCT_SheetData()
_gadff:
	for {
		_gaagcg, _bffcb := d.Token()
		if _bffcb != nil {
			return _bffcb
		}
		switch _eegeec := _gaagcg.(type) {
		case _a.StartElement:
			switch _eegeec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_fbdcf.SheetPr = NewCT_SheetPr()
				if _bffef := d.DecodeElement(_fbdcf.SheetPr, &_eegeec); _bffef != nil {
					return _bffef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_fbdcf.Dimension = NewCT_SheetDimension()
				if _gfbedb := d.DecodeElement(_fbdcf.Dimension, &_eegeec); _gfbedb != nil {
					return _gfbedb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fbdcf.SheetViews = NewCT_SheetViews()
				if _ffega := d.DecodeElement(_fbdcf.SheetViews, &_eegeec); _ffega != nil {
					return _ffega
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_fbdcf.SheetFormatPr = NewCT_SheetFormatPr()
				if _faede := d.DecodeElement(_fbdcf.SheetFormatPr, &_eegeec); _faede != nil {
					return _faede
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_ebdcc := NewCT_Cols()
				if _dddebfd := d.DecodeElement(_ebdcc, &_eegeec); _dddebfd != nil {
					return _dddebfd
				}
				_fbdcf.Cols = append(_fbdcf.Cols, _ebdcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _adgdb := d.DecodeElement(_fbdcf.SheetData, &_eegeec); _adgdb != nil {
					return _adgdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_fbdcf.SheetCalcPr = NewCT_SheetCalcPr()
				if _eaff := d.DecodeElement(_fbdcf.SheetCalcPr, &_eegeec); _eaff != nil {
					return _eaff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fbdcf.SheetProtection = NewCT_SheetProtection()
				if _efefg := d.DecodeElement(_fbdcf.SheetProtection, &_eegeec); _efefg != nil {
					return _efefg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_fbdcf.ProtectedRanges = NewCT_ProtectedRanges()
				if _deafea := d.DecodeElement(_fbdcf.ProtectedRanges, &_eegeec); _deafea != nil {
					return _deafea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_fbdcf.Scenarios = NewCT_Scenarios()
				if _effdcb := d.DecodeElement(_fbdcf.Scenarios, &_eegeec); _effdcb != nil {
					return _effdcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fbdcf.AutoFilter = NewCT_AutoFilter()
				if _gbgaf := d.DecodeElement(_fbdcf.AutoFilter, &_eegeec); _gbgaf != nil {
					return _gbgaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fbdcf.SortState = NewCT_SortState()
				if _aabcb := d.DecodeElement(_fbdcf.SortState, &_eegeec); _aabcb != nil {
					return _aabcb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_fbdcf.DataConsolidate = NewCT_DataConsolidate()
				if _abegb := d.DecodeElement(_fbdcf.DataConsolidate, &_eegeec); _abegb != nil {
					return _abegb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_fbdcf.CustomSheetViews = NewCT_CustomSheetViews()
				if _bdadc := d.DecodeElement(_fbdcf.CustomSheetViews, &_eegeec); _bdadc != nil {
					return _bdadc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_fbdcf.MergeCells = NewCT_MergeCells()
				if _bgca := d.DecodeElement(_fbdcf.MergeCells, &_eegeec); _bgca != nil {
					return _bgca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_fbdcf.PhoneticPr = NewCT_PhoneticPr()
				if _gbdgb := d.DecodeElement(_fbdcf.PhoneticPr, &_eegeec); _gbdgb != nil {
					return _gbdgb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_bffdf := NewCT_ConditionalFormatting()
				if _efaec := d.DecodeElement(_bffdf, &_eegeec); _efaec != nil {
					return _efaec
				}
				_fbdcf.ConditionalFormatting = append(_fbdcf.ConditionalFormatting, _bffdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_fbdcf.DataValidations = NewCT_DataValidations()
				if _aadfc := d.DecodeElement(_fbdcf.DataValidations, &_eegeec); _aadfc != nil {
					return _aadfc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_fbdcf.Hyperlinks = NewCT_Hyperlinks()
				if _acbdb := d.DecodeElement(_fbdcf.Hyperlinks, &_eegeec); _acbdb != nil {
					return _acbdb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_fbdcf.PrintOptions = NewCT_PrintOptions()
				if _dcee := d.DecodeElement(_fbdcf.PrintOptions, &_eegeec); _dcee != nil {
					return _dcee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fbdcf.PageMargins = NewCT_PageMargins()
				if _fccfd := d.DecodeElement(_fbdcf.PageMargins, &_eegeec); _fccfd != nil {
					return _fccfd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fbdcf.PageSetup = NewCT_PageSetup()
				if _ccfef := d.DecodeElement(_fbdcf.PageSetup, &_eegeec); _ccfef != nil {
					return _ccfef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fbdcf.HeaderFooter = NewCT_HeaderFooter()
				if _gddefg := d.DecodeElement(_fbdcf.HeaderFooter, &_eegeec); _gddefg != nil {
					return _gddefg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_fbdcf.RowBreaks = NewCT_PageBreak()
				if _fcaab := d.DecodeElement(_fbdcf.RowBreaks, &_eegeec); _fcaab != nil {
					return _fcaab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_fbdcf.ColBreaks = NewCT_PageBreak()
				if _efgcc := d.DecodeElement(_fbdcf.ColBreaks, &_eegeec); _efgcc != nil {
					return _efgcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_fbdcf.CustomProperties = NewCT_CustomProperties()
				if _bccbb := d.DecodeElement(_fbdcf.CustomProperties, &_eegeec); _bccbb != nil {
					return _bccbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_fbdcf.CellWatches = NewCT_CellWatches()
				if _bedcf := d.DecodeElement(_fbdcf.CellWatches, &_eegeec); _bedcf != nil {
					return _bedcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_fbdcf.IgnoredErrors = NewCT_IgnoredErrors()
				if _cbdbed := d.DecodeElement(_fbdcf.IgnoredErrors, &_eegeec); _cbdbed != nil {
					return _cbdbed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_fbdcf.SmartTags = NewCT_SmartTags()
				if _edbffc := d.DecodeElement(_fbdcf.SmartTags, &_eegeec); _edbffc != nil {
					return _edbffc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_fbdcf.Drawing = NewCT_Drawing()
				if _feebe := d.DecodeElement(_fbdcf.Drawing, &_eegeec); _feebe != nil {
					return _feebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_fbdcf.LegacyDrawing = NewCT_LegacyDrawing()
				if _gfbde := d.DecodeElement(_fbdcf.LegacyDrawing, &_eegeec); _gfbde != nil {
					return _gfbde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_fbdcf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _aadeg := d.DecodeElement(_fbdcf.LegacyDrawingHF, &_eegeec); _aadeg != nil {
					return _aadeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_fbdcf.DrawingHF = NewCT_DrawingHF()
				if _cbace := d.DecodeElement(_fbdcf.DrawingHF, &_eegeec); _cbace != nil {
					return _cbace
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_fbdcf.Picture = NewCT_SheetBackgroundPicture()
				if _eccef := d.DecodeElement(_fbdcf.Picture, &_eegeec); _eccef != nil {
					return _eccef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_fbdcf.OleObjects = NewCT_OleObjects()
				if _cbdcae := d.DecodeElement(_fbdcf.OleObjects, &_eegeec); _cbdcae != nil {
					return _cbdcae
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_fbdcf.Controls = NewCT_Controls()
				if _deccf := d.DecodeElement(_fbdcf.Controls, &_eegeec); _deccf != nil {
					return _deccf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_fbdcf.WebPublishItems = NewCT_WebPublishItems()
				if _ecedgd := d.DecodeElement(_fbdcf.WebPublishItems, &_eegeec); _ecedgd != nil {
					return _ecedgd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_fbdcf.TableParts = NewCT_TableParts()
				if _gegga := d.DecodeElement(_fbdcf.TableParts, &_eegeec); _gegga != nil {
					return _gegga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbdcf.ExtLst = NewCT_ExtensionList()
				if _fgcfde := d.DecodeElement(_fbdcf.ExtLst, &_eegeec); _fgcfde != nil {
					return _fgcfde
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _eegeec.Name)
				if _dgdaff := d.Skip(); _dgdaff != nil {
					return _dgdaff
				}
			}
		case _a.EndElement:
			break _gadff
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_Reviewed() *CT_Reviewed { _dcfdbf := &CT_Reviewed{}; return _dcfdbf }

type CT_FilterColumnChoice struct {

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

func (_ecded ST_HorizontalAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cadgfe := _a.Attr{}
	_cadgfe.Name = name
	switch _ecded {
	case ST_HorizontalAlignmentUnset:
		_cadgfe.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_cadgfe.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_cadgfe.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_cadgfe.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_cadgfe.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_cadgfe.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_cadgfe.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_cadgfe.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_cadgfe.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _cadgfe, nil
}
func (_afeee *CT_TextPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afeee.PromptAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.PromptAttr))})
	}
	if _afeee.FileTypeAttr != ST_FileTypeUnset {
		_egffc, _ecacde := _afeee.FileTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _ecacde != nil {
			return _ecacde
		}
		start.Attr = append(start.Attr, _egffc)
	}
	if _afeee.CodePageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.CodePageAttr)})
	}
	if _afeee.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.CharacterSetAttr)})
	}
	if _afeee.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.FirstRowAttr)})
	}
	if _afeee.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.SourceFileAttr)})
	}
	if _afeee.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.DelimitedAttr))})
	}
	if _afeee.DecimalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.DecimalAttr)})
	}
	if _afeee.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.ThousandsAttr)})
	}
	if _afeee.TabAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.TabAttr))})
	}
	if _afeee.SpaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.SpaceAttr))})
	}
	if _afeee.CommaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.CommaAttr))})
	}
	if _afeee.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.SemicolonAttr))})
	}
	if _afeee.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_afeee.ConsecutiveAttr))})
	}
	if _afeee.QualifierAttr != ST_QualifierUnset {
		_cgecc, _beegaa := _afeee.QualifierAttr.MarshalXMLAttr(_a.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _beegaa != nil {
			return _beegaa
		}
		start.Attr = append(start.Attr, _cgecc)
	}
	if _afeee.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _fd.Sprintf("\u0025\u0076", *_afeee.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _afeee.TextFields != nil {
		_dgcgbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0065\u0078\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_afeee.TextFields, _dgcgbe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_ggdc *CT_DataFields) ValidateWithPath(path string) error {
	for _ccagd, _dgfce := range _ggdc.DataField {
		if _cadg := _dgfce.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _ccagd)); _cadg != nil {
			return _cadg
		}
	}
	return nil
}
func (_gfcbfb *Users) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069\u003a\u0075\u0073\u0065\u0072s"
	return _gfcbfb.CT_Users.MarshalXML(e, start)
}
func (_decf *CT_Filter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _agbcc := range start.Attr {
		if _agbcc.Name.Local == "\u0076\u0061\u006c" {
			_dfgb := _agbcc.Value
			_decf.ValAttr = &_dfgb
			continue
		}
	}
	for {
		_acgcc, _ceccf := d.Token()
		if _ceccf != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _ceccf)
		}
		if _fbgabg, _cgdb := _acgcc.(_a.EndElement); _cgdb && _fbgabg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_cace *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _bfgdg, _ccbc := range _cace.CustomWorkbookView {
		if _cffc := _ccbc.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _bfgdg)); _cffc != nil {
			return _cffc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_ccaad *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _bcdce := _ccaad.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bcdce != nil {
		return _bcdce
	}
	if _gafbf := _ccaad.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _gafbf != nil {
		return _gafbf
	}
	return nil
}
func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_acegb := &CT_ExternalDefinedName{}
	return _acegb
}

type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

// Validate validates the CT_GroupMember and its children
func (_bgab *CT_GroupMember) Validate() error {
	return _bgab.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}

// Validate validates the CT_Filters and its children
func (_abbbd *CT_Filters) Validate() error {
	return _abbbd.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_dfbgff *ST_CellType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dfbgff = 0
	case "\u0062":
		*_dfbgff = 1
	case "\u006e":
		*_dfbgff = 2
	case "\u0065":
		*_dfbgff = 3
	case "\u0073":
		*_dfbgff = 4
	case "\u0073\u0074\u0072":
		*_dfbgff = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_dfbgff = 6
	}
	return nil
}

// Validate validates the CT_FutureMetadataBlock and its children
func (_cadbf *CT_FutureMetadataBlock) Validate() error {
	return _cadbf.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}
func (_afdfd *ST_RefMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_afdfd = 0
	case "\u0041\u0031":
		*_afdfd = 1
	case "\u0052\u0031\u0043\u0031":
		*_afdfd = 2
	}
	return nil
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_beebb *CT_PivotFilter) ValidateWithPath(path string) error {
	if _beebb.TypeAttr == ST_PivotFilterTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fgdad := _beebb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fgdad != nil {
		return _fgdad
	}
	if _dbgdeea := _beebb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dbgdeea != nil {
		return _dbgdeea
	}
	if _beebb.ExtLst != nil {
		if _abgfd := _beebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abgfd != nil {
			return _abgfd
		}
	}
	return nil
}
func (_bfeba *CT_TextField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfdcafd := range start.Attr {
		if _cfdcafd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bfeba.TypeAttr.UnmarshalXMLAttr(_cfdcafd)
			continue
		}
		if _cfdcafd.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_adgce, _cbfdg := _dd.ParseUint(_cfdcafd.Value, 10, 32)
			if _cbfdg != nil {
				return _cbfdg
			}
			_efege := uint32(_adgce)
			_bfeba.PositionAttr = &_efege
			continue
		}
	}
	for {
		_cdafaf, _ffcgb := d.Token()
		if _ffcgb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _ffcgb)
		}
		if _cdbac, _cgccc := _cdafaf.(_a.EndElement); _cgccc && _cdbac.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_abadb *CT_DdeItem) ValidateWithPath(path string) error {
	if _abadb.Values != nil {
		if _cbgbe := _abadb.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _cbgbe != nil {
			return _cbgbe
		}
	}
	return nil
}

type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

func (_cfcb *CT_PageSetUpPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gddbf := range start.Attr {
		if _gddbf.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_ccdec, _dadcg := _dd.ParseBool(_gddbf.Value)
			if _dadcg != nil {
				return _dadcg
			}
			_cfcb.AutoPageBreaksAttr = &_ccdec
			continue
		}
		if _gddbf.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_egfed, _gcgcg := _dd.ParseBool(_gddbf.Value)
			if _gcgcg != nil {
				return _gcgcg
			}
			_cfcb.FitToPageAttr = &_egfed
			continue
		}
	}
	for {
		_eacgec, _dabcfd := d.Token()
		if _dabcfd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _dabcfd)
		}
		if _fdfbf, _cebee := _eacgec.(_a.EndElement); _cebee && _fdfbf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CalcChain and its children
func (_fegcg *CalcChain) Validate() error {
	return _fegcg.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}
func (_gagb *CT_DrawingHF) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gcdcd := range start.Attr {
		if _gcdcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gcdcd.Name.Local == "\u0069\u0064" || _gcdcd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gcdcd.Name.Local == "\u0069\u0064" {
			_gfbec := _gcdcd.Value
			_gagb.IdAttr = _gfbec
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0068\u006f" {
			_afab, _cddd := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cddd != nil {
				return _cddd
			}
			_eaaga := uint32(_afab)
			_gagb.LhoAttr = &_eaaga
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0068\u0065" {
			_dbaa, _cddgf := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cddgf != nil {
				return _cddgf
			}
			_gead := uint32(_dbaa)
			_gagb.LheAttr = &_gead
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0068\u0066" {
			_cbdca, _effbbb := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _effbbb != nil {
				return _effbbb
			}
			_bedb := uint32(_cbdca)
			_gagb.LhfAttr = &_bedb
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0068\u006f" {
			_bedab, _eedf := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _eedf != nil {
				return _eedf
			}
			_efbff := uint32(_bedab)
			_gagb.ChoAttr = &_efbff
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0068\u0065" {
			_bead, _fgcgg := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _fgcgg != nil {
				return _fgcgg
			}
			_ccfad := uint32(_bead)
			_gagb.CheAttr = &_ccfad
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0068\u0066" {
			_ffaa, _adagf := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _adagf != nil {
				return _adagf
			}
			_dbced := uint32(_ffaa)
			_gagb.ChfAttr = &_dbced
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0068\u006f" {
			_dggaa, _cgdff := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cgdff != nil {
				return _cgdff
			}
			_gbgfc := uint32(_dggaa)
			_gagb.RhoAttr = &_gbgfc
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0068\u0065" {
			_caaaa, _cdge := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cdge != nil {
				return _cdge
			}
			_cdgd := uint32(_caaaa)
			_gagb.RheAttr = &_cdgd
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0068\u0066" {
			_feaeg, _fcac := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _fcac != nil {
				return _fcac
			}
			_adbf := uint32(_feaeg)
			_gagb.RhfAttr = &_adbf
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0066\u006f" {
			_bcdcb, _fbcba := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _fbcba != nil {
				return _fbcba
			}
			_dfbdd := uint32(_bcdcb)
			_gagb.LfoAttr = &_dfbdd
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0066\u0065" {
			_ecde, _eecgc := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _eecgc != nil {
				return _eecgc
			}
			_ecdfa := uint32(_ecde)
			_gagb.LfeAttr = &_ecdfa
			continue
		}
		if _gcdcd.Name.Local == "\u006c\u0066\u0066" {
			_dbdg, _ggbb := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _ggbb != nil {
				return _ggbb
			}
			_fgead := uint32(_dbdg)
			_gagb.LffAttr = &_fgead
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0066\u006f" {
			_eadc, _cccfe := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cccfe != nil {
				return _cccfe
			}
			_dcbcf := uint32(_eadc)
			_gagb.CfoAttr = &_dcbcf
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0066\u0065" {
			_gfeba, _aecbf := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _aecbf != nil {
				return _aecbf
			}
			_fecc := uint32(_gfeba)
			_gagb.CfeAttr = &_fecc
			continue
		}
		if _gcdcd.Name.Local == "\u0063\u0066\u0066" {
			_cdedc, _adcbd := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _adcbd != nil {
				return _adcbd
			}
			_efgd := uint32(_cdedc)
			_gagb.CffAttr = &_efgd
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0066\u006f" {
			_abcf, _bggg := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _bggg != nil {
				return _bggg
			}
			_gacadb := uint32(_abcf)
			_gagb.RfoAttr = &_gacadb
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0066\u0065" {
			_dafd, _cgedc := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _cgedc != nil {
				return _cgedc
			}
			_dbeeb := uint32(_dafd)
			_gagb.RfeAttr = &_dbeeb
			continue
		}
		if _gcdcd.Name.Local == "\u0072\u0066\u0066" {
			_gdcdb, _efdae := _dd.ParseUint(_gcdcd.Value, 10, 32)
			if _efdae != nil {
				return _efdae
			}
			_dcgab := uint32(_gdcdb)
			_gagb.RffAttr = &_dcgab
			continue
		}
	}
	for {
		_bccgcd, _degb := d.Token()
		if _degb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _degb)
		}
		if _dcfdb, _affbd := _bccgcd.(_a.EndElement); _affbd && _dcfdb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FontChoice struct {

	// Font Name
	Name *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_FontFamily

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Scheme
	Scheme *CT_FontScheme
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_ecaf *CT_Drawing) ValidateWithPath(path string) error { return nil }
func (_eaaaa *CT_SortState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eaaaa.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eaaaa.ColumnSortAttr))})
	}
	if _eaaaa.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_eaaaa.CaseSensitiveAttr))})
	}
	if _eaaaa.SortMethodAttr != ST_SortMethodUnset {
		_agdgc, _ecbcdd := _eaaaa.SortMethodAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _ecbcdd != nil {
			return _ecbcdd
		}
		start.Attr = append(start.Attr, _agdgc)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _eaaaa.RefAttr)})
	e.EncodeToken(start)
	if _eaaaa.SortCondition != nil {
		_aefed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e"}}
		for _, _gdebc := range _eaaaa.SortCondition {
			e.EncodeElement(_gdebc, _aefed)
		}
	}
	if _eaaaa.ExtLst != nil {
		_agfbgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaaaa.ExtLst, _agfbgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eadbf *CT_VolTopic) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aggdb := range start.Attr {
		if _aggdb.Name.Local == "\u0074" {
			_eadbf.TAttr.UnmarshalXMLAttr(_aggdb)
			continue
		}
	}
_bdeedd:
	for {
		_ddfeg, _gdgee := d.Token()
		if _gdgee != nil {
			return _gdgee
		}
		switch _babbga := _ddfeg.(type) {
		case _a.StartElement:
			switch _babbga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _ceddb := d.DecodeElement(&_eadbf.V, &_babbga); _ceddb != nil {
					return _ceddb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _adaeb string
				if _eacdad := d.DecodeElement(&_adaeb, &_babbga); _eacdad != nil {
					return _eacdad
				}
				_eadbf.Stp = append(_eadbf.Stp, _adaeb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_efgec := NewCT_VolTopicRef()
				if _caegc := d.DecodeElement(_efgec, &_babbga); _caegc != nil {
					return _caegc
				}
				_eadbf.Tr = append(_eadbf.Tr, _efgec)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _babbga.Name)
				if _ceccd := d.Skip(); _ceccd != nil {
					return _ceccd
				}
			}
		case _a.EndElement:
			break _bdeedd
		case _a.CharData:
		}
	}
	return nil
}
func (_dcgebd ST_DataValidationType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gcdeed := _a.Attr{}
	_gcdeed.Name = name
	switch _dcgebd {
	case ST_DataValidationTypeUnset:
		_gcdeed.Value = ""
	case ST_DataValidationTypeNone:
		_gcdeed.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_gcdeed.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_gcdeed.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_gcdeed.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_gcdeed.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_gcdeed.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_gcdeed.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_gcdeed.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _gcdeed, nil
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}
type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

func (_dacea *CT_SortCondition) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dacea.DescendingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dacea.DescendingAttr))})
	}
	if _dacea.SortByAttr != ST_SortByUnset {
		_abddff, _dbcad := _dacea.SortByAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _dbcad != nil {
			return _dbcad
		}
		start.Attr = append(start.Attr, _abddff)
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _dacea.RefAttr)})
	if _dacea.CustomListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dacea.CustomListAttr)})
	}
	if _dacea.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dacea.DxfIdAttr)})
	}
	if _dacea.IconSetAttr != ST_IconSetTypeUnset {
		_gfacg, _ggfce := _dacea.IconSetAttr.MarshalXMLAttr(_a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _ggfce != nil {
			return _ggfce
		}
		start.Attr = append(start.Attr, _gfacg)
	}
	if _dacea.IconIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dacea.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fgbgc ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _fgbgc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgbgc))
	}
	return nil
}
func (_gdefe *CT_RevisionRowColumn) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gdefe.SIdAttr)})
	if _gdefe.EolAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006f\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdefe.EolAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _gdefe.RefAttr)})
	_gfggc, _fafeb := _gdefe.ActionAttr.MarshalXMLAttr(_a.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _fafeb != nil {
		return _fafeb
	}
	start.Attr = append(start.Attr, _gfggc)
	if _gdefe.EdgeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdefe.EdgeAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gdefe.RIdAttr)})
	if _gdefe.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdefe.UaAttr))})
	}
	if _gdefe.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdefe.RaAttr))})
	}
	e.EncodeToken(start)
	if _gdefe.RevisionRowColumnChoice != nil {
		for _, _ecacdg := range _gdefe.RevisionRowColumnChoice {
			_ecacdg.MarshalXML(e, _a.StartElement{})
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_acbaccf ST_FieldSortType) ValidateWithPath(path string) error {
	switch _acbaccf {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acbaccf))
	}
	return nil
}
func (_dfge *CT_ChartFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acde := range start.Attr {
		if _acde.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_faefe, _bageb := _dd.ParseUint(_acde.Value, 10, 32)
			if _bageb != nil {
				return _bageb
			}
			_gaeg := uint32(_faefe)
			_dfge.CountAttr = &_gaeg
			continue
		}
	}
_ddba:
	for {
		_bbeg, _eaae := d.Token()
		if _eaae != nil {
			return _eaae
		}
		switch _cfed := _bbeg.(type) {
		case _a.StartElement:
			switch _cfed.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_bcdbb := NewCT_ChartFormat()
				if _abag := d.DecodeElement(_bcdbb, &_cfed); _abag != nil {
					return _abag
				}
				_dfge.ChartFormat = append(_dfge.ChartFormat, _bcdbb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _cfed.Name)
				if _ffbag := d.Skip(); _ffbag != nil {
					return _ffbag
				}
			}
		case _a.EndElement:
			break _ddba
		case _a.CharData:
		}
	}
	return nil
}

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

func (_fcdbdg ST_PageOrder) String() string {
	switch _fcdbdg {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

func (_gaefe *CT_VolTopicRef) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afdbb := range start.Attr {
		if _afdbb.Name.Local == "\u0072" {
			_cfbbd := _afdbb.Value
			_gaefe.RAttr = _cfbbd
			continue
		}
		if _afdbb.Name.Local == "\u0073" {
			_aedafb, _bbbbf := _dd.ParseUint(_afdbb.Value, 10, 32)
			if _bbbbf != nil {
				return _bbbbf
			}
			_gaefe.SAttr = uint32(_aedafb)
			continue
		}
	}
	for {
		_eace, _cdfgdf := d.Token()
		if _cdfgdf != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _cdfgdf)
		}
		if _cgdadb, _cedfb := _eace.(_a.EndElement); _cedfb && _cgdadb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_debfac *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_gage *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _afdf, _fcgeb := range _gage.SheetData {
		if _dbcae := _fcgeb.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _afdf)); _dbcae != nil {
			return _dbcae
		}
	}
	return nil
}
func NewCT_ExternalCell() *CT_ExternalCell     { _abbca := &CT_ExternalCell{}; return _abbca }
func (_bgbfbc ST_PatternType) Validate() error { return _bgbfbc.ValidateWithPath("") }
func NewConnections() *Connections {
	_dfcea := &Connections{}
	_dfcea.CT_Connections = *NewCT_Connections()
	return _dfcea
}

type ST_SheetViewType byte

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_abcgf *CT_RangeSets) ValidateWithPath(path string) error {
	for _feccag, _bgdea := range _abcgf.RangeSet {
		if _ggacb := _bgdea.ValidateWithPath(_fd.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _feccag)); _ggacb != nil {
			return _ggacb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_dccgd *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _egfbf, _bdae := range _dccgd.CellSmartTag {
		if _eeaad := _bdae.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _egfbf)); _eeaad != nil {
			return _eeaad
		}
	}
	return nil
}
func (_ggdea ST_PageOrder) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bafdbb := _a.Attr{}
	_bafdbb.Name = name
	switch _ggdea {
	case ST_PageOrderUnset:
		_bafdbb.Value = ""
	case ST_PageOrderDownThenOver:
		_bafdbb.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_bafdbb.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _bafdbb, nil
}
func (_bcad *CT_GroupLevel) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfbeff := range start.Attr {
		if _gfbeff.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cgcg := _gfbeff.Value
			_bcad.UniqueNameAttr = _cgcg
			continue
		}
		if _gfbeff.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fdac := _gfbeff.Value
			_bcad.CaptionAttr = _fdac
			continue
		}
		if _gfbeff.Name.Local == "\u0075\u0073\u0065\u0072" {
			_afgcc, _bbcbe := _dd.ParseBool(_gfbeff.Value)
			if _bbcbe != nil {
				return _bbcbe
			}
			_bcad.UserAttr = &_afgcc
			continue
		}
		if _gfbeff.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_bgeg, _gcbb := _dd.ParseBool(_gfbeff.Value)
			if _gcbb != nil {
				return _gcbb
			}
			_bcad.CustomRollUpAttr = &_bgeg
			continue
		}
	}
_cgfde:
	for {
		_becbfc, _edcf := d.Token()
		if _edcf != nil {
			return _edcf
		}
		switch _gabef := _becbfc.(type) {
		case _a.StartElement:
			switch _gabef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_bcad.Groups = NewCT_Groups()
				if _ggdbc := d.DecodeElement(_bcad.Groups, &_gabef); _ggdbc != nil {
					return _ggdbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcad.ExtLst = NewCT_ExtensionList()
				if _dcda := d.DecodeElement(_bcad.ExtLst, &_gabef); _dcda != nil {
					return _dcda
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _gabef.Name)
				if _ecab := d.Skip(); _ecab != nil {
					return _ecab
				}
			}
		case _a.EndElement:
			break _cgfde
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_ggfff *CT_FileVersion) ValidateWithPath(path string) error {
	if _ggfff.CodeNameAttr != nil {
		if !_b.ST_GuidPatternRe.MatchString(*_ggfff.CodeNameAttr) {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, *_ggfff.CodeNameAttr)
		}
	}
	return nil
}
func (_fecggd *CT_Parameter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbdbe := range start.Attr {
		if _cbdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ggabc := _cbdbe.Value
			_fecggd.NameAttr = &_ggabc
			continue
		}
		if _cbdbe.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_ffec, _bfecf := _dd.ParseInt(_cbdbe.Value, 10, 32)
			if _bfecf != nil {
				return _bfecf
			}
			_ddbba := int32(_ffec)
			_fecggd.SqlTypeAttr = &_ddbba
			continue
		}
		if _cbdbe.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_fecggd.ParameterTypeAttr.UnmarshalXMLAttr(_cbdbe)
			continue
		}
		if _cbdbe.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_acgfc, _dcfdd := _dd.ParseBool(_cbdbe.Value)
			if _dcfdd != nil {
				return _dcfdd
			}
			_fecggd.RefreshOnChangeAttr = &_acgfc
			continue
		}
		if _cbdbe.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_ebbeb := _cbdbe.Value
			_fecggd.PromptAttr = &_ebbeb
			continue
		}
		if _cbdbe.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_aacdc, _cdcfc := _dd.ParseBool(_cbdbe.Value)
			if _cdcfc != nil {
				return _cdcfc
			}
			_fecggd.BooleanAttr = &_aacdc
			continue
		}
		if _cbdbe.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_cagcafb, _cadgf := _dd.ParseFloat(_cbdbe.Value, 64)
			if _cadgf != nil {
				return _cadgf
			}
			_fecggd.DoubleAttr = &_cagcafb
			continue
		}
		if _cbdbe.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_afbeg, _ecdce := _dd.ParseInt(_cbdbe.Value, 10, 32)
			if _ecdce != nil {
				return _ecdce
			}
			_aaege := int32(_afbeg)
			_fecggd.IntegerAttr = &_aaege
			continue
		}
		if _cbdbe.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_gacgd := _cbdbe.Value
			_fecggd.StringAttr = &_gacgd
			continue
		}
		if _cbdbe.Name.Local == "\u0063\u0065\u006c\u006c" {
			_cagdc := _cbdbe.Value
			_fecggd.CellAttr = &_cagdc
			continue
		}
	}
	for {
		_cebf, _gadfeb := d.Token()
		if _gadfeb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _gadfeb)
		}
		if _gegef, _ddeaab := _cebf.(_a.EndElement); _ddeaab && _gegef.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_DataConsolidateFunction byte

func (_bddcdc *CT_TextField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bddcdc.TypeAttr != ST_ExternalConnectionTypeUnset {
		_geef, _acgfbc := _bddcdc.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _acgfbc != nil {
			return _acgfbc
		}
		start.Attr = append(start.Attr, _geef)
	}
	if _bddcdc.PositionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_bddcdc.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetView and its children
func (_ceccc *CT_SheetView) Validate() error {
	return _ceccc.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_agdcc *CT_QueryTable) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggeaf := range start.Attr {
		if _ggeaf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbcc := _ggeaf.Value
			_agdcc.NameAttr = _fbcc
			continue
		}
		if _ggeaf.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_aeaeba, _cacca := _dd.ParseBool(_ggeaf.Value)
			if _cacca != nil {
				return _cacca
			}
			_agdcc.HeadersAttr = &_aeaeba
			continue
		}
		if _ggeaf.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_deabf, _cbafc := _dd.ParseBool(_ggeaf.Value)
			if _cbafc != nil {
				return _cbafc
			}
			_agdcc.RowNumbersAttr = &_deabf
			continue
		}
		if _ggeaf.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_bccab, _baaedf := _dd.ParseBool(_ggeaf.Value)
			if _baaedf != nil {
				return _baaedf
			}
			_agdcc.DisableRefreshAttr = &_bccab
			continue
		}
		if _ggeaf.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_efcde, _bgddb := _dd.ParseBool(_ggeaf.Value)
			if _bgddb != nil {
				return _bgddb
			}
			_agdcc.BackgroundRefreshAttr = &_efcde
			continue
		}
		if _ggeaf.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_gafdbg, _agffd := _dd.ParseBool(_ggeaf.Value)
			if _agffd != nil {
				return _agffd
			}
			_agdcc.FirstBackgroundRefreshAttr = &_gafdbg
			continue
		}
		if _ggeaf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_agfee, _ffbbb := _dd.ParseBool(_ggeaf.Value)
			if _ffbbb != nil {
				return _ffbbb
			}
			_agdcc.RefreshOnLoadAttr = &_agfee
			continue
		}
		if _ggeaf.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_agdcc.GrowShrinkTypeAttr.UnmarshalXMLAttr(_ggeaf)
			continue
		}
		if _ggeaf.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_dagcg, _abaef := _dd.ParseBool(_ggeaf.Value)
			if _abaef != nil {
				return _abaef
			}
			_agdcc.FillFormulasAttr = &_dagcg
			continue
		}
		if _ggeaf.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_cagad, _cdgfb := _dd.ParseBool(_ggeaf.Value)
			if _cdgfb != nil {
				return _cdgfb
			}
			_agdcc.RemoveDataOnSaveAttr = &_cagad
			continue
		}
		if _ggeaf.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_addef, _caagf := _dd.ParseBool(_ggeaf.Value)
			if _caagf != nil {
				return _caagf
			}
			_agdcc.DisableEditAttr = &_addef
			continue
		}
		if _ggeaf.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_defee, _bcdafb := _dd.ParseBool(_ggeaf.Value)
			if _bcdafb != nil {
				return _bcdafb
			}
			_agdcc.PreserveFormattingAttr = &_defee
			continue
		}
		if _ggeaf.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_fdfdd, _cfefe := _dd.ParseBool(_ggeaf.Value)
			if _cfefe != nil {
				return _cfefe
			}
			_agdcc.AdjustColumnWidthAttr = &_fdfdd
			continue
		}
		if _ggeaf.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_dabff, _baceca := _dd.ParseBool(_ggeaf.Value)
			if _baceca != nil {
				return _baceca
			}
			_agdcc.IntermediateAttr = &_dabff
			continue
		}
		if _ggeaf.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_ccegd, _accdf := _dd.ParseUint(_ggeaf.Value, 10, 32)
			if _accdf != nil {
				return _accdf
			}
			_agdcc.ConnectionIdAttr = uint32(_ccegd)
			continue
		}
		if _ggeaf.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_cacgga, _decec := _dd.ParseUint(_ggeaf.Value, 10, 32)
			if _decec != nil {
				return _decec
			}
			_ffbgcb := uint32(_cacgga)
			_agdcc.AutoFormatIdAttr = &_ffbgcb
			continue
		}
		if _ggeaf.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_cbface, _gfecb := _dd.ParseBool(_ggeaf.Value)
			if _gfecb != nil {
				return _gfecb
			}
			_agdcc.ApplyNumberFormatsAttr = &_cbface
			continue
		}
		if _ggeaf.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_faacd, _eegaf := _dd.ParseBool(_ggeaf.Value)
			if _eegaf != nil {
				return _eegaf
			}
			_agdcc.ApplyBorderFormatsAttr = &_faacd
			continue
		}
		if _ggeaf.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fdcgd, _acfga := _dd.ParseBool(_ggeaf.Value)
			if _acfga != nil {
				return _acfga
			}
			_agdcc.ApplyFontFormatsAttr = &_fdcgd
			continue
		}
		if _ggeaf.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cddgb, _gffg := _dd.ParseBool(_ggeaf.Value)
			if _gffg != nil {
				return _gffg
			}
			_agdcc.ApplyPatternFormatsAttr = &_cddgb
			continue
		}
		if _ggeaf.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gcfe, _beeaga := _dd.ParseBool(_ggeaf.Value)
			if _beeaga != nil {
				return _beeaga
			}
			_agdcc.ApplyAlignmentFormatsAttr = &_gcfe
			continue
		}
		if _ggeaf.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cgecd, _bfdafb := _dd.ParseBool(_ggeaf.Value)
			if _bfdafb != nil {
				return _bfdafb
			}
			_agdcc.ApplyWidthHeightFormatsAttr = &_cgecd
			continue
		}
	}
_dgedea:
	for {
		_edadd, _acdaf := d.Token()
		if _acdaf != nil {
			return _acdaf
		}
		switch _ddabb := _edadd.(type) {
		case _a.StartElement:
			switch _ddabb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_agdcc.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _bcag := d.DecodeElement(_agdcc.QueryTableRefresh, &_ddabb); _bcag != nil {
					return _bcag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agdcc.ExtLst = NewCT_ExtensionList()
				if _cbba := d.DecodeElement(_agdcc.ExtLst, &_ddabb); _cbba != nil {
					return _cbba
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _ddabb.Name)
				if _bgffg := d.Skip(); _bgffg != nil {
					return _bgffg
				}
			}
		case _a.EndElement:
			break _dgedea
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_TablePart() *CT_TablePart              { _bdgff := &CT_TablePart{}; return _bdgff }
func (_eagfae ST_TableStyleType) Validate() error { return _eagfae.ValidateWithPath("") }

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_gacbab *CT_SharedUser) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gacbab.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ebfbec := range start.Attr {
		if _ebfbec.Name.Local == "\u0067\u0075\u0069\u0064" {
			_acbfe := _ebfbec.Value
			_gacbab.GuidAttr = _acbfe
			continue
		}
		if _ebfbec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_beafb := _ebfbec.Value
			_gacbab.NameAttr = _beafb
			continue
		}
		if _ebfbec.Name.Local == "\u0069\u0064" {
			_ebgde, _dgbegb := _dd.ParseInt(_ebfbec.Value, 10, 32)
			if _dgbegb != nil {
				return _dgbegb
			}
			_gacbab.IdAttr = int32(_ebgde)
			continue
		}
		if _ebfbec.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_gfebf, _dbgfcd := ParseStdlibTime(_ebfbec.Value)
			if _dbgfcd != nil {
				return _dbgfcd
			}
			_gacbab.DateTimeAttr = _gfebf
			continue
		}
	}
_ffbfe:
	for {
		_cfcda, _bfdbf := d.Token()
		if _bfdbf != nil {
			return _bfdbf
		}
		switch _bffec := _cfcda.(type) {
		case _a.StartElement:
			switch _bffec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gacbab.ExtLst = NewCT_ExtensionList()
				if _cbdecg := d.DecodeElement(_gacbab.ExtLst, &_bffec); _cbdecg != nil {
					return _cbdecg
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _bffec.Name)
				if _gffce := d.Skip(); _gffce != nil {
					return _gffce
				}
			}
		case _a.EndElement:
			break _ffbfe
		case _a.CharData:
		}
	}
	return nil
}
func ParseSliceST_CellSpans(s string) (ST_CellSpans, error) { return ST_CellSpans(_d.Fields(s)), nil }
func (_cbgfe ST_PivotAreaType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fgbddg := _a.Attr{}
	_fgbddg.Name = name
	switch _cbgfe {
	case ST_PivotAreaTypeUnset:
		_fgbddg.Value = ""
	case ST_PivotAreaTypeNone:
		_fgbddg.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_fgbddg.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_fgbddg.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_fgbddg.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_fgbddg.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_fgbddg.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_fgbddg.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_fgbddg.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _fgbddg, nil
}

type CT_RPrElt struct{ RPrEltChoice []*CT_RPrEltChoice }

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_begc *CT_NumFmt) ValidateWithPath(path string) error { return nil }
func (_gaf *CT_Border) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gaf.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gaf.DiagonalUpAttr))})
	}
	if _gaf.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gaf.DiagonalDownAttr))})
	}
	if _gaf.OutlineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gaf.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _gaf.Start != nil {
		_cea := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0073\u0074\u0061\u0072t"}}
		e.EncodeElement(_gaf.Start, _cea)
	}
	if _gaf.End != nil {
		_cffb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_gaf.End, _cffb)
	}
	if _gaf.Left != nil {
		_dacf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_gaf.Left, _dacf)
	}
	if _gaf.Right != nil {
		_cca := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0069\u0067\u0068t"}}
		e.EncodeElement(_gaf.Right, _cca)
	}
	if _gaf.Top != nil {
		_egb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_gaf.Top, _egb)
	}
	if _gaf.Bottom != nil {
		_cbg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_gaf.Bottom, _cbg)
	}
	if _gaf.Diagonal != nil {
		_agd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_gaf.Diagonal, _agd)
	}
	if _gaf.Vertical != nil {
		_bga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_gaf.Vertical, _bga)
	}
	if _gaf.Horizontal != nil {
		_dgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0068\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_gaf.Horizontal, _dgg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfbcbb *CT_Drawing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cfbcbb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffeg *CT_CustomWorkbookViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eede:
	for {
		_bbdfb, _gacaa := d.Token()
		if _gacaa != nil {
			return _gacaa
		}
		switch _gbec := _bbdfb.(type) {
		case _a.StartElement:
			switch _gbec.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_cebc := NewCT_CustomWorkbookView()
				if _egef := d.DecodeElement(_cebc, &_gbec); _egef != nil {
					return _egef
				}
				_ffeg.CustomWorkbookView = append(_ffeg.CustomWorkbookView, _cebc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gbec.Name)
				if _aebd := d.Skip(); _aebd != nil {
					return _aebd
				}
			}
		case _a.EndElement:
			break _eede
		case _a.CharData:
		}
	}
	return nil
}
func (_deecgd ST_FilterOperator) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_deecgd.String(), start)
}
func (_ggdeb ST_PatternType) String() string {
	switch _ggdeb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}

// Validate validates the CT_XStringElement and its children
func (_ecfdcc *CT_XStringElement) Validate() error {
	return _ecfdcc.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}
func (_dacead *CT_TablePart) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dacead.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

func (_gbdfge *CT_Schema) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbcfgd := range start.Attr {
		if _cbcfgd.Name.Local == "\u0049\u0044" {
			_bcddc := _cbcfgd.Value
			_gbdfge.IDAttr = _bcddc
			continue
		}
		if _cbcfgd.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_bbgcbc := _cbcfgd.Value
			_gbdfge.SchemaRefAttr = &_bbgcbc
			continue
		}
		if _cbcfgd.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_daedag := _cbcfgd.Value
			_gbdfge.NamespaceAttr = &_daedag
			continue
		}
		if _cbcfgd.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_debgg := _cbcfgd.Value
			_gbdfge.SchemaLanguageAttr = &_debgg
			continue
		}
	}
_cbdgda:
	for {
		_bcgaff, _ggfdg := d.Token()
		if _ggfdg != nil {
			return _ggfdg
		}
		switch _aabgc := _bcgaff.(type) {
		case _a.StartElement:
			switch _aabgc.Name {
			default:
				if _dcbca, _fafce := _ff.CreateElement(_aabgc); _fafce != nil {
					return _fafce
				} else {
					if _fcbdaeg := d.DecodeElement(_dcbca, &_aabgc); _fcbdaeg != nil {
						return _fcbdaeg
					}
					_gbdfge.Any = _dcbca
				}
			}
		case _a.EndElement:
			break _cbdgda
		case _a.CharData:
		}
	}
	return nil
}

type ST_IconSetType byte

func (_cgcgda ST_FormulaExpression) Validate() error { return _cgcgda.ValidateWithPath("") }
func (_efce *CT_FontName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _efce.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dbbeee ST_DateTimeGrouping) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dbbeee.String(), start)
}
func NewCT_Formats() *CT_Formats {
	_adecf := &CT_Formats{}
	return _adecf
}

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_dfcec *ExternalLink) ValidateWithPath(path string) error {
	if _dcedag := _dfcec.CT_ExternalLink.ValidateWithPath(path); _dcedag != nil {
		return _dcedag
	}
	return nil
}
func (_fccbg *ST_HtmlFmt) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fccbg = 0
	case "\u006e\u006f\u006e\u0065":
		*_fccbg = 1
	case "\u0072\u0074\u0066":
		*_fccbg = 2
	case "\u0061\u006c\u006c":
		*_fccbg = 3
	}
	return nil
}
func NewCT_ControlPr() *CT_ControlPr {
	_ceaa := &CT_ControlPr{}
	_ceaa.Anchor = NewCT_ObjectAnchor()
	return _ceaa
}
func (_dgcf *CT_CellStyles) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dgcf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dgcf.CountAttr)})
	}
	e.EncodeToken(start)
	_fcdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _ddggd := range _dgcf.CellStyle {
		e.EncodeElement(_ddggd, _fcdd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WebPublishItem and its children
func (_edbcb *CT_WebPublishItem) Validate() error {
	return _edbcb.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}

type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PivotFilters and its children
func (_bfbfc *CT_PivotFilters) Validate() error {
	return _bfbfc.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_cccc *CT_OleLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cccc.IdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _cccc.ProgIdAttr)})
	e.EncodeToken(start)
	if _cccc.OleItems != nil {
		_cbadd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_cccc.OleItems, _cbadd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dadec ST_Pane) ValidateWithPath(path string) error {
	switch _dadec {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dadec))
	}
	return nil
}

type ExternalLink struct{ CT_ExternalLink }

func (_dbcga ST_FontScheme) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dbcga.String(), start)
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

// Validate validates the CT_MetadataBlock and its children
func (_ffbaf *CT_MetadataBlock) Validate() error {
	return _ffbaf.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}
func (_bdece *CT_Workbook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdece.ConformanceAttr != _b.ST_ConformanceClassUnset {
		_aaead, _agfegf := _bdece.ConformanceAttr.MarshalXMLAttr(_a.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _agfegf != nil {
			return _agfegf
		}
		start.Attr = append(start.Attr, _aaead)
	}
	e.EncodeToken(start)
	if _bdece.FileVersion != nil {
		_deefag := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_bdece.FileVersion, _deefag)
	}
	if _bdece.FileSharing != nil {
		_febbd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_bdece.FileSharing, _febbd)
	}
	if _bdece.WorkbookPr != nil {
		_gbbag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0077\u006f\u0072\u006b\u0062o\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_bdece.WorkbookPr, _gbbag)
	}
	if _bdece.WorkbookProtection != nil {
		_fgcggd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003awo\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069o\u006e"}}
		e.EncodeElement(_bdece.WorkbookProtection, _fgcggd)
	}
	if _bdece.BookViews != nil {
		_dcgga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_bdece.BookViews, _dcgga)
	}
	_ebabb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0073"}}
	e.EncodeElement(_bdece.Sheets, _ebabb)
	if _bdece.FunctionGroups != nil {
		_aeffgg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0075\u006e\u0063\u0074i\u006f\u006eG\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_bdece.FunctionGroups, _aeffgg)
	}
	if _bdece.ExternalReferences != nil {
		_agedf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003aex\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073"}}
		e.EncodeElement(_bdece.ExternalReferences, _agedf)
	}
	if _bdece.DefinedNames != nil {
		_beecg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0064\u0065f\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_bdece.DefinedNames, _beecg)
	}
	if _bdece.CalcPr != nil {
		_beac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0061\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_bdece.CalcPr, _beac)
	}
	if _bdece.OleSize != nil {
		_bagde := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_bdece.OleSize, _bagde)
	}
	if _bdece.CustomWorkbookViews != nil {
		_aaeef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:c\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_bdece.CustomWorkbookViews, _aaeef)
	}
	if _bdece.PivotCaches != nil {
		_aacea := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_bdece.PivotCaches, _aacea)
	}
	if _bdece.SmartTagPr != nil {
		_ecaff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_bdece.SmartTagPr, _ecaff)
	}
	if _bdece.SmartTagTypes != nil {
		_cdgbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_bdece.SmartTagTypes, _cdgbc)
	}
	if _bdece.WebPublishing != nil {
		_ceeddd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_bdece.WebPublishing, _ceeddd)
	}
	if _bdece.FileRecoveryPr != nil {
		_aaaee := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u006c\u0065\u0052e\u0063\u006fv\u0065\u0072\u0079\u0050\u0072"}}
		for _, _geafbcc := range _bdece.FileRecoveryPr {
			e.EncodeElement(_geafbcc, _aaaee)
		}
	}
	if _bdece.WebPublishObjects != nil {
		_aeeaee := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0077eb\u0050u\u0062\u006c\u0069\u0073\u0068O\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_bdece.WebPublishObjects, _aeeaee)
	}
	if _bdece.ExtLst != nil {
		_ggdfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdece.ExtLst, _ggdfe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_daadd *Comments) ValidateWithPath(path string) error {
	if _afbge := _daadd.CT_Comments.ValidateWithPath(path); _afbge != nil {
		return _afbge
	}
	return nil
}

type CT_CacheSourceChoice struct {

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _ff.Any
}

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

func (_fefdd *CT_ServerFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdgcg := range start.Attr {
		if _fdgcg.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_bgfdb := _fdgcg.Value
			_fefdd.CultureAttr = &_bgfdb
			continue
		}
		if _fdgcg.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_bfdgf := _fdgcg.Value
			_fefdd.FormatAttr = &_bfdgf
			continue
		}
	}
	for {
		_dffgb, _abbac := d.Token()
		if _abbac != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _abbac)
		}
		if _bfbca, _dceda := _dffgb.(_a.EndElement); _dceda && _bfbca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eaaaab *CT_UndoInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaaaab.ExpAttr = ST_FormulaExpression(1)
	for _, _aacee := range start.Attr {
		if _aacee.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_bafbe, _aeefa := _dd.ParseUint(_aacee.Value, 10, 32)
			if _aeefa != nil {
				return _aeefa
			}
			_eaaaab.IndexAttr = uint32(_bafbe)
			continue
		}
		if _aacee.Name.Local == "\u0065\u0078\u0070" {
			_eaaaab.ExpAttr.UnmarshalXMLAttr(_aacee)
			continue
		}
		if _aacee.Name.Local == "\u0072\u0065\u00663\u0044" {
			_afebea, _feaea := _dd.ParseBool(_aacee.Value)
			if _feaea != nil {
				return _feaea
			}
			_eaaaab.Ref3DAttr = &_afebea
			continue
		}
		if _aacee.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_gfcbcb, _affddf := _dd.ParseBool(_aacee.Value)
			if _affddf != nil {
				return _affddf
			}
			_eaaaab.ArrayAttr = &_gfcbcb
			continue
		}
		if _aacee.Name.Local == "\u0076" {
			_bcbgdg, _egcaaa := _dd.ParseBool(_aacee.Value)
			if _egcaaa != nil {
				return _egcaaa
			}
			_eaaaab.VAttr = &_bcbgdg
			continue
		}
		if _aacee.Name.Local == "\u006e\u0066" {
			_eafece, _addcg := _dd.ParseBool(_aacee.Value)
			if _addcg != nil {
				return _addcg
			}
			_eaaaab.NfAttr = &_eafece
			continue
		}
		if _aacee.Name.Local == "\u0063\u0073" {
			_cedab, _ebebg := _dd.ParseBool(_aacee.Value)
			if _ebebg != nil {
				return _ebebg
			}
			_eaaaab.CsAttr = &_cedab
			continue
		}
		if _aacee.Name.Local == "\u0064\u0072" {
			_aagbgg := _aacee.Value
			_eaaaab.DrAttr = _aagbgg
			continue
		}
		if _aacee.Name.Local == "\u0064\u006e" {
			_cffca := _aacee.Value
			_eaaaab.DnAttr = &_cffca
			continue
		}
		if _aacee.Name.Local == "\u0072" {
			_cdgcb := _aacee.Value
			_eaaaab.RAttr = &_cdgcb
			continue
		}
		if _aacee.Name.Local == "\u0073\u0049\u0064" {
			_ffadde, _dfeec := _dd.ParseUint(_aacee.Value, 10, 32)
			if _dfeec != nil {
				return _dfeec
			}
			_eccfc := uint32(_ffadde)
			_eaaaab.SIdAttr = &_eccfc
			continue
		}
	}
	for {
		_gbaeg, _eccaf := d.Token()
		if _eccaf != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _eccaf)
		}
		if _fbcad, _begecc := _gbaeg.(_a.EndElement); _begecc && _fbcad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gdfbc *CT_Top10) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gdfbc.TopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdfbc.TopAttr))})
	}
	if _gdfbc.PercentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gdfbc.PercentAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _gdfbc.ValAttr)})
	if _gdfbc.FilterValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _fd.Sprintf("\u0025\u0076", *_gdfbc.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fgaff ST_WebSourceType) ValidateWithPath(path string) error {
	switch _fgaff {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgaff))
	}
	return nil
}

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

func NewCT_OutlinePr() *CT_OutlinePr       { _fdccb := &CT_OutlinePr{}; return _fdccb }
func NewCT_TableMissing() *CT_TableMissing { _abegcf := &CT_TableMissing{}; return _abegcf }

// ValidateWithPath validates the CT_RPrEltChoice and its children, prefixing error messages with path
func (_eggbc *CT_RPrEltChoice) ValidateWithPath(path string) error {
	if _eggbc.RFont != nil {
		if _eaada := _eggbc.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _eaada != nil {
			return _eaada
		}
	}
	if _eggbc.Charset != nil {
		if _caaba := _eggbc.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _caaba != nil {
			return _caaba
		}
	}
	if _eggbc.Family != nil {
		if _gaabb := _eggbc.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _gaabb != nil {
			return _gaabb
		}
	}
	if _eggbc.B != nil {
		if _bcgbf := _eggbc.B.ValidateWithPath(path + "\u002f\u0042"); _bcgbf != nil {
			return _bcgbf
		}
	}
	if _eggbc.I != nil {
		if _geea := _eggbc.I.ValidateWithPath(path + "\u002f\u0049"); _geea != nil {
			return _geea
		}
	}
	if _eggbc.Strike != nil {
		if _gacebb := _eggbc.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _gacebb != nil {
			return _gacebb
		}
	}
	if _eggbc.Outline != nil {
		if _ecddb := _eggbc.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _ecddb != nil {
			return _ecddb
		}
	}
	if _eggbc.Shadow != nil {
		if _aegfd := _eggbc.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _aegfd != nil {
			return _aegfd
		}
	}
	if _eggbc.Condense != nil {
		if _cgcfd := _eggbc.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _cgcfd != nil {
			return _cgcfd
		}
	}
	if _eggbc.Extend != nil {
		if _debgb := _eggbc.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _debgb != nil {
			return _debgb
		}
	}
	if _eggbc.Color != nil {
		if _ecafa := _eggbc.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _ecafa != nil {
			return _ecafa
		}
	}
	if _eggbc.Sz != nil {
		if _deggf := _eggbc.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _deggf != nil {
			return _deggf
		}
	}
	if _eggbc.U != nil {
		if _adcd := _eggbc.U.ValidateWithPath(path + "\u002f\u0055"); _adcd != nil {
			return _adcd
		}
	}
	if _eggbc.VertAlign != nil {
		if _egfbbd := _eggbc.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _egfbbd != nil {
			return _egfbbd
		}
	}
	if _eggbc.Scheme != nil {
		if _afbgf := _eggbc.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _afbgf != nil {
			return _afbgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_gfcbc *CT_Scenarios) ValidateWithPath(path string) error {
	for _abffce, _gdcaa := range _gfcbc.Scenario {
		if _efbcc := _gdcaa.ValidateWithPath(_fd.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _abffce)); _efbcc != nil {
			return _efbcc
		}
	}
	return nil
}
func (_afffb *CT_Sheets) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fbegc:
	for {
		_ccgbd, _gbcefe := d.Token()
		if _gbcefe != nil {
			return _gbcefe
		}
		switch _eggfg := _ccgbd.(type) {
		case _a.StartElement:
			switch _eggfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_eebac := NewCT_Sheet()
				if _dcgd := d.DecodeElement(_eebac, &_eggfg); _dcgd != nil {
					return _dcgd
				}
				_afffb.Sheet = append(_afffb.Sheet, _eebac)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _eggfg.Name)
				if _dcbae := d.Skip(); _dcbae != nil {
					return _dcbae
				}
			}
		case _a.EndElement:
			break _fbegc
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_ddgde *CT_Format) ValidateWithPath(path string) error {
	if _eedb := _ddgde.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _eedb != nil {
		return _eedb
	}
	if _cabed := _ddgde.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _cabed != nil {
		return _cabed
	}
	if _ddgde.ExtLst != nil {
		if _ggcbfc := _ddgde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggcbfc != nil {
			return _ggcbfc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_egfbfg *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_egfbfg.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _egfbfg.GuidAttr)
	}
	if _eddcb := _egfbfg.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _eddcb != nil {
		return _eddcb
	}
	if _bfgbg := _egfbfg.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _bfgbg != nil {
		return _bfgbg
	}
	if _egfbfg.ExtLst != nil {
		if _abef := _egfbfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abef != nil {
			return _abef
		}
	}
	return nil
}

// Validate validates the CT_Reviewed and its children
func (_gfadeb *CT_Reviewed) Validate() error {
	return _gfadeb.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}
func NewCT_CellSmartTag() *CT_CellSmartTag { _gge := &CT_CellSmartTag{}; return _gge }
func (_ageab *CT_OleItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ageab.NameAttr)})
	if _ageab.IconAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ageab.IconAttr))})
	}
	if _ageab.AdviseAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ageab.AdviseAttr))})
	}
	if _ageab.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ageab.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_PhoneticType byte
type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

func (_dgdcbb *CT_OlapPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _badac := range start.Attr {
		if _badac.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_acedf, _cdedb := _dd.ParseBool(_badac.Value)
			if _cdedb != nil {
				return _cdedb
			}
			_dgdcbb.LocalAttr = &_acedf
			continue
		}
		if _badac.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_bgdcf := _badac.Value
			_dgdcbb.LocalConnectionAttr = &_bgdcf
			continue
		}
		if _badac.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_eedbf, _gcdge := _dd.ParseBool(_badac.Value)
			if _gcdge != nil {
				return _gcdge
			}
			_dgdcbb.LocalRefreshAttr = &_eedbf
			continue
		}
		if _badac.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_gaefa, _dgcgc := _dd.ParseBool(_badac.Value)
			if _dgcgc != nil {
				return _dgcgc
			}
			_dgdcbb.SendLocaleAttr = &_gaefa
			continue
		}
		if _badac.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_bcddfa, _cabad := _dd.ParseUint(_badac.Value, 10, 32)
			if _cabad != nil {
				return _cabad
			}
			_fdeaf := uint32(_bcddfa)
			_dgdcbb.RowDrillCountAttr = &_fdeaf
			continue
		}
		if _badac.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_ggfcg, _bdgdg := _dd.ParseBool(_badac.Value)
			if _bdgdg != nil {
				return _bdgdg
			}
			_dgdcbb.ServerFillAttr = &_ggfcg
			continue
		}
		if _badac.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_efbbe, _gbgce := _dd.ParseBool(_badac.Value)
			if _gbgce != nil {
				return _gbgce
			}
			_dgdcbb.ServerNumberFormatAttr = &_efbbe
			continue
		}
		if _badac.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_fgaeda, _eecggg := _dd.ParseBool(_badac.Value)
			if _eecggg != nil {
				return _eecggg
			}
			_dgdcbb.ServerFontAttr = &_fgaeda
			continue
		}
		if _badac.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_gceba, _egeba := _dd.ParseBool(_badac.Value)
			if _egeba != nil {
				return _egeba
			}
			_dgdcbb.ServerFontColorAttr = &_gceba
			continue
		}
	}
	for {
		_bagfe, _ccffb := d.Token()
		if _ccffb != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _ccffb)
		}
		if _ggaaa, _dgbeb := _bagfe.(_a.EndElement); _dgbeb && _ggaaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bddgf *CT_VolMain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _adfcf := range start.Attr {
		if _adfcf.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_bfbcd := _adfcf.Value
			_bddgf.FirstAttr = _bfbcd
			continue
		}
	}
_fcggg:
	for {
		_eeagf, _bageba := d.Token()
		if _bageba != nil {
			return _bageba
		}
		switch _eecae := _eeagf.(type) {
		case _a.StartElement:
			switch _eecae.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_fcaa := NewCT_VolTopic()
				if _dffgbad := d.DecodeElement(_fcaa, &_eecae); _dffgbad != nil {
					return _dffgbad
				}
				_bddgf.Tp = append(_bddgf.Tp, _fcaa)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _eecae.Name)
				if _efacc := d.Skip(); _efacc != nil {
					return _efacc
				}
			}
		case _a.EndElement:
			break _fcggg
		case _a.CharData:
		}
	}
	return nil
}
func (_afec *CT_Color) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dcddc := range start.Attr {
		if _dcddc.Name.Local == "\u0061\u0075\u0074\u006f" {
			_bcbee, _bcfd := _dd.ParseBool(_dcddc.Value)
			if _bcfd != nil {
				return _bcfd
			}
			_afec.AutoAttr = &_bcbee
			continue
		}
		if _dcddc.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_cecb, _bgff := _dd.ParseUint(_dcddc.Value, 10, 32)
			if _bgff != nil {
				return _bgff
			}
			_bbff := uint32(_cecb)
			_afec.IndexedAttr = &_bbff
			continue
		}
		if _dcddc.Name.Local == "\u0072\u0067\u0062" {
			_fbgab := _dcddc.Value
			_afec.RgbAttr = &_fbgab
			continue
		}
		if _dcddc.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_afbc, _dgcfc := _dd.ParseUint(_dcddc.Value, 10, 32)
			if _dgcfc != nil {
				return _dgcfc
			}
			_fcfeg := uint32(_afbc)
			_afec.ThemeAttr = &_fcfeg
			continue
		}
		if _dcddc.Name.Local == "\u0074\u0069\u006e\u0074" {
			_cfca, _ffcff := _dd.ParseFloat(_dcddc.Value, 64)
			if _ffcff != nil {
				return _ffcff
			}
			_afec.TintAttr = &_cfca
			continue
		}
	}
	for {
		_gfca, _bdag := d.Token()
		if _bdag != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _bdag)
		}
		if _cega, _ffbf := _gfca.(_a.EndElement); _ffbf && _cega.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_dcaca *PivotTableDefinition) ValidateWithPath(path string) error {
	if _beagf := _dcaca.CT_pivotTableDefinition.ValidateWithPath(path); _beagf != nil {
		return _beagf
	}
	return nil
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_cafbdg *CT_WebPr) ValidateWithPath(path string) error {
	if _edbab := _cafbdg.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _edbab != nil {
		return _edbab
	}
	if _cafbdg.Tables != nil {
		if _gffac := _cafbdg.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _gffac != nil {
			return _gffac
		}
	}
	return nil
}
func (_egcdd ST_OleUpdate) Validate() error { return _egcdd.ValidateWithPath("") }

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_cfddd *CT_VolType) ValidateWithPath(path string) error {
	if _cfddd.TypeAttr == ST_VolDepTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ecacdgd := _cfddd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ecacdgd != nil {
		return _ecacdgd
	}
	for _ccgdb, _afcab := range _cfddd.Main {
		if _bdabad := _afcab.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _ccgdb)); _bdabad != nil {
			return _bdabad
		}
	}
	return nil
}
func (_dgbfd *CT_FontSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acaa := range start.Attr {
		if _acaa.Name.Local == "\u0076\u0061\u006c" {
			_abdbe, _efbea := _dd.ParseFloat(_acaa.Value, 64)
			if _efbea != nil {
				return _efbea
			}
			_dgbfd.ValAttr = _abdbe
			continue
		}
	}
	for {
		_ebffd, _efag := d.Token()
		if _efag != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _efag)
		}
		if _dbfga, _cefaf := _ebffd.(_a.EndElement); _cefaf && _dbfga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abefe *CT_RangePr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abefe.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abefe.AutoStartAttr))})
	}
	if _abefe.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abefe.AutoEndAttr))})
	}
	if _abefe.GroupByAttr != ST_GroupByUnset {
		_acdac, _eeaafc := _abefe.GroupByAttr.MarshalXMLAttr(_a.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _eeaafc != nil {
			return _eeaafc
		}
		start.Attr = append(start.Attr, _acdac)
	}
	if _abefe.StartNumAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_abefe.StartNumAttr)})
	}
	if _abefe.EndNumAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_abefe.EndNumAttr)})
	}
	if _abefe.StartDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _b.FormatDateTime(*_abefe.StartDateAttr)})
	}
	if _abefe.EndDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _b.FormatDateTime(*_abefe.EndDateAttr)})
	}
	if _abefe.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_abefe.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_SheetFormatPr() *CT_SheetFormatPr { _fegba := &CT_SheetFormatPr{}; return _fegba }

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_egbag *CT_Comment) ValidateWithPath(path string) error {
	if _egbag.GuidAttr != nil {
		if !_b.ST_GuidPatternRe.MatchString(*_egbag.GuidAttr) {
			return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, *_egbag.GuidAttr)
		}
	}
	if _agfe := _egbag.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _agfe != nil {
		return _agfe
	}
	if _egbag.CommentPr != nil {
		if _ggcbf := _egbag.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _ggcbf != nil {
			return _ggcbf
		}
	}
	return nil
}
func (_edbe *CT_MetadataBlocks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edbe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edbe.CountAttr)})
	}
	e.EncodeToken(start)
	_ececfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006b"}}
	for _, _bedff := range _edbe.Bk {
		e.EncodeElement(_bedff, _ececfa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_efdge *CT_Xf) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _efdge.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efdge.NumFmtIdAttr)})
	}
	if _efdge.FontIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efdge.FontIdAttr)})
	}
	if _efdge.FillIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efdge.FillIdAttr)})
	}
	if _efdge.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efdge.BorderIdAttr)})
	}
	if _efdge.XfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_efdge.XfIdAttr)})
	}
	if _efdge.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.QuotePrefixAttr))})
	}
	if _efdge.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.PivotButtonAttr))})
	}
	if _efdge.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyNumberFormatAttr))})
	}
	if _efdge.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyFontAttr))})
	}
	if _efdge.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyFillAttr))})
	}
	if _efdge.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyBorderAttr))})
	}
	if _efdge.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyAlignmentAttr))})
	}
	if _efdge.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_efdge.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _efdge.Alignment != nil {
		_gfabb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_efdge.Alignment, _gfabb)
	}
	if _efdge.Protection != nil {
		_cgfggg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_efdge.Protection, _cgfggg)
	}
	if _efdge.ExtLst != nil {
		_fbfca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efdge.ExtLst, _fbfca)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}
type ST_ConditionalFormattingOperator byte

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_adefa *CT_Tuple) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_gfded *CT_VerticalAlignFontProperty) Validate() error {
	return _gfded.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}
func (_fccd *CT_ExternalLink) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_fccd.ExternalLinkChoice.MarshalXML(e, _a.StartElement{})
	if _fccd.ExtLst != nil {
		_daedd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fccd.ExtLst, _daedd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_debeg *CT_X) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _debeg.VAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", *_debeg.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

func (_bddgde ST_UpdateLinks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bddgde.String(), start)
}
func (_abeb *CT_CellSmartTag) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _abeb.TypeAttr)})
	if _abeb.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abeb.DeletedAttr))})
	}
	if _abeb.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abeb.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _abeb.CellSmartTagPr != nil {
		_ebcg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0065\u006c\u006c\u0053m\u0061\u0072t\u0054\u0061\u0067\u0050\u0072"}}
		for _, _cagd := range _abeb.CellSmartTagPr {
			e.EncodeElement(_cagd, _ebcg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_ParameterType byte

func (_edaf *CT_Members) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edaf.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edaf.CountAttr)})
	}
	if _edaf.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_edaf.LevelAttr)})
	}
	e.EncodeToken(start)
	_gdgab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _bddagd := range _edaf.Member {
		e.EncodeElement(_bddagd, _gdgab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_bgfg *CT_InputCells) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_dgbab *CT_SheetId) ValidateWithPath(path string) error { return nil }

type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_gaffc *CT_DataBinding) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gaffc.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaffc.DataBindingNameAttr)})
	}
	if _gaffc.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gaffc.FileBindingAttr))})
	}
	if _gaffc.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _fd.Sprintf("\u0025\u0076", *_gaffc.ConnectionIDAttr)})
	}
	if _gaffc.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gaffc.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gaffc.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _gaffc.Any != nil {
		_gaffc.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

func (_cdfdec ST_ExternalConnectionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fdceea := _a.Attr{}
	_fdceea.Name = name
	switch _cdfdec {
	case ST_ExternalConnectionTypeUnset:
		_fdceea.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_fdceea.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_fdceea.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_fdceea.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_fdceea.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_fdceea.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_fdceea.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_fdceea.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_fdceea.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_fdceea.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_fdceea.Value = "\u0045\u004d\u0044"
	}
	return _fdceea, nil
}

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}
type ST_TargetScreenSize byte
type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_bdeg *CT_Colors) ValidateWithPath(path string) error {
	if _bdeg.IndexedColors != nil {
		if _acfb := _bdeg.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _acfb != nil {
			return _acfb
		}
	}
	if _bdeg.MruColors != nil {
		if _eafea := _bdeg.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _eafea != nil {
			return _eafea
		}
	}
	return nil
}

type ST_CfType byte

func (_gfaeg ST_Orientation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gfaeg.String(), start)
}

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_adegbd *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _bffdg, _deabe := range _adegbd.Reviewed {
		if _gdaee := _deabe.ValidateWithPath(_fd.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _bffdg)); _gdaee != nil {
			return _gdaee
		}
	}
	return nil
}
func (_efddcf ST_SheetViewType) String() string {
	switch _efddcf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}
func (_fcgef *CT_OleObjects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_eeaeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _eggfd := range _fcgef.OleObject {
		e.EncodeElement(_eggfd, _eeaeg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ebedb *CT_RevisionRowColumn) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ebedb.ActionAttr = ST_rwColActionType(1)
	for _, _eebeg := range start.Attr {
		if _eebeg.Name.Local == "\u0073\u0049\u0064" {
			_aefeg, _eebgc := _dd.ParseUint(_eebeg.Value, 10, 32)
			if _eebgc != nil {
				return _eebgc
			}
			_ebedb.SIdAttr = uint32(_aefeg)
			continue
		}
		if _eebeg.Name.Local == "\u0065\u006f\u006c" {
			_ecfefb, _dfegab := _dd.ParseBool(_eebeg.Value)
			if _dfegab != nil {
				return _dfegab
			}
			_ebedb.EolAttr = &_ecfefb
			continue
		}
		if _eebeg.Name.Local == "\u0072\u0065\u0066" {
			_ebadbf := _eebeg.Value
			_ebedb.RefAttr = _ebadbf
			continue
		}
		if _eebeg.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_ebedb.ActionAttr.UnmarshalXMLAttr(_eebeg)
			continue
		}
		if _eebeg.Name.Local == "\u0065\u0064\u0067\u0065" {
			_dadfba, _cggdc := _dd.ParseBool(_eebeg.Value)
			if _cggdc != nil {
				return _cggdc
			}
			_ebedb.EdgeAttr = &_dadfba
			continue
		}
		if _eebeg.Name.Local == "\u0072\u0049\u0064" {
			_dabde, _cacbg := _dd.ParseUint(_eebeg.Value, 10, 32)
			if _cacbg != nil {
				return _cacbg
			}
			_ebedb.RIdAttr = uint32(_dabde)
			continue
		}
		if _eebeg.Name.Local == "\u0075\u0061" {
			_cgafc, _bccdg := _dd.ParseBool(_eebeg.Value)
			if _bccdg != nil {
				return _bccdg
			}
			_ebedb.UaAttr = &_cgafc
			continue
		}
		if _eebeg.Name.Local == "\u0072\u0061" {
			_ffdeg, _cadfc := _dd.ParseBool(_eebeg.Value)
			if _cadfc != nil {
				return _cadfc
			}
			_ebedb.RaAttr = &_ffdeg
			continue
		}
	}
_cagfd:
	for {
		_ccda, _beecd := d.Token()
		if _beecd != nil {
			return _beecd
		}
		switch _ccbdf := _ccda.(type) {
		case _a.StartElement:
			switch _ccbdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_ggaea := NewCT_RevisionRowColumnChoice()
				if _baabe := d.DecodeElement(&_ggaea.Undo, &_ccbdf); _baabe != nil {
					return _baabe
				}
				_ebedb.RevisionRowColumnChoice = append(_ebedb.RevisionRowColumnChoice, _ggaea)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_gbad := NewCT_RevisionRowColumnChoice()
				if _gacbdg := d.DecodeElement(&_gbad.Rcc, &_ccbdf); _gacbdg != nil {
					return _gacbdg
				}
				_ebedb.RevisionRowColumnChoice = append(_ebedb.RevisionRowColumnChoice, _gbad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_degfbc := NewCT_RevisionRowColumnChoice()
				if _dagacb := d.DecodeElement(&_degfbc.Rfmt, &_ccbdf); _dagacb != nil {
					return _dagacb
				}
				_ebedb.RevisionRowColumnChoice = append(_ebedb.RevisionRowColumnChoice, _degfbc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _ccbdf.Name)
				if _ggdgae := d.Skip(); _ggdgae != nil {
					return _ggdgae
				}
			}
		case _a.EndElement:
			break _cagfd
		case _a.CharData:
		}
	}
	return nil
}

type ST_CalcMode byte

func NewCT_CalculatedMember() *CT_CalculatedMember { _aaba := &CT_CalculatedMember{}; return _aaba }
func (_ebgcb *VolTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069:\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _ebgcb.CT_VolTypes.MarshalXML(e, start)
}
func (_becaf *CT_RevisionQueryTableField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fccbd := range start.Attr {
		if _fccbd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_gegfd, _fddcg := _dd.ParseUint(_fccbd.Value, 10, 32)
			if _fddcg != nil {
				return _fddcg
			}
			_becaf.SheetIdAttr = uint32(_gegfd)
			continue
		}
		if _fccbd.Name.Local == "\u0072\u0065\u0066" {
			_afcfb := _fccbd.Value
			_becaf.RefAttr = _afcfb
			continue
		}
		if _fccbd.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_dgbff, _aefcb := _dd.ParseUint(_fccbd.Value, 10, 32)
			if _aefcb != nil {
				return _aefcb
			}
			_becaf.FieldIdAttr = uint32(_dgbff)
			continue
		}
	}
	for {
		_egfga, _abgdad := d.Token()
		if _abgdad != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _abgdad)
		}
		if _bddeg, _aeece := _egfga.(_a.EndElement); _aeece && _bddeg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_caddc *CT_Row) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _caddc.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_caddc.RAttr)})
	}
	if _caddc.SpansAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_caddc.SpansAttr)})
	}
	if _caddc.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_caddc.SAttr)})
	}
	if _caddc.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.CustomFormatAttr))})
	}
	if _caddc.HtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_caddc.HtAttr)})
	}
	if _caddc.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.HiddenAttr))})
	}
	if _caddc.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.CustomHeightAttr))})
	}
	if _caddc.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_caddc.OutlineLevelAttr)})
	}
	if _caddc.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.CollapsedAttr))})
	}
	if _caddc.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.ThickTopAttr))})
	}
	if _caddc.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.ThickBotAttr))})
	}
	if _caddc.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_caddc.PhAttr))})
	}
	e.EncodeToken(start)
	if _caddc.C != nil {
		_addbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063"}}
		for _, _dbfbb := range _caddc.C {
			e.EncodeElement(_dbfbb, _addbc)
		}
	}
	if _caddc.ExtLst != nil {
		_caddb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caddc.ExtLst, _caddb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dfabf ST_MdxKPIProperty) Validate() error { return _dfabf.ValidateWithPath("") }
func NewCT_ServerFormat() *CT_ServerFormat       { _bfcgdd := &CT_ServerFormat{}; return _bfcgdd }
func (_caab *CT_CommentList) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _caab.Comment != nil {
		_feef := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _ggdg := range _caab.Comment {
			e.EncodeElement(_ggdg, _feef)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_egbgc ST_PivotFilterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_egbgc.String(), start)
}

// Validate validates the CT_TableFormula and its children
func (_bbdbdb *CT_TableFormula) Validate() error {
	return _bbdbdb.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

type CT_TableMissing struct{}

func (_effbbc *CT_LegacyDrawing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _effbbc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

func NewChartsheet() *Chartsheet {
	_ccgfb := &Chartsheet{}
	_ccgfb.CT_Chartsheet = *NewCT_Chartsheet()
	return _ccgfb
}
func (_daefb *ST_FieldSortType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_daefb = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_daefb = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_daefb = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_daefb = 3
	}
	return nil
}
func (_daaaab *CT_RevisionFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _daaaab.SheetIdAttr)})
	if _daaaab.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_daaaab.XfDxfAttr))})
	}
	if _daaaab.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_daaaab.SAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _daaaab.SqrefAttr)})
	if _daaaab.StartAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_daaaab.StartAttr)})
	}
	if _daaaab.LengthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_daaaab.LengthAttr)})
	}
	e.EncodeToken(start)
	if _daaaab.Dxf != nil {
		_gdcbbc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_daaaab.Dxf, _gdcbbc)
	}
	if _daaaab.ExtLst != nil {
		_acabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daaaab.ExtLst, _acabd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbgcg ST_Scope) String() string {
	switch _cbgcg {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}
func (_badee ST_FileType) Validate() error { return _badee.ValidateWithPath("") }

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_dfbga *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _ebeec := _dfbga.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _ebeec != nil {
		return _ebeec
	}
	if _dfbga.PivotFields != nil {
		if _ggedd := _dfbga.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _ggedd != nil {
			return _ggedd
		}
	}
	if _dfbga.RowFields != nil {
		if _fafbcb := _dfbga.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _fafbcb != nil {
			return _fafbcb
		}
	}
	if _dfbga.RowItems != nil {
		if _abdfcf := _dfbga.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _abdfcf != nil {
			return _abdfcf
		}
	}
	if _dfbga.ColFields != nil {
		if _gfbbfbg := _dfbga.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _gfbbfbg != nil {
			return _gfbbfbg
		}
	}
	if _dfbga.ColItems != nil {
		if _ffcce := _dfbga.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _ffcce != nil {
			return _ffcce
		}
	}
	if _dfbga.PageFields != nil {
		if _facbfd := _dfbga.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _facbfd != nil {
			return _facbfd
		}
	}
	if _dfbga.DataFields != nil {
		if _babdc := _dfbga.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _babdc != nil {
			return _babdc
		}
	}
	if _dfbga.Formats != nil {
		if _fgaggb := _dfbga.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _fgaggb != nil {
			return _fgaggb
		}
	}
	if _dfbga.ConditionalFormats != nil {
		if _ggebg := _dfbga.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _ggebg != nil {
			return _ggebg
		}
	}
	if _dfbga.ChartFormats != nil {
		if _abfda := _dfbga.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _abfda != nil {
			return _abfda
		}
	}
	if _dfbga.PivotHierarchies != nil {
		if _acccd := _dfbga.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _acccd != nil {
			return _acccd
		}
	}
	if _dfbga.PivotTableStyleInfo != nil {
		if _cbcba := _dfbga.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _cbcba != nil {
			return _cbcba
		}
	}
	if _dfbga.Filters != nil {
		if _bccbe := _dfbga.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _bccbe != nil {
			return _bccbe
		}
	}
	if _dfbga.RowHierarchiesUsage != nil {
		if _afecg := _dfbga.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _afecg != nil {
			return _afecg
		}
	}
	if _dfbga.ColHierarchiesUsage != nil {
		if _gdfcd := _dfbga.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _gdfcd != nil {
			return _gdfcd
		}
	}
	if _dfbga.ExtLst != nil {
		if _adcdf := _dfbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adcdf != nil {
			return _adcdf
		}
	}
	return nil
}
func (_feaed *CT_Members) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfaaa := range start.Attr {
		if _dfaaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egeed, _abdge := _dd.ParseUint(_dfaaa.Value, 10, 32)
			if _abdge != nil {
				return _abdge
			}
			_eggega := uint32(_egeed)
			_feaed.CountAttr = &_eggega
			continue
		}
		if _dfaaa.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_bgcff, _aedb := _dd.ParseUint(_dfaaa.Value, 10, 32)
			if _aedb != nil {
				return _aedb
			}
			_bfafd := uint32(_bgcff)
			_feaed.LevelAttr = &_bfafd
			continue
		}
	}
_edagd:
	for {
		_bcaf, _cabgfc := d.Token()
		if _cabgfc != nil {
			return _cabgfc
		}
		switch _cdded := _bcaf.(type) {
		case _a.StartElement:
			switch _cdded.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_gaaaf := NewCT_Member()
				if _bcgcb := d.DecodeElement(_gaaaf, &_cdded); _bcgcb != nil {
					return _bcgcb
				}
				_feaed.Member = append(_feaed.Member, _gaaaf)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _cdded.Name)
				if _cddga := d.Skip(); _cddga != nil {
					return _cddga
				}
			}
		case _a.EndElement:
			break _edagd
		case _a.CharData:
		}
	}
	return nil
}
func (_fgddfe *ST_SmartTagShow) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_caebae, _fffcag := d.Token()
	if _fffcag != nil {
		return _fffcag
	}
	if _ccecdb, _ggacd := _caebae.(_a.EndElement); _ggacd && _ccecdb.Name == start.Name {
		*_fgddfe = 1
		return nil
	}
	if _faeaad, _fgbeec := _caebae.(_a.CharData); !_fgbeec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caebae)
	} else {
		switch string(_faeaad) {
		case "":
			*_fgddfe = 0
		case "\u0061\u006c\u006c":
			*_fgddfe = 1
		case "\u006e\u006f\u006e\u0065":
			*_fgddfe = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_fgddfe = 3
		}
	}
	_caebae, _fffcag = d.Token()
	if _fffcag != nil {
		return _fffcag
	}
	if _dcfddc, _bbegd := _caebae.(_a.EndElement); _bbegd && _dcfddc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caebae)
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_aceac *CT_PageMargins) ValidateWithPath(path string) error { return nil }
func NewCT_Filters() *CT_Filters                                  { _edacg := &CT_Filters{}; return _edacg }

type ST_ShowDataAs byte

func (_bccafa *ST_FormulaExpression) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bccafa = 0
	case "\u0072\u0065\u0066":
		*_bccafa = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_bccafa = 2
	case "\u0061\u0072\u0065\u0061":
		*_bccafa = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_bccafa = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_bccafa = 5
	}
	return nil
}
func (_fedgfg ST_PivotAreaType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fedgfg.String(), start)
}

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_abaga *CT_DdeValue) ValidateWithPath(path string) error {
	if _cbddc := _abaga.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cbddc != nil {
		return _cbddc
	}
	return nil
}
func (_defbbg *ST_PageOrder) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_defbbg = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_defbbg = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_defbbg = 2
	}
	return nil
}

// Validate validates the CT_PageSetUpPr and its children
func (_abgdc *CT_PageSetUpPr) Validate() error {
	return _abgdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}
func (_dddcg ST_VolValueType) String() string {
	switch _dddcg {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_fdef *CT_CalcChain) ValidateWithPath(path string) error {
	for _adbc, _cfg := range _fdef.C {
		if _gggg := _cfg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _adbc)); _gggg != nil {
			return _gggg
		}
	}
	if _fdef.ExtLst != nil {
		if _beeg := _fdef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beeg != nil {
			return _beeg
		}
	}
	return nil
}

// Validate validates the CT_VolTopic and its children
func (_eefee *CT_VolTopic) Validate() error {
	return _eefee.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}
func (_gdcg *CT_CustomChartsheetViews) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gdcg.CustomSheetView != nil {
		_cfaag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003acu\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
		for _, _fagc := range _gdcg.CustomSheetView {
			e.EncodeElement(_fagc, _cfaag)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Font and its children
func (_cbee *CT_Font) Validate() error {
	return _cbee.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}
func NewCT_CustomFilter() *CT_CustomFilter { _acab := &CT_CustomFilter{}; return _acab }
func (_dedbee ST_TableStyleType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dedbee.String(), start)
}
func NewCT_Filter() *CT_Filter { _afdfg := &CT_Filter{}; return _afdfg }

// Validate validates the CT_WorkbookProtection and its children
func (_bfecfb *CT_WorkbookProtection) Validate() error {
	return _bfecfb.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_fbgea *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _fbgea.Dxf != nil {
		if _fadca := _fbgea.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _fadca != nil {
			return _fadca
		}
	}
	if _fbgea.ExtLst != nil {
		if _cgaeb := _fbgea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cgaeb != nil {
			return _cgaeb
		}
	}
	return nil
}

type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}

func (_geadfd ST_SmartTagShow) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_geadfd.String(), start)
}

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

// Validate validates the CT_VolTypes and its children
func (_bfgcb *CT_VolTypes) Validate() error {
	return _bfgcb.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}
func (_eggbf *StyleSheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0073\u0074\u0079\u006c\u0065S\u0068\u0065\u0065\u0074"
	return _eggbf.CT_Stylesheet.MarshalXML(e, start)
}

// Validate validates the CT_Comment and its children
func (_acbca *CT_Comment) Validate() error {
	return _acbca.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_Field and its children
func (_cgea *CT_Field) Validate() error {
	return _cgea.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_CellStyleXfs() *CT_CellStyleXfs { _faec := &CT_CellStyleXfs{}; return _faec }
func (_fbdfg *CT_DataRefs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbdfg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fbdfg.CountAttr)})
	}
	e.EncodeToken(start)
	if _fbdfg.DataRef != nil {
		_daea := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _gcdg := range _fbdfg.DataRef {
			e.EncodeElement(_gcdg, _daea)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bgdfb *CT_Users) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afdfe := range start.Attr {
		if _afdfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecdfccd, _bagga := _dd.ParseUint(_afdfe.Value, 10, 32)
			if _bagga != nil {
				return _bagga
			}
			_abddfg := uint32(_ecdfccd)
			_bgdfb.CountAttr = &_abddfg
			continue
		}
	}
_eabec:
	for {
		_afbdb, _bceeeb := d.Token()
		if _bceeeb != nil {
			return _bceeeb
		}
		switch _ecgea := _afbdb.(type) {
		case _a.StartElement:
			switch _ecgea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_dgcadac := NewCT_SharedUser()
				if _gcbbb := d.DecodeElement(_dgcadac, &_ecgea); _gcbbb != nil {
					return _gcbbb
				}
				_bgdfb.UserInfo = append(_bgdfb.UserInfo, _dgcadac)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _ecgea.Name)
				if _fcacf := d.Skip(); _fcacf != nil {
					return _fcacf
				}
			}
		case _a.EndElement:
			break _eabec
		case _a.CharData:
		}
	}
	return nil
}

type ST_Sqref []string

// Validate validates the QueryTable and its children
func (_adcbff *QueryTable) Validate() error {
	return _adcbff.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}

func (_afcfe *CT_Dxf) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_acadb:
	for {
		_egfff, _bacd := d.Token()
		if _bacd != nil {
			return _bacd
		}
		switch _abba := _egfff.(type) {
		case _a.StartElement:
			switch _abba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_afcfe.Font = NewCT_Font()
				if _fdfee := d.DecodeElement(_afcfe.Font, &_abba); _fdfee != nil {
					return _fdfee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_afcfe.NumFmt = NewCT_NumFmt()
				if _eeddd := d.DecodeElement(_afcfe.NumFmt, &_abba); _eeddd != nil {
					return _eeddd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_afcfe.Fill = NewCT_Fill()
				if _cgggc := d.DecodeElement(_afcfe.Fill, &_abba); _cgggc != nil {
					return _cgggc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_afcfe.Alignment = NewCT_CellAlignment()
				if _dgad := d.DecodeElement(_afcfe.Alignment, &_abba); _dgad != nil {
					return _dgad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_afcfe.Border = NewCT_Border()
				if _abfec := d.DecodeElement(_afcfe.Border, &_abba); _abfec != nil {
					return _abfec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_afcfe.Protection = NewCT_CellProtection()
				if _cdfab := d.DecodeElement(_afcfe.Protection, &_abba); _cdfab != nil {
					return _cdfab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afcfe.ExtLst = NewCT_ExtensionList()
				if _fgagd := d.DecodeElement(_afcfe.ExtLst, &_abba); _fgagd != nil {
					return _fgagd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _abba.Name)
				if _effc := d.Skip(); _effc != nil {
					return _effc
				}
			}
		case _a.EndElement:
			break _acadb
		case _a.CharData:
		}
	}
	return nil
}
func (_dgfeg *CT_OleLink) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gagdee := range start.Attr {
		if _gagdee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gagdee.Name.Local == "\u0069\u0064" || _gagdee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gagdee.Name.Local == "\u0069\u0064" {
			_fbdbb := _gagdee.Value
			_dgfeg.IdAttr = _fbdbb
			continue
		}
		if _gagdee.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_dfcgd := _gagdee.Value
			_dgfeg.ProgIdAttr = _dfcgd
			continue
		}
	}
_eaabdg:
	for {
		_acfad, _dbecb := d.Token()
		if _dbecb != nil {
			return _dbecb
		}
		switch _ebagd := _acfad.(type) {
		case _a.StartElement:
			switch _ebagd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_dgfeg.OleItems = NewCT_OleItems()
				if _gbdcc := d.DecodeElement(_dgfeg.OleItems, &_ebagd); _gbdcc != nil {
					return _gbdcc
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _ebagd.Name)
				if _ddacf := d.Skip(); _ddacf != nil {
					return _ddacf
				}
			}
		case _a.EndElement:
			break _eaabdg
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PhoneticRun() *CT_PhoneticRun { _cdgdf := &CT_PhoneticRun{}; return _cdgdf }
func NewCT_VolTopic() *CT_VolTopic {
	_dbcef := &CT_VolTopic{}
	return _dbcef
}
func NewCT_DataRef() *CT_DataRef { _eebb := &CT_DataRef{}; return _eebb }
func (_cdaba *CT_Font) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dddea:
	for {
		_dgdg, _gefe := d.Token()
		if _gefe != nil {
			return _gefe
		}
		switch _feefc := _dgdg.(type) {
		case _a.StartElement:
			switch _feefc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_adgg := NewCT_FontChoice()
				if _ecee := d.DecodeElement(&_adgg.Name, &_feefc); _ecee != nil {
					return _ecee
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _adgg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_gbcb := NewCT_FontChoice()
				if _gdcbd := d.DecodeElement(&_gbcb.Charset, &_feefc); _gdcbd != nil {
					return _gdcbd
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _gbcb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_feged := NewCT_FontChoice()
				if _ffefd := d.DecodeElement(&_feged.Family, &_feefc); _ffefd != nil {
					return _ffefd
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _feged)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_bagg := NewCT_FontChoice()
				if _gdbef := d.DecodeElement(&_bagg.B, &_feefc); _gdbef != nil {
					return _gdbef
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _bagg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cgccb := NewCT_FontChoice()
				if _babb := d.DecodeElement(&_cgccb.I, &_feefc); _babb != nil {
					return _babb
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _cgccb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_edfad := NewCT_FontChoice()
				if _bfafc := d.DecodeElement(&_edfad.Strike, &_feefc); _bfafc != nil {
					return _bfafc
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _edfad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_ecdcg := NewCT_FontChoice()
				if _fbfbb := d.DecodeElement(&_ecdcg.Outline, &_feefc); _fbfbb != nil {
					return _fbfbb
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _ecdcg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_egdf := NewCT_FontChoice()
				if _ddddg := d.DecodeElement(&_egdf.Shadow, &_feefc); _ddddg != nil {
					return _ddddg
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _egdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_fefca := NewCT_FontChoice()
				if _fecge := d.DecodeElement(&_fefca.Condense, &_feefc); _fecge != nil {
					return _fecge
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _fefca)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_dgagg := NewCT_FontChoice()
				if _cfgbf := d.DecodeElement(&_dgagg.Extend, &_feefc); _cfgbf != nil {
					return _cfgbf
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _dgagg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_ecdff := NewCT_FontChoice()
				if _gbefb := d.DecodeElement(&_ecdff.Color, &_feefc); _gbefb != nil {
					return _gbefb
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _ecdff)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_gaea := NewCT_FontChoice()
				if _gbbac := d.DecodeElement(&_gaea.Sz, &_feefc); _gbbac != nil {
					return _gbbac
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _gaea)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_fcfdg := NewCT_FontChoice()
				if _ddfe := d.DecodeElement(&_fcfdg.U, &_feefc); _ddfe != nil {
					return _ddfe
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _fcfdg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_cfcc := NewCT_FontChoice()
				if _cacdd := d.DecodeElement(&_cfcc.VertAlign, &_feefc); _cacdd != nil {
					return _cacdd
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _cfcc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_fdcee := NewCT_FontChoice()
				if _dagcf := d.DecodeElement(&_fdcee.Scheme, &_feefc); _dagcf != nil {
					return _dagcf
				}
				_cdaba.FontChoice = append(_cdaba.FontChoice, _fdcee)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _feefc.Name)
				if _ebdb := d.Skip(); _ebdb != nil {
					return _ebdb
				}
			}
		case _a.EndElement:
			break _dddea
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_ceee *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _gcbg, _afa := range _ceee.CellSmartTagPr {
		if _egcd := _afa.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _gcbg)); _egcd != nil {
			return _egcd
		}
	}
	return nil
}
func NewCT_CacheSourceChoice() *CT_CacheSourceChoice { _ccgd := &CT_CacheSourceChoice{}; return _ccgd }
func (_adce *CT_CellXfs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _adce.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_adce.CountAttr)})
	}
	e.EncodeToken(start)
	_abae := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0078\u0066"}}
	for _, _bfgc := range _adce.Xf {
		e.EncodeElement(_bfgc, _abae)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_ebdc *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }
func (_bagfg ST_VolValueType) ValidateWithPath(path string) error {
	switch _bagfg {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bagfg))
	}
	return nil
}
func (_eacab ST_DynamicFilterType) String() string {
	switch _eacab {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}
func (_bagege *ST_SourceType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gcgbea, _bfcaa := d.Token()
	if _bfcaa != nil {
		return _bfcaa
	}
	if _cdbabg, _fgbdb := _gcgbea.(_a.EndElement); _fgbdb && _cdbabg.Name == start.Name {
		*_bagege = 1
		return nil
	}
	if _cfaaf, _gafcc := _gcgbea.(_a.CharData); !_gafcc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcgbea)
	} else {
		switch string(_cfaaf) {
		case "":
			*_bagege = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_bagege = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_bagege = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_bagege = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_bagege = 4
		}
	}
	_gcgbea, _bfcaa = d.Token()
	if _bfcaa != nil {
		return _bfcaa
	}
	if _eabggd, _ffgae := _gcgbea.(_a.EndElement); _ffgae && _eabggd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcgbea)
}
func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_dacde := &CT_ExternalSheetNames{}
	return _dacde
}
func (_gdfff *ST_PhoneticType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggcega, _cebbdb := d.Token()
	if _cebbdb != nil {
		return _cebbdb
	}
	if _bacef, _cgafcd := _ggcega.(_a.EndElement); _cgafcd && _bacef.Name == start.Name {
		*_gdfff = 1
		return nil
	}
	if _ebaga, _cfgaae := _ggcega.(_a.CharData); !_cfgaae {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggcega)
	} else {
		switch string(_ebaga) {
		case "":
			*_gdfff = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_gdfff = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_gdfff = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_gdfff = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_gdfff = 4
		}
	}
	_ggcega, _cebbdb = d.Token()
	if _cebbdb != nil {
		return _cebbdb
	}
	if _gdgeg, _fbdcdd := _ggcega.(_a.EndElement); _fbdcdd && _gdgeg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggcega)
}
func (_gcece *CT_IconSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfcgc := range start.Attr {
		if _bfcgc.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_gcece.IconSetAttr.UnmarshalXMLAttr(_bfcgc)
			continue
		}
		if _bfcgc.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_ccbcb, _ffdfb := _dd.ParseBool(_bfcgc.Value)
			if _ffdfb != nil {
				return _ffdfb
			}
			_gcece.ShowValueAttr = &_ccbcb
			continue
		}
		if _bfcgc.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_ebcae, _cfeec := _dd.ParseBool(_bfcgc.Value)
			if _cfeec != nil {
				return _cfeec
			}
			_gcece.PercentAttr = &_ebcae
			continue
		}
		if _bfcgc.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_eeaaf, _caggd := _dd.ParseBool(_bfcgc.Value)
			if _caggd != nil {
				return _caggd
			}
			_gcece.ReverseAttr = &_eeaaf
			continue
		}
	}
_aecbb:
	for {
		_acaee, _bagd := d.Token()
		if _bagd != nil {
			return _bagd
		}
		switch _ebcab := _acaee.(type) {
		case _a.StartElement:
			switch _ebcab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_fbgaf := NewCT_Cfvo()
				if _gadeb := d.DecodeElement(_fbgaf, &_ebcab); _gadeb != nil {
					return _gadeb
				}
				_gcece.Cfvo = append(_gcece.Cfvo, _fbgaf)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _ebcab.Name)
				if _egdc := d.Skip(); _egdc != nil {
					return _egdc
				}
			}
		case _a.EndElement:
			break _aecbb
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_RevisionRowColumnChoice() *CT_RevisionRowColumnChoice {
	_abdgf := &CT_RevisionRowColumnChoice{}
	return _abdgf
}

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

func NewCT_CustomProperty() *CT_CustomProperty { _gddf := &CT_CustomProperty{}; return _gddf }

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_fdfba *CT_Items) ValidateWithPath(path string) error {
	for _gebc, _ebdf := range _fdfba.Item {
		if _gfgba := _ebdf.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _gebc)); _gfgba != nil {
			return _gfgba
		}
	}
	return nil
}
func (_bcdf *CT_CalculatedMember) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bcdf.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _bcdf.MdxAttr)})
	if _bcdf.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdf.MemberNameAttr)})
	}
	if _bcdf.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdf.HierarchyAttr)})
	}
	if _bcdf.ParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdf.ParentAttr)})
	}
	if _bcdf.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdf.SolveOrderAttr)})
	}
	if _bcdf.SetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bcdf.SetAttr))})
	}
	e.EncodeToken(start)
	if _bcdf.ExtLst != nil {
		_adde := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcdf.ExtLst, _adde)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bgaff ST_DdeValueType) String() string {
	switch _bgaff {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}
type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

func (_bggee ST_CalcMode) Validate() error { return _bggee.ValidateWithPath("") }
func (_fdbea *CT_RPrElt) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dgacbg:
	for {
		_cefg, _facfee := d.Token()
		if _facfee != nil {
			return _facfee
		}
		switch _fcef := _cefg.(type) {
		case _a.StartElement:
			switch _fcef.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_cbfbg := NewCT_RPrEltChoice()
				if _abagd := d.DecodeElement(&_cbfbg.RFont, &_fcef); _abagd != nil {
					return _abagd
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _cbfbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_ccbfd := NewCT_RPrEltChoice()
				if _cfccd := d.DecodeElement(&_ccbfd.Charset, &_fcef); _cfccd != nil {
					return _cfccd
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _ccbfd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_gcbgd := NewCT_RPrEltChoice()
				if _baagc := d.DecodeElement(&_gcbgd.Family, &_fcef); _baagc != nil {
					return _baagc
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _gcbgd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_cffbgb := NewCT_RPrEltChoice()
				if _gcbag := d.DecodeElement(&_cffbgb.B, &_fcef); _gcbag != nil {
					return _gcbag
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _cffbgb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_fbdga := NewCT_RPrEltChoice()
				if _babag := d.DecodeElement(&_fbdga.I, &_fcef); _babag != nil {
					return _babag
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _fbdga)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_geaafg := NewCT_RPrEltChoice()
				if _bbegg := d.DecodeElement(&_geaafg.Strike, &_fcef); _bbegg != nil {
					return _bbegg
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _geaafg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_ceaag := NewCT_RPrEltChoice()
				if _bddaa := d.DecodeElement(&_ceaag.Outline, &_fcef); _bddaa != nil {
					return _bddaa
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _ceaag)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_fdcdfb := NewCT_RPrEltChoice()
				if _agcd := d.DecodeElement(&_fdcdfb.Shadow, &_fcef); _agcd != nil {
					return _agcd
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _fdcdfb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_cbbcfb := NewCT_RPrEltChoice()
				if _gfdbg := d.DecodeElement(&_cbbcfb.Condense, &_fcef); _gfdbg != nil {
					return _gfdbg
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _cbbcfb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_febba := NewCT_RPrEltChoice()
				if _bebaaa := d.DecodeElement(&_febba.Extend, &_fcef); _bebaaa != nil {
					return _bebaaa
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _febba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_ffcffg := NewCT_RPrEltChoice()
				if _dffddd := d.DecodeElement(&_ffcffg.Color, &_fcef); _dffddd != nil {
					return _dffddd
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _ffcffg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_dbdfa := NewCT_RPrEltChoice()
				if _cgdgg := d.DecodeElement(&_dbdfa.Sz, &_fcef); _cgdgg != nil {
					return _cgdgg
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _dbdfa)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_ceafa := NewCT_RPrEltChoice()
				if _adgba := d.DecodeElement(&_ceafa.U, &_fcef); _adgba != nil {
					return _adgba
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _ceafa)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_cedad := NewCT_RPrEltChoice()
				if _fdccf := d.DecodeElement(&_cedad.VertAlign, &_fcef); _fdccf != nil {
					return _fdccf
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _cedad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_caaddf := NewCT_RPrEltChoice()
				if _cbbga := d.DecodeElement(&_caaddf.Scheme, &_fcef); _cbbga != nil {
					return _cbbga
				}
				_fdbea.RPrEltChoice = append(_fdbea.RPrEltChoice, _caaddf)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _fcef.Name)
				if _beggc := d.Skip(); _beggc != nil {
					return _beggc
				}
			}
		case _a.EndElement:
			break _dgacbg
		case _a.CharData:
		}
	}
	return nil
}
func (_bfgfg *CT_MRUColors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gcfg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
	for _, _fbaed := range _bfgfg.Color {
		e.EncodeElement(_fbaed, _gcfg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bddfde *ST_Qualifier) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_acdce, _cffbca := d.Token()
	if _cffbca != nil {
		return _cffbca
	}
	if _abegdf, _ffggb := _acdce.(_a.EndElement); _ffggb && _abegdf.Name == start.Name {
		*_bddfde = 1
		return nil
	}
	if _fbebb, _ddcbg := _acdce.(_a.CharData); !_ddcbg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acdce)
	} else {
		switch string(_fbebb) {
		case "":
			*_bddfde = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_bddfde = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_bddfde = 2
		case "\u006e\u006f\u006e\u0065":
			*_bddfde = 3
		}
	}
	_acdce, _cffbca = d.Token()
	if _cffbca != nil {
		return _cffbca
	}
	if _afgccb, _bgddec := _acdce.(_a.EndElement); _bgddec && _afgccb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acdce)
}

// Validate validates the CT_TableStyleInfo and its children
func (_dfaff *CT_TableStyleInfo) Validate() error {
	return _dfaff.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}
func NewCT_ProtectedRange() *CT_ProtectedRange {
	_eageg := &CT_ProtectedRange{}
	return _eageg
}

// Validate validates the CT_CellXfs and its children
func (_ebdeb *CT_CellXfs) Validate() error {
	return _ebdeb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}
func (_bgfec *CT_ServerFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bgfec.CultureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfec.CultureAttr)})
	}
	if _bgfec.FormatAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bgfec.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aedg *CT_Missing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbaabe := range start.Attr {
		if _gbaabe.Name.Local == "\u0075" {
			_aeff, _gggd := _dd.ParseBool(_gbaabe.Value)
			if _gggd != nil {
				return _gggd
			}
			_aedg.UAttr = &_aeff
			continue
		}
		if _gbaabe.Name.Local == "\u0066" {
			_fffac, _fgdcad := _dd.ParseBool(_gbaabe.Value)
			if _fgdcad != nil {
				return _fgdcad
			}
			_aedg.FAttr = &_fffac
			continue
		}
		if _gbaabe.Name.Local == "\u0063" {
			_dgdaed := _gbaabe.Value
			_aedg.CAttr = &_dgdaed
			continue
		}
		if _gbaabe.Name.Local == "\u0063\u0070" {
			_ggdbf, _cfgaea := _dd.ParseUint(_gbaabe.Value, 10, 32)
			if _cfgaea != nil {
				return _cfgaea
			}
			_cgff := uint32(_ggdbf)
			_aedg.CpAttr = &_cgff
			continue
		}
		if _gbaabe.Name.Local == "\u0069\u006e" {
			_gccdc, _fcgfg := _dd.ParseUint(_gbaabe.Value, 10, 32)
			if _fcgfg != nil {
				return _fcgfg
			}
			_ebegbe := uint32(_gccdc)
			_aedg.InAttr = &_ebegbe
			continue
		}
		if _gbaabe.Name.Local == "\u0062\u0063" {
			_gcbbg := _gbaabe.Value
			_aedg.BcAttr = &_gcbbg
			continue
		}
		if _gbaabe.Name.Local == "\u0066\u0063" {
			_dacdg := _gbaabe.Value
			_aedg.FcAttr = &_dacdg
			continue
		}
		if _gbaabe.Name.Local == "\u0069" {
			_efcg, _adbcc := _dd.ParseBool(_gbaabe.Value)
			if _adbcc != nil {
				return _adbcc
			}
			_aedg.IAttr = &_efcg
			continue
		}
		if _gbaabe.Name.Local == "\u0075\u006e" {
			_dcfadc, _dbfbg := _dd.ParseBool(_gbaabe.Value)
			if _dbfbg != nil {
				return _dbfbg
			}
			_aedg.UnAttr = &_dcfadc
			continue
		}
		if _gbaabe.Name.Local == "\u0073\u0074" {
			_abaca, _gfbdd := _dd.ParseBool(_gbaabe.Value)
			if _gfbdd != nil {
				return _gfbdd
			}
			_aedg.StAttr = &_abaca
			continue
		}
		if _gbaabe.Name.Local == "\u0062" {
			_daef, _bcdag := _dd.ParseBool(_gbaabe.Value)
			if _bcdag != nil {
				return _bcdag
			}
			_aedg.BAttr = &_daef
			continue
		}
	}
_aaebf:
	for {
		_edgdg, _gegfb := d.Token()
		if _gegfb != nil {
			return _gegfb
		}
		switch _aebfg := _edgdg.(type) {
		case _a.StartElement:
			switch _aebfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_ebdba := NewCT_Tuples()
				if _efea := d.DecodeElement(_ebdba, &_aebfg); _efea != nil {
					return _efea
				}
				_aedg.Tpls = append(_aedg.Tpls, _ebdba)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bggdd := NewCT_X()
				if _dbcd := d.DecodeElement(_bggdd, &_aebfg); _dbcd != nil {
					return _dbcd
				}
				_aedg.X = append(_aedg.X, _bggdd)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _aebfg.Name)
				if _cccac := d.Skip(); _cccac != nil {
					return _cccac
				}
			}
		case _a.EndElement:
			break _aaebf
		case _a.CharData:
		}
	}
	return nil
}

type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

func (_dbaefg *ST_Axis) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecdbde, _dddac := d.Token()
	if _dddac != nil {
		return _dddac
	}
	if _cadgbc, _abcad := _ecdbde.(_a.EndElement); _abcad && _cadgbc.Name == start.Name {
		*_dbaefg = 1
		return nil
	}
	if _fgafb, _eggbfc := _ecdbde.(_a.CharData); !_eggbfc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecdbde)
	} else {
		switch string(_fgafb) {
		case "":
			*_dbaefg = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_dbaefg = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_dbaefg = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_dbaefg = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_dbaefg = 4
		}
	}
	_ecdbde, _dddac = d.Token()
	if _dddac != nil {
		return _dddac
	}
	if _efbba, _eddeeb := _ecdbde.(_a.EndElement); _eddeeb && _efbba.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecdbde)
}

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

func NewMapInfo() *MapInfo {
	_ddfbcd := &MapInfo{}
	_ddfbcd.CT_MapInfo = *NewCT_MapInfo()
	return _ddfbcd
}

// Validate validates the CT_CacheSource and its children
func (_cfea *CT_CacheSource) Validate() error {
	return _cfea.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}
func (_ebfbe *CT_QueryTable) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ebfbe.NameAttr)})
	if _ebfbe.HeadersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.HeadersAttr))})
	}
	if _ebfbe.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.RowNumbersAttr))})
	}
	if _ebfbe.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.DisableRefreshAttr))})
	}
	if _ebfbe.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.BackgroundRefreshAttr))})
	}
	if _ebfbe.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.FirstBackgroundRefreshAttr))})
	}
	if _ebfbe.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.RefreshOnLoadAttr))})
	}
	if _ebfbe.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_bccefc, _fage := _ebfbe.GrowShrinkTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _fage != nil {
			return _fage
		}
		start.Attr = append(start.Attr, _bccefc)
	}
	if _ebfbe.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.FillFormulasAttr))})
	}
	if _ebfbe.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.RemoveDataOnSaveAttr))})
	}
	if _ebfbe.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.DisableEditAttr))})
	}
	if _ebfbe.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.PreserveFormattingAttr))})
	}
	if _ebfbe.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.AdjustColumnWidthAttr))})
	}
	if _ebfbe.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ebfbe.ConnectionIdAttr)})
	if _ebfbe.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ebfbe.AutoFormatIdAttr)})
	}
	if _ebfbe.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyNumberFormatsAttr))})
	}
	if _ebfbe.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyBorderFormatsAttr))})
	}
	if _ebfbe.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyFontFormatsAttr))})
	}
	if _ebfbe.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyPatternFormatsAttr))})
	}
	if _ebfbe.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyAlignmentFormatsAttr))})
	}
	if _ebfbe.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ebfbe.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _ebfbe.QueryTableRefresh != nil {
		_gebdd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0071ue\u0072y\u0054\u0061\u0062\u006c\u0065R\u0065\u0066\u0072\u0065\u0073\u0068"}}
		e.EncodeElement(_ebfbe.QueryTableRefresh, _gebdd)
	}
	if _ebfbe.ExtLst != nil {
		_eefcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebfbe.ExtLst, _eefcg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Extension and its children
func (_gfedg *CT_Extension) Validate() error {
	return _gfedg.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}
func NewCT_DdeLink() *CT_DdeLink { _eebbd := &CT_DdeLink{}; return _eebbd }

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_g.Time

	// Date Grouping End Value
	EndDateAttr *_g.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

func (_cbbdf *CT_SheetCalcPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cbbdf.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cbbdf.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eaagc *CT_ProtectedRanges) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_eeege := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0072\u006f\u0074\u0065c\u0074\u0065d\u0052\u0061\u006e\u0067\u0065"}}
	for _, _cbdgg := range _eaagc.ProtectedRange {
		e.EncodeElement(_cbdgg, _eeege)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcccb *CT_ExternalLinkChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcccb.ExternalBook != nil {
		_becba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0065\u0078t\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_dcccb.ExternalBook, _becba)
	} else if _dcccb.DdeLink != nil {
		_agfec := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_dcccb.DdeLink, _agfec)
	} else if _dcccb.OleLink != nil {
		_fccde := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_dcccb.OleLink, _fccde)
	}
	return nil
}
func (_gcabc *CT_ChartsheetPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _deda := range start.Attr {
		if _deda.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_cdbef, _agfc := _dd.ParseBool(_deda.Value)
			if _agfc != nil {
				return _agfc
			}
			_gcabc.PublishedAttr = &_cdbef
			continue
		}
		if _deda.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_agad := _deda.Value
			_gcabc.CodeNameAttr = &_agad
			continue
		}
	}
_fdba:
	for {
		_cbcc, _bfcf := d.Token()
		if _bfcf != nil {
			return _bfcf
		}
		switch _dgag := _cbcc.(type) {
		case _a.StartElement:
			switch _dgag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_gcabc.TabColor = NewCT_Color()
				if _efdaa := d.DecodeElement(_gcabc.TabColor, &_dgag); _efdaa != nil {
					return _efdaa
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _dgag.Name)
				if _gdbfe := d.Skip(); _gdbfe != nil {
					return _gdbfe
				}
			}
		case _a.EndElement:
			break _fdba
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetViews and its children
func (_fbcdb *CT_SheetViews) Validate() error {
	return _fbcdb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_afb *CT_Authors) ValidateWithPath(path string) error { return nil }
func NewCT_Rst() *CT_Rst                                    { _bgcgb := &CT_Rst{}; return _bgcgb }

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_dcbdeb *Sst) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dcbdeb.CT_Sst = *NewCT_Sst()
	for _, _ffccd := range start.Attr {
		if _ffccd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbbde, _cbedg := _dd.ParseUint(_ffccd.Value, 10, 32)
			if _cbedg != nil {
				return _cbedg
			}
			_efddc := uint32(_dbbde)
			_dcbdeb.CountAttr = &_efddc
			continue
		}
		if _ffccd.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_ecdcb, _bbgcgc := _dd.ParseUint(_ffccd.Value, 10, 32)
			if _bbgcgc != nil {
				return _bbgcgc
			}
			_eccae := uint32(_ecdcb)
			_dcbdeb.UniqueCountAttr = &_eccae
			continue
		}
	}
_deeagg:
	for {
		_gddbeg, _ddebe := d.Token()
		if _ddebe != nil {
			return _ddebe
		}
		switch _bggcf := _gddbeg.(type) {
		case _a.StartElement:
			switch _bggcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_dgfgda := NewCT_Rst()
				if _dbgdg := d.DecodeElement(_dgfgda, &_bggcf); _dbgdg != nil {
					return _dbgdg
				}
				_dcbdeb.Si = append(_dcbdeb.Si, _dgfgda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbdeb.ExtLst = NewCT_ExtensionList()
				if _ddbdd := d.DecodeElement(_dcbdeb.ExtLst, &_bggcf); _ddbdd != nil {
					return _ddbdd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _bggcf.Name)
				if _bccecg := d.Skip(); _bccecg != nil {
					return _bccecg
				}
			}
		case _a.EndElement:
			break _deeagg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_bdbbgc *EG_ExtensionList) ValidateWithPath(path string) error {
	for _ddbdg, _cbbdbe := range _bdbbgc.Ext {
		if _fabdb := _cbbdbe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _ddbdg)); _fabdb != nil {
			return _fabdb
		}
	}
	return nil
}

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}
type ST_TableStyleType byte

func (_fgfbce ST_Objects) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fgfbce.String(), start)
}

type ST_DataValidationImeMode byte

func (_cdag *CT_DateTime) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdfe := range start.Attr {
		if _fdfe.Name.Local == "\u0076" {
			_dfbcc, _feddc := ParseStdlibTime(_fdfe.Value)
			if _feddc != nil {
				return _feddc
			}
			_cdag.VAttr = _dfbcc
			continue
		}
		if _fdfe.Name.Local == "\u0075" {
			_gcbf, _gdbe := _dd.ParseBool(_fdfe.Value)
			if _gdbe != nil {
				return _gdbe
			}
			_cdag.UAttr = &_gcbf
			continue
		}
		if _fdfe.Name.Local == "\u0066" {
			_abbgd, _ebdedb := _dd.ParseBool(_fdfe.Value)
			if _ebdedb != nil {
				return _ebdedb
			}
			_cdag.FAttr = &_abbgd
			continue
		}
		if _fdfe.Name.Local == "\u0063" {
			_cgabg := _fdfe.Value
			_cdag.CAttr = &_cgabg
			continue
		}
		if _fdfe.Name.Local == "\u0063\u0070" {
			_dggea, _ggce := _dd.ParseUint(_fdfe.Value, 10, 32)
			if _ggce != nil {
				return _ggce
			}
			_aabc := uint32(_dggea)
			_cdag.CpAttr = &_aabc
			continue
		}
	}
_dbec:
	for {
		_ecfdf, _eaab := d.Token()
		if _eaab != nil {
			return _eaab
		}
		switch _bcde := _ecfdf.(type) {
		case _a.StartElement:
			switch _bcde.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_cffd := NewCT_X()
				if _bccgf := d.DecodeElement(_cffd, &_bcde); _bccgf != nil {
					return _bccgf
				}
				_cdag.X = append(_cdag.X, _cffd)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _bcde.Name)
				if _fcgbb := d.Skip(); _fcgbb != nil {
					return _fcgbb
				}
			}
		case _a.EndElement:
			break _dbec
		case _a.CharData:
		}
	}
	return nil
}

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_efa *CT_CacheHierarchy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gecb := range start.Attr {
		if _gecb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bbe := _gecb.Value
			_efa.UniqueNameAttr = _bbe
			continue
		}
		if _gecb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_abc := _gecb.Value
			_efa.CaptionAttr = &_abc
			continue
		}
		if _gecb.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_ddbg, _add := _dd.ParseBool(_gecb.Value)
			if _add != nil {
				return _add
			}
			_efa.MeasureAttr = &_ddbg
			continue
		}
		if _gecb.Name.Local == "\u0073\u0065\u0074" {
			_fbdb, _deee := _dd.ParseBool(_gecb.Value)
			if _deee != nil {
				return _deee
			}
			_efa.SetAttr = &_fbdb
			continue
		}
		if _gecb.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_aefc, _ggcg := _dd.ParseUint(_gecb.Value, 10, 32)
			if _ggcg != nil {
				return _ggcg
			}
			_gcc := uint32(_aefc)
			_efa.ParentSetAttr = &_gcc
			continue
		}
		if _gecb.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_abce, _dbe := _dd.ParseInt(_gecb.Value, 10, 32)
			if _dbe != nil {
				return _dbe
			}
			_aagg := int32(_abce)
			_efa.IconSetAttr = &_aagg
			continue
		}
		if _gecb.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_cbd, _dgf := _dd.ParseBool(_gecb.Value)
			if _dgf != nil {
				return _dgf
			}
			_efa.AttributeAttr = &_cbd
			continue
		}
		if _gecb.Name.Local == "\u0074\u0069\u006d\u0065" {
			_babd, _bag := _dd.ParseBool(_gecb.Value)
			if _bag != nil {
				return _bag
			}
			_efa.TimeAttr = &_babd
			continue
		}
		if _gecb.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_daa, _cdbf := _dd.ParseBool(_gecb.Value)
			if _cdbf != nil {
				return _cdbf
			}
			_efa.KeyAttributeAttr = &_daa
			continue
		}
		if _gecb.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fgcc := _gecb.Value
			_efa.DefaultMemberUniqueNameAttr = &_fgcc
			continue
		}
		if _gecb.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_daf := _gecb.Value
			_efa.AllUniqueNameAttr = &_daf
			continue
		}
		if _gecb.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_acbc := _gecb.Value
			_efa.AllCaptionAttr = &_acbc
			continue
		}
		if _gecb.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gefg := _gecb.Value
			_efa.DimensionUniqueNameAttr = &_gefg
			continue
		}
		if _gecb.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_aefe := _gecb.Value
			_efa.DisplayFolderAttr = &_aefe
			continue
		}
		if _gecb.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_dae := _gecb.Value
			_efa.MeasureGroupAttr = &_dae
			continue
		}
		if _gecb.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_dfgg, _eea := _dd.ParseBool(_gecb.Value)
			if _eea != nil {
				return _eea
			}
			_efa.MeasuresAttr = &_dfgg
			continue
		}
		if _gecb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dda, _gbdc := _dd.ParseUint(_gecb.Value, 10, 32)
			if _gbdc != nil {
				return _gbdc
			}
			_efa.CountAttr = uint32(_dda)
			continue
		}
		if _gecb.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_gfdf, _dgac := _dd.ParseBool(_gecb.Value)
			if _dgac != nil {
				return _dgac
			}
			_efa.OneFieldAttr = &_gfdf
			continue
		}
		if _gecb.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_bded, _caff := _dd.ParseUint(_gecb.Value, 10, 16)
			if _caff != nil {
				return _caff
			}
			_bcbg := uint16(_bded)
			_efa.MemberValueDatatypeAttr = &_bcbg
			continue
		}
		if _gecb.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_aba, _aeab := _dd.ParseBool(_gecb.Value)
			if _aeab != nil {
				return _aeab
			}
			_efa.UnbalancedAttr = &_aba
			continue
		}
		if _gecb.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_aecc, _bfg := _dd.ParseBool(_gecb.Value)
			if _bfg != nil {
				return _bfg
			}
			_efa.UnbalancedGroupAttr = &_aecc
			continue
		}
		if _gecb.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_bbag, _bbce := _dd.ParseBool(_gecb.Value)
			if _bbce != nil {
				return _bbce
			}
			_efa.HiddenAttr = &_bbag
			continue
		}
	}
_adae:
	for {
		_eac, _aaac := d.Token()
		if _aaac != nil {
			return _aaac
		}
		switch _cabf := _eac.(type) {
		case _a.StartElement:
			switch _cabf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_efa.FieldsUsage = NewCT_FieldsUsage()
				if _gecc := d.DecodeElement(_efa.FieldsUsage, &_cabf); _gecc != nil {
					return _gecc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_efa.GroupLevels = NewCT_GroupLevels()
				if _gaaa := d.DecodeElement(_efa.GroupLevels, &_cabf); _gaaa != nil {
					return _gaaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efa.ExtLst = NewCT_ExtensionList()
				if _eeb := d.DecodeElement(_efa.ExtLst, &_cabf); _eeb != nil {
					return _eeb
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _cabf.Name)
				if _abgb := d.Skip(); _abgb != nil {
					return _abgb
				}
			}
		case _a.EndElement:
			break _adae
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_ebaec *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_ffbdb *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _ffbdb.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _bcaga := _ffbdb.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _bcaga != nil {
		return _bcaga
	}
	return nil
}

// Validate validates the CT_OleItem and its children
func (_edgdd *CT_OleItem) Validate() error {
	return _edgdd.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_WorksheetSource and its children
func (_ggceg *CT_WorksheetSource) Validate() error {
	return _ggceg.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}
func (_ggcgb *CT_Parameters) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggcgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcgb.CountAttr)})
	}
	e.EncodeToken(start)
	_eaacga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _fgdda := range _ggcgb.Parameter {
		e.EncodeElement(_fgdda, _eaacga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_IconSet() *CT_IconSet { _befb := &CT_IconSet{}; return _befb }

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_ebcb *CT_FieldUsage) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_gegcef *CT_RangeSet) ValidateWithPath(path string) error { return nil }
func (_cgecda ST_CalcMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_cgecda.String(), start)
}
func (_caaae ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _caaae {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caaae))
	}
	return nil
}

// Validate validates the CT_Scenarios and its children
func (_dddfa *CT_Scenarios) Validate() error {
	return _dddfa.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_ceded *CT_FontFamily) ValidateWithPath(path string) error {
	if _ceded.ValAttr < 0 {
		return _fd.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ceded.ValAttr)
	}
	if _ceded.ValAttr > 14 {
		return _fd.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ceded.ValAttr)
	}
	return nil
}
func (_fdbcb *ST_rwColActionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fdbcb = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_fdbcb = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_fdbcb = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_fdbcb = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_fdbcb = 4
	}
	return nil
}

// Validate validates the VolTypes and its children
func (_ggdfc *VolTypes) Validate() error {
	return _ggdfc.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

type ST_FormulaExpression byte

func (_bcaag *CT_DataField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eecfa := range start.Attr {
		if _eecfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afgff := _eecfa.Value
			_bcaag.NameAttr = &_afgff
			continue
		}
		if _eecfa.Name.Local == "\u0066\u006c\u0064" {
			_dgggd, _gddb := _dd.ParseUint(_eecfa.Value, 10, 32)
			if _gddb != nil {
				return _gddb
			}
			_bcaag.FldAttr = uint32(_dgggd)
			continue
		}
		if _eecfa.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bcaag.SubtotalAttr.UnmarshalXMLAttr(_eecfa)
			continue
		}
		if _eecfa.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_bcaag.ShowDataAsAttr.UnmarshalXMLAttr(_eecfa)
			continue
		}
		if _eecfa.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_agdbg, _gcdb := _dd.ParseInt(_eecfa.Value, 10, 32)
			if _gcdb != nil {
				return _gcdb
			}
			_bccg := int32(_agdbg)
			_bcaag.BaseFieldAttr = &_bccg
			continue
		}
		if _eecfa.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_eecad, _fggb := _dd.ParseUint(_eecfa.Value, 10, 32)
			if _fggb != nil {
				return _fggb
			}
			_cfdgf := uint32(_eecad)
			_bcaag.BaseItemAttr = &_cfdgf
			continue
		}
		if _eecfa.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_ddcea, _dfgdf := _dd.ParseUint(_eecfa.Value, 10, 32)
			if _dfgdf != nil {
				return _dfgdf
			}
			_caba := uint32(_ddcea)
			_bcaag.NumFmtIdAttr = &_caba
			continue
		}
	}
_acfce:
	for {
		_ggfd, _afdgf := d.Token()
		if _afdgf != nil {
			return _afdgf
		}
		switch _gcgcf := _ggfd.(type) {
		case _a.StartElement:
			switch _gcgcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcaag.ExtLst = NewCT_ExtensionList()
				if _ffcg := d.DecodeElement(_bcaag.ExtLst, &_gcgcf); _ffcg != nil {
					return _ffcg
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _gcgcf.Name)
				if _bagb := d.Skip(); _bagb != nil {
					return _bagb
				}
			}
		case _a.EndElement:
			break _acfce
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CalculatedItems and its children
func (_daff *CT_CalculatedItems) Validate() error {
	return _daff.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}
func (_dbfgd *Metadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dbfgd.CT_Metadata = *NewCT_Metadata()
_affda:
	for {
		_afddfb, _accda := d.Token()
		if _accda != nil {
			return _accda
		}
		switch _aedaff := _afddfb.(type) {
		case _a.StartElement:
			switch _aedaff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_dbfgd.MetadataTypes = NewCT_MetadataTypes()
				if _dgcgab := d.DecodeElement(_dbfgd.MetadataTypes, &_aedaff); _dgcgab != nil {
					return _dgcgab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_dbfgd.MetadataStrings = NewCT_MetadataStrings()
				if _adcef := d.DecodeElement(_dbfgd.MetadataStrings, &_aedaff); _adcef != nil {
					return _adcef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dbfgd.MdxMetadata = NewCT_MdxMetadata()
				if _cfgbff := d.DecodeElement(_dbfgd.MdxMetadata, &_aedaff); _cfgbff != nil {
					return _cfgbff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_fdfgf := NewCT_FutureMetadata()
				if _eedc := d.DecodeElement(_fdfgf, &_aedaff); _eedc != nil {
					return _eedc
				}
				_dbfgd.FutureMetadata = append(_dbfgd.FutureMetadata, _fdfgf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dbfgd.CellMetadata = NewCT_MetadataBlocks()
				if _dggfdaa := d.DecodeElement(_dbfgd.CellMetadata, &_aedaff); _dggfdaa != nil {
					return _dggfdaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_dbfgd.ValueMetadata = NewCT_MetadataBlocks()
				if _fbbfde := d.DecodeElement(_dbfgd.ValueMetadata, &_aedaff); _fbbfde != nil {
					return _fbbfde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbfgd.ExtLst = NewCT_ExtensionList()
				if _ebgeea := d.DecodeElement(_dbfgd.ExtLst, &_aedaff); _ebgeea != nil {
					return _ebgeea
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _aedaff.Name)
				if _dcccce := d.Skip(); _dcccce != nil {
					return _dcccce
				}
			}
		case _a.EndElement:
			break _affda
		case _a.CharData:
		}
	}
	return nil
}

type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

func (_afdad *CT_FontChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _afdad.Name != nil {
		_dbfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006e\u0061\u006d\u0065"}}
		e.EncodeElement(_afdad.Name, _dbfb)
	} else if _afdad.Charset != nil {
		_ddcbf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_afdad.Charset, _ddcbf)
	} else if _afdad.Family != nil {
		_ggaeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0061\u006d\u0069\u006c\u0079"}}
		e.EncodeElement(_afdad.Family, _ggaeb)
	} else if _afdad.B != nil {
		_dccfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0062"}}
		e.EncodeElement(_afdad.B, _dccfb)
	} else if _afdad.I != nil {
		_bcedf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0069"}}
		e.EncodeElement(_afdad.I, _bcedf)
	} else if _afdad.Strike != nil {
		_ebea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0074\u0072\u0069\u006b\u0065"}}
		e.EncodeElement(_afdad.Strike, _ebea)
	} else if _afdad.Outline != nil {
		_ecbaba := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_afdad.Outline, _ecbaba)
	} else if _afdad.Shadow != nil {
		_eggb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0061\u0064\u006f\u0077"}}
		e.EncodeElement(_afdad.Shadow, _eggb)
	} else if _afdad.Condense != nil {
		_fbcbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_afdad.Condense, _fbcbb)
	} else if _afdad.Extend != nil {
		_bbdeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u0065\u006e\u0064"}}
		e.EncodeElement(_afdad.Extend, _bbdeg)
	} else if _afdad.Color != nil {
		_eafec := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
		e.EncodeElement(_afdad.Color, _eafec)
	} else if _afdad.Sz != nil {
		_egeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u007a"}}
		e.EncodeElement(_afdad.Sz, _egeg)
	} else if _afdad.U != nil {
		_cacc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0075"}}
		e.EncodeElement(_afdad.U, _cacc)
	} else if _afdad.VertAlign != nil {
		_fbdda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0076\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_afdad.VertAlign, _fbdda)
	} else if _afdad.Scheme != nil {
		_fbddf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_afdad.Scheme, _fbddf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_abcfb *Metadata) ValidateWithPath(path string) error {
	if _eeeef := _abcfb.CT_Metadata.ValidateWithPath(path); _eeeef != nil {
		return _eeeef
	}
	return nil
}
func (_cgcbae *CT_Number) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _cgcbae.VAttr)})
	if _cgcbae.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.UAttr))})
	}
	if _cgcbae.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.FAttr))})
	}
	if _cgcbae.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cgcbae.CAttr)})
	}
	if _cgcbae.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_cgcbae.CpAttr)})
	}
	if _cgcbae.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_cgcbae.InAttr)})
	}
	if _cgcbae.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cgcbae.BcAttr)})
	}
	if _cgcbae.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cgcbae.FcAttr)})
	}
	if _cgcbae.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.IAttr))})
	}
	if _cgcbae.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.UnAttr))})
	}
	if _cgcbae.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.StAttr))})
	}
	if _cgcbae.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cgcbae.BAttr))})
	}
	e.EncodeToken(start)
	if _cgcbae.Tpls != nil {
		_cbgcbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		for _, _bgeeb := range _cgcbae.Tpls {
			e.EncodeElement(_bgeeb, _cbgcbc)
		}
	}
	if _cgcbae.X != nil {
		_afccd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _aeacf := range _cgcbae.X {
			e.EncodeElement(_aeacf, _afccd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eggdd *CT_LevelGroup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eggdd.GroupMembers = NewCT_GroupMembers()
	for _, _edae := range start.Attr {
		if _edae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aebcg := _edae.Value
			_eggdd.NameAttr = _aebcg
			continue
		}
		if _edae.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_bfacb := _edae.Value
			_eggdd.UniqueNameAttr = _bfacb
			continue
		}
		if _edae.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ggfb := _edae.Value
			_eggdd.CaptionAttr = _ggfb
			continue
		}
		if _edae.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_ecgec := _edae.Value
			_eggdd.UniqueParentAttr = &_ecgec
			continue
		}
		if _edae.Name.Local == "\u0069\u0064" {
			_cbeafg, _gebdb := _dd.ParseInt(_edae.Value, 10, 32)
			if _gebdb != nil {
				return _gebdb
			}
			_beada := int32(_cbeafg)
			_eggdd.IdAttr = &_beada
			continue
		}
	}
_cgfece:
	for {
		_dddaa, _fgfb := d.Token()
		if _fgfb != nil {
			return _fgfb
		}
		switch _egdcd := _dddaa.(type) {
		case _a.StartElement:
			switch _egdcd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _ggcaa := d.DecodeElement(_eggdd.GroupMembers, &_egdcd); _ggcaa != nil {
					return _ggcaa
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _egdcd.Name)
				if _cbcbe := d.Skip(); _cbcbe != nil {
					return _cbcbe
				}
			}
		case _a.EndElement:
			break _cgfece
		case _a.CharData:
		}
	}
	return nil
}

type CT_FillChoice struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}

func (_fbcdfd ST_UpdateLinks) String() string {
	switch _fbcdfd {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func (_bgfacab *CT_RevisionQueryTableField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgfacab.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _bgfacab.RefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgfacab.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cgfbg ST_TableType) String() string {
	switch _cgfbg {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

type CT_Drawing struct{ IdAttr string }

func (_gceb *CT_DataValidation) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfaf := range start.Attr {
		if _bfaf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gceb.TypeAttr.UnmarshalXMLAttr(_bfaf)
			continue
		}
		if _bfaf.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_gceb.ErrorStyleAttr.UnmarshalXMLAttr(_bfaf)
			continue
		}
		if _bfaf.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_gceb.ImeModeAttr.UnmarshalXMLAttr(_bfaf)
			continue
		}
		if _bfaf.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_gceb.OperatorAttr.UnmarshalXMLAttr(_bfaf)
			continue
		}
		if _bfaf.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_ddbad, _dcgaa := _dd.ParseBool(_bfaf.Value)
			if _dcgaa != nil {
				return _dcgaa
			}
			_gceb.AllowBlankAttr = &_ddbad
			continue
		}
		if _bfaf.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_dgef, _dgdae := _dd.ParseBool(_bfaf.Value)
			if _dgdae != nil {
				return _dgdae
			}
			_gceb.ShowDropDownAttr = &_dgef
			continue
		}
		if _bfaf.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_defb, _fdega := _dd.ParseBool(_bfaf.Value)
			if _fdega != nil {
				return _fdega
			}
			_gceb.ShowInputMessageAttr = &_defb
			continue
		}
		if _bfaf.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_ebgf, _gagde := _dd.ParseBool(_bfaf.Value)
			if _gagde != nil {
				return _gagde
			}
			_gceb.ShowErrorMessageAttr = &_ebgf
			continue
		}
		if _bfaf.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_bbgcf := _bfaf.Value
			_gceb.ErrorTitleAttr = &_bbgcf
			continue
		}
		if _bfaf.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_degeg := _bfaf.Value
			_gceb.ErrorAttr = &_degeg
			continue
		}
		if _bfaf.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_adcba := _bfaf.Value
			_gceb.PromptTitleAttr = &_adcba
			continue
		}
		if _bfaf.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_bdaafd := _bfaf.Value
			_gceb.PromptAttr = &_bdaafd
			continue
		}
		if _bfaf.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_fbbed, _gdbgff := ParseSliceST_Sqref(_bfaf.Value)
			if _gdbgff != nil {
				return _gdbgff
			}
			_gceb.SqrefAttr = _fbbed
			continue
		}
	}
_dbad:
	for {
		_fgdde, _gcdef := d.Token()
		if _gcdef != nil {
			return _gcdef
		}
		switch _bddgd := _fgdde.(type) {
		case _a.StartElement:
			switch _bddgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_gceb.Formula1 = new(string)
				if _dfbb := d.DecodeElement(_gceb.Formula1, &_bddgd); _dfbb != nil {
					return _dfbb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_gceb.Formula2 = new(string)
				if _dfbd := d.DecodeElement(_gceb.Formula2, &_bddgd); _dfbd != nil {
					return _dfbd
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _bddgd.Name)
				if _egacfd := d.Skip(); _egacfd != nil {
					return _egacfd
				}
			}
		case _a.EndElement:
			break _dbad
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_agbaca := &CT_MeasureDimensionMaps{}
	return _agbaca
}

type VolTypes struct{ CT_VolTypes }

func (_dcccc *CT_Dxf) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _dcccc.Font != nil {
		_bffd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_dcccc.Font, _bffd)
	}
	if _dcccc.NumFmt != nil {
		_bdbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006e\u0075\u006d\u0046\u006d\u0074"}}
		e.EncodeElement(_dcccc.NumFmt, _bdbf)
	}
	if _dcccc.Fill != nil {
		_efcd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dcccc.Fill, _efcd)
	}
	if _dcccc.Alignment != nil {
		_egedf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_dcccc.Alignment, _egedf)
	}
	if _dcccc.Border != nil {
		_fafgb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006f\u0072\u0064\u0065\u0072"}}
		e.EncodeElement(_dcccc.Border, _fafgb)
	}
	if _dcccc.Protection != nil {
		_febab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dcccc.Protection, _febab)
	}
	if _dcccc.ExtLst != nil {
		_fgaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcccc.ExtLst, _fgaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PageItem() *CT_PageItem { _gebda := &CT_PageItem{}; return _gebda }
func (_effcfe ST_ExternalConnectionType) String() string {
	switch _effcfe {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}

type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}

func (_baada *ST_TableType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cedbag, _bggbb := d.Token()
	if _bggbb != nil {
		return _bggbb
	}
	if _eegbfa, _bdgac := _cedbag.(_a.EndElement); _bdgac && _eegbfa.Name == start.Name {
		*_baada = 1
		return nil
	}
	if _daeff, _ffggfe := _cedbag.(_a.CharData); !_ffggfe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cedbag)
	} else {
		switch string(_daeff) {
		case "":
			*_baada = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_baada = 1
		case "\u0078\u006d\u006c":
			*_baada = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_baada = 3
		}
	}
	_cedbag, _bggbb = d.Token()
	if _bggbb != nil {
		return _bggbb
	}
	if _cbaef, _fafbb := _cedbag.(_a.EndElement); _fafbb && _cbaef.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cedbag)
}

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

// Validate validates the CT_RangePr and its children
func (_bccdcg *CT_RangePr) Validate() error {
	return _bccdcg.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}
func (_fbede *CT_Revisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cfaae:
	for {
		_aecac, _gddcd := d.Token()
		if _gddcd != nil {
			return _gddcd
		}
		switch _ffbdac := _aecac.(type) {
		case _a.StartElement:
			switch _ffbdac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_gdfbg := NewCT_RevisionsChoice()
				if _bcbdcf := d.DecodeElement(&_gdfbg.Rrc, &_ffbdac); _bcbdcf != nil {
					return _bcbdcf
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _gdfbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_bbgb := NewCT_RevisionsChoice()
				if _cdbgba := d.DecodeElement(&_bbgb.Rm, &_ffbdac); _cdbgba != nil {
					return _cdbgba
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _bbgb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_fddec := NewCT_RevisionsChoice()
				if _cgbffe := d.DecodeElement(&_fddec.Rcv, &_ffbdac); _cgbffe != nil {
					return _cgbffe
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _fddec)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_fdbc := NewCT_RevisionsChoice()
				if _dafad := d.DecodeElement(&_fdbc.Rsnm, &_ffbdac); _dafad != nil {
					return _dafad
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _fdbc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_gbdge := NewCT_RevisionsChoice()
				if _bageg := d.DecodeElement(&_gbdge.Ris, &_ffbdac); _bageg != nil {
					return _bageg
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _gbdge)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_bbcga := NewCT_RevisionsChoice()
				if _cgcfe := d.DecodeElement(&_bbcga.Rcc, &_ffbdac); _cgcfe != nil {
					return _cgcfe
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _bbcga)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_bagcf := NewCT_RevisionsChoice()
				if _gbgdfd := d.DecodeElement(&_bagcf.Rfmt, &_ffbdac); _gbgdfd != nil {
					return _gbgdfd
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _bagcf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_gbdee := NewCT_RevisionsChoice()
				if _dcbde := d.DecodeElement(&_gbdee.Raf, &_ffbdac); _dcbde != nil {
					return _dcbde
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _gbdee)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_feaegg := NewCT_RevisionsChoice()
				if _cedcee := d.DecodeElement(&_feaegg.Rdn, &_ffbdac); _cedcee != nil {
					return _cedcee
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _feaegg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_ccdbb := NewCT_RevisionsChoice()
				if _defec := d.DecodeElement(&_ccdbb.Rcmt, &_ffbdac); _defec != nil {
					return _defec
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _ccdbb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_cdefd := NewCT_RevisionsChoice()
				if _gefbfd := d.DecodeElement(&_cdefd.Rqt, &_ffbdac); _gefbfd != nil {
					return _gefbfd
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _cdefd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_cafbd := NewCT_RevisionsChoice()
				if _cdffc := d.DecodeElement(&_cafbd.Rcft, &_ffbdac); _cdffc != nil {
					return _cdffc
				}
				_fbede.RevisionsChoice = append(_fbede.RevisionsChoice, _cafbd)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _ffbdac.Name)
				if _fdfefd := d.Skip(); _fdfefd != nil {
					return _fdfefd
				}
			}
		case _a.EndElement:
			break _cfaae
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PageFields and its children
func (_eaabc *CT_PageFields) Validate() error {
	return _eaabc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_ddcebc *PivotCacheRecords) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u0069\u003a\u0070iv\u006ft\u0043\u0061\u0063\u0068\u0065R\u0065\u0063\u006f\u0072\u0064\u0073"
	return _ddcebc.CT_PivotCacheRecords.MarshalXML(e, start)
}
func NewCT_SingleXmlCells() *CT_SingleXmlCells {
	_eccdgd := &CT_SingleXmlCells{}
	return _eccdgd
}

// Validate validates the CT_Parameter and its children
func (_gfcbg *CT_Parameter) Validate() error {
	return _gfcbg.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_bfgbd *SingleXmlCells) ValidateWithPath(path string) error {
	if _geeggc := _bfgbd.CT_SingleXmlCells.ValidateWithPath(path); _geeggc != nil {
		return _geeggc
	}
	return nil
}
func (_caeb *CT_FutureMetadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _feea := range start.Attr {
		if _feea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fffgb := _feea.Value
			_caeb.NameAttr = _fffgb
			continue
		}
		if _feea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aeedca, _edecf := _dd.ParseUint(_feea.Value, 10, 32)
			if _edecf != nil {
				return _edecf
			}
			_ebffc := uint32(_aeedca)
			_caeb.CountAttr = &_ebffc
			continue
		}
	}
_cefad:
	for {
		_bgcd, _bfgaa := d.Token()
		if _bfgaa != nil {
			return _bfgaa
		}
		switch _fcdf := _bgcd.(type) {
		case _a.StartElement:
			switch _fcdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_dbddg := NewCT_FutureMetadataBlock()
				if _acaba := d.DecodeElement(_dbddg, &_fcdf); _acaba != nil {
					return _acaba
				}
				_caeb.Bk = append(_caeb.Bk, _dbddg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caeb.ExtLst = NewCT_ExtensionList()
				if _fbcee := d.DecodeElement(_caeb.ExtLst, &_fcdf); _fbcee != nil {
					return _fbcee
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _fcdf.Name)
				if _abde := d.Skip(); _abde != nil {
					return _abde
				}
			}
		case _a.EndElement:
			break _cefad
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PivotFields() *CT_PivotFields { _fede := &CT_PivotFields{}; return _fede }
func (_bedc *CT_Reviewed) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acdafe := range start.Attr {
		if _acdafe.Name.Local == "\u0072\u0049\u0064" {
			_beee, _gbgab := _dd.ParseUint(_acdafe.Value, 10, 32)
			if _gbgab != nil {
				return _gbgab
			}
			_bedc.RIdAttr = uint32(_beee)
			continue
		}
	}
	for {
		_dcgcde, _bdfcc := d.Token()
		if _bdfcc != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _bdfcc)
		}
		if _bcced, _bdecfc := _dcgcde.(_a.EndElement); _bdecfc && _bcced.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Pane and its children
func (_fadbc *CT_Pane) Validate() error {
	return _fadbc.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}
func (_ebcag *CT_Query) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0064\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _ebcag.MdxAttr)})
	e.EncodeToken(start)
	if _ebcag.Tpls != nil {
		_eddaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_ebcag.Tpls, _eddaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bdcbe *CT_QueryCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bdcbe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bdcbe.CountAttr)})
	}
	e.EncodeToken(start)
	_fbbdb := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0071\u0075\u0065\u0072y"}}
	for _, _eaddd := range _bdcbe.Query {
		e.EncodeElement(_eaddd, _fbbdb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecead ST_DdeValueType) Validate() error { return _ecead.ValidateWithPath("") }
func (_agcgd ST_MdxFunctionType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_agcgd.String(), start)
}
func (_ebgfg ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _ebgfg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebgfg))
	}
	return nil
}

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}

func (_eaedb *CT_Top10) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdbgd := range start.Attr {
		if _cdbgd.Name.Local == "\u0074\u006f\u0070" {
			_deebdc, _efafa := _dd.ParseBool(_cdbgd.Value)
			if _efafa != nil {
				return _efafa
			}
			_eaedb.TopAttr = &_deebdc
			continue
		}
		if _cdbgd.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_ddgca, _adefc := _dd.ParseBool(_cdbgd.Value)
			if _adefc != nil {
				return _adefc
			}
			_eaedb.PercentAttr = &_ddgca
			continue
		}
		if _cdbgd.Name.Local == "\u0076\u0061\u006c" {
			_fdcfe, _bbgge := _dd.ParseFloat(_cdbgd.Value, 64)
			if _bbgge != nil {
				return _bbgge
			}
			_eaedb.ValAttr = _fdcfe
			continue
		}
		if _cdbgd.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_caebf, _eebdg := _dd.ParseFloat(_cdbgd.Value, 64)
			if _eebdg != nil {
				return _eebdg
			}
			_eaedb.FilterValAttr = &_caebf
			continue
		}
	}
	for {
		_abgdf, _dgdebf := d.Token()
		if _dgdebf != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _dgdebf)
		}
		if _dgecca, _cecde := _abgdf.(_a.EndElement); _cecde && _dgecca.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FilterColumnChoice and its children, prefixing error messages with path
func (_acgfb *CT_FilterColumnChoice) ValidateWithPath(path string) error {
	if _acgfb.Filters != nil {
		if _bcdcgf := _acgfb.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _bcdcgf != nil {
			return _bcdcgf
		}
	}
	if _acgfb.Top10 != nil {
		if _adbb := _acgfb.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _adbb != nil {
			return _adbb
		}
	}
	if _acgfb.CustomFilters != nil {
		if _daged := _acgfb.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _daged != nil {
			return _daged
		}
	}
	if _acgfb.DynamicFilter != nil {
		if _fcaf := _acgfb.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _fcaf != nil {
			return _fcaf
		}
	}
	if _acgfb.ColorFilter != nil {
		if _adfgf := _acgfb.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _adfgf != nil {
			return _adfgf
		}
	}
	if _acgfb.IconFilter != nil {
		if _edcgc := _acgfb.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _edcgc != nil {
			return _edcgc
		}
	}
	if _acgfb.ExtLst != nil {
		if _afefb := _acgfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afefb != nil {
			return _afefb
		}
	}
	return nil
}
func (_gcdbf *CT_RevisionHeaders) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gcdbf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cbbfa := range start.Attr {
		if _cbbfa.Name.Local == "\u0067\u0075\u0069\u0064" {
			_cfcce := _cbbfa.Value
			_gcdbf.GuidAttr = _cfcce
			continue
		}
		if _cbbfa.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_bdad := _cbbfa.Value
			_gcdbf.LastGuidAttr = &_bdad
			continue
		}
		if _cbbfa.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_aafaab, _dagee := _dd.ParseBool(_cbbfa.Value)
			if _dagee != nil {
				return _dagee
			}
			_gcdbf.SharedAttr = &_aafaab
			continue
		}
		if _cbbfa.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_edcab, _cacge := _dd.ParseBool(_cbbfa.Value)
			if _cacge != nil {
				return _cacge
			}
			_gcdbf.DiskRevisionsAttr = &_edcab
			continue
		}
		if _cbbfa.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_fggdg, _fcefa := _dd.ParseBool(_cbbfa.Value)
			if _fcefa != nil {
				return _fcefa
			}
			_gcdbf.HistoryAttr = &_fggdg
			continue
		}
		if _cbbfa.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_ebebe, _facfb := _dd.ParseBool(_cbbfa.Value)
			if _facfb != nil {
				return _facfb
			}
			_gcdbf.TrackRevisionsAttr = &_ebebe
			continue
		}
		if _cbbfa.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_dcbdg, _ebgd := _dd.ParseBool(_cbbfa.Value)
			if _ebgd != nil {
				return _ebgd
			}
			_gcdbf.ExclusiveAttr = &_dcbdg
			continue
		}
		if _cbbfa.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_cdeaf, _begab := _dd.ParseUint(_cbbfa.Value, 10, 32)
			if _begab != nil {
				return _begab
			}
			_fdbeag := uint32(_cdeaf)
			_gcdbf.RevisionIdAttr = &_fdbeag
			continue
		}
		if _cbbfa.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_cffcg, _bdbeg := _dd.ParseInt(_cbbfa.Value, 10, 32)
			if _bdbeg != nil {
				return _bdbeg
			}
			_agee := int32(_cffcg)
			_gcdbf.VersionAttr = &_agee
			continue
		}
		if _cbbfa.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_gaaed, _eaabdd := _dd.ParseBool(_cbbfa.Value)
			if _eaabdd != nil {
				return _eaabdd
			}
			_gcdbf.KeepChangeHistoryAttr = &_gaaed
			continue
		}
		if _cbbfa.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_bbeef, _cage := _dd.ParseBool(_cbbfa.Value)
			if _cage != nil {
				return _cage
			}
			_gcdbf.ProtectedAttr = &_bbeef
			continue
		}
		if _cbbfa.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_abdbc, _cadaf := _dd.ParseUint(_cbbfa.Value, 10, 32)
			if _cadaf != nil {
				return _cadaf
			}
			_affec := uint32(_abdbc)
			_gcdbf.PreserveHistoryAttr = &_affec
			continue
		}
	}
_dccaa:
	for {
		_eacfgg, _ebbba := d.Token()
		if _ebbba != nil {
			return _ebbba
		}
		switch _defff := _eacfgg.(type) {
		case _a.StartElement:
			switch _defff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_acbfa := NewCT_RevisionHeader()
				if _bbege := d.DecodeElement(_acbfa, &_defff); _bbege != nil {
					return _bbege
				}
				_gcdbf.Header = append(_gcdbf.Header, _acbfa)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _defff.Name)
				if _bgce := d.Skip(); _bgce != nil {
					return _bgce
				}
			}
		case _a.EndElement:
			break _dccaa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_FunctionGroups() *CT_FunctionGroups { _caece := &CT_FunctionGroups{}; return _caece }
func (_cabfcf *ST_OleUpdate) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cabfcf = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_cabfcf = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_cabfcf = 2
	}
	return nil
}
func (_fdbab *CT_ChartsheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fdaec:
	for {
		_aade, _bbf := d.Token()
		if _bbf != nil {
			return _bbf
		}
		switch _bge := _aade.(type) {
		case _a.StartElement:
			switch _bge.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_fdddb := NewCT_ChartsheetView()
				if _aegd := d.DecodeElement(_fdddb, &_bge); _aegd != nil {
					return _aegd
				}
				_fdbab.SheetView = append(_fdbab.SheetView, _fdddb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdbab.ExtLst = NewCT_ExtensionList()
				if _fadc := d.DecodeElement(_fdbab.ExtLst, &_bge); _fadc != nil {
					return _fadc
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _bge.Name)
				if _fcea := d.Skip(); _fcea != nil {
					return _fcea
				}
			}
		case _a.EndElement:
			break _fdaec
		case _a.CharData:
		}
	}
	return nil
}
func (_dgddgf ST_DataValidationOperator) Validate() error { return _dgddgf.ValidateWithPath("") }

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_dcga *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _dfg, _baff := range _dcga.CacheHierarchy {
		if _dfbed := _baff.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _dfg)); _dfbed != nil {
			return _dfbed
		}
	}
	return nil
}

const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

func NewCT_OleItem() *CT_OleItem {
	_aagce := &CT_OleItem{}
	return _aagce
}
func NewCT_SheetViews() *CT_SheetViews { _baege := &CT_SheetViews{}; return _baege }

// Validate validates the Sst and its children
func (_edgga *Sst) Validate() error { return _edgga.ValidateWithPath("\u0053\u0073\u0074") }

type Dialogsheet struct{ CT_Dialogsheet }

func (_fdffe ST_ShowDataAs) Validate() error { return _fdffe.ValidateWithPath("") }
func (_ceegc *CT_CalcChain) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bec:
	for {
		_dgd, _aadd := d.Token()
		if _aadd != nil {
			return _aadd
		}
		switch _gbff := _dgd.(type) {
		case _a.StartElement:
			switch _gbff.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_cac := NewCT_CalcCell()
				if _gafd := d.DecodeElement(_cac, &_gbff); _gafd != nil {
					return _gafd
				}
				_ceegc.C = append(_ceegc.C, _cac)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ceegc.ExtLst = NewCT_ExtensionList()
				if _bccb := d.DecodeElement(_ceegc.ExtLst, &_gbff); _bccb != nil {
					return _bccb
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _gbff.Name)
				if _gfdb := d.Skip(); _gfdb != nil {
					return _gfdb
				}
			}
		case _a.EndElement:
			break _bec
		case _a.CharData:
		}
	}
	return nil
}
func (_faac *CT_CustomFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _faac.OperatorAttr != ST_FilterOperatorUnset {
		_dfaa, _ffbac := _faac.OperatorAttr.MarshalXMLAttr(_a.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _ffbac != nil {
			return _ffbac
		}
		start.Attr = append(start.Attr, _dfaa)
	}
	if _faac.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_faac.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fdeb *CT_ExternalSheetName) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdeb.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_fdeb.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfbdd ST_DataValidationImeMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_afcfd := _a.Attr{}
	_afcfd.Name = name
	switch _cfbdd {
	case ST_DataValidationImeModeUnset:
		_afcfd.Value = ""
	case ST_DataValidationImeModeNoControl:
		_afcfd.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_afcfd.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_afcfd.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_afcfd.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_afcfd.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_afcfd.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_afcfd.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_afcfd.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_afcfd.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_afcfd.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_afcfd.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _afcfd, nil
}

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fgegb ST_PatternType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fgegb.String(), start)
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_cfcg *CT_FilterColumn) ValidateWithPath(path string) error {
	if _cfcg.FilterColumnChoice != nil {
		if _cabae := _cfcg.FilterColumnChoice.ValidateWithPath(path + "\u002f\u0046\u0069\u006cte\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0043\u0068\u006f\u0069\u0063\u0065"); _cabae != nil {
			return _cabae
		}
	}
	return nil
}
func (_ecedc *CT_InputCells) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edgf := range start.Attr {
		if _edgf.Name.Local == "\u0072" {
			_dccga := _edgf.Value
			_ecedc.RAttr = _dccga
			continue
		}
		if _edgf.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_fbed, _ggcdbb := _dd.ParseBool(_edgf.Value)
			if _ggcdbb != nil {
				return _ggcdbb
			}
			_ecedc.DeletedAttr = &_fbed
			continue
		}
		if _edgf.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_fabcaa, _ebddb := _dd.ParseBool(_edgf.Value)
			if _ebddb != nil {
				return _ebddb
			}
			_ecedc.UndoneAttr = &_fabcaa
			continue
		}
		if _edgf.Name.Local == "\u0076\u0061\u006c" {
			_fdgc := _edgf.Value
			_ecedc.ValAttr = _fdgc
			continue
		}
		if _edgf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bagfc, _efcdd := _dd.ParseUint(_edgf.Value, 10, 32)
			if _efcdd != nil {
				return _efcdd
			}
			_ceac := uint32(_bagfc)
			_ecedc.NumFmtIdAttr = &_ceac
			continue
		}
	}
	for {
		_fdcab, _fbbfd := d.Token()
		if _fbbfd != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _fbbfd)
		}
		if _fggff, _fdege := _fdcab.(_a.EndElement); _fdege && _fggff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dddfd *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dddfd = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_dddfd = 1
	case "\u006c\u0065\u0066\u0074":
		*_dddfd = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_dddfd = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_dddfd = 4
	}
	return nil
}
func NewCT_Table() *CT_Table {
	_dfgdg := &CT_Table{}
	_dfgdg.TableColumns = NewCT_TableColumns()
	return _dfgdg
}
func NewHeaders() *Headers {
	_dadgca := &Headers{}
	_dadgca.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _dadgca
}

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

func NewCT_TableStyleInfo() *CT_TableStyleInfo { _cfcba := &CT_TableStyleInfo{}; return _cfcba }

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

func (_agagb *ST_FormatAction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_agagb = 0
	case "\u0062\u006c\u0061n\u006b":
		*_agagb = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_agagb = 2
	case "\u0064\u0072\u0069l\u006c":
		*_agagb = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_agagb = 4
	}
	return nil
}
func (_adgc *CT_PivotArea) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgbge := range start.Attr {
		if _bgbge.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_aagbge, _baceb := _dd.ParseInt(_bgbge.Value, 10, 32)
			if _baceb != nil {
				return _baceb
			}
			_egbee := int32(_aagbge)
			_adgc.FieldAttr = &_egbee
			continue
		}
		if _bgbge.Name.Local == "\u0074\u0079\u0070\u0065" {
			_adgc.TypeAttr.UnmarshalXMLAttr(_bgbge)
			continue
		}
		if _bgbge.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_ddcfe, _eefdff := _dd.ParseBool(_bgbge.Value)
			if _eefdff != nil {
				return _eefdff
			}
			_adgc.DataOnlyAttr = &_ddcfe
			continue
		}
		if _bgbge.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_cgggb, _fdcbb := _dd.ParseBool(_bgbge.Value)
			if _fdcbb != nil {
				return _fdcbb
			}
			_adgc.LabelOnlyAttr = &_cgggb
			continue
		}
		if _bgbge.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_cfbca, _aaaac := _dd.ParseBool(_bgbge.Value)
			if _aaaac != nil {
				return _aaaac
			}
			_adgc.GrandRowAttr = &_cfbca
			continue
		}
		if _bgbge.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_ceaeca, _fcabe := _dd.ParseBool(_bgbge.Value)
			if _fcabe != nil {
				return _fcabe
			}
			_adgc.GrandColAttr = &_ceaeca
			continue
		}
		if _bgbge.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_bfbbf, _fbgbd := _dd.ParseBool(_bgbge.Value)
			if _fbgbd != nil {
				return _fbgbd
			}
			_adgc.CacheIndexAttr = &_bfbbf
			continue
		}
		if _bgbge.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_eacac, _efgcb := _dd.ParseBool(_bgbge.Value)
			if _efgcb != nil {
				return _efgcb
			}
			_adgc.OutlineAttr = &_eacac
			continue
		}
		if _bgbge.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_fbedb := _bgbge.Value
			_adgc.OffsetAttr = &_fbedb
			continue
		}
		if _bgbge.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_bfdab, _fddcdc := _dd.ParseBool(_bgbge.Value)
			if _fddcdc != nil {
				return _fddcdc
			}
			_adgc.CollapsedLevelsAreSubtotalsAttr = &_bfdab
			continue
		}
		if _bgbge.Name.Local == "\u0061\u0078\u0069\u0073" {
			_adgc.AxisAttr.UnmarshalXMLAttr(_bgbge)
			continue
		}
		if _bgbge.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_dagea, _gdeea := _dd.ParseUint(_bgbge.Value, 10, 32)
			if _gdeea != nil {
				return _gdeea
			}
			_ccffg := uint32(_dagea)
			_adgc.FieldPositionAttr = &_ccffg
			continue
		}
	}
_cgbd:
	for {
		_efgeb, _bega := d.Token()
		if _bega != nil {
			return _bega
		}
		switch _bcab := _efgeb.(type) {
		case _a.StartElement:
			switch _bcab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_adgc.References = NewCT_PivotAreaReferences()
				if _bcdebd := d.DecodeElement(_adgc.References, &_bcab); _bcdebd != nil {
					return _bcdebd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adgc.ExtLst = NewCT_ExtensionList()
				if _facbf := d.DecodeElement(_adgc.ExtLst, &_bcab); _facbf != nil {
					return _facbf
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _bcab.Name)
				if _cadab := d.Skip(); _cadab != nil {
					return _cadab
				}
			}
		case _a.EndElement:
			break _cgbd
		case _a.CharData:
		}
	}
	return nil
}
func (_beage ST_PrintError) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfccdf := _a.Attr{}
	_bfccdf.Name = name
	switch _beage {
	case ST_PrintErrorUnset:
		_bfccdf.Value = ""
	case ST_PrintErrorDisplayed:
		_bfccdf.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_bfccdf.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_bfccdf.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_bfccdf.Value = "\u004e\u0041"
	}
	return _bfccdf, nil
}

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_ecdfe *CT_OleItem) ValidateWithPath(path string) error { return nil }
func (_geaba *CT_PivotAreaReferences) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfcc := range start.Attr {
		if _bfcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_effdf, _dfcd := _dd.ParseUint(_bfcc.Value, 10, 32)
			if _dfcd != nil {
				return _dfcd
			}
			_gggegf := uint32(_effdf)
			_geaba.CountAttr = &_gggegf
			continue
		}
	}
_gceaa:
	for {
		_agbf, _aefcf := d.Token()
		if _aefcf != nil {
			return _aefcf
		}
		switch _ddabf := _agbf.(type) {
		case _a.StartElement:
			switch _ddabf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_dbgfa := NewCT_PivotAreaReference()
				if _geagf := d.DecodeElement(_dbgfa, &_ddabf); _geagf != nil {
					return _geagf
				}
				_geaba.Reference = append(_geaba.Reference, _dbgfa)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _ddabf.Name)
				if _cfefb := d.Skip(); _cfefb != nil {
					return _cfefb
				}
			}
		case _a.EndElement:
			break _gceaa
		case _a.CharData:
		}
	}
	return nil
}
func (_dcd *CT_BookView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcd.VisibilityAttr != ST_VisibilityUnset {
		_gad, _cee := _dcd.VisibilityAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _cee != nil {
			return _cee
		}
		start.Attr = append(start.Attr, _gad)
	}
	if _dcd.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcd.MinimizedAttr))})
	}
	if _dcd.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcd.ShowHorizontalScrollAttr))})
	}
	if _dcd.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcd.ShowVerticalScrollAttr))})
	}
	if _dcd.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcd.ShowSheetTabsAttr))})
	}
	if _dcd.XWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.XWindowAttr)})
	}
	if _dcd.YWindowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.YWindowAttr)})
	}
	if _dcd.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.WindowWidthAttr)})
	}
	if _dcd.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.WindowHeightAttr)})
	}
	if _dcd.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.TabRatioAttr)})
	}
	if _dcd.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.FirstSheetAttr)})
	}
	if _dcd.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _fd.Sprintf("\u0025\u0076", *_dcd.ActiveTabAttr)})
	}
	if _dcd.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcd.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _dcd.ExtLst != nil {
		_ggb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcd.ExtLst, _ggb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_gdaf *CT_Macrosheet) ValidateWithPath(path string) error {
	if _gdaf.SheetPr != nil {
		if _geade := _gdaf.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _geade != nil {
			return _geade
		}
	}
	if _gdaf.Dimension != nil {
		if _afde := _gdaf.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _afde != nil {
			return _afde
		}
	}
	if _gdaf.SheetViews != nil {
		if _fafdce := _gdaf.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _fafdce != nil {
			return _fafdce
		}
	}
	if _gdaf.SheetFormatPr != nil {
		if _gdggd := _gdaf.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _gdggd != nil {
			return _gdggd
		}
	}
	for _aeaba, _degg := range _gdaf.Cols {
		if _dbcfe := _degg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _aeaba)); _dbcfe != nil {
			return _dbcfe
		}
	}
	if _eegad := _gdaf.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _eegad != nil {
		return _eegad
	}
	if _gdaf.SheetProtection != nil {
		if _ecffa := _gdaf.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _ecffa != nil {
			return _ecffa
		}
	}
	if _gdaf.AutoFilter != nil {
		if _dgcfe := _gdaf.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _dgcfe != nil {
			return _dgcfe
		}
	}
	if _gdaf.SortState != nil {
		if _dcbcc := _gdaf.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _dcbcc != nil {
			return _dcbcc
		}
	}
	if _gdaf.DataConsolidate != nil {
		if _afdde := _gdaf.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _afdde != nil {
			return _afdde
		}
	}
	if _gdaf.CustomSheetViews != nil {
		if _dgbeg := _gdaf.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _dgbeg != nil {
			return _dgbeg
		}
	}
	if _gdaf.PhoneticPr != nil {
		if _dggd := _gdaf.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _dggd != nil {
			return _dggd
		}
	}
	for _dageb, _fecda := range _gdaf.ConditionalFormatting {
		if _bgggd := _fecda.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _dageb)); _bgggd != nil {
			return _bgggd
		}
	}
	if _gdaf.PrintOptions != nil {
		if _gffa := _gdaf.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _gffa != nil {
			return _gffa
		}
	}
	if _gdaf.PageMargins != nil {
		if _egfe := _gdaf.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _egfe != nil {
			return _egfe
		}
	}
	if _gdaf.PageSetup != nil {
		if _bfdf := _gdaf.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _bfdf != nil {
			return _bfdf
		}
	}
	if _gdaf.HeaderFooter != nil {
		if _afbe := _gdaf.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _afbe != nil {
			return _afbe
		}
	}
	if _gdaf.RowBreaks != nil {
		if _dfggf := _gdaf.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _dfggf != nil {
			return _dfggf
		}
	}
	if _gdaf.ColBreaks != nil {
		if _fbddgf := _gdaf.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _fbddgf != nil {
			return _fbddgf
		}
	}
	if _gdaf.CustomProperties != nil {
		if _egfbbb := _gdaf.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _egfbbb != nil {
			return _egfbbb
		}
	}
	if _gdaf.Drawing != nil {
		if _bfbd := _gdaf.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _bfbd != nil {
			return _bfbd
		}
	}
	if _gdaf.LegacyDrawing != nil {
		if _bgeb := _gdaf.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _bgeb != nil {
			return _bgeb
		}
	}
	if _gdaf.LegacyDrawingHF != nil {
		if _gaedc := _gdaf.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gaedc != nil {
			return _gaedc
		}
	}
	if _gdaf.DrawingHF != nil {
		if _adea := _gdaf.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _adea != nil {
			return _adea
		}
	}
	if _gdaf.Picture != nil {
		if _eegdd := _gdaf.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _eegdd != nil {
			return _eegdd
		}
	}
	if _gdaf.OleObjects != nil {
		if _bgfgg := _gdaf.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _bgfgg != nil {
			return _bgfgg
		}
	}
	if _gdaf.ExtLst != nil {
		if _bcgfa := _gdaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcgfa != nil {
			return _bcgfa
		}
	}
	return nil
}

type ST_HorizontalAlignment byte

func (_bbec *CT_ChartsheetProtection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbec.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bbec.PasswordAttr)})
	}
	if _bbec.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bbec.AlgorithmNameAttr)})
	}
	if _bbec.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_bbec.HashValueAttr)})
	}
	if _bbec.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_bbec.SaltValueAttr)})
	}
	if _bbec.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fd.Sprintf("\u0025\u0076", *_bbec.SpinCountAttr)})
	}
	if _bbec.ContentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbec.ContentAttr))})
	}
	if _bbec.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbec.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_gcbac *CT_TableColumns) ValidateWithPath(path string) error {
	for _dedbe, _bcdbg := range _gcbac.TableColumn {
		if _eadca := _bcdbg.ValidateWithPath(_fd.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _dedbe)); _eadca != nil {
			return _eadca
		}
	}
	return nil
}

// Validate validates the CT_Borders and its children
func (_abg *CT_Borders) Validate() error {
	return _abg.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_fddce *CT_SheetProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _faaga := range start.Attr {
		if _faaga.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_accbe := _faaga.Value
			_fddce.PasswordAttr = &_accbe
			continue
		}
		if _faaga.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ebecge := _faaga.Value
			_fddce.AlgorithmNameAttr = &_ebecge
			continue
		}
		if _faaga.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_accedd := _faaga.Value
			_fddce.HashValueAttr = &_accedd
			continue
		}
		if _faaga.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_eaeebb := _faaga.Value
			_fddce.SaltValueAttr = &_eaeebb
			continue
		}
		if _faaga.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gabcc, _dadaec := _dd.ParseUint(_faaga.Value, 10, 32)
			if _dadaec != nil {
				return _dadaec
			}
			_agdfg := uint32(_gabcc)
			_fddce.SpinCountAttr = &_agdfg
			continue
		}
		if _faaga.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_gbddc, _febc := _dd.ParseBool(_faaga.Value)
			if _febc != nil {
				return _febc
			}
			_fddce.SheetAttr = &_gbddc
			continue
		}
		if _faaga.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_gbebb, _ggeccb := _dd.ParseBool(_faaga.Value)
			if _ggeccb != nil {
				return _ggeccb
			}
			_fddce.ObjectsAttr = &_gbebb
			continue
		}
		if _faaga.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_cafcc, _cbeca := _dd.ParseBool(_faaga.Value)
			if _cbeca != nil {
				return _cbeca
			}
			_fddce.ScenariosAttr = &_cafcc
			continue
		}
		if _faaga.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_afadf, _dedad := _dd.ParseBool(_faaga.Value)
			if _dedad != nil {
				return _dedad
			}
			_fddce.FormatCellsAttr = &_afadf
			continue
		}
		if _faaga.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_bcgcbg, _afefa := _dd.ParseBool(_faaga.Value)
			if _afefa != nil {
				return _afefa
			}
			_fddce.FormatColumnsAttr = &_bcgcbg
			continue
		}
		if _faaga.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_befgf, _gbbea := _dd.ParseBool(_faaga.Value)
			if _gbbea != nil {
				return _gbbea
			}
			_fddce.FormatRowsAttr = &_befgf
			continue
		}
		if _faaga.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_ecdbd, _bdcec := _dd.ParseBool(_faaga.Value)
			if _bdcec != nil {
				return _bdcec
			}
			_fddce.InsertColumnsAttr = &_ecdbd
			continue
		}
		if _faaga.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_adgbg, _bdbcbe := _dd.ParseBool(_faaga.Value)
			if _bdbcbe != nil {
				return _bdbcbe
			}
			_fddce.InsertRowsAttr = &_adgbg
			continue
		}
		if _faaga.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_bdcdcgb, _gedcf := _dd.ParseBool(_faaga.Value)
			if _gedcf != nil {
				return _gedcf
			}
			_fddce.InsertHyperlinksAttr = &_bdcdcgb
			continue
		}
		if _faaga.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_bgfdgb, _gafcb := _dd.ParseBool(_faaga.Value)
			if _gafcb != nil {
				return _gafcb
			}
			_fddce.DeleteColumnsAttr = &_bgfdgb
			continue
		}
		if _faaga.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_abgfge, _aeadb := _dd.ParseBool(_faaga.Value)
			if _aeadb != nil {
				return _aeadb
			}
			_fddce.DeleteRowsAttr = &_abgfge
			continue
		}
		if _faaga.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_feaff, _dfgdfa := _dd.ParseBool(_faaga.Value)
			if _dfgdfa != nil {
				return _dfgdfa
			}
			_fddce.SelectLockedCellsAttr = &_feaff
			continue
		}
		if _faaga.Name.Local == "\u0073\u006f\u0072\u0074" {
			_fefbg, _efccf := _dd.ParseBool(_faaga.Value)
			if _efccf != nil {
				return _efccf
			}
			_fddce.SortAttr = &_fefbg
			continue
		}
		if _faaga.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_bbabdg, _cggeef := _dd.ParseBool(_faaga.Value)
			if _cggeef != nil {
				return _cggeef
			}
			_fddce.AutoFilterAttr = &_bbabdg
			continue
		}
		if _faaga.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_fcbeg, _aedbe := _dd.ParseBool(_faaga.Value)
			if _aedbe != nil {
				return _aedbe
			}
			_fddce.PivotTablesAttr = &_fcbeg
			continue
		}
		if _faaga.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_abdde, _bdafg := _dd.ParseBool(_faaga.Value)
			if _bdafg != nil {
				return _bdafg
			}
			_fddce.SelectUnlockedCellsAttr = &_abdde
			continue
		}
	}
	for {
		_gbadf, _ccffc := d.Token()
		if _ccffc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _ccffc)
		}
		if _cacbb, _baddad := _gbadf.(_a.EndElement); _baddad && _cacbb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_eccba *CT_TextFields) ValidateWithPath(path string) error {
	for _egdca, _defaab := range _eccba.TextField {
		if _dcagff := _defaab.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _egdca)); _dcagff != nil {
			return _dcagff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_ebgee *CT_Xf) ValidateWithPath(path string) error {
	if _ebgee.Alignment != nil {
		if _dbedc := _ebgee.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _dbedc != nil {
			return _dbedc
		}
	}
	if _ebgee.Protection != nil {
		if _dbaeb := _ebgee.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _dbaeb != nil {
			return _dbaeb
		}
	}
	if _ebgee.ExtLst != nil {
		if _fbdbbe := _ebgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbdbbe != nil {
			return _fbdbbe
		}
	}
	return nil
}

// Validate validates the CT_ConditionalFormat and its children
func (_fefge *CT_ConditionalFormat) Validate() error {
	return _fefge.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}
func (_dcbcg ST_VerticalAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dcbcg.String(), start)
}

type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

func (_aceeg ST_Orientation) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_aebaadb := _a.Attr{}
	_aebaadb.Name = name
	switch _aceeg {
	case ST_OrientationUnset:
		_aebaadb.Value = ""
	case ST_OrientationDefault:
		_aebaadb.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_aebaadb.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_aebaadb.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _aebaadb, nil
}
func NewCT_FontSize() *CT_FontSize {
	_abfgd := &CT_FontSize{}
	return _abfgd
}

// Validate validates the CT_FieldsUsage and its children
func (_cadgb *CT_FieldsUsage) Validate() error {
	return _cadgb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}
func (_agba *CT_CellStyleXfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _badbf := range start.Attr {
		if _badbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffed, _eecac := _dd.ParseUint(_badbf.Value, 10, 32)
			if _eecac != nil {
				return _eecac
			}
			_ebbab := uint32(_ffed)
			_agba.CountAttr = &_ebbab
			continue
		}
	}
_agbg:
	for {
		_egcf, _abee := d.Token()
		if _abee != nil {
			return _abee
		}
		switch _fbgd := _egcf.(type) {
		case _a.StartElement:
			switch _fbgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_gfge := NewCT_Xf()
				if _bdac := d.DecodeElement(_gfge, &_fbgd); _bdac != nil {
					return _bdac
				}
				_agba.Xf = append(_agba.Xf, _gfge)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _fbgd.Name)
				if _eddbe := d.Skip(); _eddbe != nil {
					return _eddbe
				}
			}
		case _a.EndElement:
			break _agbg
		case _a.CharData:
		}
	}
	return nil
}
func (_bbbac *CT_ProtectedRange) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bbbac.PasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _bbbac.SqrefAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bbbac.NameAttr)})
	if _bbbac.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.SecurityDescriptorAttr)})
	}
	if _bbbac.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.AlgorithmNameAttr)})
	}
	if _bbbac.HashValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.HashValueAttr)})
	}
	if _bbbac.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.SaltValueAttr)})
	}
	if _bbbac.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _fd.Sprintf("\u0025\u0076", *_bbbac.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _bbbac.SecurityDescriptor != nil {
		_ccbdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ase\u0063\u0075\u0072\u0069\u0074\u0079\u0044\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072"}}
		for _, _fdbac := range _bbbac.SecurityDescriptor {
			e.EncodeElement(_fdbac, _ccbdb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afgde *CT_SheetDimension) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eegca := range start.Attr {
		if _eegca.Name.Local == "\u0072\u0065\u0066" {
			_abgbd := _eegca.Value
			_afgde.RefAttr = _abgbd
			continue
		}
	}
	for {
		_eacgbc, _cgcbb := d.Token()
		if _cgcbb != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _cgcbb)
		}
		if _babff, _gbabb := _eacgbc.(_a.EndElement); _gbabb && _babff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gcafg *CT_colItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfddg := range start.Attr {
		if _cfddg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcbdb, _eaaee := _dd.ParseUint(_cfddg.Value, 10, 32)
			if _eaaee != nil {
				return _eaaee
			}
			_ebabg := uint32(_gcbdb)
			_gcafg.CountAttr = &_ebabg
			continue
		}
	}
_bddbdd:
	for {
		_afdcb, _dbfca := d.Token()
		if _dbfca != nil {
			return _dbfca
		}
		switch _gcgcba := _afdcb.(type) {
		case _a.StartElement:
			switch _gcgcba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_cfcfce := NewCT_I()
				if _gdeeaf := d.DecodeElement(_cfcfce, &_gcgcba); _gdeeaf != nil {
					return _gdeeaf
				}
				_gcafg.I = append(_gcafg.I, _cfcfce)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _gcgcba.Name)
				if _cfgeb := d.Skip(); _cfgeb != nil {
					return _cfgeb
				}
			}
		case _a.EndElement:
			break _bddbdd
		case _a.CharData:
		}
	}
	return nil
}
func (_effa *CT_RPrEltChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _effa.RFont != nil {
		_bceeea := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0072\u0046\u006f\u006et"}}
		e.EncodeElement(_effa.RFont, _bceeea)
	} else if _effa.Charset != nil {
		_cbbec := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_effa.Charset, _cbbec)
	} else if _effa.Family != nil {
		_egedfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0061\u006d\u0069\u006c\u0079"}}
		e.EncodeElement(_effa.Family, _egedfe)
	} else if _effa.B != nil {
		_beebf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0062"}}
		e.EncodeElement(_effa.B, _beebf)
	} else if _effa.I != nil {
		_ecacf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0069"}}
		e.EncodeElement(_effa.I, _ecacf)
	} else if _effa.Strike != nil {
		_cgabc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0074\u0072\u0069\u006b\u0065"}}
		e.EncodeElement(_effa.Strike, _cgabc)
	} else if _effa.Outline != nil {
		_edefa := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_effa.Outline, _edefa)
	} else if _effa.Shadow != nil {
		_fffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0061\u0064\u006f\u0077"}}
		e.EncodeElement(_effa.Shadow, _fffe)
	} else if _effa.Condense != nil {
		_efaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_effa.Condense, _efaee)
	} else if _effa.Extend != nil {
		_afbfa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u0065\u006e\u0064"}}
		e.EncodeElement(_effa.Extend, _afbfa)
	} else if _effa.Color != nil {
		_dgbgc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006f\u006c\u006fr"}}
		e.EncodeElement(_effa.Color, _dgbgc)
	} else if _effa.Sz != nil {
		_ecgfd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u007a"}}
		e.EncodeElement(_effa.Sz, _ecgfd)
	} else if _effa.U != nil {
		_fgbec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0075"}}
		e.EncodeElement(_effa.U, _fgbec)
	} else if _effa.VertAlign != nil {
		_agefd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0076\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_effa.VertAlign, _agefd)
	} else if _effa.Scheme != nil {
		_faddb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_effa.Scheme, _faddb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dcbg *CT_ColorFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcbg.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dcbg.DxfIdAttr)})
	}
	if _dcbg.CellColorAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcbg.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gebaca *CT_Macrosheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006fs\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _gebaca.SheetPr != nil {
		_cdbgb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_gebaca.SheetPr, _cdbgb)
	}
	if _gebaca.Dimension != nil {
		_efeebc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_gebaca.Dimension, _efeebc)
	}
	if _gebaca.SheetViews != nil {
		_geggg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_gebaca.SheetViews, _geggg)
	}
	if _gebaca.SheetFormatPr != nil {
		_fafef := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_gebaca.SheetFormatPr, _fafef)
	}
	if _gebaca.Cols != nil {
		_bbgea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0073"}}
		for _, _bbgd := range _gebaca.Cols {
			e.EncodeElement(_bbgd, _bbgea)
		}
	}
	_egffe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_gebaca.SheetData, _egffe)
	if _gebaca.SheetProtection != nil {
		_caeca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ash\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gebaca.SheetProtection, _caeca)
	}
	if _gebaca.AutoFilter != nil {
		_feccg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_gebaca.AutoFilter, _feccg)
	}
	if _gebaca.SortState != nil {
		_aegg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_gebaca.SortState, _aegg)
	}
	if _gebaca.DataConsolidate != nil {
		_facgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ada\u0074\u0061\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_gebaca.DataConsolidate, _facgc)
	}
	if _gebaca.CustomSheetViews != nil {
		_cgfbd := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0053h\u0065\u0065\u0074\u0056ie\u0077\u0073"}}
		e.EncodeElement(_gebaca.CustomSheetViews, _cgfbd)
	}
	if _gebaca.PhoneticPr != nil {
		_daeadf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0068\u006f\u006e\u0065t\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_gebaca.PhoneticPr, _daeadf)
	}
	if _gebaca.ConditionalFormatting != nil {
		_bdff := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0063\u006fn\u0064\u0069\u0074\u0069\u006fn\u0061l\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg"}}
		for _, _eecda := range _gebaca.ConditionalFormatting {
			e.EncodeElement(_eecda, _bdff)
		}
	}
	if _gebaca.PrintOptions != nil {
		_gceee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0070\u0072i\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_gebaca.PrintOptions, _gceee)
	}
	if _gebaca.PageMargins != nil {
		_eedag := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_gebaca.PageMargins, _eedag)
	}
	if _gebaca.PageSetup != nil {
		_gegcg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_gebaca.PageSetup, _gegcg)
	}
	if _gebaca.HeaderFooter != nil {
		_dabc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_gebaca.HeaderFooter, _dabc)
	}
	if _gebaca.RowBreaks != nil {
		_dcfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gebaca.RowBreaks, _dcfb)
	}
	if _gebaca.ColBreaks != nil {
		_dfbdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_gebaca.ColBreaks, _dfbdb)
	}
	if _gebaca.CustomProperties != nil {
		_ccbdea := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073"}}
		e.EncodeElement(_gebaca.CustomProperties, _ccbdea)
	}
	if _gebaca.Drawing != nil {
		_bacbb := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_gebaca.Drawing, _bacbb)
	}
	if _gebaca.LegacyDrawing != nil {
		_bdbfc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_gebaca.LegacyDrawing, _bdbfc)
	}
	if _gebaca.LegacyDrawingHF != nil {
		_eedbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ale\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_gebaca.LegacyDrawingHF, _eedbc)
	}
	if _gebaca.DrawingHF != nil {
		_bfec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_gebaca.DrawingHF, _bfec)
	}
	if _gebaca.Picture != nil {
		_eeafe := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_gebaca.Picture, _eeafe)
	}
	if _gebaca.OleObjects != nil {
		_faege := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0065\u004f\u0062j\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_gebaca.OleObjects, _faege)
	}
	if _gebaca.ExtLst != nil {
		_dbdda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gebaca.ExtLst, _dbdda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type Headers struct{ CT_RevisionHeaders }

func (_fbaba ST_TargetScreenSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fbaba.String(), start)
}

type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

// Validate validates the CT_PCDKPIs and its children
func (_efadg *CT_PCDKPIs) Validate() error {
	return _efadg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}
func (_fgceae ST_SourceType) Validate() error { return _fgceae.ValidateWithPath("") }
func NewCT_TextFields() *CT_TextFields {
	_dbafcd := &CT_TextFields{}
	return _dbafcd
}
func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_dbgde := &CT_CustomChartsheetView{}
	_dbgde.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _dbgde
}
func (_cebag *ST_DvAspect) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfddd, _geecdb := d.Token()
	if _geecdb != nil {
		return _geecdb
	}
	if _dfbggd, _cgffd := _dfddd.(_a.EndElement); _cgffd && _dfbggd.Name == start.Name {
		*_cebag = 1
		return nil
	}
	if _ggadf, _efagec := _dfddd.(_a.CharData); !_efagec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfddd)
	} else {
		switch string(_ggadf) {
		case "":
			*_cebag = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_cebag = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_cebag = 2
		}
	}
	_dfddd, _geecdb = d.Token()
	if _geecdb != nil {
		return _geecdb
	}
	if _cafbe, _bdfgac := _dfddd.(_a.EndElement); _bdfgac && _cafbe.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfddd)
}
func (_eebff ST_TableType) ValidateWithPath(path string) error {
	switch _eebff {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eebff))
	}
	return nil
}
func (_acgceb ST_SortType) ValidateWithPath(path string) error {
	switch _acgceb {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acgceb))
	}
	return nil
}
func NewCT_RangeSet() *CT_RangeSet { _eegg := &CT_RangeSet{}; return _eegg }
func (_fggea *CT_PageSetup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fggea.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.PaperSizeAttr)})
	}
	if _fggea.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.PaperHeightAttr)})
	}
	if _fggea.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.PaperWidthAttr)})
	}
	if _fggea.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.ScaleAttr)})
	}
	if _fggea.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.FirstPageNumberAttr)})
	}
	if _fggea.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.FitToWidthAttr)})
	}
	if _fggea.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.FitToHeightAttr)})
	}
	if _fggea.PageOrderAttr != ST_PageOrderUnset {
		_dade, _eedaf := _fggea.PageOrderAttr.MarshalXMLAttr(_a.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _eedaf != nil {
			return _eedaf
		}
		start.Attr = append(start.Attr, _dade)
	}
	if _fggea.OrientationAttr != ST_OrientationUnset {
		_cfagc, _afffg := _fggea.OrientationAttr.MarshalXMLAttr(_a.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _afffg != nil {
			return _afffg
		}
		start.Attr = append(start.Attr, _cfagc)
	}
	if _fggea.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fggea.UsePrinterDefaultsAttr))})
	}
	if _fggea.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fggea.BlackAndWhiteAttr))})
	}
	if _fggea.DraftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fggea.DraftAttr))})
	}
	if _fggea.CellCommentsAttr != ST_CellCommentsUnset {
		_bgeed, _efaafc := _fggea.CellCommentsAttr.MarshalXMLAttr(_a.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _efaafc != nil {
			return _efaafc
		}
		start.Attr = append(start.Attr, _bgeed)
	}
	if _fggea.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fggea.UseFirstPageNumberAttr))})
	}
	if _fggea.ErrorsAttr != ST_PrintErrorUnset {
		_bcbaa, _cbgba := _fggea.ErrorsAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _cbgba != nil {
			return _cbgba
		}
		start.Attr = append(start.Attr, _bcbaa)
	}
	if _fggea.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.HorizontalDpiAttr)})
	}
	if _fggea.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.VerticalDpiAttr)})
	}
	if _fggea.CopiesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.CopiesAttr)})
	}
	if _fggea.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fggea.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_IconFilter() *CT_IconFilter {
	_bdaac := &CT_IconFilter{}
	_bdaac.IconSetAttr = ST_IconSetType(1)
	return _bdaac
}

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_egedb *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _cgfg, _aecbg := range _egedb.Bk {
		if _ebgebb := _aecbg.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _cgfg)); _ebgebb != nil {
			return _ebgebb
		}
	}
	return nil
}
func (_dfdbg *CT_Colors) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _dfdbg.IndexedColors != nil {
		_fbdaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_dfdbg.IndexedColors, _fbdaf)
	}
	if _dfdbg.MruColors != nil {
		_eaeea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_dfdbg.MruColors, _eaeea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gaaacc *ST_Scope) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gaaacc = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_gaaacc = 1
	case "\u0064\u0061\u0074\u0061":
		*_gaaacc = 2
	case "\u0066\u0069\u0065l\u0064":
		*_gaaacc = 3
	}
	return nil
}

// Validate validates the CT_CellProtection and its children
func (_ddf *CT_CellProtection) Validate() error {
	return _ddf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}
func (_eaebc *CT_IconFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eaebc.IconSetAttr = ST_IconSetType(1)
	for _, _fbbgb := range start.Attr {
		if _fbbgb.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_eaebc.IconSetAttr.UnmarshalXMLAttr(_fbbgb)
			continue
		}
		if _fbbgb.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_dggec, _bagfda := _dd.ParseUint(_fbbgb.Value, 10, 32)
			if _bagfda != nil {
				return _bagfda
			}
			_dcgeea := uint32(_dggec)
			_eaebc.IconIdAttr = &_dcgeea
			continue
		}
	}
	for {
		_fecb, _aebc := d.Token()
		if _aebc != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _aebc)
		}
		if _bddga, _bddf := _fecb.(_a.EndElement); _bddf && _bddga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efdecg ST_HorizontalAlignment) String() string {
	switch _efdecg {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func NewCT_Format() *CT_Format {
	_dcddf := &CT_Format{}
	_dcddf.PivotArea = NewCT_PivotArea()
	return _dcddf
}

type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}

func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _ddgg := &CT_CellSmartTagPr{}; return _ddgg }
func NewCT_Parameter() *CT_Parameter           { _fcfag := &CT_Parameter{}; return _fcfag }

type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

func (_affegd ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _affegd {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_affegd))
	}
	return nil
}
func (_ebggd *ST_PrintError) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_adcff, _egdcb := d.Token()
	if _egdcb != nil {
		return _egdcb
	}
	if _ggbcf, _ebdfb := _adcff.(_a.EndElement); _ebdfb && _ggbcf.Name == start.Name {
		*_ebggd = 1
		return nil
	}
	if _fadgg, _gddgf := _adcff.(_a.CharData); !_gddgf {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adcff)
	} else {
		switch string(_fadgg) {
		case "":
			*_ebggd = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_ebggd = 1
		case "\u0062\u006c\u0061n\u006b":
			*_ebggd = 2
		case "\u0064\u0061\u0073\u0068":
			*_ebggd = 3
		case "\u004e\u0041":
			*_ebggd = 4
		}
	}
	_adcff, _egdcb = d.Token()
	if _egdcb != nil {
		return _egdcb
	}
	if _gacaee, _gfbga := _adcff.(_a.EndElement); _gfbga && _gacaee.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adcff)
}
func (_abgfdd *CT_UndoInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _abgfdd.IndexAttr)})
	_cccbg, _cfdcda := _abgfdd.ExpAttr.MarshalXMLAttr(_a.Name{Local: "\u0065\u0078\u0070"})
	if _cfdcda != nil {
		return _cfdcda
	}
	start.Attr = append(start.Attr, _cccbg)
	if _abgfdd.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abgfdd.Ref3DAttr))})
	}
	if _abgfdd.ArrayAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abgfdd.ArrayAttr))})
	}
	if _abgfdd.VAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abgfdd.VAttr))})
	}
	if _abgfdd.NfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abgfdd.NfAttr))})
	}
	if _abgfdd.CsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_abgfdd.CsAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _abgfdd.DrAttr)})
	if _abgfdd.DnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_abgfdd.DnAttr)})
	}
	if _abgfdd.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_abgfdd.RAttr)})
	}
	if _abgfdd.SIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_abgfdd.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_efeff *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _efeff.SheetPr != nil {
		if _aafaa := _efeff.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _aafaa != nil {
			return _aafaa
		}
	}
	if _efeff.SheetViews != nil {
		if _cbgc := _efeff.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cbgc != nil {
			return _cbgc
		}
	}
	if _efeff.SheetFormatPr != nil {
		if _dfbbe := _efeff.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _dfbbe != nil {
			return _dfbbe
		}
	}
	if _efeff.SheetProtection != nil {
		if _baffb := _efeff.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _baffb != nil {
			return _baffb
		}
	}
	if _efeff.CustomSheetViews != nil {
		if _cefe := _efeff.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _cefe != nil {
			return _cefe
		}
	}
	if _efeff.PrintOptions != nil {
		if _eecge := _efeff.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _eecge != nil {
			return _eecge
		}
	}
	if _efeff.PageMargins != nil {
		if _cefa := _efeff.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _cefa != nil {
			return _cefa
		}
	}
	if _efeff.PageSetup != nil {
		if _feeg := _efeff.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _feeg != nil {
			return _feeg
		}
	}
	if _efeff.HeaderFooter != nil {
		if _cbbgf := _efeff.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cbbgf != nil {
			return _cbbgf
		}
	}
	if _efeff.Drawing != nil {
		if _abab := _efeff.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _abab != nil {
			return _abab
		}
	}
	if _efeff.LegacyDrawing != nil {
		if _badda := _efeff.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _badda != nil {
			return _badda
		}
	}
	if _efeff.LegacyDrawingHF != nil {
		if _gdcfa := _efeff.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _gdcfa != nil {
			return _gdcfa
		}
	}
	if _efeff.DrawingHF != nil {
		if _bdgc := _efeff.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _bdgc != nil {
			return _bdgc
		}
	}
	if _efeff.OleObjects != nil {
		if _ddcf := _efeff.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _ddcf != nil {
			return _ddcf
		}
	}
	if _efeff.Controls != nil {
		if _decedb := _efeff.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _decedb != nil {
			return _decedb
		}
	}
	if _efeff.ExtLst != nil {
		if _cbaa := _efeff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbaa != nil {
			return _cbaa
		}
	}
	return nil
}
func (_ddbfg ST_Axis) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ddbfg.String(), start)
}
func NewExternalLink() *ExternalLink {
	_edecec := &ExternalLink{}
	_edecec.CT_ExternalLink = *NewCT_ExternalLink()
	return _edecec
}
func (_eeggd ST_Comments) ValidateWithPath(path string) error {
	switch _eeggd {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeggd))
	}
	return nil
}
func (_egfdc ST_DataValidationOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eabag := _a.Attr{}
	_eabag.Name = name
	switch _egfdc {
	case ST_DataValidationOperatorUnset:
		_eabag.Value = ""
	case ST_DataValidationOperatorBetween:
		_eabag.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_eabag.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_eabag.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_eabag.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_eabag.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_eabag.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_eabag.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_eabag.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _eabag, nil
}
func (_gdafb *CT_RevisionHeader) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdafb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_gdafb.SheetIdMap = NewCT_SheetIdMap()
	for _, _geffg := range start.Attr {
		if _geffg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _geffg.Name.Local == "\u0069\u0064" || _geffg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _geffg.Name.Local == "\u0069\u0064" {
			_ceeed := _geffg.Value
			_gdafb.IdAttr = _ceeed
			continue
		}
		if _geffg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_adgcc := _geffg.Value
			_gdafb.GuidAttr = _adgcc
			continue
		}
		if _geffg.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_badfc, _aecbgb := ParseStdlibTime(_geffg.Value)
			if _aecbgb != nil {
				return _aecbgb
			}
			_gdafb.DateTimeAttr = _badfc
			continue
		}
		if _geffg.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_cddbf, _gfece := _dd.ParseUint(_geffg.Value, 10, 32)
			if _gfece != nil {
				return _gfece
			}
			_gdafb.MaxSheetIdAttr = uint32(_cddbf)
			continue
		}
		if _geffg.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_accede := _geffg.Value
			_gdafb.UserNameAttr = _accede
			continue
		}
		if _geffg.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_cggfd, _fefac := _dd.ParseUint(_geffg.Value, 10, 32)
			if _fefac != nil {
				return _fefac
			}
			_ccfcf := uint32(_cggfd)
			_gdafb.MinRIdAttr = &_ccfcf
			continue
		}
		if _geffg.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_adcfd, _ecgdgb := _dd.ParseUint(_geffg.Value, 10, 32)
			if _ecgdgb != nil {
				return _ecgdgb
			}
			_eabbg := uint32(_adcfd)
			_gdafb.MaxRIdAttr = &_eabbg
			continue
		}
	}
_dbccaf:
	for {
		_eafcb, _afaab := d.Token()
		if _afaab != nil {
			return _afaab
		}
		switch _adgga := _eafcb.(type) {
		case _a.StartElement:
			switch _adgga.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _agfdc := d.DecodeElement(_gdafb.SheetIdMap, &_adgga); _agfdc != nil {
					return _agfdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_gdafb.ReviewedList = NewCT_ReviewedRevisions()
				if _edfdd := d.DecodeElement(_gdafb.ReviewedList, &_adgga); _edfdd != nil {
					return _edfdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdafb.ExtLst = NewCT_ExtensionList()
				if _gecec := d.DecodeElement(_gdafb.ExtLst, &_adgga); _gecec != nil {
					return _gecec
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _adgga.Name)
				if _cddeg := d.Skip(); _cddeg != nil {
					return _cddeg
				}
			}
		case _a.EndElement:
			break _dbccaf
		case _a.CharData:
		}
	}
	return nil
}
func (_ffafgc *ST_SheetViewType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ffafgc = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_ffafgc = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_ffafgc = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_ffafgc = 3
	}
	return nil
}
func (_ffcde ST_GradientType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ffcde.String(), start)
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_febad *CT_Font) ValidateWithPath(path string) error {
	for _cecef, _addd := range _febad.FontChoice {
		if _baadf := _addd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0046\u006f\u006e\u0074\u0043\u0068\u006f\u0069\u0063e\u005b\u0025\u0064\u005d", path, _cecef)); _baadf != nil {
			return _baadf
		}
	}
	return nil
}

// Validate validates the CT_MdxTuple and its children
func (_fddcc *CT_MdxTuple) Validate() error {
	return _fddcc.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}
func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_gffgd := &CT_RevisionAutoFormatting{}
	return _gffgd
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_egaa *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _ebg, _abcb := range _egaa.CalculatedMember {
		if _edeg := _abcb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _ebg)); _edeg != nil {
			return _edeg
		}
	}
	return nil
}

// Validate validates the CT_MetadataTypes and its children
func (_dcdcd *CT_MetadataTypes) Validate() error {
	return _dcdcd.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}
func (_daddd ST_CalcMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cbcfbb := _a.Attr{}
	_cbcfbb.Name = name
	switch _daddd {
	case ST_CalcModeUnset:
		_cbcfbb.Value = ""
	case ST_CalcModeManual:
		_cbcfbb.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_cbcfbb.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_cbcfbb.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _cbcfbb, nil
}

// Validate validates the CT_Filter and its children
func (_edbf *CT_Filter) Validate() error {
	return _edbf.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}

type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _gbdfa := &CT_PCDSDTCEntries{}; return _gbdfa }

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_afbda *CT_MemberProperties) ValidateWithPath(path string) error {
	for _acdee, _ecfed := range _afbda.Mp {
		if _ceade := _ecfed.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _acdee)); _ceade != nil {
			return _ceade
		}
	}
	return nil
}

type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}
type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}

// Validate validates the CT_DataValidations and its children
func (_gfgda *CT_DataValidations) Validate() error {
	return _gfgda.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

// Validate validates the CT_CustomProperties and its children
func (_bffc *CT_CustomProperties) Validate() error {
	return _bffc.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gecabgc ST_TextVAlign) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gecabgc.String(), start)
}

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_eddce *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _eddce.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _fd.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _gbcf := _eddce.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _gbcf != nil {
		return _gbcf
	}
	return nil
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

func (_gabfbd *CT_Workbook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gabfbd.Sheets = NewCT_Sheets()
	for _, _fabeba := range start.Attr {
		if _fabeba.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_gabfbd.ConformanceAttr.UnmarshalXMLAttr(_fabeba)
			continue
		}
	}
_fgbce:
	for {
		_acagca, _ccggc := d.Token()
		if _ccggc != nil {
			return _ccggc
		}
		switch _dfbba := _acagca.(type) {
		case _a.StartElement:
			switch _dfbba.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_gabfbd.FileVersion = NewCT_FileVersion()
				if _cefgac := d.DecodeElement(_gabfbd.FileVersion, &_dfbba); _cefgac != nil {
					return _cefgac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_gabfbd.FileSharing = NewCT_FileSharing()
				if _bcade := d.DecodeElement(_gabfbd.FileSharing, &_dfbba); _bcade != nil {
					return _bcade
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_gabfbd.WorkbookPr = NewCT_WorkbookPr()
				if _acdfb := d.DecodeElement(_gabfbd.WorkbookPr, &_dfbba); _acdfb != nil {
					return _acdfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_gabfbd.WorkbookProtection = NewCT_WorkbookProtection()
				if _eegfg := d.DecodeElement(_gabfbd.WorkbookProtection, &_dfbba); _eegfg != nil {
					return _eegfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_gabfbd.BookViews = NewCT_BookViews()
				if _ggffa := d.DecodeElement(_gabfbd.BookViews, &_dfbba); _ggffa != nil {
					return _ggffa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _bbaec := d.DecodeElement(_gabfbd.Sheets, &_dfbba); _bbaec != nil {
					return _bbaec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_gabfbd.FunctionGroups = NewCT_FunctionGroups()
				if _dcafa := d.DecodeElement(_gabfbd.FunctionGroups, &_dfbba); _dcafa != nil {
					return _dcafa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_gabfbd.ExternalReferences = NewCT_ExternalReferences()
				if _bdfabd := d.DecodeElement(_gabfbd.ExternalReferences, &_dfbba); _bdfabd != nil {
					return _bdfabd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_gabfbd.DefinedNames = NewCT_DefinedNames()
				if _geaaed := d.DecodeElement(_gabfbd.DefinedNames, &_dfbba); _geaaed != nil {
					return _geaaed
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_gabfbd.CalcPr = NewCT_CalcPr()
				if _ffefdd := d.DecodeElement(_gabfbd.CalcPr, &_dfbba); _ffefdd != nil {
					return _ffefdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_gabfbd.OleSize = NewCT_OleSize()
				if _agadfb := d.DecodeElement(_gabfbd.OleSize, &_dfbba); _agadfb != nil {
					return _agadfb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_gabfbd.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _eaecb := d.DecodeElement(_gabfbd.CustomWorkbookViews, &_dfbba); _eaecb != nil {
					return _eaecb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_gabfbd.PivotCaches = NewCT_PivotCaches()
				if _cecbfa := d.DecodeElement(_gabfbd.PivotCaches, &_dfbba); _cecbfa != nil {
					return _cecbfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_gabfbd.SmartTagPr = NewCT_SmartTagPr()
				if _cbebe := d.DecodeElement(_gabfbd.SmartTagPr, &_dfbba); _cbebe != nil {
					return _cbebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_gabfbd.SmartTagTypes = NewCT_SmartTagTypes()
				if _bcffab := d.DecodeElement(_gabfbd.SmartTagTypes, &_dfbba); _bcffab != nil {
					return _bcffab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_gabfbd.WebPublishing = NewCT_WebPublishing()
				if _eagca := d.DecodeElement(_gabfbd.WebPublishing, &_dfbba); _eagca != nil {
					return _eagca
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_acggb := NewCT_FileRecoveryPr()
				if _bcgfc := d.DecodeElement(_acggb, &_dfbba); _bcgfc != nil {
					return _bcgfc
				}
				_gabfbd.FileRecoveryPr = append(_gabfbd.FileRecoveryPr, _acggb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_gabfbd.WebPublishObjects = NewCT_WebPublishObjects()
				if _cafac := d.DecodeElement(_gabfbd.WebPublishObjects, &_dfbba); _cafac != nil {
					return _cafac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gabfbd.ExtLst = NewCT_ExtensionList()
				if _dfcbfe := d.DecodeElement(_gabfbd.ExtLst, &_dfbba); _dfcbfe != nil {
					return _dfcbfe
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _dfbba.Name)
				if _gcbge := d.Skip(); _gcbge != nil {
					return _gcbge
				}
			}
		case _a.EndElement:
			break _fgbce
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_CellWatches() *CT_CellWatches { _cada := &CT_CellWatches{}; return _cada }
func (_cbceca ST_CalcMode) ValidateWithPath(path string) error {
	switch _cbceca {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbceca))
	}
	return nil
}

// Validate validates the CT_ChartFormats and its children
func (_faga *CT_ChartFormats) Validate() error {
	return _faga.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}
func (_cceab *CT_ExternalRow) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _cceab.RAttr)})
	e.EncodeToken(start)
	if _cceab.Cell != nil {
		_abced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0065\u006c\u006c"}}
		for _, _abdba := range _cceab.Cell {
			e.EncodeElement(_abdba, _abced)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_debbb *CT_MetadataType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeacee := range start.Attr {
		if _eeacee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfgea := _eeacee.Value
			_debbb.NameAttr = _bfgea
			continue
		}
		if _eeacee.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cafeb, _degddg := _dd.ParseUint(_eeacee.Value, 10, 32)
			if _degddg != nil {
				return _degddg
			}
			_debbb.MinSupportedVersionAttr = uint32(_cafeb)
			continue
		}
		if _eeacee.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_fefgg, _ddef := _dd.ParseBool(_eeacee.Value)
			if _ddef != nil {
				return _ddef
			}
			_debbb.GhostRowAttr = &_fefgg
			continue
		}
		if _eeacee.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_ccee, _effgd := _dd.ParseBool(_eeacee.Value)
			if _effgd != nil {
				return _effgd
			}
			_debbb.GhostColAttr = &_ccee
			continue
		}
		if _eeacee.Name.Local == "\u0065\u0064\u0069\u0074" {
			_dabce, _dabfa := _dd.ParseBool(_eeacee.Value)
			if _dabfa != nil {
				return _dabfa
			}
			_debbb.EditAttr = &_dabce
			continue
		}
		if _eeacee.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_eeceb, _deadad := _dd.ParseBool(_eeacee.Value)
			if _deadad != nil {
				return _deadad
			}
			_debbb.DeleteAttr = &_eeceb
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006f\u0070\u0079" {
			_fdadb, _fdada := _dd.ParseBool(_eeacee.Value)
			if _fdada != nil {
				return _fdada
			}
			_debbb.CopyAttr = &_fdadb
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_ffcee, _fedfc := _dd.ParseBool(_eeacee.Value)
			if _fedfc != nil {
				return _fedfc
			}
			_debbb.PasteAllAttr = &_ffcee
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_ffcefc, _ggaca := _dd.ParseBool(_eeacee.Value)
			if _ggaca != nil {
				return _ggaca
			}
			_debbb.PasteFormulasAttr = &_ffcefc
			continue
		}
		if _eeacee.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_ffcc, _befe := _dd.ParseBool(_eeacee.Value)
			if _befe != nil {
				return _befe
			}
			_debbb.PasteValuesAttr = &_ffcc
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cedge, _cfdcf := _dd.ParseBool(_eeacee.Value)
			if _cfdcf != nil {
				return _cfdcf
			}
			_debbb.PasteFormatsAttr = &_cedge
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_eafa, _ccbbb := _dd.ParseBool(_eeacee.Value)
			if _ccbbb != nil {
				return _ccbbb
			}
			_debbb.PasteCommentsAttr = &_eafa
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_agbee, _befdbb := _dd.ParseBool(_eeacee.Value)
			if _befdbb != nil {
				return _befdbb
			}
			_debbb.PasteDataValidationAttr = &_agbee
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_ffbdf, _deaa := _dd.ParseBool(_eeacee.Value)
			if _deaa != nil {
				return _deaa
			}
			_debbb.PasteBordersAttr = &_ffbdf
			continue
		}
		if _eeacee.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_bagec, _bdfba := _dd.ParseBool(_eeacee.Value)
			if _bdfba != nil {
				return _bdfba
			}
			_debbb.PasteColWidthsAttr = &_bagec
			continue
		}
		if _eeacee.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ggdada, _cgaaf := _dd.ParseBool(_eeacee.Value)
			if _cgaaf != nil {
				return _cgaaf
			}
			_debbb.PasteNumberFormatsAttr = &_ggdada
			continue
		}
		if _eeacee.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_beaa, _geegb := _dd.ParseBool(_eeacee.Value)
			if _geegb != nil {
				return _geegb
			}
			_debbb.MergeAttr = &_beaa
			continue
		}
		if _eeacee.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_aedfe, _aaffde := _dd.ParseBool(_eeacee.Value)
			if _aaffde != nil {
				return _aaffde
			}
			_debbb.SplitFirstAttr = &_aedfe
			continue
		}
		if _eeacee.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_agfbg, _addaf := _dd.ParseBool(_eeacee.Value)
			if _addaf != nil {
				return _addaf
			}
			_debbb.SplitAllAttr = &_agfbg
			continue
		}
		if _eeacee.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_ggaebc, _fbcgg := _dd.ParseBool(_eeacee.Value)
			if _fbcgg != nil {
				return _fbcgg
			}
			_debbb.RowColShiftAttr = &_ggaebc
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_eddfd, _aaabc := _dd.ParseBool(_eeacee.Value)
			if _aaabc != nil {
				return _aaabc
			}
			_debbb.ClearAllAttr = &_eddfd
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdfdb, _fbdgc := _dd.ParseBool(_eeacee.Value)
			if _fbdgc != nil {
				return _fbdgc
			}
			_debbb.ClearFormatsAttr = &_gdfdb
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_gegce, _daede := _dd.ParseBool(_eeacee.Value)
			if _daede != nil {
				return _daede
			}
			_debbb.ClearContentsAttr = &_gegce
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_edfb, _acaef := _dd.ParseBool(_eeacee.Value)
			if _acaef != nil {
				return _acaef
			}
			_debbb.ClearCommentsAttr = &_edfb
			continue
		}
		if _eeacee.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_befad, _egdbe := _dd.ParseBool(_eeacee.Value)
			if _egdbe != nil {
				return _egdbe
			}
			_debbb.AssignAttr = &_befad
			continue
		}
		if _eeacee.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_dcfad, _bgfdce := _dd.ParseBool(_eeacee.Value)
			if _bgfdce != nil {
				return _bgfdce
			}
			_debbb.CoerceAttr = &_dcfad
			continue
		}
		if _eeacee.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_cbcec, _ddccg := _dd.ParseBool(_eeacee.Value)
			if _ddccg != nil {
				return _ddccg
			}
			_debbb.AdjustAttr = &_cbcec
			continue
		}
		if _eeacee.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_ffde, _adge := _dd.ParseBool(_eeacee.Value)
			if _adge != nil {
				return _adge
			}
			_debbb.CellMetaAttr = &_ffde
			continue
		}
	}
	for {
		_beeba, _baffd := d.Token()
		if _baffd != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _baffd)
		}
		if _aaeff, _abadbd := _beeba.(_a.EndElement); _abadbd && _aaeff.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RevisionSheetRename and its children
func (_agafb *CT_RevisionSheetRename) Validate() error {
	return _agafb.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}

// Validate validates the CT_RPrEltChoice and its children
func (_bggba *CT_RPrEltChoice) Validate() error {
	return _bggba.ValidateWithPath("\u0043T\u005fR\u0050\u0072\u0045\u006c\u0074\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_VolTypes() *CT_VolTypes { _bcddea := &CT_VolTypes{}; return _bcddea }
func (_geedec ST_Type) ValidateWithPath(path string) error {
	switch _geedec {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_geedec))
	}
	return nil
}
func (_bbade *CT_Connections) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_ccba := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006e\u006e\u0065c\u0074\u0069\u006f\u006e"}}
	for _, _ffadd := range _bbade.Connection {
		e.EncodeElement(_ffadd, _ccba)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecgdc *CT_FilterColumnChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _ecgdc.Filters != nil {
		_dcfg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_ecgdc.Filters, _dcfg)
	} else if _ecgdc.Top10 != nil {
		_ecgeg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0074\u006f\u0070\u00310"}}
		e.EncodeElement(_ecgdc.Top10, _ecgeg)
	} else if _ecgdc.CustomFilters != nil {
		_fcffd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_ecgdc.CustomFilters, _fcffd)
	} else if _ecgdc.DynamicFilter != nil {
		_dbgdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ecgdc.DynamicFilter, _dbgdd)
	} else if _ecgdc.ColorFilter != nil {
		_ggfcc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ecgdc.ColorFilter, _ggfcc)
	} else if _ecgdc.IconFilter != nil {
		_acbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u0063\u006f\u006e\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_ecgdc.IconFilter, _acbd)
	} else if _ecgdc.ExtLst != nil {
		_gefd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecgdc.ExtLst, _gefd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_bcbgd *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_bcbgd.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _bcbgd.GuidAttr)
	}
	if _fdabg := _bcbgd.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _fdabg != nil {
		return _fdabg
	}
	if _bcbgd.ReviewedList != nil {
		if _effgda := _bcbgd.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _effgda != nil {
			return _effgda
		}
	}
	if _bcbgd.ExtLst != nil {
		if _abbcac := _bcbgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abbcac != nil {
			return _abbcac
		}
	}
	return nil
}

// Validate validates the CT_PivotDimension and its children
func (_cdaeb *CT_PivotDimension) Validate() error {
	return _cdaeb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}
func (_ggcfg *CT_GradientFill) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ggcfg.TypeAttr != ST_GradientTypeUnset {
		_bccfc, _dggf := _ggcfg.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dggf != nil {
			return _dggf
		}
		start.Attr = append(start.Attr, _bccfc)
	}
	if _ggcfg.DegreeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcfg.DegreeAttr)})
	}
	if _ggcfg.LeftAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcfg.LeftAttr)})
	}
	if _ggcfg.RightAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcfg.RightAttr)})
	}
	if _ggcfg.TopAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcfg.TopAttr)})
	}
	if _ggcfg.BottomAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_ggcfg.BottomAttr)})
	}
	e.EncodeToken(start)
	if _ggcfg.Stop != nil {
		_edaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0074\u006f\u0070"}}
		for _, _dceb := range _ggcfg.Stop {
			e.EncodeElement(_dceb, _edaa)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afbaed *CT_RevisionComment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_afbaed.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _daeg := range start.Attr {
		if _daeg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_abffa, _agcae := _dd.ParseUint(_daeg.Value, 10, 32)
			if _agcae != nil {
				return _agcae
			}
			_afbaed.SheetIdAttr = uint32(_abffa)
			continue
		}
		if _daeg.Name.Local == "\u0063\u0065\u006c\u006c" {
			_edfac := _daeg.Value
			_afbaed.CellAttr = _edfac
			continue
		}
		if _daeg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_eggcab := _daeg.Value
			_afbaed.GuidAttr = _eggcab
			continue
		}
		if _daeg.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_afbaed.ActionAttr.UnmarshalXMLAttr(_daeg)
			continue
		}
		if _daeg.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_cafed, _ebaecg := _dd.ParseBool(_daeg.Value)
			if _ebaecg != nil {
				return _ebaecg
			}
			_afbaed.AlwaysShowAttr = &_cafed
			continue
		}
		if _daeg.Name.Local == "\u006f\u006c\u0064" {
			_cggcg, _dadadd := _dd.ParseBool(_daeg.Value)
			if _dadadd != nil {
				return _dadadd
			}
			_afbaed.OldAttr = &_cggcg
			continue
		}
		if _daeg.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_baddaa, _gdcfg := _dd.ParseBool(_daeg.Value)
			if _gdcfg != nil {
				return _gdcfg
			}
			_afbaed.HiddenRowAttr = &_baddaa
			continue
		}
		if _daeg.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_gcbbe, _gbcabd := _dd.ParseBool(_daeg.Value)
			if _gbcabd != nil {
				return _gbcabd
			}
			_afbaed.HiddenColumnAttr = &_gcbbe
			continue
		}
		if _daeg.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_cafeg := _daeg.Value
			_afbaed.AuthorAttr = _cafeg
			continue
		}
		if _daeg.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_eabdb, _ffddb := _dd.ParseUint(_daeg.Value, 10, 32)
			if _ffddb != nil {
				return _ffddb
			}
			_dffba := uint32(_eabdb)
			_afbaed.OldLengthAttr = &_dffba
			continue
		}
		if _daeg.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_acecg, _dfefg := _dd.ParseUint(_daeg.Value, 10, 32)
			if _dfefg != nil {
				return _dfefg
			}
			_cfdgb := uint32(_acecg)
			_afbaed.NewLengthAttr = &_cfdgb
			continue
		}
	}
	for {
		_bdfbd, _eagd := d.Token()
		if _eagd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _eagd)
		}
		if _dbgfc, _dabffa := _bdfbd.(_a.EndElement); _dabffa && _dbgfc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_efade ST_ItemType) String() string {
	switch _efade {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}
func (_fbaca ST_CellFormulaType) String() string {
	switch _fbaca {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}
func (_fdeag ST_VerticalAlignment) Validate() error { return _fdeag.ValidateWithPath("") }

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}
type ST_FormatAction byte

func (_aafgf *CT_PivotFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_aafgf.TypeAttr = ST_PivotFilterType(1)
	_aafgf.AutoFilter = NewCT_AutoFilter()
	for _, _cfdbe := range start.Attr {
		if _cfdbe.Name.Local == "\u0066\u006c\u0064" {
			_ggacg, _abafb := _dd.ParseUint(_cfdbe.Value, 10, 32)
			if _abafb != nil {
				return _abafb
			}
			_aafgf.FldAttr = uint32(_ggacg)
			continue
		}
		if _cfdbe.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_cggda, _ebeb := _dd.ParseUint(_cfdbe.Value, 10, 32)
			if _ebeb != nil {
				return _ebeb
			}
			_dgbed := uint32(_cggda)
			_aafgf.MpFldAttr = &_dgbed
			continue
		}
		if _cfdbe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_aafgf.TypeAttr.UnmarshalXMLAttr(_cfdbe)
			continue
		}
		if _cfdbe.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_cecbf, _cbdcac := _dd.ParseInt(_cfdbe.Value, 10, 32)
			if _cbdcac != nil {
				return _cbdcac
			}
			_cddae := int32(_cecbf)
			_aafgf.EvalOrderAttr = &_cddae
			continue
		}
		if _cfdbe.Name.Local == "\u0069\u0064" {
			_defeb, _gaedg := _dd.ParseUint(_cfdbe.Value, 10, 32)
			if _gaedg != nil {
				return _gaedg
			}
			_aafgf.IdAttr = uint32(_defeb)
			continue
		}
		if _cfdbe.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_fggeaa, _ccdf := _dd.ParseUint(_cfdbe.Value, 10, 32)
			if _ccdf != nil {
				return _ccdf
			}
			_bdbcb := uint32(_fggeaa)
			_aafgf.IMeasureHierAttr = &_bdbcb
			continue
		}
		if _cfdbe.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_gceaf, _dgeae := _dd.ParseUint(_cfdbe.Value, 10, 32)
			if _dgeae != nil {
				return _dgeae
			}
			_dcbb := uint32(_gceaf)
			_aafgf.IMeasureFldAttr = &_dcbb
			continue
		}
		if _cfdbe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_decgf := _cfdbe.Value
			_aafgf.NameAttr = &_decgf
			continue
		}
		if _cfdbe.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_fcgg := _cfdbe.Value
			_aafgf.DescriptionAttr = &_fcgg
			continue
		}
		if _cfdbe.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_ccdbf := _cfdbe.Value
			_aafgf.StringValue1Attr = &_ccdbf
			continue
		}
		if _cfdbe.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_fdaac := _cfdbe.Value
			_aafgf.StringValue2Attr = &_fdaac
			continue
		}
	}
_bdgdgb:
	for {
		_aegagb, _gcbcde := d.Token()
		if _gcbcde != nil {
			return _gcbcde
		}
		switch _ffecd := _aegagb.(type) {
		case _a.StartElement:
			switch _ffecd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _aded := d.DecodeElement(_aafgf.AutoFilter, &_ffecd); _aded != nil {
					return _aded
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aafgf.ExtLst = NewCT_ExtensionList()
				if _gfeae := d.DecodeElement(_aafgf.ExtLst, &_ffecd); _gfeae != nil {
					return _gfeae
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _ffecd.Name)
				if _fbgdf := d.Skip(); _fbgdf != nil {
					return _fbgdf
				}
			}
		case _a.EndElement:
			break _bdgdgb
		case _a.CharData:
		}
	}
	return nil
}

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_gfgacg *CT_SmartTagType) ValidateWithPath(path string) error { return nil }

// Validate validates the Table and its children
func (_fddff *Table) Validate() error { return _fddff.ValidateWithPath("\u0054\u0061\u0062l\u0065") }

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

type Sst struct{ CT_Sst }

// Validate validates the CT_FieldGroup and its children
func (_dcade *CT_FieldGroup) Validate() error {
	return _dcade.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_gbbf *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_b.ST_GuidPatternRe.MatchString(_gbbf.GuidAttr) {
		return _fd.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _b.ST_GuidPatternRe, _gbbf.GuidAttr)
	}
	if _egacf := _gbbf.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _egacf != nil {
		return _egacf
	}
	if _gbbf.PageMargins != nil {
		if _edddd := _gbbf.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _edddd != nil {
			return _edddd
		}
	}
	if _gbbf.PageSetup != nil {
		if _gfcc := _gbbf.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _gfcc != nil {
			return _gfcc
		}
	}
	if _gbbf.HeaderFooter != nil {
		if _gdeeg := _gbbf.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _gdeeg != nil {
			return _gdeeg
		}
	}
	return nil
}

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr     *bool
	FilterColumnChoice *CT_FilterColumnChoice
}
type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}
type ST_DataValidationOperator byte

func (_fcaac ST_DataValidationImeMode) String() string {
	switch _fcaac {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}
func (_aefbb *ST_DataConsolidateFunction) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ggafd, _eccegg := d.Token()
	if _eccegg != nil {
		return _eccegg
	}
	if _eccefg, _eadgab := _ggafd.(_a.EndElement); _eadgab && _eccefg.Name == start.Name {
		*_aefbb = 1
		return nil
	}
	if _ffdfad, _cddee := _ggafd.(_a.CharData); !_cddee {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggafd)
	} else {
		switch string(_ffdfad) {
		case "":
			*_aefbb = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_aefbb = 1
		case "\u0063\u006f\u0075n\u0074":
			*_aefbb = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_aefbb = 3
		case "\u006d\u0061\u0078":
			*_aefbb = 4
		case "\u006d\u0069\u006e":
			*_aefbb = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_aefbb = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_aefbb = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_aefbb = 8
		case "\u0073\u0075\u006d":
			*_aefbb = 9
		case "\u0076\u0061\u0072":
			*_aefbb = 10
		case "\u0076\u0061\u0072\u0070":
			*_aefbb = 11
		}
	}
	_ggafd, _eccegg = d.Token()
	if _eccegg != nil {
		return _eccegg
	}
	if _bffcaf, _dgaade := _ggafd.(_a.EndElement); _dgaade && _bffcaf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggafd)
}
func (_gabcf *CT_PivotCache) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gabcf.CacheIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gabcf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bccafd *ST_IconSetType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bccafd = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_bccafd = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bccafd = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_bccafd = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_bccafd = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_bccafd = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_bccafd = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_bccafd = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_bccafd = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_bccafd = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bccafd = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_bccafd = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_bccafd = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_bccafd = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_bccafd = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_bccafd = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_bccafd = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_bccafd = 17
	}
	return nil
}
func NewCT_Row() *CT_Row { _fedde := &CT_Row{}; return _fedde }
func (_gbab *CT_Hyperlinks) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_beaee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _dbeaa := range _gbab.Hyperlink {
		e.EncodeElement(_dbeaa, _beaee)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adgdfb *CT_MeasureDimensionMaps) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbgdee := range start.Attr {
		if _dbgdee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agcg, _aeabg := _dd.ParseUint(_dbgdee.Value, 10, 32)
			if _aeabg != nil {
				return _aeabg
			}
			_dedcf := uint32(_agcg)
			_adgdfb.CountAttr = &_dedcf
			continue
		}
	}
_gdfae:
	for {
		_ccga, _cdede := d.Token()
		if _cdede != nil {
			return _cdede
		}
		switch _ffbee := _ccga.(type) {
		case _a.StartElement:
			switch _ffbee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_ggggg := NewCT_MeasureDimensionMap()
				if _fcbdg := d.DecodeElement(_ggggg, &_ffbee); _fcbdg != nil {
					return _fcbdg
				}
				_adgdfb.Map = append(_adgdfb.Map, _ggggg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _ffbee.Name)
				if _agega := d.Skip(); _agega != nil {
					return _agega
				}
			}
		case _a.EndElement:
			break _gdfae
		case _a.CharData:
		}
	}
	return nil
}
func (_cbbecad ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _cbbecad {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbbecad))
	}
	return nil
}

// ValidateWithPath validates the CT_FillChoice and its children, prefixing error messages with path
func (_cecf *CT_FillChoice) ValidateWithPath(path string) error {
	if _cecf.PatternFill != nil {
		if _agedb := _cecf.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _agedb != nil {
			return _agedb
		}
	}
	if _cecf.GradientFill != nil {
		if _debgc := _cecf.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _debgc != nil {
			return _debgc
		}
	}
	return nil
}
func (_gffff *CT_GroupItemsChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ecda := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
		_gffff.M = NewCT_Missing()
		if _gccag := d.DecodeElement(_gffff.M, &_ecda); _gccag != nil {
			return _gccag
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
		_gffff.N = NewCT_Number()
		if _gdgfd := d.DecodeElement(_gffff.N, &_ecda); _gdgfd != nil {
			return _gdgfd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
		_gffff.B = NewCT_Boolean()
		if _eggfe := d.DecodeElement(_gffff.B, &_ecda); _eggfe != nil {
			return _eggfe
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
		_gffff.E = NewCT_Error()
		if _cdgge := d.DecodeElement(_gffff.E, &_ecda); _cdgge != nil {
			return _cdgge
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
		_gffff.S = NewCT_String()
		if _fafdcb := d.DecodeElement(_gffff.S, &_ecda); _fafdcb != nil {
			return _fafdcb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
		_gffff.D = NewCT_DateTime()
		if _cbgcc := d.DecodeElement(_gffff.D, &_ecda); _cbgcc != nil {
			return _cbgcc
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074em\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ecda.Name)
		if _dcdfgc := d.Skip(); _dcdfgc != nil {
			return _dcdfgc
		}
	}
	return nil
}
func (_ggebga *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ggebga = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_ggebga = 1
	case "\u006f\u0066\u0066":
		*_ggebga = 2
	case "\u006f\u006e":
		*_ggebga = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_ggebga = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_ggebga = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_ggebga = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_ggebga = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_ggebga = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_ggebga = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_ggebga = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_ggebga = 11
	}
	return nil
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)

func (_cbfa *CT_PageItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ggced := range start.Attr {
		if _ggced.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bdcaa := _ggced.Value
			_cbfa.NameAttr = _bdcaa
			continue
		}
	}
	for {
		_aebea, _deece := d.Token()
		if _deece != nil {
			return _fd.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _deece)
		}
		if _bfcdc, _gabgd := _aebea.(_a.EndElement); _gabgd && _bfcdc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_VolValueType byte

func (_ggfa *CT_Col) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eebd := range start.Attr {
		if _eebd.Name.Local == "\u006d\u0069\u006e" {
			_bcae, _efdaab := _dd.ParseUint(_eebd.Value, 10, 32)
			if _efdaab != nil {
				return _efdaab
			}
			_ggfa.MinAttr = uint32(_bcae)
			continue
		}
		if _eebd.Name.Local == "\u006d\u0061\u0078" {
			_ccfb, _befg := _dd.ParseUint(_eebd.Value, 10, 32)
			if _befg != nil {
				return _befg
			}
			_ggfa.MaxAttr = uint32(_ccfb)
			continue
		}
		if _eebd.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_deba, _ffcfa := _dd.ParseFloat(_eebd.Value, 64)
			if _ffcfa != nil {
				return _ffcfa
			}
			_ggfa.WidthAttr = &_deba
			continue
		}
		if _eebd.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_bcgb, _fgdd := _dd.ParseUint(_eebd.Value, 10, 32)
			if _fgdd != nil {
				return _fgdd
			}
			_egab := uint32(_bcgb)
			_ggfa.StyleAttr = &_egab
			continue
		}
		if _eebd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_aeba, _ecac := _dd.ParseBool(_eebd.Value)
			if _ecac != nil {
				return _ecac
			}
			_ggfa.HiddenAttr = &_aeba
			continue
		}
		if _eebd.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_fbcb, _dbfe := _dd.ParseBool(_eebd.Value)
			if _dbfe != nil {
				return _dbfe
			}
			_ggfa.BestFitAttr = &_fbcb
			continue
		}
		if _eebd.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_geedb, _feba := _dd.ParseBool(_eebd.Value)
			if _feba != nil {
				return _feba
			}
			_ggfa.CustomWidthAttr = &_geedb
			continue
		}
		if _eebd.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_gdcb, _dabb := _dd.ParseBool(_eebd.Value)
			if _dabb != nil {
				return _dabb
			}
			_ggfa.PhoneticAttr = &_gdcb
			continue
		}
		if _eebd.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_fbbg, _bgbf := _dd.ParseUint(_eebd.Value, 10, 8)
			if _bgbf != nil {
				return _bgbf
			}
			_baca := uint8(_fbbg)
			_ggfa.OutlineLevelAttr = &_baca
			continue
		}
		if _eebd.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_aead, _gda := _dd.ParseBool(_eebd.Value)
			if _gda != nil {
				return _gda
			}
			_ggfa.CollapsedAttr = &_aead
			continue
		}
	}
	for {
		_bgfdc, _fdegb := d.Token()
		if _fdegb != nil {
			return _fd.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _fdegb)
		}
		if _cffg, _dgdf := _bgfdc.(_a.EndElement); _dgdf && _cffg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

func (_aeddga ST_DataValidationImeMode) Validate() error { return _aeddga.ValidateWithPath("") }
func (_ddca *CT_CacheField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ddca.NameAttr)})
	if _ddca.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.CaptionAttr)})
	}
	if _ddca.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.PropertyNameAttr)})
	}
	if _ddca.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddca.ServerFieldAttr))})
	}
	if _ddca.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddca.UniqueListAttr))})
	}
	if _ddca.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.NumFmtIdAttr)})
	}
	if _ddca.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.FormulaAttr)})
	}
	if _ddca.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.SqlTypeAttr)})
	}
	if _ddca.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.HierarchyAttr)})
	}
	if _ddca.LevelAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.LevelAttr)})
	}
	if _ddca.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddca.DatabaseFieldAttr))})
	}
	if _ddca.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ddca.MappingCountAttr)})
	}
	if _ddca.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ddca.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _ddca.SharedItems != nil {
		_dege := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0073\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ddca.SharedItems, _dege)
	}
	if _ddca.FieldGroup != nil {
		_bee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0066\u0069\u0065\u006c\u0064G\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_ddca.FieldGroup, _bee)
	}
	if _ddca.MpMap != nil {
		_fge := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u006d\u0070\u004d\u0061p"}}
		for _, _edfa := range _ddca.MpMap {
			e.EncodeElement(_edfa, _fge)
		}
	}
	if _ddca.ExtLst != nil {
		_ecd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ddca.ExtLst, _ecd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NumFmt and its children
func (_ecfefc *CT_NumFmt) Validate() error {
	return _ecfefc.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_baac *CT_ExternalReference) ValidateWithPath(path string) error { return nil }
func (_gafdc ST_CfType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgeea := _a.Attr{}
	_cgeea.Name = name
	switch _gafdc {
	case ST_CfTypeUnset:
		_cgeea.Value = ""
	case ST_CfTypeExpression:
		_cgeea.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_cgeea.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_cgeea.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_cgeea.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_cgeea.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_cgeea.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_cgeea.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_cgeea.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_cgeea.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_cgeea.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_cgeea.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_cgeea.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_cgeea.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_cgeea.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_cgeea.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_cgeea.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_cgeea.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_cgeea.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _cgeea, nil
}
func (_ffcefg ST_PatternType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_feacga := _a.Attr{}
	_feacga.Name = name
	switch _ffcefg {
	case ST_PatternTypeUnset:
		_feacga.Value = ""
	case ST_PatternTypeNone:
		_feacga.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_feacga.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_feacga.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_feacga.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_feacga.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_feacga.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_feacga.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_feacga.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_feacga.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_feacga.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_feacga.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_feacga.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_feacga.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_feacga.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_feacga.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_feacga.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_feacga.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_feacga.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_feacga.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _feacga, nil
}
func (_cfefba ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _cfefba {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfefba))
	}
	return nil
}

type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}
type CT_LegacyDrawing struct{ IdAttr string }

func NewCT_MdxSet() *CT_MdxSet { _gbaff := &CT_MdxSet{}; return _gbaff }
func (_gcebg *ST_CellType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gdggfe, _acfgd := d.Token()
	if _acfgd != nil {
		return _acfgd
	}
	if _gfdege, _ddabd := _gdggfe.(_a.EndElement); _ddabd && _gfdege.Name == start.Name {
		*_gcebg = 1
		return nil
	}
	if _geaabd, _edccd := _gdggfe.(_a.CharData); !_edccd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdggfe)
	} else {
		switch string(_geaabd) {
		case "":
			*_gcebg = 0
		case "\u0062":
			*_gcebg = 1
		case "\u006e":
			*_gcebg = 2
		case "\u0065":
			*_gcebg = 3
		case "\u0073":
			*_gcebg = 4
		case "\u0073\u0074\u0072":
			*_gcebg = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_gcebg = 6
		}
	}
	_gdggfe, _acfgd = d.Token()
	if _acfgd != nil {
		return _acfgd
	}
	if _dcegd, _fccfgg := _gdggfe.(_a.EndElement); _fccfgg && _dcegd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdggfe)
}
func NewCT_MdxTuple() *CT_MdxTuple { _afdead := &CT_MdxTuple{}; return _afdead }

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_cgggee *CT_Top10) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TableStyles and its children
func (_gebef *CT_TableStyles) Validate() error {
	return _gebef.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}

// Validate validates the CT_CommentPr and its children
func (_deff *CT_CommentPr) Validate() error {
	return _deff.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}
func (_aabfd *ST_Axis) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_aabfd = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_aabfd = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_aabfd = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_aabfd = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_aabfd = 4
	}
	return nil
}

// Validate validates the CT_CustomSheetViews and its children
func (_gbeg *CT_CustomSheetViews) Validate() error {
	return _gbeg.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func (_deacgg *CT_PageField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _deacgg.FldAttr)})
	if _deacgg.ItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_deacgg.ItemAttr)})
	}
	if _deacgg.HierAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_deacgg.HierAttr)})
	}
	if _deacgg.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_deacgg.NameAttr)})
	}
	if _deacgg.CapAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_deacgg.CapAttr)})
	}
	e.EncodeToken(start)
	if _deacgg.ExtLst != nil {
		_aefec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_deacgg.ExtLst, _aefec)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fafeg *CT_Chartsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fafeg.SheetPr != nil {
		_cggbe := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fafeg.SheetPr, _cggbe)
	}
	_ebefb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_fafeg.SheetViews, _ebefb)
	if _fafeg.SheetProtection != nil {
		_fbdbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ash\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fafeg.SheetProtection, _fbdbf)
	}
	if _fafeg.CustomSheetViews != nil {
		_dbdd := _a.StartElement{Name: _a.Name{Local: "m\u0061i\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0053h\u0065\u0065\u0074\u0056ie\u0077\u0073"}}
		e.EncodeElement(_fafeg.CustomSheetViews, _dbdd)
	}
	if _fafeg.PageMargins != nil {
		_aecf := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fafeg.PageMargins, _aecf)
	}
	if _fafeg.PageSetup != nil {
		_gaega := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fafeg.PageSetup, _gaega)
	}
	if _fafeg.HeaderFooter != nil {
		_dffg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fafeg.HeaderFooter, _dffg)
	}
	_adg := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_fafeg.Drawing, _adg)
	if _fafeg.LegacyDrawing != nil {
		_afdg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fafeg.LegacyDrawing, _afdg)
	}
	if _fafeg.LegacyDrawingHF != nil {
		_gfeg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003ale\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fafeg.LegacyDrawingHF, _gfeg)
	}
	if _fafeg.DrawingHF != nil {
		_ddec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fafeg.DrawingHF, _ddec)
	}
	if _fafeg.Picture != nil {
		_dfgd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fafeg.Picture, _dfgd)
	}
	if _fafeg.WebPublishItems != nil {
		_aacf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003awe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fafeg.WebPublishItems, _aacf)
	}
	if _fafeg.ExtLst != nil {
		_adda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fafeg.ExtLst, _adda)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bbgfc ST_SheetViewType) ValidateWithPath(path string) error {
	switch _bbgfc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbgfc))
	}
	return nil
}

// Validate validates the CT_Cell and its children
func (_ddgd *CT_Cell) Validate() error {
	return _ddgd.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_FilterColumn and its children
func (_gabffd *CT_FilterColumn) Validate() error {
	return _gabffd.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}

func (_ceaebc *MapInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u0069\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _ceaebc.CT_MapInfo.MarshalXML(e, start)
}

// Validate validates the CT_ConditionalFormats and its children
func (_gccd *CT_ConditionalFormats) Validate() error {
	return _gccd.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

// Validate validates the CT_MdxChoice and its children
func (_aedega *CT_MdxChoice) Validate() error {
	return _aedega.ValidateWithPath("\u0043\u0054\u005fM\u0064\u0078\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

func (_aacec ST_rwColActionType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_beecb := _a.Attr{}
	_beecb.Name = name
	switch _aacec {
	case ST_rwColActionTypeUnset:
		_beecb.Value = ""
	case ST_rwColActionTypeInsertRow:
		_beecb.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_beecb.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_beecb.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_beecb.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _beecb, nil
}
func NewCT_CsPageSetup() *CT_CsPageSetup { _fgdbc := &CT_CsPageSetup{}; return _fgdbc }
func (_fcfbg *CT_RecordChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bccbc := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
		_fcfbg.M = NewCT_Missing()
		if _agcca := d.DecodeElement(_fcfbg.M, &_bccbc); _agcca != nil {
			return _agcca
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
		_fcfbg.N = NewCT_Number()
		if _aabce := d.DecodeElement(_fcfbg.N, &_bccbc); _aabce != nil {
			return _aabce
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
		_fcfbg.B = NewCT_Boolean()
		if _aebbga := d.DecodeElement(_fcfbg.B, &_bccbc); _aebbga != nil {
			return _aebbga
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
		_fcfbg.E = NewCT_Error()
		if _faddd := d.DecodeElement(_fcfbg.E, &_bccbc); _faddd != nil {
			return _faddd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
		_fcfbg.S = NewCT_String()
		if _geccg := d.DecodeElement(_fcfbg.S, &_bccbc); _geccg != nil {
			return _geccg
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
		_fcfbg.D = NewCT_DateTime()
		if _edffc := d.DecodeElement(_fcfbg.D, &_bccbc); _edffc != nil {
			return _edffc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
		_fcfbg.X = NewCT_Index()
		if _edfed := d.DecodeElement(_fcfbg.X, &_bccbc); _edfed != nil {
			return _edfed
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bccbc.Name)
		if _fbffd := d.Skip(); _fbffd != nil {
			return _fbffd
		}
	}
	return nil
}

// Validate validates the CT_Format and its children
func (_dddbf *CT_Format) Validate() error {
	return _dddbf.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}
func (_egaf *CT_ExternalSheetData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfdba := range start.Attr {
		if _gfdba.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_gcca, _cbecg := _dd.ParseUint(_gfdba.Value, 10, 32)
			if _cbecg != nil {
				return _cbecg
			}
			_egaf.SheetIdAttr = uint32(_gcca)
			continue
		}
		if _gfdba.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_cbgca, _bgbfg := _dd.ParseBool(_gfdba.Value)
			if _bgbfg != nil {
				return _bgbfg
			}
			_egaf.RefreshErrorAttr = &_cbgca
			continue
		}
	}
_cgcdf:
	for {
		_edbg, _degbc := d.Token()
		if _degbc != nil {
			return _degbc
		}
		switch _bedea := _edbg.(type) {
		case _a.StartElement:
			switch _bedea.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_eeebcf := NewCT_ExternalRow()
				if _cbcee := d.DecodeElement(_eeebcf, &_bedea); _cbcee != nil {
					return _cbcee
				}
				_egaf.Row = append(_egaf.Row, _eeebcf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _bedea.Name)
				if _fcfce := d.Skip(); _fcfce != nil {
					return _fcfce
				}
			}
		case _a.EndElement:
			break _cgcdf
		case _a.CharData:
		}
	}
	return nil
}
func (_ageg *CT_CalculatedItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ageg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ageg.CountAttr)})
	}
	e.EncodeToken(start)
	_dccg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0061\u006c\u0063\u0075l\u0061\u0074e\u0064\u0049\u0074\u0065\u006d"}}
	for _, _fefe := range _ageg.CalculatedItem {
		e.EncodeElement(_fefe, _dccg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Dxfs and its children
func (_fcgca *CT_Dxfs) Validate() error {
	return _fcgca.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}
func NewCT_GroupItemsChoice() *CT_GroupItemsChoice { _dggge := &CT_GroupItemsChoice{}; return _dggge }
func (_dbeag *Chartsheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069\u003a\u0063\u0068\u0061\u0072\u0074s\u0068\u0065\u0065\u0074"
	return _dbeag.CT_Chartsheet.MarshalXML(e, start)
}

type ST_TextVAlign byte

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_ebae *CT_DefinedName) ValidateWithPath(path string) error { return nil }
func NewCT_Revisions() *CT_Revisions                             { _aaeegg := &CT_Revisions{}; return _aaeegg }

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

func (_aacef *SingleXmlCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069:\u0073\u0069\u006e\u0067\u006ce\u0058\u006dl\u0043\u0065\u006c\u006c\u0073"
	return _aacef.CT_SingleXmlCells.MarshalXML(e, start)
}

// Validate validates the CT_TupleCache and its children
func (_bbbbdf *CT_TupleCache) Validate() error {
	return _bbbbdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}
func (_ddgcf ST_WebSourceType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_accdaf := _a.Attr{}
	_accdaf.Name = name
	switch _ddgcf {
	case ST_WebSourceTypeUnset:
		_accdaf.Value = ""
	case ST_WebSourceTypeSheet:
		_accdaf.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_accdaf.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_accdaf.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_accdaf.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_accdaf.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_accdaf.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_accdaf.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_accdaf.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _accdaf, nil
}
func (_begfg ST_WebSourceType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_begfg.String(), start)
}
func (_bagf *CT_CacheSource) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_bbg, _efdf := _bagf.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _efdf != nil {
		return _efdf
	}
	start.Attr = append(start.Attr, _bbg)
	if _bagf.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_bagf.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _bagf.CacheSourceChoice != nil {
		_bagf.CacheSourceChoice.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)
const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

func (_ccbge *CT_Tuple) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfbdf := range start.Attr {
		if _bfbdf.Name.Local == "\u0066\u006c\u0064" {
			_fcfcc, _cabda := _dd.ParseUint(_bfbdf.Value, 10, 32)
			if _cabda != nil {
				return _cabda
			}
			_gaacd := uint32(_fcfcc)
			_ccbge.FldAttr = &_gaacd
			continue
		}
		if _bfbdf.Name.Local == "\u0068\u0069\u0065\u0072" {
			_aadgf, _edcacf := _dd.ParseUint(_bfbdf.Value, 10, 32)
			if _edcacf != nil {
				return _edcacf
			}
			_feaae := uint32(_aadgf)
			_ccbge.HierAttr = &_feaae
			continue
		}
		if _bfbdf.Name.Local == "\u0069\u0074\u0065\u006d" {
			_efbgb, _dgddg := _dd.ParseUint(_bfbdf.Value, 10, 32)
			if _dgddg != nil {
				return _dgddg
			}
			_ccbge.ItemAttr = uint32(_efbgb)
			continue
		}
	}
	for {
		_bbfdd, _aaeega := d.Token()
		if _aaeega != nil {
			return _fd.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _aaeega)
		}
		if _fgdgcb, _dbfdd := _bbfdd.(_a.EndElement); _dbfdd && _fgdgcb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_caggdc *ST_GrowShrinkType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_caggdc = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_caggdc = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_caggdc = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_caggdc = 3
	}
	return nil
}

type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr  *uint32
	RevisionMoveChoice []*CT_RevisionMoveChoice
	RIdAttr            uint32
	UaAttr             *bool
	RaAttr             *bool
}

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_ecf *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _bgd := _ecf.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bgd != nil {
		return _bgd
	}
	return nil
}
func (_egacbac ST_OleUpdate) ValidateWithPath(path string) error {
	switch _egacbac {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egacbac))
	}
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_deae *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _gade, _fgfg := range _deae.CfRule {
		if _agdd := _fgfg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _gade)); _agdd != nil {
			return _agdd
		}
	}
	if _deae.ExtLst != nil {
		if _fgdaf := _deae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgdaf != nil {
			return _fgdaf
		}
	}
	return nil
}

// Validate validates the CT_GradientStop and its children
func (_fcafb *CT_GradientStop) Validate() error {
	return _fcafb.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}
func (_decbb ST_Comments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_decbb.String(), start)
}
func (_bgacf *ST_CellFormulaType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bgacf = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_bgacf = 1
	case "\u0061\u0072\u0072a\u0079":
		*_bgacf = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_bgacf = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_bgacf = 4
	}
	return nil
}

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_gabe *CT_CalcPr) ValidateWithPath(path string) error {
	if _fgef := _gabe.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fgef != nil {
		return _fgef
	}
	if _cbeab := _gabe.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cbeab != nil {
		return _cbeab
	}
	return nil
}
func (_ffcdbb ST_FormatAction) ValidateWithPath(path string) error {
	switch _ffcdbb {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcdbb))
	}
	return nil
}

type CT_Font struct{ FontChoice []*CT_FontChoice }

func (_gcegdc *CT_String) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _gcegdc.VAttr)})
	if _gcegdc.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.UAttr))})
	}
	if _gcegdc.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.FAttr))})
	}
	if _gcegdc.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_gcegdc.CAttr)})
	}
	if _gcegdc.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_gcegdc.CpAttr)})
	}
	if _gcegdc.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_gcegdc.InAttr)})
	}
	if _gcegdc.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_gcegdc.BcAttr)})
	}
	if _gcegdc.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_gcegdc.FcAttr)})
	}
	if _gcegdc.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.IAttr))})
	}
	if _gcegdc.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.UnAttr))})
	}
	if _gcegdc.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.StAttr))})
	}
	if _gcegdc.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gcegdc.BAttr))})
	}
	e.EncodeToken(start)
	if _gcegdc.Tpls != nil {
		_agaec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		for _, _fageb := range _gcegdc.Tpls {
			e.EncodeElement(_fageb, _agaec)
		}
	}
	if _gcegdc.X != nil {
		_bfbbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _bfcce := range _gcegdc.X {
			e.EncodeElement(_bfcce, _bfbbb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_degfa *CT_PhoneticPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfdgd := range start.Attr {
		if _dfdgd.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_dfege, _afffd := _dd.ParseUint(_dfdgd.Value, 10, 32)
			if _afffd != nil {
				return _afffd
			}
			_degfa.FontIdAttr = uint32(_dfege)
			continue
		}
		if _dfdgd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_degfa.TypeAttr.UnmarshalXMLAttr(_dfdgd)
			continue
		}
		if _dfdgd.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_degfa.AlignmentAttr.UnmarshalXMLAttr(_dfdgd)
			continue
		}
	}
	for {
		_adffc, _gccaf := d.Token()
		if _gccaf != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _gccaf)
		}
		if _eabaa, _acagab := _adffc.(_a.EndElement); _acagab && _eabaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dabgff *ST_MdxSetOrder) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gaedca, _eefbg := d.Token()
	if _eefbg != nil {
		return _eefbg
	}
	if _gdfbgd, _gaaadb := _gaedca.(_a.EndElement); _gaaadb && _gdfbgd.Name == start.Name {
		*_dabgff = 1
		return nil
	}
	if _gcaebc, _gefbdb := _gaedca.(_a.CharData); !_gefbdb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaedca)
	} else {
		switch string(_gcaebc) {
		case "":
			*_dabgff = 0
		case "\u0075":
			*_dabgff = 1
		case "\u0061":
			*_dabgff = 2
		case "\u0064":
			*_dabgff = 3
		case "\u0061\u0061":
			*_dabgff = 4
		case "\u0061\u0064":
			*_dabgff = 5
		case "\u006e\u0061":
			*_dabgff = 6
		case "\u006e\u0064":
			*_dabgff = 7
		}
	}
	_gaedca, _eefbg = d.Token()
	if _eefbg != nil {
		return _eefbg
	}
	if _feffcd, _fabbfd := _gaedca.(_a.EndElement); _fabbfd && _feffcd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaedca)
}
func NewCT_FilterColumnChoice() *CT_FilterColumnChoice {
	_gfabe := &CT_FilterColumnChoice{}
	return _gfabe
}
func (_fdaaa ST_SortBy) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_faeee := _a.Attr{}
	_faeee.Name = name
	switch _fdaaa {
	case ST_SortByUnset:
		_faeee.Value = ""
	case ST_SortByValue:
		_faeee.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_faeee.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_faeee.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_faeee.Value = "\u0069\u0063\u006f\u006e"
	}
	return _faeee, nil
}
func (_cbbfdb *ST_VolValueType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cbbfdb = 0
	case "\u0062":
		*_cbbfdb = 1
	case "\u006e":
		*_cbbfdb = 2
	case "\u0065":
		*_cbbfdb = 3
	case "\u0073":
		*_cbbfdb = 4
	}
	return nil
}
func (_gadad ST_ItemType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gadad.String(), start)
}

// Validate validates the CT_PivotAreas and its children
func (_fgggb *CT_PivotAreas) Validate() error {
	return _fgggb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}
func (_fdfecf ST_Qualifier) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdfecf.String(), start)
}
func (_gfeda ST_CellComments) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gfeda.String(), start)
}
func (_dfebf *CT_ExternalBook) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ffeb := range start.Attr {
		if _ffeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ffeb.Name.Local == "\u0069\u0064" || _ffeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ffeb.Name.Local == "\u0069\u0064" {
			_efga := _ffeb.Value
			_dfebf.IdAttr = _efga
			continue
		}
	}
_cdcbf:
	for {
		_bcbb, _cbcbc := d.Token()
		if _cbcbc != nil {
			return _cbcbc
		}
		switch _gcaf := _bcbb.(type) {
		case _a.StartElement:
			switch _gcaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_dfebf.SheetNames = NewCT_ExternalSheetNames()
				if _adee := d.DecodeElement(_dfebf.SheetNames, &_gcaf); _adee != nil {
					return _adee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_dfebf.DefinedNames = NewCT_ExternalDefinedNames()
				if _eaaffe := d.DecodeElement(_dfebf.DefinedNames, &_gcaf); _eaaffe != nil {
					return _eaaffe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_dfebf.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _dgegf := d.DecodeElement(_dfebf.SheetDataSet, &_gcaf); _dgegf != nil {
					return _dgegf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _gcaf.Name)
				if _gfbbg := d.Skip(); _gfbbg != nil {
					return _gfbbg
				}
			}
		case _a.EndElement:
			break _cdcbf
		case _a.CharData:
		}
	}
	return nil
}
func (_fegagb ST_Pane) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfgaf := _a.Attr{}
	_bfgaf.Name = name
	switch _fegagb {
	case ST_PaneUnset:
		_bfgaf.Value = ""
	case ST_PaneBottomRight:
		_bfgaf.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_bfgaf.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_bfgaf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_bfgaf.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _bfgaf, nil
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_egaca *CT_Cfvo) ValidateWithPath(path string) error {
	if _egaca.TypeAttr == ST_CfvoTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _egde := _egaca.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _egde != nil {
		return _egde
	}
	if _egaca.ExtLst != nil {
		if _fafe := _egaca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fafe != nil {
			return _fafe
		}
	}
	return nil
}
func NewCT_Connection() *CT_Connection { _gefgg := &CT_Connection{}; return _gefgg }

type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

func NewCT_Font() *CT_Font { _cbbgb := &CT_Font{}; return _cbbgb }
func (_fefb *CT_Field) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _fefb.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

func (_ddde *CT_Borders) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acfe := range start.Attr {
		if _acfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agg, _bdcd := _dd.ParseUint(_acfe.Value, 10, 32)
			if _bdcd != nil {
				return _bdcd
			}
			_adcg := uint32(_agg)
			_ddde.CountAttr = &_adcg
			continue
		}
	}
_dgb:
	for {
		_fae, _eddb := d.Token()
		if _eddb != nil {
			return _eddb
		}
		switch _degd := _fae.(type) {
		case _a.StartElement:
			switch _degd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_fdda := NewCT_Border()
				if _aeg := d.DecodeElement(_fdda, &_degd); _aeg != nil {
					return _aeg
				}
				_ddde.Border = append(_ddde.Border, _fdda)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _degd.Name)
				if _afe := d.Skip(); _afe != nil {
					return _afe
				}
			}
		case _a.EndElement:
			break _dgb
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_debb *CT_DataValidations) ValidateWithPath(path string) error {
	for _efae, _gecd := range _debb.DataValidation {
		if _dfgea := _gecd.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _efae)); _dfgea != nil {
			return _dfgea
		}
	}
	return nil
}
func NewCT_CalcChain() *CT_CalcChain         { _cbcg := &CT_CalcChain{}; return _cbcg }
func NewCT_SmartTagType() *CT_SmartTagType   { _geabe := &CT_SmartTagType{}; return _geabe }
func (_agfa ST_IconSetType) Validate() error { return _agfa.ValidateWithPath("") }
func (_egeaf *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_egeaf = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_egeaf = 1
	case "\u006c\u0065\u0066\u0074":
		*_egeaf = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_egeaf = 3
	case "\u0072\u0069\u0067h\u0074":
		*_egeaf = 4
	case "\u0066\u0069\u006c\u006c":
		*_egeaf = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_egeaf = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_egeaf = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_egeaf = 8
	}
	return nil
}
func (_cdgfbf *CT_SortState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ebbac := range start.Attr {
		if _ebbac.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_aabed, _cbcfbc := _dd.ParseBool(_ebbac.Value)
			if _cbcfbc != nil {
				return _cbcfbc
			}
			_cdgfbf.ColumnSortAttr = &_aabed
			continue
		}
		if _ebbac.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_bgdgf, _dedbd := _dd.ParseBool(_ebbac.Value)
			if _dedbd != nil {
				return _dedbd
			}
			_cdgfbf.CaseSensitiveAttr = &_bgdgf
			continue
		}
		if _ebbac.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_cdgfbf.SortMethodAttr.UnmarshalXMLAttr(_ebbac)
			continue
		}
		if _ebbac.Name.Local == "\u0072\u0065\u0066" {
			_cdfcg := _ebbac.Value
			_cdgfbf.RefAttr = _cdfcg
			continue
		}
	}
_ecggg:
	for {
		_deaece, _fbeefc := d.Token()
		if _fbeefc != nil {
			return _fbeefc
		}
		switch _babffa := _deaece.(type) {
		case _a.StartElement:
			switch _babffa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_daccg := NewCT_SortCondition()
				if _bcdgc := d.DecodeElement(_daccg, &_babffa); _bcdgc != nil {
					return _bcdgc
				}
				_cdgfbf.SortCondition = append(_cdgfbf.SortCondition, _daccg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdgfbf.ExtLst = NewCT_ExtensionList()
				if _cfdfc := d.DecodeElement(_cdgfbf.ExtLst, &_babffa); _cfdfc != nil {
					return _cfdfc
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _babffa.Name)
				if _eecab := d.Skip(); _eecab != nil {
					return _eecab
				}
			}
		case _a.EndElement:
			break _ecggg
		case _a.CharData:
		}
	}
	return nil
}
func (_dafbbfg *CT_SheetViews) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_bddcab:
	for {
		_abbae, _aeffg := d.Token()
		if _aeffg != nil {
			return _aeffg
		}
		switch _cegeg := _abbae.(type) {
		case _a.StartElement:
			switch _cegeg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_badbg := NewCT_SheetView()
				if _gefbd := d.DecodeElement(_badbg, &_cegeg); _gefbd != nil {
					return _gefbd
				}
				_dafbbfg.SheetView = append(_dafbbfg.SheetView, _badbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dafbbfg.ExtLst = NewCT_ExtensionList()
				if _edaeb := d.DecodeElement(_dafbbfg.ExtLst, &_cegeg); _edaeb != nil {
					return _edaeb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _cegeg.Name)
				if _cacded := d.Skip(); _cacded != nil {
					return _cacded
				}
			}
		case _a.EndElement:
			break _bddcab
		case _a.CharData:
		}
	}
	return nil
}

type PivotTableDefinition struct{ CT_pivotTableDefinition }

func (_ceccg ST_SheetState) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ceccg.String(), start)
}
func (_aegec *CT_PivotCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fdcef := range start.Attr {
		if _fdcef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fdcef.Name.Local == "\u0069\u0064" || _fdcef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fdcef.Name.Local == "\u0069\u0064" {
			_bbdae := _fdcef.Value
			_aegec.IdAttr = _bbdae
			continue
		}
		if _fdcef.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_dcaagd, _ecefe := _dd.ParseUint(_fdcef.Value, 10, 32)
			if _ecefe != nil {
				return _ecefe
			}
			_aegec.CacheIdAttr = uint32(_dcaagd)
			continue
		}
	}
	for {
		_cgebf, _afcbg := d.Token()
		if _afcbg != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _afcbg)
		}
		if _gebfc, _efcfg := _cgebf.(_a.EndElement); _efcfg && _gebfc.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

func (_deceag *CT_MapInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _deceag.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_ggcec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0053\u0063\u0068\u0065\u006d\u0061"}}
	for _, _dcebe := range _deceag.Schema {
		e.EncodeElement(_dcebe, _ggcec)
	}
	_afbad := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u004d\u0061\u0070"}}
	for _, _abeae := range _deceag.Map {
		e.EncodeElement(_abeae, _afbad)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}

func (_bfebb *CT_OleSize) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _efba := range start.Attr {
		if _efba.Name.Local == "\u0072\u0065\u0066" {
			_aeabd := _efba.Value
			_bfebb.RefAttr = _aeabd
			continue
		}
	}
	for {
		_cbbef, _fegg := d.Token()
		if _fegg != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _fegg)
		}
		if _abgcg, _cfafg := _cbbef.(_a.EndElement); _cfafg && _abgcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_caadd *CT_Groups) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _caadd.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_caadd.CountAttr)})
	}
	e.EncodeToken(start)
	_fbcd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0067\u0072\u006f\u0075p"}}
	for _, _eddca := range _caadd.Group {
		e.EncodeElement(_eddca, _fbcd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eaaba *ST_GroupBy) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_eaaba = 0
	case "\u0072\u0061\u006eg\u0065":
		*_eaaba = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_eaaba = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_eaaba = 3
	case "\u0068\u006f\u0075r\u0073":
		*_eaaba = 4
	case "\u0064\u0061\u0079\u0073":
		*_eaaba = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_eaaba = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_eaaba = 7
	case "\u0079\u0065\u0061r\u0073":
		*_eaaba = 8
	}
	return nil
}

const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func (_cgacd *CT_ServerFormats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fgfffc := range start.Attr {
		if _fgfffc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbdbd, _fbegb := _dd.ParseUint(_fgfffc.Value, 10, 32)
			if _fbegb != nil {
				return _fbegb
			}
			_cacea := uint32(_bbdbd)
			_cgacd.CountAttr = &_cacea
			continue
		}
	}
_adada:
	for {
		_dcffg, _ebgag := d.Token()
		if _ebgag != nil {
			return _ebgag
		}
		switch _caacd := _dcffg.(type) {
		case _a.StartElement:
			switch _caacd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_fffgce := NewCT_ServerFormat()
				if _aefceg := d.DecodeElement(_fffgce, &_caacd); _aefceg != nil {
					return _aefceg
				}
				_cgacd.ServerFormat = append(_cgacd.ServerFormat, _fffgce)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _caacd.Name)
				if _bcdda := d.Skip(); _bcdda != nil {
					return _bcdda
				}
			}
		case _a.EndElement:
			break _adada
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AutoFilter and its children
func (_bede *CT_AutoFilter) Validate() error {
	return _bede.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_gbbbc ST_GroupBy) String() string {
	switch _gbbbc {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}
func (_fbaeg *ST_UpdateLinks) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fbaeg = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_fbaeg = 1
	case "\u006e\u0065\u0076e\u0072":
		*_fbaeg = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_fbaeg = 3
	}
	return nil
}
func (_ebgffc ST_UnderlineValues) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gabgbfg := _a.Attr{}
	_gabgbfg.Name = name
	switch _ebgffc {
	case ST_UnderlineValuesUnset:
		_gabgbfg.Value = ""
	case ST_UnderlineValuesSingle:
		_gabgbfg.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_gabgbfg.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_gabgbfg.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_gabgbfg.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_gabgbfg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gabgbfg, nil
}
func (_dbcdb ST_DataValidationErrorStyle) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dbcdb.String(), start)
}

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_bgabd *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _ggbc, _acbac := range _bgabd.S {
		if _dadga := _acbac.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _ggbc)); _dadga != nil {
			return _dadga
		}
	}
	return nil
}

// Validate validates the CT_SmartTagType and its children
func (_edbba *CT_SmartTagType) Validate() error {
	return _edbba.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}
func (_deace *ST_SortBy) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_befba, _ffbad := d.Token()
	if _ffbad != nil {
		return _ffbad
	}
	if _bcgce, _dbbgd := _befba.(_a.EndElement); _dbbgd && _bcgce.Name == start.Name {
		*_deace = 1
		return nil
	}
	if _aecefd, _afcea := _befba.(_a.CharData); !_afcea {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _befba)
	} else {
		switch string(_aecefd) {
		case "":
			*_deace = 0
		case "\u0076\u0061\u006cu\u0065":
			*_deace = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_deace = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_deace = 3
		case "\u0069\u0063\u006f\u006e":
			*_deace = 4
		}
	}
	_befba, _ffbad = d.Token()
	if _ffbad != nil {
		return _ffbad
	}
	if _cdedeag, _bacadf := _befba.(_a.EndElement); _bacadf && _cdedeag.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _befba)
}
func NewCT_Cfvo() *CT_Cfvo         { _bdca := &CT_Cfvo{}; _bdca.TypeAttr = ST_CfvoType(1); return _bdca }
func NewCT_Location() *CT_Location { _fgbgd := &CT_Location{}; return _fgbgd }
func (_gddgc *CT_ExternalCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gddgc.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_gddgc.RAttr)})
	}
	if _gddgc.TAttr != ST_CellTypeUnset {
		_gbbcc, _dabgg := _gddgc.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _dabgg != nil {
			return _dabgg
		}
		start.Attr = append(start.Attr, _gbbcc)
	}
	if _gddgc.VmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gddgc.VmAttr)})
	}
	e.EncodeToken(start)
	if _gddgc.V != nil {
		_dbed := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0076"}}
		_ff.AddPreserveSpaceAttr(&_dbed, *_gddgc.V)
		e.EncodeElement(_gddgc.V, _dbed)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

func (_bggadf *ST_PivotFilterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cgeec, _ccgdbf := d.Token()
	if _ccgdbf != nil {
		return _ccgdbf
	}
	if _fegea, _bbgfe := _cgeec.(_a.EndElement); _bbgfe && _fegea.Name == start.Name {
		*_bggadf = 1
		return nil
	}
	if _cdedd, _ffdbcd := _cgeec.(_a.CharData); !_ffdbcd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgeec)
	} else {
		switch string(_cdedd) {
		case "":
			*_bggadf = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_bggadf = 1
		case "\u0063\u006f\u0075n\u0074":
			*_bggadf = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_bggadf = 3
		case "\u0073\u0075\u006d":
			*_bggadf = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_bggadf = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_bggadf = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_bggadf = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_bggadf = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_bggadf = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_bggadf = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_bggadf = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_bggadf = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_bggadf = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_bggadf = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_bggadf = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_bggadf = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_bggadf = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_bggadf = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_bggadf = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_bggadf = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_bggadf = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_bggadf = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_bggadf = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_bggadf = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_bggadf = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_bggadf = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_bggadf = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_bggadf = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_bggadf = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_bggadf = 35
		case "\u0074\u006f\u0064a\u0079":
			*_bggadf = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_bggadf = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_bggadf = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_bggadf = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_bggadf = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_bggadf = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_bggadf = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_bggadf = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_bggadf = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_bggadf = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_bggadf = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_bggadf = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_bggadf = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_bggadf = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_bggadf = 50
		case "\u0051\u0031":
			*_bggadf = 51
		case "\u0051\u0032":
			*_bggadf = 52
		case "\u0051\u0033":
			*_bggadf = 53
		case "\u0051\u0034":
			*_bggadf = 54
		case "\u004d\u0031":
			*_bggadf = 55
		case "\u004d\u0032":
			*_bggadf = 56
		case "\u004d\u0033":
			*_bggadf = 57
		case "\u004d\u0034":
			*_bggadf = 58
		case "\u004d\u0035":
			*_bggadf = 59
		case "\u004d\u0036":
			*_bggadf = 60
		case "\u004d\u0037":
			*_bggadf = 61
		case "\u004d\u0038":
			*_bggadf = 62
		case "\u004d\u0039":
			*_bggadf = 63
		case "\u004d\u0031\u0030":
			*_bggadf = 64
		case "\u004d\u0031\u0031":
			*_bggadf = 65
		case "\u004d\u0031\u0032":
			*_bggadf = 66
		}
	}
	_cgeec, _ccgdbf = d.Token()
	if _ccgdbf != nil {
		return _ccgdbf
	}
	if _efcgga, _fdbee := _cgeec.(_a.EndElement); _fdbee && _efcgga.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgeec)
}
func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_ggeag := &CT_RowHierarchiesUsage{}
	return _ggeag
}
func (_acbgc *CT_PageSetUpPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _acbgc.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgc.AutoPageBreaksAttr))})
	}
	if _acbgc.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgc.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MergeCells and its children
func (_eacaa *CT_MergeCells) Validate() error {
	return _eacaa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}
func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_d.Fields(s)), nil }

type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

func (_ceca *CT_TableMissing) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fcb *CT_AutoSortScope) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcb.PivotArea = NewCT_PivotArea()
_cag:
	for {
		_bd, _edd := d.Token()
		if _edd != nil {
			return _edd
		}
		switch _egd := _bd.(type) {
		case _a.StartElement:
			switch _egd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _aa := d.DecodeElement(_fcb.PivotArea, &_egd); _aa != nil {
					return _aa
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _egd.Name)
				if _ebf := d.Skip(); _ebf != nil {
					return _ebf
				}
			}
		case _a.EndElement:
			break _cag
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_geaeb *CT_Groups) ValidateWithPath(path string) error {
	for _gfcdb, _agfbd := range _geaeb.Group {
		if _bafac := _agfbd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _gfcdb)); _bafac != nil {
			return _bafac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_addfa *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }
func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_eebf := &CT_ConditionalFormatting{}
	return _eebf
}

type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}

func (_dceeg ST_PageOrder) ValidateWithPath(path string) error {
	switch _dceeg {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dceeg))
	}
	return nil
}

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_dccafb *Revisions) ValidateWithPath(path string) error {
	if _fegcbc := _dccafb.CT_Revisions.ValidateWithPath(path); _fegcbc != nil {
		return _fegcbc
	}
	return nil
}
func (_gcfggf ST_Objects) ValidateWithPath(path string) error {
	switch _gcfggf {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcfggf))
	}
	return nil
}

type ST_GrowShrinkType byte

// Validate validates the CT_ChartsheetPr and its children
func (_gabcb *CT_ChartsheetPr) Validate() error {
	return _gabcb.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}

// Validate validates the CT_QueryTableFields and its children
func (_dgeaf *CT_QueryTableFields) Validate() error {
	return _dgeaf.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}
type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}

func (_efdaf ST_SortMethod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_geccb := _a.Attr{}
	_geccb.Name = name
	switch _efdaf {
	case ST_SortMethodUnset:
		_geccb.Value = ""
	case ST_SortMethodStroke:
		_geccb.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_geccb.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_geccb.Value = "\u006e\u006f\u006e\u0065"
	}
	return _geccb, nil
}

type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Col and its children
func (_cdba *CT_Col) Validate() error {
	return _cdba.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}

// Validate validates the CT_Cols and its children
func (_gabfe *CT_Cols) Validate() error {
	return _gabfe.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}
func (_fcdeg ST_PhoneticAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_geaebg := _a.Attr{}
	_geaebg.Name = name
	switch _fcdeg {
	case ST_PhoneticAlignmentUnset:
		_geaebg.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_geaebg.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_geaebg.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_geaebg.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_geaebg.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _geaebg, nil
}
func (_bggb *CT_MetadataStrings) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbcab := range start.Attr {
		if _cbcab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gddfa, _gfdeb := _dd.ParseUint(_cbcab.Value, 10, 32)
			if _gfdeb != nil {
				return _gfdeb
			}
			_agece := uint32(_gddfa)
			_bggb.CountAttr = &_agece
			continue
		}
	}
_bgadb:
	for {
		_gcega, _gecfe := d.Token()
		if _gecfe != nil {
			return _gecfe
		}
		switch _gacab := _gcega.(type) {
		case _a.StartElement:
			switch _gacab.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_dbfc := NewCT_XStringElement()
				if _afebe := d.DecodeElement(_dbfc, &_gacab); _afebe != nil {
					return _afebe
				}
				_bggb.S = append(_bggb.S, _dbfc)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _gacab.Name)
				if _gaecd := d.Skip(); _gaecd != nil {
					return _gaecd
				}
			}
		case _a.EndElement:
			break _bgadb
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObject and its children
func (_edeacc *CT_OleObject) Validate() error {
	return _edeacc.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

// Validate validates the CT_ChartFormat and its children
func (_ebee *CT_ChartFormat) Validate() error {
	return _ebee.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}
func (_gfade *CT_PivotTableStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aggfa := range start.Attr {
		if _aggfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aggdf := _aggfa.Value
			_gfade.NameAttr = &_aggdf
			continue
		}
		if _aggfa.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_edead, _daeacf := _dd.ParseBool(_aggfa.Value)
			if _daeacf != nil {
				return _daeacf
			}
			_gfade.ShowRowHeadersAttr = &_edead
			continue
		}
		if _aggfa.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_dddeba, _bacge := _dd.ParseBool(_aggfa.Value)
			if _bacge != nil {
				return _bacge
			}
			_gfade.ShowColHeadersAttr = &_dddeba
			continue
		}
		if _aggfa.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_gadbbc, _edeag := _dd.ParseBool(_aggfa.Value)
			if _edeag != nil {
				return _edeag
			}
			_gfade.ShowRowStripesAttr = &_gadbbc
			continue
		}
		if _aggfa.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_aegaf, _bfcag := _dd.ParseBool(_aggfa.Value)
			if _bfcag != nil {
				return _bfcag
			}
			_gfade.ShowColStripesAttr = &_aegaf
			continue
		}
		if _aggfa.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_cgaeac, _dacdff := _dd.ParseBool(_aggfa.Value)
			if _dacdff != nil {
				return _dacdff
			}
			_gfade.ShowLastColumnAttr = &_cgaeac
			continue
		}
	}
	for {
		_gdaca, _baged := d.Token()
		if _baged != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _baged)
		}
		if _ecfdgge, _eddae := _gdaca.(_a.EndElement); _eddae && _ecfdgge.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_geegg *CT_NumFmts) ValidateWithPath(path string) error {
	for _bdgbe, _cgabf := range _geegg.NumFmt {
		if _bgfef := _cgabf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _bdgbe)); _bgfef != nil {
			return _bgfef
		}
	}
	return nil
}
func (_fbae *CT_DateTime) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _b.FormatDateTime(_fbae.VAttr)})
	if _fbae.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbae.UAttr))})
	}
	if _fbae.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbae.FAttr))})
	}
	if _fbae.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_fbae.CAttr)})
	}
	if _fbae.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_fbae.CpAttr)})
	}
	e.EncodeToken(start)
	if _fbae.X != nil {
		_dafe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _face := range _fbae.X {
			e.EncodeElement(_face, _dafe)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_afggdd ST_HorizontalAlignment) Validate() error { return _afggdd.ValidateWithPath("") }

type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}

func NewCT_DynamicFilter() *CT_DynamicFilter {
	_afea := &CT_DynamicFilter{}
	_afea.TypeAttr = ST_DynamicFilterType(1)
	return _afea
}

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_gcegdf ST_DvAspect) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gcegdf.String(), start)
}
func (_fbdbg *CT_PageSetup) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gfdfc := range start.Attr {
		if _gfdfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gfdfc.Name.Local == "\u0069\u0064" || _gfdfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gfdfc.Name.Local == "\u0069\u0064" {
			_gfefd := _gfdfc.Value
			_fbdbg.IdAttr = &_gfefd
			continue
		}
		if _gfdfc.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_fbdbg.OrientationAttr.UnmarshalXMLAttr(_gfdfc)
			continue
		}
		if _gfdfc.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_bbcgd, _bbddb := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _bbddb != nil {
				return _bbddb
			}
			_bfbgac := uint32(_bbcgd)
			_fbdbg.ScaleAttr = &_bfbgac
			continue
		}
		if _gfdfc.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_cbdcbb, _decfd := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _decfd != nil {
				return _decfd
			}
			_afedd := uint32(_cbdcbb)
			_fbdbg.FitToHeightAttr = &_afedd
			continue
		}
		if _gfdfc.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_fbdbg.CellCommentsAttr.UnmarshalXMLAttr(_gfdfc)
			continue
		}
		if _gfdfc.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_cccca := _gfdfc.Value
			_fbdbg.PaperHeightAttr = &_cccca
			continue
		}
		if _gfdfc.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_fbdbg.PageOrderAttr.UnmarshalXMLAttr(_gfdfc)
			continue
		}
		if _gfdfc.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_fdeafb, _fgfa := _dd.ParseBool(_gfdfc.Value)
			if _fgfa != nil {
				return _fgfa
			}
			_fbdbg.BlackAndWhiteAttr = &_fdeafb
			continue
		}
		if _gfdfc.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_edgdc, _ceebb := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _ceebb != nil {
				return _ceebb
			}
			_baaaa := uint32(_edgdc)
			_fbdbg.PaperSizeAttr = &_baaaa
			continue
		}
		if _gfdfc.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_caccd := _gfdfc.Value
			_fbdbg.PaperWidthAttr = &_caccd
			continue
		}
		if _gfdfc.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_ecfcc, _bgbeg := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _bgbeg != nil {
				return _bgbeg
			}
			_cegce := uint32(_ecfcc)
			_fbdbg.FitToWidthAttr = &_cegce
			continue
		}
		if _gfdfc.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_daebe, _ecfdd := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _ecfdd != nil {
				return _ecfdd
			}
			_gggcaf := uint32(_daebe)
			_fbdbg.FirstPageNumberAttr = &_gggcaf
			continue
		}
		if _gfdfc.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_gbbee, _ddeaa := _dd.ParseBool(_gfdfc.Value)
			if _ddeaa != nil {
				return _ddeaa
			}
			_fbdbg.DraftAttr = &_gbbee
			continue
		}
		if _gfdfc.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_eaaed, _dafee := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _dafee != nil {
				return _dafee
			}
			_bagfcc := uint32(_eaaed)
			_fbdbg.HorizontalDpiAttr = &_bagfcc
			continue
		}
		if _gfdfc.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_fbdbg.ErrorsAttr.UnmarshalXMLAttr(_gfdfc)
			continue
		}
		if _gfdfc.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_fedfeb, _babce := _dd.ParseBool(_gfdfc.Value)
			if _babce != nil {
				return _babce
			}
			_fbdbg.UseFirstPageNumberAttr = &_fedfeb
			continue
		}
		if _gfdfc.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_fdde, _fdcca := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _fdcca != nil {
				return _fdcca
			}
			_dbafc := uint32(_fdde)
			_fbdbg.VerticalDpiAttr = &_dbafc
			continue
		}
		if _gfdfc.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_edgec, _ebdfd := _dd.ParseUint(_gfdfc.Value, 10, 32)
			if _ebdfd != nil {
				return _ebdfd
			}
			_geegd := uint32(_edgec)
			_fbdbg.CopiesAttr = &_geegd
			continue
		}
		if _gfdfc.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_eafba, _fgfbe := _dd.ParseBool(_gfdfc.Value)
			if _fgfbe != nil {
				return _fgfbe
			}
			_fbdbg.UsePrinterDefaultsAttr = &_eafba
			continue
		}
	}
	for {
		_ddbcd, _eggfc := d.Token()
		if _eggfc != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _eggfc)
		}
		if _ggaf, _bcegag := _ddbcd.(_a.EndElement); _bcegag && _ggaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfaac ST_SheetState) Validate() error       { return _bfaac.ValidateWithPath("") }
func NewCT_CustomSheetViews() *CT_CustomSheetViews { _ceaaf := &CT_CustomSheetViews{}; return _ceaaf }

// Validate validates the CT_Query and its children
func (_bacdf *CT_Query) Validate() error {
	return _bacdf.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}
func (_fceda ST_TableStyleType) ValidateWithPath(path string) error {
	switch _fceda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fceda))
	}
	return nil
}
func (_bfeaf *CT_ExternalCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfcc := range start.Attr {
		if _dfcc.Name.Local == "\u0072" {
			_adfc := _dfcc.Value
			_bfeaf.RAttr = &_adfc
			continue
		}
		if _dfcc.Name.Local == "\u0074" {
			_bfeaf.TAttr.UnmarshalXMLAttr(_dfcc)
			continue
		}
		if _dfcc.Name.Local == "\u0076\u006d" {
			_gbdcb, _gfcge := _dd.ParseUint(_dfcc.Value, 10, 32)
			if _gfcge != nil {
				return _gfcge
			}
			_ebcf := uint32(_gbdcb)
			_bfeaf.VmAttr = &_ebcf
			continue
		}
	}
_gagg:
	for {
		_cegac, _eacaf := d.Token()
		if _eacaf != nil {
			return _eacaf
		}
		switch _bfcdb := _cegac.(type) {
		case _a.StartElement:
			switch _bfcdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_bfeaf.V = new(string)
				if _bagbf := d.DecodeElement(_bfeaf.V, &_bfcdb); _bagbf != nil {
					return _bagbf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _bfcdb.Name)
				if _fcge := d.Skip(); _fcge != nil {
					return _fcge
				}
			}
		case _a.EndElement:
			break _gagg
		case _a.CharData:
		}
	}
	return nil
}
func (_fegece *ST_RefMode) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbdac, _aafdg := d.Token()
	if _aafdg != nil {
		return _aafdg
	}
	if _cbedgf, _fcebg := _gbdac.(_a.EndElement); _fcebg && _cbedgf.Name == start.Name {
		*_fegece = 1
		return nil
	}
	if _bcfeb, _fedga := _gbdac.(_a.CharData); !_fedga {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbdac)
	} else {
		switch string(_bcfeb) {
		case "":
			*_fegece = 0
		case "\u0041\u0031":
			*_fegece = 1
		case "\u0052\u0031\u0043\u0031":
			*_fegece = 2
		}
	}
	_gbdac, _aafdg = d.Token()
	if _aafdg != nil {
		return _aafdg
	}
	if _ggffb, _gdegg := _gbdac.(_a.EndElement); _gdegg && _ggffb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbdac)
}

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

func (_gfbbgc ST_Orientation) String() string {
	switch _gfbbgc {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_baagcg *CT_RevisionHeaders) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _baagcg.GuidAttr)})
	if _baagcg.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_baagcg.LastGuidAttr)})
	}
	if _baagcg.SharedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.SharedAttr))})
	}
	if _baagcg.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.DiskRevisionsAttr))})
	}
	if _baagcg.HistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.HistoryAttr))})
	}
	if _baagcg.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.TrackRevisionsAttr))})
	}
	if _baagcg.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.ExclusiveAttr))})
	}
	if _baagcg.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_baagcg.RevisionIdAttr)})
	}
	if _baagcg.VersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_baagcg.VersionAttr)})
	}
	if _baagcg.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.KeepChangeHistoryAttr))})
	}
	if _baagcg.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_baagcg.ProtectedAttr))})
	}
	if _baagcg.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0076", *_baagcg.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_eebcaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _gecfg := range _baagcg.Header {
		e.EncodeElement(_gecfg, _eebcaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ColorScale and its children
func (_eddbc *CT_ColorScale) Validate() error {
	return _eddbc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_cadf *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _aada, _aecfb := range _cadf.CustomSheetView {
		if _fcbd := _aecfb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _aada)); _fcbd != nil {
			return _fcbd
		}
	}
	return nil
}

// Validate validates the CT_PivotArea and its children
func (_ggggb *CT_PivotArea) Validate() error {
	return _ggggb.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}
func NewCT_PrintOptions() *CT_PrintOptions { _ccdbc := &CT_PrintOptions{}; return _ccdbc }

// Validate validates the CT_ProtectedRanges and its children
func (_dffff *CT_ProtectedRanges) Validate() error {
	return _dffff.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_ffdb *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _dbde, _fffa := range _ffdb.CalculatedItem {
		if _cfc := _fffa.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _dbde)); _cfc != nil {
			return _cfc
		}
	}
	return nil
}
func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_edbbgb := &CT_SheetBackgroundPicture{}
	return _edbbgb
}

// Validate validates the CT_Tuple and its children
func (_bbeff *CT_Tuple) Validate() error {
	return _bbeff.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

func (_dbdcg *CT_Dxfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cbcfe := range start.Attr {
		if _cbcfe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cabbf, _egcfd := _dd.ParseUint(_cbcfe.Value, 10, 32)
			if _egcfd != nil {
				return _egcfd
			}
			_cdef := uint32(_cabbf)
			_dbdcg.CountAttr = &_cdef
			continue
		}
	}
_fcee:
	for {
		_ggeee, _deada := d.Token()
		if _deada != nil {
			return _deada
		}
		switch _bfgf := _ggeee.(type) {
		case _a.StartElement:
			switch _bfgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_ecefa := NewCT_Dxf()
				if _gdfd := d.DecodeElement(_ecefa, &_bfgf); _gdfd != nil {
					return _gdfd
				}
				_dbdcg.Dxf = append(_dbdcg.Dxf, _ecefa)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _bfgf.Name)
				if _adace := d.Skip(); _adace != nil {
					return _adace
				}
			}
		case _a.EndElement:
			break _fcee
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_MetadataType() *CT_MetadataType { _ceegg := &CT_MetadataType{}; return _ceegg }
func (_eadff *CT_MergeCell) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eddfa := range start.Attr {
		if _eddfa.Name.Local == "\u0072\u0065\u0066" {
			_cgeef := _eddfa.Value
			_eadff.RefAttr = _cgeef
			continue
		}
	}
	for {
		_egfeb, _ggfeb := d.Token()
		if _ggfeb != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _ggfeb)
		}
		if _ccfd, _gecbcd := _egfeb.(_a.EndElement); _gecbcd && _ccfd.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_CfvoType byte

func (_ebcef *CT_MdxMetadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _faffg := range start.Attr {
		if _faffg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gedac, _feeac := _dd.ParseUint(_faffg.Value, 10, 32)
			if _feeac != nil {
				return _feeac
			}
			_ggaef := uint32(_gedac)
			_ebcef.CountAttr = &_ggaef
			continue
		}
	}
_gcdac:
	for {
		_cfcf, _fdab := d.Token()
		if _fdab != nil {
			return _fdab
		}
		switch _babac := _cfcf.(type) {
		case _a.StartElement:
			switch _babac.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_cbaf := NewCT_Mdx()
				if _bcbgf := d.DecodeElement(_cbaf, &_babac); _bcbgf != nil {
					return _bcbgf
				}
				_ebcef.Mdx = append(_ebcef.Mdx, _cbaf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _babac.Name)
				if _abcbbg := d.Skip(); _abcbbg != nil {
					return _abcbbg
				}
			}
		case _a.EndElement:
			break _gcdac
		case _a.CharData:
		}
	}
	return nil
}
func (_cdafc *CT_SharedItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cdafc.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsSemiMixedTypesAttr))})
	}
	if _cdafc.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsNonDateAttr))})
	}
	if _cdafc.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsDateAttr))})
	}
	if _cdafc.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsStringAttr))})
	}
	if _cdafc.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsBlankAttr))})
	}
	if _cdafc.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsMixedTypesAttr))})
	}
	if _cdafc.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsNumberAttr))})
	}
	if _cdafc.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.ContainsIntegerAttr))})
	}
	if _cdafc.MinValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdafc.MinValueAttr)})
	}
	if _cdafc.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_cdafc.MaxValueAttr)})
	}
	if _cdafc.MinDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _b.FormatDateTime(*_cdafc.MinDateAttr)})
	}
	if _cdafc.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _b.FormatDateTime(*_cdafc.MaxDateAttr)})
	}
	if _cdafc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_cdafc.CountAttr)})
	}
	if _cdafc.LongTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cdafc.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _cdafc.SharedItemsChoice != nil {
		for _, _faeabg := range _cdafc.SharedItemsChoice {
			_faeabg.MarshalXML(e, _a.StartElement{})
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfeef *CT_DeletedField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dagc := range start.Attr {
		if _dagc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbded := _dagc.Value
			_cfeef.NameAttr = _gbded
			continue
		}
	}
	for {
		_bcbdc, _ccff := d.Token()
		if _ccff != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _ccff)
		}
		if _gcdff, _dead := _bcbdc.(_a.EndElement); _dead && _gcdff.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_RecordChoice struct {

	// No Value
	M *CT_Missing

	// Numeric Value
	N *CT_Number

	// Boolean
	B *CT_Boolean

	// Error Value
	E *CT_Error

	// Character Value
	S *CT_String

	// Date Time
	D *CT_DateTime

	// Shared Items Index
	X *CT_Index
}

func (_egbgf *CT_Mdx) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_egbgf.FAttr = ST_MdxFunctionType(1)
	_egbgf.MdxChoice = NewCT_MdxChoice()
	for _, _fecca := range start.Attr {
		if _fecca.Name.Local == "\u006e" {
			_agafe, _fadf := _dd.ParseUint(_fecca.Value, 10, 32)
			if _fadf != nil {
				return _fadf
			}
			_egbgf.NAttr = uint32(_agafe)
			continue
		}
		if _fecca.Name.Local == "\u0066" {
			_egbgf.FAttr.UnmarshalXMLAttr(_fecca)
			continue
		}
	}
_eceff:
	for {
		_dacdf, _fgeag := d.Token()
		if _fgeag != nil {
			return _fgeag
		}
		switch _gdadf := _dacdf.(type) {
		case _a.StartElement:
			switch _gdadf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_egbgf.MdxChoice = NewCT_MdxChoice()
				if _babcc := d.DecodeElement(&_egbgf.MdxChoice.T, &_gdadf); _babcc != nil {
					return _babcc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_egbgf.MdxChoice = NewCT_MdxChoice()
				if _afafe := d.DecodeElement(&_egbgf.MdxChoice.Ms, &_gdadf); _afafe != nil {
					return _afafe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_egbgf.MdxChoice = NewCT_MdxChoice()
				if _gbagg := d.DecodeElement(&_egbgf.MdxChoice.P, &_gdadf); _gbagg != nil {
					return _gbagg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_egbgf.MdxChoice = NewCT_MdxChoice()
				if _gbeeb := d.DecodeElement(&_egbgf.MdxChoice.K, &_gdadf); _gbeeb != nil {
					return _gbeeb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _gdadf.Name)
				if _affa := d.Skip(); _affa != nil {
					return _affa
				}
			}
		case _a.EndElement:
			break _eceff
		case _a.CharData:
		}
	}
	return nil
}

type ST_CellSpans []string

func (_gedef *CT_MeasureGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gedef.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _gedef.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dgddc ST_ItemType) ValidateWithPath(path string) error {
	switch _dgddc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgddc))
	}
	return nil
}
func NewCT_PivotHierarchies() *CT_PivotHierarchies { _bcedfa := &CT_PivotHierarchies{}; return _bcedfa }

// Validate validates the CT_DdeItems and its children
func (_cacec *CT_DdeItems) Validate() error {
	return _cacec.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_ChartFormat() *CT_ChartFormat {
	_aagb := &CT_ChartFormat{}
	_aagb.PivotArea = NewCT_PivotArea()
	return _aagb
}
func NewCT_CfRule() *CT_CfRule { _ebeg := &CT_CfRule{}; return _ebeg }

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_bebc *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _cdfe, _egfbd := range _bebc.ConditionalFormat {
		if _ddgc := _egfbd.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _cdfe)); _ddgc != nil {
			return _ddgc
		}
	}
	return nil
}
func NewCT_Authors() *CT_Authors { _eb := &CT_Authors{}; return _eb }

// Validate validates the CT_RevisionHeaders and its children
func (_caafac *CT_RevisionHeaders) Validate() error {
	return _caafac.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}

type QueryTable struct{ CT_QueryTable }

func (_cacde *CT_Error) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076"}, Value: _fd.Sprintf("\u0025\u0076", _cacde.VAttr)})
	if _cacde.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.UAttr))})
	}
	if _cacde.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.FAttr))})
	}
	if _cacde.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cacde.CAttr)})
	}
	if _cacde.CpAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_cacde.CpAttr)})
	}
	if _cacde.InAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_cacde.InAttr)})
	}
	if _cacde.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cacde.BcAttr)})
	}
	if _cacde.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_cacde.FcAttr)})
	}
	if _cacde.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.IAttr))})
	}
	if _cacde.UnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.UnAttr))})
	}
	if _cacde.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.StAttr))})
	}
	if _cacde.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_cacde.BAttr))})
	}
	e.EncodeToken(start)
	if _cacde.Tpls != nil {
		_bfbac := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_cacde.Tpls, _bfbac)
	}
	if _cacde.X != nil {
		_efcaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _beffd := range _cacde.X {
			e.EncodeElement(_beffd, _efcaa)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfbed *CT_FieldUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fd.Sprintf("\u0025\u0076", _bfbed.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_ggcece *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_fbafg *CT_SheetViews) ValidateWithPath(path string) error {
	for _cdafd, _aebff := range _fbafg.SheetView {
		if _abed := _aebff.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _cdafd)); _abed != nil {
			return _abed
		}
	}
	if _fbafg.ExtLst != nil {
		if _fbccc := _fbafg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbccc != nil {
			return _fbccc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_fbaaf *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _cceee := _fbaaf.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _cceee != nil {
		return _cceee
	}
	return nil
}
func (_bdga *CT_SheetId) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _bdga.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

func (_cbdcbc *ST_Objects) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cbdcbc = 0
	case "\u0061\u006c\u006c":
		*_cbdcbc = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_cbdcbc = 2
	case "\u006e\u006f\u006e\u0065":
		*_cbdcbc = 3
	}
	return nil
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_gefdd *CT_TextField) ValidateWithPath(path string) error {
	if _aeabbg := _gefdd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _aeabbg != nil {
		return _aeabbg
	}
	return nil
}
func (_dabgf *CT_DynamicFilter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dabgf.TypeAttr = ST_DynamicFilterType(1)
	for _, _fgbge := range start.Attr {
		if _fgbge.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dabgf.TypeAttr.UnmarshalXMLAttr(_fgbge)
			continue
		}
		if _fgbge.Name.Local == "\u0076\u0061\u006c" {
			_dgcab, _eabeg := _dd.ParseFloat(_fgbge.Value, 64)
			if _eabeg != nil {
				return _eabeg
			}
			_dabgf.ValAttr = &_dgcab
			continue
		}
		if _fgbge.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_gadbae, _bddee := ParseStdlibTime(_fgbge.Value)
			if _bddee != nil {
				return _bddee
			}
			_dabgf.ValIsoAttr = &_gadbae
			continue
		}
		if _fgbge.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_egdgd, _ebed := _dd.ParseFloat(_fgbge.Value, 64)
			if _ebed != nil {
				return _ebed
			}
			_dabgf.MaxValAttr = &_egdgd
			continue
		}
		if _fgbge.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_bcfe, _bfdaf := ParseStdlibTime(_fgbge.Value)
			if _bfdaf != nil {
				return _bfdaf
			}
			_dabgf.MaxValIsoAttr = &_bcfe
			continue
		}
	}
	for {
		_gcbfb, _gaee := d.Token()
		if _gaee != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _gaee)
		}
		if _efeb, _fbgb := _gcbfb.(_a.EndElement); _fbgb && _efeb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_eecgg *CT_MergeCell) ValidateWithPath(path string) error { return nil }

type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

// Validate validates the CT_MdxMemeberProp and its children
func (_bgdbee *CT_MdxMemeberProp) Validate() error {
	return _bgdbee.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}
func (_ededdd ST_SheetState) String() string {
	switch _ededdd {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func (_cdade *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cdade = 0
	case "\u0076":
		*_cdade = 1
	case "\u0067":
		*_cdade = 2
	case "\u0073":
		*_cdade = 3
	case "\u0074":
		*_cdade = 4
	case "\u0077":
		*_cdade = 5
	case "\u006d":
		*_cdade = 6
	}
	return nil
}
func (_egfbaa *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_egfbaa = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_egfbaa = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_egfbaa = 2
	case "\u0065\u0071\u0075a\u006c":
		*_egfbaa = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_egfbaa = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_egfbaa = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_egfbaa = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_egfbaa = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_egfbaa = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_egfbaa = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_egfbaa = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_egfbaa = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_egfbaa = 12
	}
	return nil
}
func (_ffceg ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _ffceg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffceg))
	}
	return nil
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}

func (_dacaa *CT_Record) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_abeaf:
	for {
		_edce, _bbefde := d.Token()
		if _bbefde != nil {
			return _bbefde
		}
		switch _gcgb := _edce.(type) {
		case _a.StartElement:
			switch _gcgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_fcade := NewCT_RecordChoice()
				if _faacc := d.DecodeElement(&_fcade.M, &_gcgb); _faacc != nil {
					return _faacc
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _fcade)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_cgcgd := NewCT_RecordChoice()
				if _dcgbf := d.DecodeElement(&_cgcgd.N, &_gcgb); _dcgbf != nil {
					return _dcgbf
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _cgcgd)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_bbded := NewCT_RecordChoice()
				if _adgfg := d.DecodeElement(&_bbded.B, &_gcgb); _adgfg != nil {
					return _adgfg
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _bbded)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_dcfbb := NewCT_RecordChoice()
				if _bcfac := d.DecodeElement(&_dcfbb.E, &_gcgb); _bcfac != nil {
					return _bcfac
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _dcfbb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_feefad := NewCT_RecordChoice()
				if _faed := d.DecodeElement(&_feefad.S, &_gcgb); _faed != nil {
					return _faed
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _feefad)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_edadg := NewCT_RecordChoice()
				if _babee := d.DecodeElement(&_edadg.D, &_gcgb); _babee != nil {
					return _babee
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _edadg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ggfde := NewCT_RecordChoice()
				if _cdgcg := d.DecodeElement(&_ggfde.X, &_gcgb); _cdgcg != nil {
					return _cdgcg
				}
				_dacaa.RecordChoice = append(_dacaa.RecordChoice, _ggfde)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _gcgb.Name)
				if _bgffcg := d.Skip(); _bgffcg != nil {
					return _bgffcg
				}
			}
		case _a.EndElement:
			break _abeaf
		case _a.CharData:
		}
	}
	return nil
}

type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}

func (_dbcab ST_DvAspect) ValidateWithPath(path string) error {
	switch _dbcab {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbcab))
	}
	return nil
}

type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}
type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_gedb *CT_GroupLevel) ValidateWithPath(path string) error {
	if _gedb.Groups != nil {
		if _ggaga := _gedb.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _ggaga != nil {
			return _ggaga
		}
	}
	if _gedb.ExtLst != nil {
		if _fcegba := _gedb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fcegba != nil {
			return _fcegba
		}
	}
	return nil
}
func NewCT_FieldGroup() *CT_FieldGroup { _adcgd := &CT_FieldGroup{}; return _adcgd }

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_bcdbeb *CT_Sst) ValidateWithPath(path string) error {
	for _gfagda, _eccda := range _bcdbeb.Si {
		if _fegced := _eccda.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _gfagda)); _fegced != nil {
			return _fegced
		}
	}
	if _bcdbeb.ExtLst != nil {
		if _afbef := _bcdbeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afbef != nil {
			return _afbef
		}
	}
	return nil
}
func (_aaabf ST_TotalsRowFunction) String() string {
	switch _aaabf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}
func (_afbbed *CT_PageBreak) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afbbed.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_afbbed.CountAttr)})
	}
	if _afbbed.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_afbbed.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _afbbed.Brk != nil {
		_egdce := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0062\u0072\u006b"}}
		for _, _fdgab := range _afbbed.Brk {
			e.EncodeElement(_fdgab, _egdce)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataRefs() *CT_DataRefs         { _aaefb := &CT_DataRefs{}; return _aaefb }
func (_eedca ST_SortType) Validate() error { return _eedca.ValidateWithPath("") }
func (_dcbfe *CT_WebPublishObject) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aabf := range start.Attr {
		if _aabf.Name.Local == "\u0069\u0064" {
			_ecfbf, _bdcfc := _dd.ParseUint(_aabf.Value, 10, 32)
			if _bdcfc != nil {
				return _bdcfc
			}
			_dcbfe.IdAttr = uint32(_ecfbf)
			continue
		}
		if _aabf.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_bbae := _aabf.Value
			_dcbfe.DivIdAttr = _bbae
			continue
		}
		if _aabf.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_bebed := _aabf.Value
			_dcbfe.SourceObjectAttr = &_bebed
			continue
		}
		if _aabf.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_ecdbf := _aabf.Value
			_dcbfe.DestinationFileAttr = _ecdbf
			continue
		}
		if _aabf.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_gfdga := _aabf.Value
			_dcbfe.TitleAttr = &_gfdga
			continue
		}
		if _aabf.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_dfbae, _eagbc := _dd.ParseBool(_aabf.Value)
			if _eagbc != nil {
				return _eagbc
			}
			_dcbfe.AutoRepublishAttr = &_dfbae
			continue
		}
	}
	for {
		_ffbacca, _fgddf := d.Token()
		if _fgddf != nil {
			return _fd.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fgddf)
		}
		if _fcaad, _addff := _ffbacca.(_a.EndElement); _addff && _fcaad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fgcde *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fgcde = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_fgcde = 1
	case "\u0074\u0065\u0078\u0074":
		*_fgcde = 2
	case "\u004d\u0044\u0059":
		*_fgcde = 3
	case "\u0044\u004d\u0059":
		*_fgcde = 4
	case "\u0059\u004d\u0044":
		*_fgcde = 5
	case "\u004d\u0059\u0044":
		*_fgcde = 6
	case "\u0044\u0059\u004d":
		*_fgcde = 7
	case "\u0059\u0044\u004d":
		*_fgcde = 8
	case "\u0073\u006b\u0069\u0070":
		*_fgcde = 9
	case "\u0045\u004d\u0044":
		*_fgcde = 10
	}
	return nil
}

// Validate validates the EG_ExtensionList and its children
func (_ebddg *EG_ExtensionList) Validate() error {
	return _ebddg.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_fecgd ST_DataValidationImeMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fecgd.String(), start)
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _ff.Any
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_ceafd *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _ceafd.ExtLst != nil {
		if _ccfadf := _ceafd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccfadf != nil {
			return _ccfadf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_acag *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _acag.ExtLst != nil {
		if _aebe := _acag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aebe != nil {
			return _aebe
		}
	}
	return nil
}
func (_edbbc *CT_Mdx) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _edbbc.NAttr)})
	_bcecg, _bcdbe := _edbbc.FAttr.MarshalXMLAttr(_a.Name{Local: "\u0066"})
	if _bcdbe != nil {
		return _bcdbe
	}
	start.Attr = append(start.Attr, _bcecg)
	e.EncodeToken(start)
	_edbbc.MdxChoice.MarshalXML(e, _a.StartElement{})
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PCDSDTCEntriesChoice() *CT_PCDSDTCEntriesChoice {
	_efcf := &CT_PCDSDTCEntriesChoice{}
	return _efcf
}
func (_gcec *CT_AutoSortScope) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_deb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gcec.PivotArea, _deb)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adfeb ST_PatternType) ValidateWithPath(path string) error {
	switch _adfeb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adfeb))
	}
	return nil
}
func (_ddbab ST_HtmlFmt) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bdgfb := _a.Attr{}
	_bdgfb.Name = name
	switch _ddbab {
	case ST_HtmlFmtUnset:
		_bdgfb.Value = ""
	case ST_HtmlFmtNone:
		_bdgfb.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_bdgfb.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_bdgfb.Value = "\u0061\u006c\u006c"
	}
	return _bdgfb, nil
}

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_bbdbdd *QueryTable) ValidateWithPath(path string) error {
	if _bedce := _bbdbdd.CT_QueryTable.ValidateWithPath(path); _bedce != nil {
		return _bedce
	}
	return nil
}

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_gefafa *CT_PrintOptions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _daaeb := range start.Attr {
		if _daaeb.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_cddda, _egdfc := _dd.ParseBool(_daaeb.Value)
			if _egdfc != nil {
				return _egdfc
			}
			_gefafa.HorizontalCenteredAttr = &_cddda
			continue
		}
		if _daaeb.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_ebdbb, _dcedb := _dd.ParseBool(_daaeb.Value)
			if _dcedb != nil {
				return _dcedb
			}
			_gefafa.VerticalCenteredAttr = &_ebdbb
			continue
		}
		if _daaeb.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_gcaae, _bffffe := _dd.ParseBool(_daaeb.Value)
			if _bffffe != nil {
				return _bffffe
			}
			_gefafa.HeadingsAttr = &_gcaae
			continue
		}
		if _daaeb.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_bbcae, _fdgdee := _dd.ParseBool(_daaeb.Value)
			if _fdgdee != nil {
				return _fdgdee
			}
			_gefafa.GridLinesAttr = &_bbcae
			continue
		}
		if _daaeb.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_eeefc, _fddef := _dd.ParseBool(_daaeb.Value)
			if _fddef != nil {
				return _fddef
			}
			_gefafa.GridLinesSetAttr = &_eeefc
			continue
		}
	}
	for {
		_bagfeg, _aacebc := d.Token()
		if _aacebc != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _aacebc)
		}
		if _cbcef, _bbcbc := _bagfeg.(_a.EndElement); _bbcbc && _cbcef.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdfec *Comments) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cdfec.CT_Comments = *NewCT_Comments()
_fgaaa:
	for {
		_gbbaba, _bcfbdc := d.Token()
		if _bcfbdc != nil {
			return _bcfbdc
		}
		switch _fbcfe := _gbbaba.(type) {
		case _a.StartElement:
			switch _fbcfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _fdgdfg := d.DecodeElement(_cdfec.Authors, &_fbcfe); _fdgdfg != nil {
					return _fdgdfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _caadce := d.DecodeElement(_cdfec.CommentList, &_fbcfe); _caadce != nil {
					return _caadce
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdfec.ExtLst = NewCT_ExtensionList()
				if _bgbfbe := d.DecodeElement(_cdfec.ExtLst, &_fbcfe); _bgbfbe != nil {
					return _bgbfbe
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _fbcfe.Name)
				if _acaae := d.Skip(); _acaae != nil {
					return _acaae
				}
			}
		case _a.EndElement:
			break _fgaaa
		case _a.CharData:
		}
	}
	return nil
}
func (_ececb *CT_MeasureGroups) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbbcc := range start.Attr {
		if _fbbcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbcdf, _gbfabf := _dd.ParseUint(_fbbcc.Value, 10, 32)
			if _gbfabf != nil {
				return _gbfabf
			}
			_cddcc := uint32(_fbcdf)
			_ececb.CountAttr = &_cddcc
			continue
		}
	}
_eagad:
	for {
		_gdddd, _bfeea := d.Token()
		if _bfeea != nil {
			return _bfeea
		}
		switch _ccdb := _gdddd.(type) {
		case _a.StartElement:
			switch _ccdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_aabee := NewCT_MeasureGroup()
				if _baebd := d.DecodeElement(_aabee, &_ccdb); _baebd != nil {
					return _baebd
				}
				_ececb.MeasureGroup = append(_ececb.MeasureGroup, _aabee)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _ccdb.Name)
				if _bbgcb := d.Skip(); _bbgcb != nil {
					return _bbgcb
				}
			}
		case _a.EndElement:
			break _eagad
		case _a.CharData:
		}
	}
	return nil
}
func (_gcfag *CT_MdxMemeberProp) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edfge := range start.Attr {
		if _edfge.Name.Local == "\u006e" {
			_befae, _fcbcg := _dd.ParseUint(_edfge.Value, 10, 32)
			if _fcbcg != nil {
				return _fcbcg
			}
			_gcfag.NAttr = uint32(_befae)
			continue
		}
		if _edfge.Name.Local == "\u006e\u0070" {
			_gaafc, _bffgf := _dd.ParseUint(_edfge.Value, 10, 32)
			if _bffgf != nil {
				return _bffgf
			}
			_gcfag.NpAttr = uint32(_gaafc)
			continue
		}
	}
	for {
		_dbgac, _gbaag := d.Token()
		if _gbaag != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _gbaag)
		}
		if _fgbaf, _gfebe := _dbgac.(_a.EndElement); _gfebe && _fgbaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gbffe ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _gbffe {
	case 0, 1, 2, 3, 4:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbffe))
	}
	return nil
}
func (_gcbbfc ST_Visibility) ValidateWithPath(path string) error {
	switch _gcbbfc {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbbfc))
	}
	return nil
}

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_fafb *CT_FileSharing) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GroupItemsChoice and its children
func (_cdefc *CT_GroupItemsChoice) Validate() error {
	return _cdefc.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0049\u0074\u0065\u006d\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_afcacf *ST_MdxFunctionType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edagbd, _bdeggg := d.Token()
	if _bdeggg != nil {
		return _bdeggg
	}
	if _ccdcc, _ggagf := _edagbd.(_a.EndElement); _ggagf && _ccdcc.Name == start.Name {
		*_afcacf = 1
		return nil
	}
	if _egbda, _dacbb := _edagbd.(_a.CharData); !_dacbb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edagbd)
	} else {
		switch string(_egbda) {
		case "":
			*_afcacf = 0
		case "\u006d":
			*_afcacf = 1
		case "\u0076":
			*_afcacf = 2
		case "\u0073":
			*_afcacf = 3
		case "\u0063":
			*_afcacf = 4
		case "\u0072":
			*_afcacf = 5
		case "\u0070":
			*_afcacf = 6
		case "\u006b":
			*_afcacf = 7
		}
	}
	_edagbd, _bdeggg = d.Token()
	if _bdeggg != nil {
		return _bdeggg
	}
	if _gebae, _fdfddf := _edagbd.(_a.EndElement); _fdfddf && _gebae.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edagbd)
}

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_dabea *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _aabg, _aadeb := range _dabea.X {
		if _edaaf := _aadeb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _aabg)); _edaaf != nil {
			return _edaaf
		}
	}
	if _dabea.ExtLst != nil {
		if _deefg := _dabea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deefg != nil {
			return _deefg
		}
	}
	return nil
}
func (_abdab ST_GradientType) ValidateWithPath(path string) error {
	switch _abdab {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abdab))
	}
	return nil
}
func (_bbeae *ST_FieldSortType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cggcf, _bdbde := d.Token()
	if _bdbde != nil {
		return _bdbde
	}
	if _cdggd, _egfbdg := _cggcf.(_a.EndElement); _egfbdg && _cdggd.Name == start.Name {
		*_bbeae = 1
		return nil
	}
	if _defca, _efcec := _cggcf.(_a.CharData); !_efcec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cggcf)
	} else {
		switch string(_defca) {
		case "":
			*_bbeae = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_bbeae = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_bbeae = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_bbeae = 3
		}
	}
	_cggcf, _bdbde = d.Token()
	if _bdbde != nil {
		return _bdbde
	}
	if _afgddf, _fcaba := _cggcf.(_a.EndElement); _fcaba && _afgddf.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cggcf)
}

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_effbbf *CT_Users) ValidateWithPath(path string) error {
	for _bcfaa, _aefgb := range _effbbf.UserInfo {
		if _dedbab := _aefgb.ValidateWithPath(_fd.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _bcfaa)); _dedbab != nil {
			return _dedbab
		}
	}
	return nil
}
func NewCT_PivotCacheRecords() *CT_PivotCacheRecords {
	_feffc := &CT_PivotCacheRecords{}
	return _feffc
}
func NewCT_WebPublishItem() *CT_WebPublishItem {
	_eebgd := &CT_WebPublishItem{}
	_eebgd.SourceTypeAttr = ST_WebSourceType(1)
	return _eebgd
}
func (_gbga *CT_ConditionalFormat) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gbga.PivotAreas = NewCT_PivotAreas()
	for _, _gaad := range start.Attr {
		if _gaad.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_gbga.ScopeAttr.UnmarshalXMLAttr(_gaad)
			continue
		}
		if _gaad.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gbga.TypeAttr.UnmarshalXMLAttr(_gaad)
			continue
		}
		if _gaad.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_gfbc, _ddega := _dd.ParseUint(_gaad.Value, 10, 32)
			if _ddega != nil {
				return _ddega
			}
			_gbga.PriorityAttr = uint32(_gfbc)
			continue
		}
	}
_cdbd:
	for {
		_bfgg, _cdce := d.Token()
		if _cdce != nil {
			return _cdce
		}
		switch _bcgd := _bfgg.(type) {
		case _a.StartElement:
			switch _bcgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _bcfg := d.DecodeElement(_gbga.PivotAreas, &_bcgd); _bcfg != nil {
					return _bcfg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbga.ExtLst = NewCT_ExtensionList()
				if _edfab := d.DecodeElement(_gbga.ExtLst, &_bcgd); _edfab != nil {
					return _edfab
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _bcgd.Name)
				if _cfbcg := d.Skip(); _cfbcg != nil {
					return _cfbcg
				}
			}
		case _a.EndElement:
			break _cdbd
		case _a.CharData:
		}
	}
	return nil
}
func (_efeab ST_Visibility) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_efeab.String(), start)
}

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_gdbagc *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _gdadd := _gdbagc.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _gdadd != nil {
		return _gdadd
	}
	if _fbceb := _gdbagc.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _fbceb != nil {
		return _fbceb
	}
	return nil
}
func (_facce *ST_UpdateLinks) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bedgdd, _bgbcb := d.Token()
	if _bgbcb != nil {
		return _bgbcb
	}
	if _abdacg, _ceeff := _bedgdd.(_a.EndElement); _ceeff && _abdacg.Name == start.Name {
		*_facce = 1
		return nil
	}
	if _gcddba, _gcggcb := _bedgdd.(_a.CharData); !_gcggcb {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bedgdd)
	} else {
		switch string(_gcddba) {
		case "":
			*_facce = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_facce = 1
		case "\u006e\u0065\u0076e\u0072":
			*_facce = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_facce = 3
		}
	}
	_bedgdd, _bgbcb = d.Token()
	if _bgbcb != nil {
		return _bgbcb
	}
	if _feccd, _gbfad := _bedgdd.(_a.EndElement); _gbfad && _feccd.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bedgdd)
}
func (_aedddf ST_CredMethod) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_aedddf.String(), start)
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}

// Validate validates the CT_RevisionAutoFormatting and its children
func (_aeeafb *CT_RevisionAutoFormatting) Validate() error {
	return _aeeafb.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}
func NewCT_Members() *CT_Members {
	_fddcf := &CT_Members{}
	return _fddcf
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_egebe *CT_FontName) ValidateWithPath(path string) error { return nil }

type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_cafbb *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _acage, _fgbffb := range _cafbb.DeletedField {
		if _dceaa := _fgbffb.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _acage)); _dceaa != nil {
			return _dceaa
		}
	}
	return nil
}
func NewCT_SortState() *CT_SortState { _dgegbb := &CT_SortState{}; return _dgegbb }

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_edabf *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _egdd := _edabf.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _egdd != nil {
		return _egdd
	}
	if _gdfe := _edabf.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gdfe != nil {
		return _gdfe
	}
	if _ceea := _edabf.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _ceea != nil {
		return _ceea
	}
	if _edabf.ExtLst != nil {
		if _becg := _edabf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _becg != nil {
			return _becg
		}
	}
	return nil
}
func (_bbgc *CT_CustomChartsheetView) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bbgc.GuidAttr)})
	if _bbgc.ScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_bbgc.ScaleAttr)})
	}
	if _bbgc.StateAttr != ST_SheetStateUnset {
		_fecdd, _gbbg := _bbgc.StateAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gbbg != nil {
			return _gbbg
		}
		start.Attr = append(start.Attr, _fecdd)
	}
	if _bbgc.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_bbgc.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _bbgc.PageMargins != nil {
		_adaaa := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0070\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_bbgc.PageMargins, _adaaa)
	}
	if _bbgc.PageSetup != nil {
		_edaga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_bbgc.PageSetup, _edaga)
	}
	if _bbgc.HeaderFooter != nil {
		_dgab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0068\u0065a\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_bbgc.HeaderFooter, _dgab)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gcbe *CT_CellProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _geff := range start.Attr {
		if _geff.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_ccbg, _cge := _dd.ParseBool(_geff.Value)
			if _cge != nil {
				return _cge
			}
			_gcbe.LockedAttr = &_ccbg
			continue
		}
		if _geff.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gdca, _fee := _dd.ParseBool(_geff.Value)
			if _fee != nil {
				return _fee
			}
			_gcbe.HiddenAttr = &_gdca
			continue
		}
	}
	for {
		_agegd, _fgf := d.Token()
		if _fgf != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _fgf)
		}
		if _gcgc, _gacd := _agegd.(_a.EndElement); _gacd && _gcgc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebad *CT_CellWatch) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gbda := range start.Attr {
		if _gbda.Name.Local == "\u0072" {
			_gged := _gbda.Value
			_ebad.RAttr = _gged
			continue
		}
	}
	for {
		_deaf, _cfffe := d.Token()
		if _cfffe != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _cfffe)
		}
		if _eecg, _abac := _deaf.(_a.EndElement); _abac && _eecg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdaaa ST_RevisionAction) Validate() error { return _cdaaa.ValidateWithPath("") }

// Validate validates the CT_DateTime and its children
func (_aegagc *CT_DateTime) Validate() error {
	return _aegagc.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}
func (_eecfb *CT_FontScheme) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_eecfb.ValAttr = ST_FontScheme(1)
	for _, _ggdbe := range start.Attr {
		if _ggdbe.Name.Local == "\u0076\u0061\u006c" {
			_eecfb.ValAttr.UnmarshalXMLAttr(_ggdbe)
			continue
		}
	}
	for {
		_dcbec, _cffe := d.Token()
		if _cffe != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _cffe)
		}
		if _gbfab, _adage := _dcbec.(_a.EndElement); _adage && _gbfab.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_affbab *CT_Tuples) ValidateWithPath(path string) error {
	for _ccdaa, _acbcg := range _affbab.Tpl {
		if _cbbeca := _acbcg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _ccdaa)); _cbbeca != nil {
			return _cbbeca
		}
	}
	return nil
}
func NewCT_DdeItems() *CT_DdeItems            { _ffffbf := &CT_DdeItems{}; return _ffffbf }
func (_aeafdf ST_TextVAlign) Validate() error { return _aeafdf.ValidateWithPath("") }
func (_acffff *CT_QueryTableField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cegfb := range start.Attr {
		if _cegfb.Name.Local == "\u0069\u0064" {
			_degabd, _fecce := _dd.ParseUint(_cegfb.Value, 10, 32)
			if _fecce != nil {
				return _fecce
			}
			_acffff.IdAttr = uint32(_degabd)
			continue
		}
		if _cegfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_egadd := _cegfb.Value
			_acffff.NameAttr = &_egadd
			continue
		}
		if _cegfb.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_egbeac, _ecabg := _dd.ParseBool(_cegfb.Value)
			if _ecabg != nil {
				return _ecabg
			}
			_acffff.DataBoundAttr = &_egbeac
			continue
		}
		if _cegfb.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_facbe, _egfcc := _dd.ParseBool(_cegfb.Value)
			if _egfcc != nil {
				return _egfcc
			}
			_acffff.RowNumbersAttr = &_facbe
			continue
		}
		if _cegfb.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_eaefe, _bbebd := _dd.ParseBool(_cegfb.Value)
			if _bbebd != nil {
				return _bbebd
			}
			_acffff.FillFormulasAttr = &_eaefe
			continue
		}
		if _cegfb.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_gaffe, _cagfe := _dd.ParseBool(_cegfb.Value)
			if _cagfe != nil {
				return _cagfe
			}
			_acffff.ClippedAttr = &_gaffe
			continue
		}
		if _cegfb.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_ecea, _eccbc := _dd.ParseUint(_cegfb.Value, 10, 32)
			if _eccbc != nil {
				return _eccbc
			}
			_eggdb := uint32(_ecea)
			_acffff.TableColumnIdAttr = &_eggdb
			continue
		}
	}
_dbbea:
	for {
		_caeba, _aebad := d.Token()
		if _aebad != nil {
			return _aebad
		}
		switch _fccfe := _caeba.(type) {
		case _a.StartElement:
			switch _fccfe.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acffff.ExtLst = NewCT_ExtensionList()
				if _cdadd := d.DecodeElement(_acffff.ExtLst, &_fccfe); _cdadd != nil {
					return _cdadd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _fccfe.Name)
				if _ebbfc := d.Skip(); _ebbfc != nil {
					return _ebbfc
				}
			}
		case _a.EndElement:
			break _dbbea
		case _a.CharData:
		}
	}
	return nil
}
func (_abbcg *CT_Selection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _abbcg.PaneAttr != ST_PaneUnset {
		_faage, _aabgg := _abbcg.PaneAttr.MarshalXMLAttr(_a.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _aabgg != nil {
			return _aabgg
		}
		start.Attr = append(start.Attr, _faage)
	}
	if _abbcg.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_abbcg.ActiveCellAttr)})
	}
	if _abbcg.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_abbcg.ActiveCellIdAttr)})
	}
	if _abbcg.SqrefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_abbcg.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_BorderPr() *CT_BorderPr { _gceg := &CT_BorderPr{}; return _gceg }

type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}

func (_bfbgf *CT_Tables) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _deadac := range start.Attr {
		if _deadac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bdfbc, _bbfcg := _dd.ParseUint(_deadac.Value, 10, 32)
			if _bbfcg != nil {
				return _bbfcg
			}
			_dcabf := uint32(_bdfbc)
			_bfbgf.CountAttr = &_dcabf
			continue
		}
	}
_fgcbb:
	for {
		_fgbaab, _gfcbf := d.Token()
		if _gfcbf != nil {
			return _gfcbf
		}
		switch _bbdaag := _fgbaab.(type) {
		case _a.StartElement:
			switch _bbdaag.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_fbabe := NewCT_TablesChoice()
				if _bbgda := d.DecodeElement(&_fbabe.M, &_bbdaag); _bbgda != nil {
					return _bbgda
				}
				_bfbgf.TablesChoice = append(_bfbgf.TablesChoice, _fbabe)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_dbcgc := NewCT_TablesChoice()
				if _dfddb := d.DecodeElement(&_dbcgc.S, &_bbdaag); _dfddb != nil {
					return _dfddb
				}
				_bfbgf.TablesChoice = append(_bfbgf.TablesChoice, _dbcgc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_efdfb := NewCT_TablesChoice()
				if _ggfab := d.DecodeElement(&_efdfb.X, &_bbdaag); _ggfab != nil {
					return _ggfab
				}
				_bfbgf.TablesChoice = append(_bfbgf.TablesChoice, _efdfb)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _bbdaag.Name)
				if _dbagc := d.Skip(); _dbagc != nil {
					return _dbagc
				}
			}
		case _a.EndElement:
			break _fgcbb
		case _a.CharData:
		}
	}
	return nil
}
func (_ggcde ST_VerticalAlignment) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dedab := _a.Attr{}
	_dedab.Name = name
	switch _ggcde {
	case ST_VerticalAlignmentUnset:
		_dedab.Value = ""
	case ST_VerticalAlignmentTop:
		_dedab.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_dedab.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_dedab.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_dedab.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_dedab.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _dedab, nil
}

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_dfecc *VolTypes) ValidateWithPath(path string) error {
	if _fedfgc := _dfecc.CT_VolTypes.ValidateWithPath(path); _fedfgc != nil {
		return _fedfgc
	}
	return nil
}

type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}

func (_eacag *CT_MdxMemeberProp) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _eacag.NAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0070"}, Value: _fd.Sprintf("\u0025\u0076", _eacag.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr  *uint32
	CacheSourceChoice *CT_CacheSourceChoice
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_gbfgdf *CT_PCDSDTCEntries) Validate() error {
	return _gbfgdf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_fefefc *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _gcfgg, _fcdeb := range _fefefc.SingleXmlCell {
		if _bbage := _fcdeb.ValidateWithPath(_fd.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _gcfgg)); _bbage != nil {
			return _bbage
		}
	}
	return nil
}

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}

func NewCT_Schema() *CT_Schema { _gdec := &CT_Schema{}; return _gdec }
func NewCT_Users() *CT_Users   { _feeed := &CT_Users{}; return _feeed }

type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

func (_cgdgd ST_DvAspect) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_efdbd := _a.Attr{}
	_efdbd.Name = name
	switch _cgdgd {
	case ST_DvAspectUnset:
		_efdbd.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_efdbd.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_efdbd.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _efdbd, nil
}

type CT_ExternalLink struct {
	ExternalLinkChoice *CT_ExternalLinkChoice
	ExtLst             *CT_ExtensionList
}

func (_aabbgb *CT_TextFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aabbgb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aabbgb.CountAttr)})
	}
	e.EncodeToken(start)
	_gcdfb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _acaaf := range _aabbgb.TextField {
		e.EncodeElement(_acaaf, _gcdfb)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PageItem and its children
func (_ddagc *CT_PageItem) Validate() error {
	return _ddagc.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}

type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

func (_ffcf *CT_CellFormula) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffcf.TAttr != ST_CellFormulaTypeUnset {
		_bcee, _cfbe := _ffcf.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _cfbe != nil {
			return _cfbe
		}
		start.Attr = append(start.Attr, _bcee)
	}
	if _ffcf.AcaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0063\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.AcaAttr))})
	}
	if _ffcf.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcf.RefAttr)})
	}
	if _ffcf.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.Dt2DAttr))})
	}
	if _ffcf.DtrAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0074\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.DtrAttr))})
	}
	if _ffcf.Del1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.Del1Attr))})
	}
	if _ffcf.Del2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.Del2Attr))})
	}
	if _ffcf.R1Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0031"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcf.R1Attr)})
	}
	if _ffcf.R2Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0032"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcf.R2Attr)})
	}
	if _ffcf.CaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.CaAttr))})
	}
	if _ffcf.SiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_ffcf.SiAttr)})
	}
	if _ffcf.BxAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0078"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffcf.BxAttr))})
	}
	e.EncodeElement(_ffcf.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gbddg *CT_PivotFields) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cdfaa := range start.Attr {
		if _cdfaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_daadb, _edfbf := _dd.ParseUint(_cdfaa.Value, 10, 32)
			if _edfbf != nil {
				return _edfbf
			}
			_geccd := uint32(_daadb)
			_gbddg.CountAttr = &_geccd
			continue
		}
	}
_dbfcc:
	for {
		_fdfec, _acddb := d.Token()
		if _acddb != nil {
			return _acddb
		}
		switch _gcdgb := _fdfec.(type) {
		case _a.StartElement:
			switch _gcdgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_eddee := NewCT_PivotField()
				if _caccdf := d.DecodeElement(_eddee, &_gcdgb); _caccdf != nil {
					return _caccdf
				}
				_gbddg.PivotField = append(_gbddg.PivotField, _eddee)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _gcdgb.Name)
				if _gggda := d.Skip(); _gggda != nil {
					return _gggda
				}
			}
		case _a.EndElement:
			break _dbfcc
		case _a.CharData:
		}
	}
	return nil
}
func (_begaef ST_Objects) String() string {
	switch _begaef {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_geeac *CT_TableMissing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for {
		_defdc, _adbcd := d.Token()
		if _adbcd != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _adbcd)
		}
		if _ggbfe, _edgfd := _defdc.(_a.EndElement); _edgfd && _ggbfe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_cadccd *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _cadccd.Mps != nil {
		if _bgeea := _cadccd.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _bgeea != nil {
			return _bgeea
		}
	}
	for _facad, _dgddd := range _cadccd.Members {
		if _cfdggb := _dgddd.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _facad)); _cfdggb != nil {
			return _cfdggb
		}
	}
	if _cadccd.ExtLst != nil {
		if _bdacb := _cadccd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdacb != nil {
			return _bdacb
		}
	}
	return nil
}

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_Fills() *CT_Fills { _dfca := &CT_Fills{}; return _dfca }
func (_gaagc *CT_OleObject) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gaagc.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gaagc.ProgIdAttr)})
	}
	if _gaagc.DvAspectAttr != ST_DvAspectUnset {
		_fada, _gecbbe := _gaagc.DvAspectAttr.MarshalXMLAttr(_a.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _gecbbe != nil {
			return _gecbbe
		}
		start.Attr = append(start.Attr, _fada)
	}
	if _gaagc.LinkAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0076", *_gaagc.LinkAttr)})
	}
	if _gaagc.OleUpdateAttr != ST_OleUpdateUnset {
		_bcbaga, _gbdeaa := _gaagc.OleUpdateAttr.MarshalXMLAttr(_a.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _gbdeaa != nil {
			return _gbdeaa
		}
		start.Attr = append(start.Attr, _bcbaga)
	}
	if _gaagc.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gaagc.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _gaagc.ShapeIdAttr)})
	if _gaagc.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_gaagc.IdAttr)})
	}
	e.EncodeToken(start)
	if _gaagc.ObjectPr != nil {
		_bgdga := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_gaagc.ObjectPr, _bgdga)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_ebcdd *CT_Member) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_MeasureDimensionMaps and its children
func (_cabbg *CT_MeasureDimensionMaps) Validate() error {
	return _cabbg.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}

type AG_RevData struct {
	RIdAttr uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_aaagff ST_UnderlineValues) String() string {
	switch _aaagff {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

func (_gfabd ST_Axis) Validate() error { return _gfabd.ValidateWithPath("") }
func (_afee *CT_CalculatedItem) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _afee.FieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_afee.FieldAttr)})
	}
	if _afee.FormulaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _fd.Sprintf("\u0025\u0076", *_afee.FormulaAttr)})
	}
	e.EncodeToken(start)
	_egdb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_afee.PivotArea, _egdb)
	if _afee.ExtLst != nil {
		_fgbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afee.ExtLst, _fgbe)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_dgecg *CT_RevisionInsertSheet) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dgecg.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dgecg.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _dgecg.SheetPositionAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dgecg.RIdAttr)})
	if _dgecg.UaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgecg.UaAttr))})
	}
	if _dgecg.RaAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dgecg.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_faadcd ST_BorderStyle) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcgcg := _a.Attr{}
	_fcgcg.Name = name
	switch _faadcd {
	case ST_BorderStyleUnset:
		_fcgcg.Value = ""
	case ST_BorderStyleNone:
		_fcgcg.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_fcgcg.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_fcgcg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_fcgcg.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_fcgcg.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_fcgcg.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_fcgcg.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_fcgcg.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_fcgcg.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_fcgcg.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_fcgcg.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_fcgcg.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_fcgcg.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_fcgcg.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _fcgcg, nil
}
func (_edga *CT_ChartsheetPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edga.PublishedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edga.PublishedAttr))})
	}
	if _edga.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_edga.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _edga.TabColor != nil {
		_fecaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_edga.TabColor, _fecaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_defffc ST_PageOrder) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_defffc.String(), start)
}
func NewCT_RecordChoice() *CT_RecordChoice { _egfa := &CT_RecordChoice{}; return _egfa }
func (_gcgggg *ST_ParameterType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fgeeee, _cgfdeb := d.Token()
	if _cgfdeb != nil {
		return _cgfdeb
	}
	if _geacg, _gefcf := _fgeeee.(_a.EndElement); _gefcf && _geacg.Name == start.Name {
		*_gcgggg = 1
		return nil
	}
	if _ggcff, _aafd := _fgeeee.(_a.CharData); !_aafd {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgeeee)
	} else {
		switch string(_ggcff) {
		case "":
			*_gcgggg = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_gcgggg = 1
		case "\u0076\u0061\u006cu\u0065":
			*_gcgggg = 2
		case "\u0063\u0065\u006c\u006c":
			*_gcgggg = 3
		}
	}
	_fgeeee, _cgfdeb = d.Token()
	if _cgfdeb != nil {
		return _cgfdeb
	}
	if _fegabg, _egfcb := _fgeeee.(_a.EndElement); _egfcb && _fegabg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgeeee)
}

// Validate validates the CT_RangeSet and its children
func (_adbe *CT_RangeSet) Validate() error {
	return _adbe.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}
func (_bbggd ST_DateTimeGrouping) String() string {
	switch _bbggd {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}
func (_acddg *ST_TargetScreenSize) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_acddg = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_acddg = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_acddg = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_acddg = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_acddg = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_acddg = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_acddg = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_acddg = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_acddg = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_acddg = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_acddg = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_acddg = 11
	}
	return nil
}
func NewCT_CacheHierarchy() *CT_CacheHierarchy { _adcb := &CT_CacheHierarchy{}; return _adcb }
func NewCT_ChartsheetViews() *CT_ChartsheetViews {
	_bbga := &CT_ChartsheetViews{}
	return _bbga
}
func (_dcdga *CT_CommentPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcdga.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.LockedAttr))})
	}
	if _dcdga.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.DefaultSizeAttr))})
	}
	if _dcdga.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.PrintAttr))})
	}
	if _dcdga.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.DisabledAttr))})
	}
	if _dcdga.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.AutoFillAttr))})
	}
	if _dcdga.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.AutoLineAttr))})
	}
	if _dcdga.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_dcdga.AltTextAttr)})
	}
	if _dcdga.TextHAlignAttr != ST_TextHAlignUnset {
		_bedf, _acgd := _dcdga.TextHAlignAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _acgd != nil {
			return _acgd
		}
		start.Attr = append(start.Attr, _bedf)
	}
	if _dcdga.TextVAlignAttr != ST_TextVAlignUnset {
		_ebagb, _bbbaf := _dcdga.TextVAlignAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _bbbaf != nil {
			return _bbbaf
		}
		start.Attr = append(start.Attr, _ebagb)
	}
	if _dcdga.LockTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.LockTextAttr))})
	}
	if _dcdga.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.JustLastXAttr))})
	}
	if _dcdga.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcdga.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_ffad := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_dcdga.Anchor, _ffad)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_XmlColumnPr() *CT_XmlColumnPr { _febae := &CT_XmlColumnPr{}; return _febae }
func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_egfcdb := &CT_ChartsheetProtection{}
	return _egfcdb
}

type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}

// Validate validates the CT_CalculatedMember and its children
func (_gacf *CT_CalculatedMember) Validate() error {
	return _gacf.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}
type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}
type CT_OleSize struct {

	// Reference
	RefAttr string
}

// Validate validates the CT_Authors and its children
func (_ade *CT_Authors) Validate() error {
	return _ade.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}
func (_cabee *CT_Selection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bgcffg := range start.Attr {
		if _bgcffg.Name.Local == "\u0070\u0061\u006e\u0065" {
			_cabee.PaneAttr.UnmarshalXMLAttr(_bgcffg)
			continue
		}
		if _bgcffg.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_fgbaaaf := _bgcffg.Value
			_cabee.ActiveCellAttr = &_fgbaaaf
			continue
		}
		if _bgcffg.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_ddacfd, _dceacf := _dd.ParseUint(_bgcffg.Value, 10, 32)
			if _dceacf != nil {
				return _dceacf
			}
			_dcbaa := uint32(_ddacfd)
			_cabee.ActiveCellIdAttr = &_dcbaa
			continue
		}
		if _bgcffg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_eaecf, _bbcee := ParseSliceST_Sqref(_bgcffg.Value)
			if _bbcee != nil {
				return _bbcee
			}
			_cabee.SqrefAttr = &_eaecf
			continue
		}
	}
	for {
		_gebeb, _bgcfc := d.Token()
		if _bgcfc != nil {
			return _fd.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _bgcfc)
		}
		if _cdfca, _egfbaf := _gebeb.(_a.EndElement); _egfbaf && _cdfca.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)

func (_ccb *CT_CacheFields) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ccb.CountAttr)})
	}
	e.EncodeToken(start)
	if _ccb.CacheField != nil {
		_beeb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u0061\u0063\u0068\u0065F\u0069\u0065\u006c\u0064"}}
		for _, _fbga := range _ccb.CacheField {
			e.EncodeElement(_fbga, _beeb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfgcd *CT_DefinedName) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _cfbaa := range start.Attr {
		if _cfbaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_debg := _cfbaa.Value
			_bfgcd.NameAttr = _debg
			continue
		}
		if _cfbaa.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ffda := _cfbaa.Value
			_bfgcd.CommentAttr = &_ffda
			continue
		}
		if _cfbaa.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_adaea := _cfbaa.Value
			_bfgcd.CustomMenuAttr = &_adaea
			continue
		}
		if _cfbaa.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_afgfc := _cfbaa.Value
			_bfgcd.DescriptionAttr = &_afgfc
			continue
		}
		if _cfbaa.Name.Local == "\u0068\u0065\u006c\u0070" {
			_gcfac := _cfbaa.Value
			_bfgcd.HelpAttr = &_gcfac
			continue
		}
		if _cfbaa.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_dafbb := _cfbaa.Value
			_bfgcd.StatusBarAttr = &_dafbb
			continue
		}
		if _cfbaa.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_bcac, _daebc := _dd.ParseUint(_cfbaa.Value, 10, 32)
			if _daebc != nil {
				return _daebc
			}
			_fccab := uint32(_bcac)
			_bfgcd.LocalSheetIdAttr = &_fccab
			continue
		}
		if _cfbaa.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dfgde, _fceag := _dd.ParseBool(_cfbaa.Value)
			if _fceag != nil {
				return _fceag
			}
			_bfgcd.HiddenAttr = &_dfgde
			continue
		}
		if _cfbaa.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_adgff, _abffc := _dd.ParseBool(_cfbaa.Value)
			if _abffc != nil {
				return _abffc
			}
			_bfgcd.FunctionAttr = &_adgff
			continue
		}
		if _cfbaa.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_eaea, _faadg := _dd.ParseBool(_cfbaa.Value)
			if _faadg != nil {
				return _faadg
			}
			_bfgcd.VbProcedureAttr = &_eaea
			continue
		}
		if _cfbaa.Name.Local == "\u0078\u006c\u006d" {
			_gdfbb, _fedab := _dd.ParseBool(_cfbaa.Value)
			if _fedab != nil {
				return _fedab
			}
			_bfgcd.XlmAttr = &_gdfbb
			continue
		}
		if _cfbaa.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_gcdefc, _geccad := _dd.ParseUint(_cfbaa.Value, 10, 32)
			if _geccad != nil {
				return _geccad
			}
			_aeaef := uint32(_gcdefc)
			_bfgcd.FunctionGroupIdAttr = &_aeaef
			continue
		}
		if _cfbaa.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_bbcg := _cfbaa.Value
			_bfgcd.ShortcutKeyAttr = &_bbcg
			continue
		}
		if _cfbaa.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_agbe, _adgbc := _dd.ParseBool(_cfbaa.Value)
			if _adgbc != nil {
				return _adgbc
			}
			_bfgcd.PublishToServerAttr = &_agbe
			continue
		}
		if _cfbaa.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_gdceb, _faegg := _dd.ParseBool(_cfbaa.Value)
			if _faegg != nil {
				return _faegg
			}
			_bfgcd.WorkbookParameterAttr = &_gdceb
			continue
		}
	}
	for {
		_dcgae, _daaga := d.Token()
		if _daaga != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _daaga)
		}
		if _fgdc, _afafd := _dcgae.(_a.CharData); _afafd {
			_bfgcd.Content = string(_fgdc)
		}
		if _cgad, _aeaff := _dcgae.(_a.EndElement); _aeaff && _cgad.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_g.Time

	// Maximum Date Time Value
	MaxDateAttr *_g.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr      *bool
	SharedItemsChoice []*CT_SharedItemsChoice
}

func (_gffeb *CT_Scenario) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gffeb.NameAttr)})
	if _gffeb.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gffeb.LockedAttr))})
	}
	if _gffeb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gffeb.HiddenAttr))})
	}
	if _gffeb.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gffeb.CountAttr)})
	}
	if _gffeb.UserAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_gffeb.UserAttr)})
	}
	if _gffeb.CommentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gffeb.CommentAttr)})
	}
	e.EncodeToken(start)
	_adgaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u006e\u0070\u0075\u0074C\u0065\u006c\u006c\u0073"}}
	for _, _gacgdb := range _gffeb.InputCells {
		e.EncodeElement(_gacgdb, _adgaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FieldUsage and its children
func (_cbagb *CT_FieldUsage) Validate() error {
	return _cbagb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}
func (_ecadee ST_SortBy) String() string {
	switch _ecadee {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}

type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}

func NewCT_OleLink() *CT_OleLink { _fdcga := &CT_OleLink{}; return _fdcga }
func (_gggbd ST_HorizontalAlignment) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gggbd.String(), start)
}
func (_beccd *CT_OleItems) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_agbeed:
	for {
		_aecg, _aegga := d.Token()
		if _aegga != nil {
			return _aegga
		}
		switch _eeaeb := _aecg.(type) {
		case _a.StartElement:
			switch _eeaeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_accedb := NewCT_OleItem()
				if _baagd := d.DecodeElement(_accedb, &_eeaeb); _baagd != nil {
					return _baagd
				}
				_beccd.OleItem = append(_beccd.OleItem, _accedb)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _eeaeb.Name)
				if _eecaf := d.Skip(); _eecaf != nil {
					return _eecaf
				}
			}
		case _a.EndElement:
			break _agbeed
		case _a.CharData:
		}
	}
	return nil
}
func (_edgb *CT_ExternalReferences) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fabc:
	for {
		_ccfg, _ccea := d.Token()
		if _ccea != nil {
			return _ccea
		}
		switch _dcdgee := _ccfg.(type) {
		case _a.StartElement:
			switch _dcdgee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_cgeg := NewCT_ExternalReference()
				if _abdb := d.DecodeElement(_cgeg, &_dcdgee); _abdb != nil {
					return _abdb
				}
				_edgb.ExternalReference = append(_edgb.ExternalReference, _cgeg)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _dcdgee.Name)
				if _abdbg := d.Skip(); _abdbg != nil {
					return _abdbg
				}
			}
		case _a.EndElement:
			break _fabc
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ChartsheetView and its children
func (_gaaad *CT_ChartsheetView) Validate() error {
	return _gaaad.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

// Validate validates the CT_CellWatches and its children
func (_bbdf *CT_CellWatches) Validate() error {
	return _bbdf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}

// Validate validates the CT_TextFields and its children
func (_addde *CT_TextFields) Validate() error {
	return _addde.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_fdddf *CT_FunctionGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdddf.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fdddf.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_abbge *CT_OleItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gaefgg := range start.Attr {
		if _gaefgg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcbaa := _gaefgg.Value
			_abbge.NameAttr = _fcbaa
			continue
		}
		if _gaefgg.Name.Local == "\u0069\u0063\u006f\u006e" {
			_gfdaf, _aedfea := _dd.ParseBool(_gaefgg.Value)
			if _aedfea != nil {
				return _aedfea
			}
			_abbge.IconAttr = &_gfdaf
			continue
		}
		if _gaefgg.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_fgdea, _bggegd := _dd.ParseBool(_gaefgg.Value)
			if _bggegd != nil {
				return _bggegd
			}
			_abbge.AdviseAttr = &_fgdea
			continue
		}
		if _gaefgg.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_deddbg, _ffcbb := _dd.ParseBool(_gaefgg.Value)
			if _ffcbb != nil {
				return _ffcbb
			}
			_abbge.PreferPicAttr = &_deddbg
			continue
		}
	}
	for {
		_fbgcf, _efddb := d.Token()
		if _efddb != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _efddb)
		}
		if _ebcddg, _dbecc := _fbgcf.(_a.EndElement); _dbecc && _ebcddg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}
type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_fgabd *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _ddedf := _fgabd.CT_PivotCacheDefinition.ValidateWithPath(path); _ddedf != nil {
		return _ddedf
	}
	return nil
}
func (_fegdd *CT_XmlCellPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fegdd.XmlPr = NewCT_XmlPr()
	for _, _gbdeb := range start.Attr {
		if _gbdeb.Name.Local == "\u0069\u0064" {
			_ecgbb, _cgggcd := _dd.ParseUint(_gbdeb.Value, 10, 32)
			if _cgggcd != nil {
				return _cgggcd
			}
			_fegdd.IdAttr = uint32(_ecgbb)
			continue
		}
		if _gbdeb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fagca := _gbdeb.Value
			_fegdd.UniqueNameAttr = &_fagca
			continue
		}
	}
_cgafe:
	for {
		_fddac, _dagef := d.Token()
		if _dagef != nil {
			return _dagef
		}
		switch _bcdceg := _fddac.(type) {
		case _a.StartElement:
			switch _bcdceg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _faeaf := d.DecodeElement(_fegdd.XmlPr, &_bcdceg); _faeaf != nil {
					return _faeaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fegdd.ExtLst = NewCT_ExtensionList()
				if _fdcgagb := d.DecodeElement(_fegdd.ExtLst, &_bcdceg); _fdcgagb != nil {
					return _fdcgagb
				}
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _bcdceg.Name)
				if _fafead := d.Skip(); _fafead != nil {
					return _fafead
				}
			}
		case _a.EndElement:
			break _cgafe
		case _a.CharData:
		}
	}
	return nil
}
func (_dcaged ST_Qualifier) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bcafeg := _a.Attr{}
	_bcafeg.Name = name
	switch _dcaged {
	case ST_QualifierUnset:
		_bcafeg.Value = ""
	case ST_QualifierDoubleQuote:
		_bcafeg.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_bcafeg.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_bcafeg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bcafeg, nil
}
func NewCT_Sst() *CT_Sst { _aegfb := &CT_Sst{}; return _aegfb }
func (_dfcgf ST_TargetScreenSize) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cfcbaa := _a.Attr{}
	_cfcbaa.Name = name
	switch _dfcgf {
	case ST_TargetScreenSizeUnset:
		_cfcbaa.Value = ""
	case ST_TargetScreenSize544x376:
		_cfcbaa.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_cfcbaa.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_cfcbaa.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_cfcbaa.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_cfcbaa.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_cfcbaa.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_cfcbaa.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_cfcbaa.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_cfcbaa.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_cfcbaa.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_cfcbaa.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _cfcbaa, nil
}

// Validate validates the CT_ExternalReferences and its children
func (_cbec *CT_ExternalReferences) Validate() error {
	return _cbec.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}

// Validate validates the CT_Workbook and its children
func (_gdcaab *CT_Workbook) Validate() error {
	return _gdcaab.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}
func (_cdbbg ST_DataValidationErrorStyle) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcgced := _a.Attr{}
	_fcgced.Name = name
	switch _cdbbg {
	case ST_DataValidationErrorStyleUnset:
		_fcgced.Value = ""
	case ST_DataValidationErrorStyleStop:
		_fcgced.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_fcgced.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_fcgced.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _fcgced, nil
}
func (_gbgdf *CT_ExternalReference) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edgcb := range start.Attr {
		if _edgcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edgcb.Name.Local == "\u0069\u0064" || _edgcb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edgcb.Name.Local == "\u0069\u0064" {
			_cbbda := _edgcb.Value
			_gbgdf.IdAttr = _cbbda
			continue
		}
	}
	for {
		_gagff, _agdg := d.Token()
		if _agdg != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _agdg)
		}
		if _fecgg, _ceafc := _gagff.(_a.EndElement); _ceafc && _fecgg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecffag *ST_DataValidationOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ecffag = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_ecffag = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_ecffag = 2
	case "\u0065\u0071\u0075a\u006c":
		*_ecffag = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_ecffag = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_ecffag = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_ecffag = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_ecffag = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_ecffag = 8
	}
	return nil
}
func NewCT_Scenario() *CT_Scenario { _caaab := &CT_Scenario{}; return _caaab }
func (_fgege ST_CredMethod) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gabgga := _a.Attr{}
	_gabgga.Name = name
	switch _fgege {
	case ST_CredMethodUnset:
		_gabgga.Value = ""
	case ST_CredMethodIntegrated:
		_gabgga.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_gabgga.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_gabgga.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_gabgga.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _gabgga, nil
}
func (_cfdfg *CT_VolTopicRef) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _cfdfg.RAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0076", _cfdfg.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_agcf *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _aagge, _gccaa := range _agcf.IgnoredError {
		if _afadc := _gccaa.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _aagge)); _afadc != nil {
			return _afadc
		}
	}
	if _agcf.ExtLst != nil {
		if _bebf := _agcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bebf != nil {
			return _bebf
		}
	}
	return nil
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}

func (_cbcdc ST_DynamicFilterType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_gacbdb := _a.Attr{}
	_gacbdb.Name = name
	switch _cbcdc {
	case ST_DynamicFilterTypeUnset:
		_gacbdb.Value = ""
	case ST_DynamicFilterTypeNull:
		_gacbdb.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_gacbdb.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_gacbdb.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_gacbdb.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_gacbdb.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_gacbdb.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_gacbdb.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_gacbdb.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_gacbdb.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_gacbdb.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_gacbdb.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_gacbdb.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_gacbdb.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_gacbdb.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_gacbdb.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_gacbdb.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_gacbdb.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_gacbdb.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_gacbdb.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_gacbdb.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_gacbdb.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_gacbdb.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_gacbdb.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_gacbdb.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_gacbdb.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_gacbdb.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_gacbdb.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_gacbdb.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_gacbdb.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_gacbdb.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_gacbdb.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_gacbdb.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_gacbdb.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_gacbdb.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_gacbdb.Value = "\u004d\u0031\u0032"
	}
	return _gacbdb, nil
}

// Validate validates the AG_AutoFormat and its children
func (_ddg *AG_AutoFormat) Validate() error {
	return _ddg.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}

// Validate validates the CT_ChartsheetViews and its children
func (_gabb *CT_ChartsheetViews) Validate() error {
	return _gabb.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}
func (_daafg *CT_SmartTagPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _daafg.EmbedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_daafg.EmbedAttr))})
	}
	if _daafg.ShowAttr != ST_SmartTagShowUnset {
		_aefad, _bdebbc := _daafg.ShowAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _bdebbc != nil {
			return _bdebbc
		}
		start.Attr = append(start.Attr, _aefad)
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_eeg *CT_Borders) ValidateWithPath(path string) error {
	for _ece, _gdgf := range _eeg.Border {
		if _gfae := _gdgf.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _ece)); _gfae != nil {
			return _gfae
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_feddf *CT_PivotCache) ValidateWithPath(path string) error { return nil }
func (_fcf *AG_AutoFormat) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fcf.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fcf.AutoFormatIdAttr)})
	}
	if _fcf.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyNumberFormatsAttr))})
	}
	if _fcf.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyBorderFormatsAttr))})
	}
	if _fcf.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyFontFormatsAttr))})
	}
	if _fcf.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyPatternFormatsAttr))})
	}
	if _fcf.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyAlignmentFormatsAttr))})
	}
	if _fcf.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fcf.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_gdeda *CT_PatternFill) ValidateWithPath(path string) error {
	if _ccgfg := _gdeda.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ccgfg != nil {
		return _ccgfg
	}
	if _gdeda.FgColor != nil {
		if _cgegd := _gdeda.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _cgegd != nil {
			return _cgegd
		}
	}
	if _gdeda.BgColor != nil {
		if _efcbf := _gdeda.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _efcbf != nil {
			return _efcbf
		}
	}
	return nil
}
func (_dbfbcc ST_TableStyleType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fccebf := _a.Attr{}
	_fccebf.Name = name
	switch _dbfbcc {
	case ST_TableStyleTypeUnset:
		_fccebf.Value = ""
	case ST_TableStyleTypeWholeTable:
		_fccebf.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_fccebf.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_fccebf.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_fccebf.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_fccebf.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_fccebf.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_fccebf.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_fccebf.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_fccebf.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_fccebf.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_fccebf.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_fccebf.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_fccebf.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_fccebf.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_fccebf.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_fccebf.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_fccebf.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_fccebf.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_fccebf.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_fccebf.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_fccebf.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_fccebf.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_fccebf.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_fccebf.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_fccebf.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_fccebf.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_fccebf.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_fccebf.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _fccebf, nil
}

type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}
type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

func (_fbbd *CT_DdeValue) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fbbd.TAttr != ST_DdeValueTypeUnset {
		_fdcc, _cedga := _fbbd.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _cedga != nil {
			return _cedga
		}
		start.Attr = append(start.Attr, _fdcc)
	}
	e.EncodeToken(start)
	_eafda := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0076\u0061\u006c"}}
	_ff.AddPreserveSpaceAttr(&_eafda, _fbbd.Val)
	e.EncodeElement(_fbbd.Val, _eafda)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gfgeg ST_TableStyleType) String() string {
	switch _gfgeg {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// Validate validates the CT_BookViews and its children
func (_aac *CT_BookViews) Validate() error {
	return _aac.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_gacgg *CT_SheetPr) ValidateWithPath(path string) error {
	if _gacgg.TabColor != nil {
		if _abfff := _gacgg.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _abfff != nil {
			return _abfff
		}
	}
	if _gacgg.OutlinePr != nil {
		if _gbafcb := _gacgg.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _gbafcb != nil {
			return _gbafcb
		}
	}
	if _gacgg.PageSetUpPr != nil {
		if _cafgf := _gacgg.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _cafgf != nil {
			return _cafgf
		}
	}
	return nil
}

type CT_SharedItemsChoice struct {

	// No Value
	M *CT_Missing

	// Numeric
	N *CT_Number

	// Boolean
	B *CT_Boolean

	// Error Value
	E *CT_Error

	// Character Value
	S *CT_String

	// Date Time
	D *CT_DateTime
}

// Validate validates the CT_PageMargins and its children
func (_fcacd *CT_PageMargins) Validate() error {
	return _fcacd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}
func (_fdagac ST_CellFormulaType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fdagac.String(), start)
}

// Validate validates the CT_BookView and its children
func (_gde *CT_BookView) Validate() error {
	return _gde.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_eeafb *CT_Fills) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _gabfb := range start.Attr {
		if _gabfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_adgab, _ddggee := _dd.ParseUint(_gabfb.Value, 10, 32)
			if _ddggee != nil {
				return _ddggee
			}
			_gacdc := uint32(_adgab)
			_eeafb.CountAttr = &_gacdc
			continue
		}
	}
_ebca:
	for {
		_aeac, _cdgg := d.Token()
		if _cdgg != nil {
			return _cdgg
		}
		switch _gcdgd := _aeac.(type) {
		case _a.StartElement:
			switch _gcdgd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_ddddf := NewCT_Fill()
				if _deaca := d.DecodeElement(_ddddf, &_gcdgd); _deaca != nil {
					return _deaca
				}
				_eeafb.Fill = append(_eeafb.Fill, _ddddf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _gcdgd.Name)
				if _debbc := d.Skip(); _debbc != nil {
					return _debbc
				}
			}
		case _a.EndElement:
			break _ebca
		case _a.CharData:
		}
	}
	return nil
}
func (_gcfcca *ST_BorderStyle) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gcfcca = 0
	case "\u006e\u006f\u006e\u0065":
		*_gcfcca = 1
	case "\u0074\u0068\u0069\u006e":
		*_gcfcca = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_gcfcca = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_gcfcca = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_gcfcca = 5
	case "\u0074\u0068\u0069c\u006b":
		*_gcfcca = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_gcfcca = 7
	case "\u0068\u0061\u0069\u0072":
		*_gcfcca = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_gcfcca = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_gcfcca = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_gcfcca = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_gcfcca = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_gcfcca = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_gcfcca = 14
	}
	return nil
}

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}

func NewCT_Sets() *CT_Sets { _ccfaaf := &CT_Sets{}; return _ccfaaf }

// Validate validates the CT_ExternalLink and its children
func (_dcac *CT_ExternalLink) Validate() error {
	return _dcac.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func (_fefba ST_BorderStyle) ValidateWithPath(path string) error {
	switch _fefba {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fefba))
	}
	return nil
}

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_dbacg *CT_PageField) ValidateWithPath(path string) error {
	if _dbacg.ExtLst != nil {
		if _dadae := _dbacg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dadae != nil {
			return _dadae
		}
	}
	return nil
}

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}

func (_ddada ST_CfType) String() string {
	switch _ddada {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}

type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

// Validate validates the CT_SingleXmlCell and its children
func (_gdcfc *CT_SingleXmlCell) Validate() error {
	return _gdcfc.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}

// Validate validates the CT_RElt and its children
func (_abadbb *CT_RElt) Validate() error {
	return _abadbb.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}
func (_eggca *CT_IgnoredErrors) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_fgdcaa:
	for {
		_adbbf, _bgaae := d.Token()
		if _bgaae != nil {
			return _bgaae
		}
		switch _eddbd := _adbbf.(type) {
		case _a.StartElement:
			switch _eddbd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_dgggda := NewCT_IgnoredError()
				if _ggded := d.DecodeElement(_dgggda, &_eddbd); _ggded != nil {
					return _ggded
				}
				_eggca.IgnoredError = append(_eggca.IgnoredError, _dgggda)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eggca.ExtLst = NewCT_ExtensionList()
				if _gdgbb := d.DecodeElement(_eggca.ExtLst, &_eddbd); _gdgbb != nil {
					return _gdgbb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _eddbd.Name)
				if _gddfbc := d.Skip(); _gddfbc != nil {
					return _gddfbc
				}
			}
		case _a.EndElement:
			break _fgdcaa
		case _a.CharData:
		}
	}
	return nil
}
func NewCT_PCDSCPage() *CT_PCDSCPage { _eafcaa := &CT_PCDSCPage{}; return _eafcaa }

type ST_DynamicFilterType byte

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_dcgec *CT_Fills) ValidateWithPath(path string) error {
	for _bgdde, _ebcbg := range _dcgec.Fill {
		if _befgd := _ebcbg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _bgdde)); _befgd != nil {
			return _befgd
		}
	}
	return nil
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

func (_ccfca ST_GradientType) String() string {
	switch _ccfca {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}
func NewCT_CalcPr() *CT_CalcPr { _gabf := &CT_CalcPr{}; return _gabf }

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           uint32
	UaAttr            *bool
	RaAttr            *bool
}
type ST_Type byte

func (_bbbdbd ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _bbbdbd {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbbdbd))
	}
	return nil
}

type ST_MdxSetOrder byte

func (_cbdddf ST_ConditionalFormattingOperator) Validate() error { return _cbdddf.ValidateWithPath("") }
func (_abcg *CT_CellSmartTagPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfae := range start.Attr {
		if _dfae.Name.Local == "\u006b\u0065\u0079" {
			_aeb := _dfae.Value
			_abcg.KeyAttr = _aeb
			continue
		}
		if _dfae.Name.Local == "\u0076\u0061\u006c" {
			_cfee := _dfae.Value
			_abcg.ValAttr = _cfee
			continue
		}
	}
	for {
		_deed, _aeed := d.Token()
		if _aeed != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _aeed)
		}
		if _cgee, _fdea := _deed.(_a.EndElement); _fdea && _cgee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaabd ST_DateTimeGrouping) Validate() error { return _gaabd.ValidateWithPath("") }

type ST_FieldSortType byte
type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_baegca *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _abcd, _fcgfe := range _baegca.QueryTableField {
		if _gffb := _fcgfe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _abcd)); _gffb != nil {
			return _gffb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_ggede *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _ggede.ExternalBook != nil {
		if _dgbc := _ggede.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _dgbc != nil {
			return _dgbc
		}
	}
	if _ggede.DdeLink != nil {
		if _gcgg := _ggede.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _gcgg != nil {
			return _gcgg
		}
	}
	if _ggede.OleLink != nil {
		if _bfgfb := _ggede.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _bfgfb != nil {
			return _bfgfb
		}
	}
	return nil
}
func NewCT_ExternalRow() *CT_ExternalRow { _cfcdf := &CT_ExternalRow{}; return _cfcdf }

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_cacb *CT_PivotDimension) ValidateWithPath(path string) error { return nil }
func NewCT_SmartTagPr() *CT_SmartTagPr                              { _bbcca := &CT_SmartTagPr{}; return _bbcca }

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_daba *CT_PivotArea) ValidateWithPath(path string) error {
	if _bccgd := _daba.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bccgd != nil {
		return _bccgd
	}
	if _ggbcb := _daba.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _ggbcb != nil {
		return _ggbcb
	}
	if _daba.References != nil {
		if _ggeff := _daba.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _ggeff != nil {
			return _ggeff
		}
	}
	if _daba.ExtLst != nil {
		if _ffccb := _daba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffccb != nil {
			return _ffccb
		}
	}
	return nil
}
func NewCT_TableFormula() *CT_TableFormula { _ddecgd := &CT_TableFormula{}; return _ddecgd }
func (_acbde *ST_SheetState) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bgebg, _debgd := d.Token()
	if _debgd != nil {
		return _debgd
	}
	if _feaec, _fddad := _bgebg.(_a.EndElement); _fddad && _feaec.Name == start.Name {
		*_acbde = 1
		return nil
	}
	if _ddcce, _cfdbc := _bgebg.(_a.CharData); !_cfdbc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgebg)
	} else {
		switch string(_ddcce) {
		case "":
			*_acbde = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_acbde = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_acbde = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_acbde = 3
		}
	}
	_bgebg, _debgd = d.Token()
	if _debgd != nil {
		return _debgd
	}
	if _fceegb, _gccadd := _bgebg.(_a.EndElement); _gccadd && _fceegb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgebg)
}

// Validate validates the CT_PivotFilter and its children
func (_cgedfd *CT_PivotFilter) Validate() error {
	return _cgedfd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}

// Validate validates the CT_DataField and its children
func (_cbdcd *CT_DataField) Validate() error {
	return _cbdcd.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_bagbg := &CT_RevisionInsertSheet{}
	return _bagbg
}

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

func (_gaagbd *CT_MdxSet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bfafa := range start.Attr {
		if _bfafa.Name.Local == "\u006e\u0073" {
			_cadcc, _caeec := _dd.ParseUint(_bfafa.Value, 10, 32)
			if _caeec != nil {
				return _caeec
			}
			_gaagbd.NsAttr = uint32(_cadcc)
			continue
		}
		if _bfafa.Name.Local == "\u0063" {
			_aacdd, _aagcd := _dd.ParseUint(_bfafa.Value, 10, 32)
			if _aagcd != nil {
				return _aagcd
			}
			_cagcaf := uint32(_aacdd)
			_gaagbd.CAttr = &_cagcaf
			continue
		}
		if _bfafa.Name.Local == "\u006f" {
			_gaagbd.OAttr.UnmarshalXMLAttr(_bfafa)
			continue
		}
	}
_dgcfg:
	for {
		_ccedd, _ddgbb := d.Token()
		if _ddgbb != nil {
			return _ddgbb
		}
		switch _dgdfaa := _ccedd.(type) {
		case _a.StartElement:
			switch _dgdfaa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gcge := NewCT_MetadataStringIndex()
				if _cgfba := d.DecodeElement(_gcge, &_dgdfaa); _cgfba != nil {
					return _cgfba
				}
				_gaagbd.N = append(_gaagbd.N, _gcge)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _dgdfaa.Name)
				if _cecfg := d.Skip(); _cecfg != nil {
					return _cecfg
				}
			}
		case _a.EndElement:
			break _dgcfg
		case _a.CharData:
		}
	}
	return nil
}
func (_ffeee *CT_PageMargins) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.LeftAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.RightAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u006f\u0070"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.TopAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.BottomAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.HeaderAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", _ffeee.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eaaff *CT_Control) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _eaaff.ShapeIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _eaaff.IdAttr)})
	if _eaaff.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_eaaff.NameAttr)})
	}
	e.EncodeToken(start)
	if _eaaff.ControlPr != nil {
		_dbdea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_eaaff.ControlPr, _dbdea)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cecddd *ST_ItemType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cecddd = 0
	case "\u0064\u0061\u0074\u0061":
		*_cecddd = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_cecddd = 2
	case "\u0073\u0075\u006d":
		*_cecddd = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_cecddd = 4
	case "\u0061\u0076\u0067":
		*_cecddd = 5
	case "\u006d\u0061\u0078":
		*_cecddd = 6
	case "\u006d\u0069\u006e":
		*_cecddd = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_cecddd = 8
	case "\u0063\u006f\u0075n\u0074":
		*_cecddd = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_cecddd = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_cecddd = 11
	case "\u0076\u0061\u0072":
		*_cecddd = 12
	case "\u0076\u0061\u0072\u0050":
		*_cecddd = 13
	case "\u0067\u0072\u0061n\u0064":
		*_cecddd = 14
	case "\u0062\u006c\u0061n\u006b":
		*_cecddd = 15
	}
	return nil
}
func NewCT_SheetDimension() *CT_SheetDimension { _cfdcdg := &CT_SheetDimension{}; return _cfdcdg }
func (_adgeg *CT_PivotCaches) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_gcbbf:
	for {
		_gccaaa, _dafaa := d.Token()
		if _dafaa != nil {
			return _dafaa
		}
		switch _dgbfdf := _gccaaa.(type) {
		case _a.StartElement:
			switch _dgbfdf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_gcaad := NewCT_PivotCache()
				if _edagb := d.DecodeElement(_gcaad, &_dgbfdf); _edagb != nil {
					return _edagb
				}
				_adgeg.PivotCache = append(_adgeg.PivotCache, _gcaad)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _dgbfdf.Name)
				if _cbbdd := d.Skip(); _cbbdd != nil {
					return _cbbdd
				}
			}
		case _a.EndElement:
			break _gcbbf
		case _a.CharData:
		}
	}
	return nil
}
func (_ffbfg ST_IconSetType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ffbfg.String(), start)
}
func NewCT_RevisionHeader() *CT_RevisionHeader {
	_cggfc := &CT_RevisionHeader{}
	_cggfc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_cggfc.SheetIdMap = NewCT_SheetIdMap()
	return _cggfc
}
func (_dcfcc *CT_TableStyleInfo) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _dcfcc.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_dcfcc.NameAttr)})
	}
	if _dcfcc.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcfcc.ShowFirstColumnAttr))})
	}
	if _dcfcc.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcfcc.ShowLastColumnAttr))})
	}
	if _dcfcc.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcfcc.ShowRowStripesAttr))})
	}
	if _dcfcc.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_dcfcc.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_fcffe ST_Objects) Validate() error { return _fcffe.ValidateWithPath("") }

// Validate validates the CT_CustomChartsheetViews and its children
func (_gcadc *CT_CustomChartsheetViews) Validate() error {
	return _gcadc.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}
func (_agbcf ST_GradientType) Validate() error { return _agbcf.ValidateWithPath("") }
func (_becabe *ST_FileType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_becabe = 0
	case "\u006d\u0061\u0063":
		*_becabe = 1
	case "\u0077\u0069\u006e":
		*_becabe = 2
	case "\u0064\u006f\u0073":
		*_becabe = 3
	case "\u006c\u0069\u006e":
		*_becabe = 4
	case "\u006f\u0074\u0068e\u0072":
		*_becabe = 5
	}
	return nil
}

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_cegcd *CT_GroupLevels) ValidateWithPath(path string) error {
	for _dcbgc, _fcegbac := range _cegcd.GroupLevel {
		if _daaf := _fcegbac.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _dcbgc)); _daaf != nil {
			return _daaf
		}
	}
	return nil
}
func (_bcfdd ST_SortType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_bcfdd.String(), start)
}

// Validate validates the AG_RevData and its children
func (_ga *AG_RevData) Validate() error {
	return _ga.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}
func (_dffcd *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_dffcd = 0
	case "\u0079\u0065\u0061\u0072":
		*_dffcd = 1
	case "\u006d\u006f\u006et\u0068":
		*_dffcd = 2
	case "\u0064\u0061\u0079":
		*_dffcd = 3
	case "\u0068\u006f\u0075\u0072":
		*_dffcd = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_dffcd = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_dffcd = 6
	}
	return nil
}
func (_feffb *CT_HeaderFooter) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ccecd := range start.Attr {
		if _ccecd.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_cgfdc, _ebdcb := _dd.ParseBool(_ccecd.Value)
			if _ebdcb != nil {
				return _ebdcb
			}
			_feffb.DifferentOddEvenAttr = &_cgfdc
			continue
		}
		if _ccecd.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_ffcbda, _bddag := _dd.ParseBool(_ccecd.Value)
			if _bddag != nil {
				return _bddag
			}
			_feffb.DifferentFirstAttr = &_ffcbda
			continue
		}
		if _ccecd.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_edgac, _ebfaf := _dd.ParseBool(_ccecd.Value)
			if _ebfaf != nil {
				return _ebfaf
			}
			_feffb.ScaleWithDocAttr = &_edgac
			continue
		}
		if _ccecd.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_afabd, _bfbeaa := _dd.ParseBool(_ccecd.Value)
			if _bfbeaa != nil {
				return _bfbeaa
			}
			_feffb.AlignWithMarginsAttr = &_afabd
			continue
		}
	}
_daaad:
	for {
		_gacada, _ffcef := d.Token()
		if _ffcef != nil {
			return _ffcef
		}
		switch _bedee := _gacada.(type) {
		case _a.StartElement:
			switch _bedee.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_feffb.OddHeader = new(string)
				if _gceab := d.DecodeElement(_feffb.OddHeader, &_bedee); _gceab != nil {
					return _gceab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_feffb.OddFooter = new(string)
				if _gebe := d.DecodeElement(_feffb.OddFooter, &_bedee); _gebe != nil {
					return _gebe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_feffb.EvenHeader = new(string)
				if _eefab := d.DecodeElement(_feffb.EvenHeader, &_bedee); _eefab != nil {
					return _eefab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_feffb.EvenFooter = new(string)
				if _aebfa := d.DecodeElement(_feffb.EvenFooter, &_bedee); _aebfa != nil {
					return _aebfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_feffb.FirstHeader = new(string)
				if _adfaa := d.DecodeElement(_feffb.FirstHeader, &_bedee); _adfaa != nil {
					return _adfaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_feffb.FirstFooter = new(string)
				if _ggbf := d.DecodeElement(_feffb.FirstFooter, &_bedee); _ggbf != nil {
					return _ggbf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _bedee.Name)
				if _dabeed := d.Skip(); _dabeed != nil {
					return _dabeed
				}
			}
		case _a.EndElement:
			break _daaad
		case _a.CharData:
		}
	}
	return nil
}
func (_bcbcf *CT_Item) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ceebe := range start.Attr {
		if _ceebe.Name.Local == "\u006e" {
			_dbegf := _ceebe.Value
			_bcbcf.NAttr = &_dbegf
			continue
		}
		if _ceebe.Name.Local == "\u0074" {
			_bcbcf.TAttr.UnmarshalXMLAttr(_ceebe)
			continue
		}
		if _ceebe.Name.Local == "\u0068" {
			_fdbfb, _geeg := _dd.ParseBool(_ceebe.Value)
			if _geeg != nil {
				return _geeg
			}
			_bcbcf.HAttr = &_fdbfb
			continue
		}
		if _ceebe.Name.Local == "\u0073" {
			_abegc, _gabcba := _dd.ParseBool(_ceebe.Value)
			if _gabcba != nil {
				return _gabcba
			}
			_bcbcf.SAttr = &_abegc
			continue
		}
		if _ceebe.Name.Local == "\u0073\u0064" {
			_cbcffg, _addcc := _dd.ParseBool(_ceebe.Value)
			if _addcc != nil {
				return _addcc
			}
			_bcbcf.SdAttr = &_cbcffg
			continue
		}
		if _ceebe.Name.Local == "\u0066" {
			_gaeec, _cbabbbc := _dd.ParseBool(_ceebe.Value)
			if _cbabbbc != nil {
				return _cbabbbc
			}
			_bcbcf.FAttr = &_gaeec
			continue
		}
		if _ceebe.Name.Local == "\u006d" {
			_cebcda, _ddgbg := _dd.ParseBool(_ceebe.Value)
			if _ddgbg != nil {
				return _ddgbg
			}
			_bcbcf.MAttr = &_cebcda
			continue
		}
		if _ceebe.Name.Local == "\u0063" {
			_gacfdb, _dfcgee := _dd.ParseBool(_ceebe.Value)
			if _dfcgee != nil {
				return _dfcgee
			}
			_bcbcf.CAttr = &_gacfdb
			continue
		}
		if _ceebe.Name.Local == "\u0078" {
			_dcadc, _bbefaa := _dd.ParseUint(_ceebe.Value, 10, 32)
			if _bbefaa != nil {
				return _bbefaa
			}
			_bcbeee := uint32(_dcadc)
			_bcbcf.XAttr = &_bcbeee
			continue
		}
		if _ceebe.Name.Local == "\u0064" {
			_bdgdff, _gddae := _dd.ParseBool(_ceebe.Value)
			if _gddae != nil {
				return _gddae
			}
			_bcbcf.DAttr = &_bdgdff
			continue
		}
		if _ceebe.Name.Local == "\u0065" {
			_aagc, _ddgeg := _dd.ParseBool(_ceebe.Value)
			if _ddgeg != nil {
				return _ddgeg
			}
			_bcbcf.EAttr = &_aagc
			continue
		}
	}
	for {
		_acced, _dacfgc := d.Token()
		if _dacfgc != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _dacfgc)
		}
		if _deacgb, _bfgga := _acced.(_a.EndElement); _bfgga && _deacgb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_DrawingHF() *CT_DrawingHF { _efdfee := &CT_DrawingHF{}; return _efdfee }

// Validate validates the CT_RevisionRowColumnChoice and its children
func (_feede *CT_RevisionRowColumnChoice) Validate() error {
	return _feede.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0043\u0068o\u0069\u0063\u0065")
}
func (_gga *CT_Cell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gga.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_gga.RAttr)})
	}
	if _gga.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0076", *_gga.SAttr)})
	}
	if _gga.TAttr != ST_CellTypeUnset {
		_cgf, _ggbe := _gga.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _ggbe != nil {
			return _ggbe
		}
		start.Attr = append(start.Attr, _cgf)
	}
	if _gga.CmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gga.CmAttr)})
	}
	if _gga.VmAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_gga.VmAttr)})
	}
	if _gga.PhAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gga.PhAttr))})
	}
	e.EncodeToken(start)
	if _gga.F != nil {
		_bbee := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0066"}}
		e.EncodeElement(_gga.F, _bbee)
	}
	if _gga.V != nil {
		_gbdf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0076"}}
		_ff.AddPreserveSpaceAttr(&_gbdf, *_gga.V)
		e.EncodeElement(_gga.V, _gbdf)
	}
	if _gga.Is != nil {
		_ege := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0069\u0073"}}
		e.EncodeElement(_gga.Is, _ege)
	}
	if _gga.ExtLst != nil {
		_cgcc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gga.ExtLst, _cgcc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gdbac *CT_Connections) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_abd:
	for {
		_fgde, _bgee := d.Token()
		if _bgee != nil {
			return _bgee
		}
		switch _eedd := _fgde.(type) {
		case _a.StartElement:
			switch _eedd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_geddd := NewCT_Connection()
				if _dfff := d.DecodeElement(_geddd, &_eedd); _dfff != nil {
					return _dfff
				}
				_gdbac.Connection = append(_gdbac.Connection, _geddd)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _eedd.Name)
				if _fgdg := d.Skip(); _fgdg != nil {
					return _fgdg
				}
			}
		case _a.EndElement:
			break _abd
		case _a.CharData:
		}
	}
	return nil
}
func (_ccbgc *CT_Dimensions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _ecgf := range start.Attr {
		if _ecgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bacaa, _egga := _dd.ParseUint(_ecgf.Value, 10, 32)
			if _egga != nil {
				return _egga
			}
			_dagf := uint32(_bacaa)
			_ccbgc.CountAttr = &_dagf
			continue
		}
	}
_facea:
	for {
		_gfff, _cadd := d.Token()
		if _cadd != nil {
			return _cadd
		}
		switch _ecfdgg := _gfff.(type) {
		case _a.StartElement:
			switch _ecfdgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_cgcfb := NewCT_PivotDimension()
				if _cgcbc := d.DecodeElement(_cgcfb, &_ecfdgg); _cgcbc != nil {
					return _cgcbc
				}
				_ccbgc.Dimension = append(_ccbgc.Dimension, _cgcfb)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _ecfdgg.Name)
				if _acec := d.Skip(); _acec != nil {
					return _acec
				}
			}
		case _a.EndElement:
			break _facea
		case _a.CharData:
		}
	}
	return nil
}

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

// Validate validates the CT_PhoneticRun and its children
func (_geaebf *CT_PhoneticRun) Validate() error {
	return _geaebf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}
func (_ggfeg *Workbook) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u0069:\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _ggfeg.CT_Workbook.MarshalXML(e, start)
}

// Validate validates the CT_Fills and its children
func (_fggae *CT_Fills) Validate() error {
	return _fggae.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}
func (_dfbcf ST_RefMode) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_dfbcf.String(), start)
}

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_dg *AG_AutoFormat) ValidateWithPath(path string) error { return nil }
func NewCT_ChartsheetPr() *CT_ChartsheetPr                    { _gafcf := &CT_ChartsheetPr{}; return _gafcf }
func (_cgdda ST_BorderStyle) Validate() error                 { return _cgdda.ValidateWithPath("") }
func NewCT_BookViews() *CT_BookViews {
	_ace := &CT_BookViews{}
	return _ace
}

type ST_FilterOperator byte

// Validate validates the CT_Member and its children
func (_cafda *CT_Member) Validate() error {
	return _cafda.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}

type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}

func (_addge ST_MdxSetOrder) Validate() error { return _addge.ValidateWithPath("") }

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

type ST_SheetState byte

func (_cdcde *CT_SheetData) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_accfbb:
	for {
		_feagge, _bdbba := d.Token()
		if _bdbba != nil {
			return _bdbba
		}
		switch _edfgg := _feagge.(type) {
		case _a.StartElement:
			switch _edfgg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_dbeda := NewCT_Row()
				if _ffbfb := d.DecodeElement(_dbeda, &_edfgg); _ffbfb != nil {
					return _ffbfb
				}
				_cdcde.Row = append(_cdcde.Row, _dbeda)
			default:
				_ae.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _edfgg.Name)
				if _accfga := d.Skip(); _accfga != nil {
					return _accfga
				}
			}
		case _a.EndElement:
			break _accfbb
		case _a.CharData:
		}
	}
	return nil
}
func (_fbeee *CT_MdxChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _fbeee.T != nil {
		_aeeea := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0074"}}
		e.EncodeElement(_fbeee.T, _aeeea)
	} else if _fbeee.Ms != nil {
		_afbfec := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0073"}}
		e.EncodeElement(_fbeee.Ms, _afbfec)
	} else if _fbeee.P != nil {
		_bbdbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0070"}}
		e.EncodeElement(_fbeee.P, _bbdbe)
	} else if _fbeee.K != nil {
		_ddggdd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006b"}}
		e.EncodeElement(_fbeee.K, _ddggdd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_edbacb *ST_ShowDataAs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cbdef, _cccee := d.Token()
	if _cccee != nil {
		return _cccee
	}
	if _afefbf, _bceacb := _cbdef.(_a.EndElement); _bceacb && _afefbf.Name == start.Name {
		*_edbacb = 1
		return nil
	}
	if _fbddfe, _cbeefe := _cbdef.(_a.CharData); !_cbeefe {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbdef)
	} else {
		switch string(_fbddfe) {
		case "":
			*_edbacb = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_edbacb = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_edbacb = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_edbacb = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_edbacb = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_edbacb = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_edbacb = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_edbacb = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_edbacb = 8
		case "\u0069\u006e\u0064e\u0078":
			*_edbacb = 9
		}
	}
	_cbdef, _cccee = d.Token()
	if _cccee != nil {
		return _cccee
	}
	if _fgfeg, _dccda := _cbdef.(_a.EndElement); _dccda && _fgfeg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbdef)
}
func (_aafa *CT_ControlPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aafa.LockedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.LockedAttr))})
	}
	if _aafa.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.DefaultSizeAttr))})
	}
	if _aafa.PrintAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.PrintAttr))})
	}
	if _aafa.DisabledAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.DisabledAttr))})
	}
	if _aafa.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.RecalcAlwaysAttr))})
	}
	if _aafa.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.UiObjectAttr))})
	}
	if _aafa.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.AutoFillAttr))})
	}
	if _aafa.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.AutoLineAttr))})
	}
	if _aafa.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_aafa.AutoPictAttr))})
	}
	if _aafa.MacroAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.MacroAttr)})
	}
	if _aafa.AltTextAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.AltTextAttr)})
	}
	if _aafa.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.LinkedCellAttr)})
	}
	if _aafa.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.ListFillRangeAttr)})
	}
	if _aafa.CfAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.CfAttr)})
	}
	if _aafa.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_aafa.IdAttr)})
	}
	e.EncodeToken(start)
	_caag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_aafa.Anchor, _caag)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_cdegb *Headers) ValidateWithPath(path string) error {
	if _edcaaf := _cdegb.CT_RevisionHeaders.ValidateWithPath(path); _edcaaf != nil {
		return _edcaaf
	}
	return nil
}

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_aacce *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _gdgcg := _aacce.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _gdgcg != nil {
		return _gdgcg
	}
	if _aacce.ExtLst != nil {
		if _dcdef := _aacce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcdef != nil {
			return _dcdef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_beef *CT_CommentList) ValidateWithPath(path string) error {
	for _fgbc, _fbbe := range _beef.Comment {
		if _aeabb := _fbbe.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _fgbc)); _aeabb != nil {
			return _aeabb
		}
	}
	return nil
}

// Validate validates the CT_MemberProperties and its children
func (_dagdfd *CT_MemberProperties) Validate() error {
	return _dagdfd.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_cdbdf *CT_IconFilter) ValidateWithPath(path string) error {
	if _cdbdf.IconSetAttr == ST_IconSetTypeUnset {
		return _fd.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _debed := _cdbdf.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _debed != nil {
		return _debed
	}
	return nil
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_bcefb *CT_TableParts) ValidateWithPath(path string) error {
	for _edfdf, _dcedbb := range _bcefb.TablePart {
		if _cfbaf := _dcedbb.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _edfdf)); _cfbaf != nil {
			return _cfbaf
		}
	}
	return nil
}
func (_gbdad *CT_SingleXmlCells) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_dagfbf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c"}}
	for _, _gbdbfe := range _gbdad.SingleXmlCell {
		e.EncodeElement(_gbdbfe, _dagfbf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DateGroupItem and its children
func (_bcdd *CT_DateGroupItem) Validate() error {
	return _bcdd.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}
func (_acbgce *CT_WebPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _acbgce.XmlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.XmlAttr))})
	}
	if _acbgce.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.SourceDataAttr))})
	}
	if _acbgce.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.ParsePreAttr))})
	}
	if _acbgce.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.ConsecutiveAttr))})
	}
	if _acbgce.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.FirstRowAttr))})
	}
	if _acbgce.Xl97Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.Xl97Attr))})
	}
	if _acbgce.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.TextDatesAttr))})
	}
	if _acbgce.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.Xl2000Attr))})
	}
	if _acbgce.UrlAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0072\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_acbgce.UrlAttr)})
	}
	if _acbgce.PostAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_acbgce.PostAttr)})
	}
	if _acbgce.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_acbgce.HtmlTablesAttr))})
	}
	if _acbgce.HtmlFormatAttr != ST_HtmlFmtUnset {
		_cfbafa, _ecgcf := _acbgce.HtmlFormatAttr.MarshalXMLAttr(_a.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _ecgcf != nil {
			return _ecgcf
		}
		start.Attr = append(start.Attr, _cfbafa)
	}
	if _acbgce.EditPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_acbgce.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _acbgce.Tables != nil {
		_dfedg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0061\u0062\u006c\u0065\u0073"}}
		e.EncodeElement(_acbgce.Tables, _dfedg)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cbgaf ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _cbgaf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbgaf))
	}
	return nil
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

func (_ebdgg *ST_WebSourceType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ebdgg = 0
	case "\u0073\u0068\u0065e\u0074":
		*_ebdgg = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_ebdgg = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_ebdgg = 3
	case "\u0072\u0061\u006eg\u0065":
		*_ebdgg = 4
	case "\u0063\u0068\u0061r\u0074":
		*_ebdgg = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_ebdgg = 6
	case "\u0071\u0075\u0065r\u0079":
		*_ebdgg = 7
	case "\u006c\u0061\u0062e\u006c":
		*_ebdgg = 8
	}
	return nil
}
func (_ffbe *CT_Connection) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _ffbe.IdAttr)})
	if _ffbe.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.SourceFileAttr)})
	}
	if _ffbe.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.OdcFileAttr)})
	}
	if _ffbe.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.KeepAliveAttr))})
	}
	if _ffbe.IntervalAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.IntervalAttr)})
	}
	if _ffbe.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.NameAttr)})
	}
	if _ffbe.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.DescriptionAttr)})
	}
	if _ffbe.TypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.TypeAttr)})
	}
	if _ffbe.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _ffbe.RefreshedVersionAttr)})
	if _ffbe.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.MinRefreshableVersionAttr)})
	}
	if _ffbe.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.SavePasswordAttr))})
	}
	if _ffbe.NewAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0065\u0077"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.NewAttr))})
	}
	if _ffbe.DeletedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.DeletedAttr))})
	}
	if _ffbe.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.OnlyUseConnectionFileAttr))})
	}
	if _ffbe.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.BackgroundAttr))})
	}
	if _ffbe.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.RefreshOnLoadAttr))})
	}
	if _ffbe.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffbe.SaveDataAttr))})
	}
	if _ffbe.CredentialsAttr != ST_CredMethodUnset {
		_gadb, _ddcc := _ffbe.CredentialsAttr.MarshalXMLAttr(_a.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _ddcc != nil {
			return _ddcc
		}
		start.Attr = append(start.Attr, _gadb)
	}
	if _ffbe.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ffbe.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _ffbe.DbPr != nil {
		_gded := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_ffbe.DbPr, _gded)
	}
	if _ffbe.OlapPr != nil {
		_fgdbb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006f\u006c\u0061\u0070\u0050\u0072"}}
		e.EncodeElement(_ffbe.OlapPr, _fgdbb)
	}
	if _ffbe.WebPr != nil {
		_ecec := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0077\u0065\u0062\u0050r"}}
		e.EncodeElement(_ffbe.WebPr, _ecec)
	}
	if _ffbe.TextPr != nil {
		_dced := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0065\u0078\u0074\u0050\u0072"}}
		e.EncodeElement(_ffbe.TextPr, _dced)
	}
	if _ffbe.Parameters != nil {
		_bbbd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0061\u0072\u0061\u006de\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_ffbe.Parameters, _bbbd)
	}
	if _ffbe.ExtLst != nil {
		_abaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffbe.ExtLst, _abaa)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ecgbe *CT_Set) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecgbe.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ecgbe.CountAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _fd.Sprintf("\u0025\u0076", _ecgbe.MaxRankAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _ecgbe.SetDefinitionAttr)})
	if _ecgbe.SortTypeAttr != ST_SortTypeUnset {
		_fbdbc, _ceeeb := _ecgbe.SortTypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _ceeeb != nil {
			return _ceeeb
		}
		start.Attr = append(start.Attr, _fbdbc)
	}
	if _ecgbe.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ecgbe.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _ecgbe.Tpls != nil {
		_cgabd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0070\u006c\u0073"}}
		for _, _dffed := range _ecgbe.Tpls {
			e.EncodeElement(_dffed, _cgabd)
		}
	}
	if _ecgbe.SortByTuple != nil {
		_agbfc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0073\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_ecgbe.SortByTuple, _agbfc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ffgb *CT_ChartsheetProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _bedd := range start.Attr {
		if _bedd.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_bgg := _bedd.Value
			_ffgb.PasswordAttr = &_bgg
			continue
		}
		if _bedd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ccef := _bedd.Value
			_ffgb.AlgorithmNameAttr = &_ccef
			continue
		}
		if _bedd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_cbdf := _bedd.Value
			_ffgb.HashValueAttr = &_cbdf
			continue
		}
		if _bedd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_bfgd := _bedd.Value
			_ffgb.SaltValueAttr = &_bfgd
			continue
		}
		if _bedd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_edfd, _bbab := _dd.ParseUint(_bedd.Value, 10, 32)
			if _bbab != nil {
				return _bbab
			}
			_egba := uint32(_edfd)
			_ffgb.SpinCountAttr = &_egba
			continue
		}
		if _bedd.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_dgedf, _fcgf := _dd.ParseBool(_bedd.Value)
			if _fcgf != nil {
				return _fcgf
			}
			_ffgb.ContentAttr = &_dgedf
			continue
		}
		if _bedd.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_acff, _bbabd := _dd.ParseBool(_bedd.Value)
			if _bbabd != nil {
				return _bbabd
			}
			_ffgb.ObjectsAttr = &_acff
			continue
		}
	}
	for {
		_eece, _bfb := d.Token()
		if _bfb != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _bfb)
		}
		if _ebbc, _dacb := _eece.(_a.EndElement); _dacb && _ebbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecggc *ST_Pane) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_edfc, _gagfg := d.Token()
	if _gagfg != nil {
		return _gagfg
	}
	if _bcgag, _fbebce := _edfc.(_a.EndElement); _fbebce && _bcgag.Name == start.Name {
		*_ecggc = 1
		return nil
	}
	if _aeaeeb, _ebeebc := _edfc.(_a.CharData); !_ebeebc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edfc)
	} else {
		switch string(_aeaeeb) {
		case "":
			*_ecggc = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_ecggc = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ecggc = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_ecggc = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_ecggc = 4
		}
	}
	_edfc, _gagfg = d.Token()
	if _gagfg != nil {
		return _gagfg
	}
	if _gagfcb, _bcggd := _edfc.(_a.EndElement); _bcggd && _gagfcb.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edfc)
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_bcdde *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }

type CT_FontSize struct {

	// Value
	ValAttr float64
}

func (_daagdc *Table) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d\u0061i"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u0069\u003a\u0074\u0061\u0062\u006ce"
	return _daagdc.CT_Table.MarshalXML(e, start)
}
func (_adgffa *CT_Formats) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _afcafd := range start.Attr {
		if _afcafd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfbca, _gecfd := _dd.ParseUint(_afcafd.Value, 10, 32)
			if _gecfd != nil {
				return _gecfd
			}
			_eecbg := uint32(_gfbca)
			_adgffa.CountAttr = &_eecbg
			continue
		}
	}
_efgf:
	for {
		_gbfgff, _cecba := d.Token()
		if _cecba != nil {
			return _cecba
		}
		switch _fcacc := _gbfgff.(type) {
		case _a.StartElement:
			switch _fcacc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_dfgcb := NewCT_Format()
				if _acgb := d.DecodeElement(_dfgcb, &_fcacc); _acgb != nil {
					return _acgb
				}
				_adgffa.Format = append(_adgffa.Format, _dfgcb)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _fcacc.Name)
				if _decbg := d.Skip(); _decbg != nil {
					return _decbg
				}
			}
		case _a.EndElement:
			break _efgf
		case _a.CharData:
		}
	}
	return nil
}

type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

func (_edfgeg *CT_MdxTuple) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _edfgeg.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.CAttr)})
	}
	if _edfgeg.CtAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.CtAttr)})
	}
	if _edfgeg.SiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.SiAttr)})
	}
	if _edfgeg.FiAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.FiAttr)})
	}
	if _edfgeg.BcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.BcAttr)})
	}
	if _edfgeg.FcAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0063"}, Value: _fd.Sprintf("\u0025\u0076", *_edfgeg.FcAttr)})
	}
	if _edfgeg.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edfgeg.IAttr))})
	}
	if _edfgeg.UAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edfgeg.UAttr))})
	}
	if _edfgeg.StAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edfgeg.StAttr))})
	}
	if _edfgeg.BAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_edfgeg.BAttr))})
	}
	e.EncodeToken(start)
	if _edfgeg.N != nil {
		_bcbbc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		for _, _cffdfe := range _edfgeg.N {
			e.EncodeElement(_cffdfe, _bcbbc)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_ObjectPr() *CT_ObjectPr {
	_fbaf := &CT_ObjectPr{}
	_fbaf.Anchor = NewCT_ObjectAnchor()
	return _fbaf
}
func (_fefdc *ST_GradientType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_fefdc = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_fefdc = 1
	case "\u0070\u0061\u0074\u0068":
		*_fefdc = 2
	}
	return nil
}

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_gceefa *CT_QueryTable) ValidateWithPath(path string) error {
	if _dacg := _gceefa.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _dacg != nil {
		return _dacg
	}
	if _gceefa.QueryTableRefresh != nil {
		if _gcfdf := _gceefa.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _gcfdf != nil {
			return _gcfdf
		}
	}
	if _gceefa.ExtLst != nil {
		if _acagb := _gceefa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acagb != nil {
			return _acagb
		}
	}
	return nil
}
func NewCT_PivotFilter() *CT_PivotFilter {
	_bfedd := &CT_PivotFilter{}
	_bfedd.TypeAttr = ST_PivotFilterType(1)
	_bfedd.AutoFilter = NewCT_AutoFilter()
	return _bfedd
}
func NewQueryTable() *QueryTable {
	_fbdgf := &QueryTable{}
	_fbdgf.CT_QueryTable = *NewCT_QueryTable()
	return _fbdgf
}

// Validate validates the CT_MRUColors and its children
func (_dfbcb *CT_MRUColors) Validate() error {
	return _dfbcb.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}
func (_bggad *Revisions) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bggad.CT_Revisions = *NewCT_Revisions()
_afcad:
	for {
		_gfdfe, _gffbf := d.Token()
		if _gffbf != nil {
			return _gffbf
		}
		switch _gacfg := _gfdfe.(type) {
		case _a.StartElement:
			switch _gacfg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_fddefg := NewCT_RevisionsChoice()
				if _ababg := d.DecodeElement(&_fddefg.Rrc, &_gacfg); _ababg != nil {
					return _ababg
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _fddefg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_cgabge := NewCT_RevisionsChoice()
				if _gefcdg := d.DecodeElement(&_cgabge.Rm, &_gacfg); _gefcdg != nil {
					return _gefcdg
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _cgabge)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_ecgdf := NewCT_RevisionsChoice()
				if _afadfc := d.DecodeElement(&_ecgdf.Rcv, &_gacfg); _afadfc != nil {
					return _afadfc
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _ecgdf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_cfgcf := NewCT_RevisionsChoice()
				if _ffggg := d.DecodeElement(&_cfgcf.Rsnm, &_gacfg); _ffggg != nil {
					return _ffggg
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _cfgcf)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_agcebb := NewCT_RevisionsChoice()
				if _afbbd := d.DecodeElement(&_agcebb.Ris, &_gacfg); _afbbd != nil {
					return _afbbd
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _agcebb)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_dbbaa := NewCT_RevisionsChoice()
				if _cefed := d.DecodeElement(&_dbbaa.Rcc, &_gacfg); _cefed != nil {
					return _cefed
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _dbbaa)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_ffbge := NewCT_RevisionsChoice()
				if _ceadeg := d.DecodeElement(&_ffbge.Rfmt, &_gacfg); _ceadeg != nil {
					return _ceadeg
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _ffbge)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_cafbc := NewCT_RevisionsChoice()
				if _gcgfab := d.DecodeElement(&_cafbc.Raf, &_gacfg); _gcgfab != nil {
					return _gcgfab
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _cafbc)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_cadced := NewCT_RevisionsChoice()
				if _ecgdgf := d.DecodeElement(&_cadced.Rdn, &_gacfg); _ecgdgf != nil {
					return _ecgdgf
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _cadced)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_aagef := NewCT_RevisionsChoice()
				if _ccbaa := d.DecodeElement(&_aagef.Rcmt, &_gacfg); _ccbaa != nil {
					return _ccbaa
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _aagef)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_fffbg := NewCT_RevisionsChoice()
				if _bebdg := d.DecodeElement(&_fffbg.Rqt, &_gacfg); _bebdg != nil {
					return _bebdg
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _fffbg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_egfgeb := NewCT_RevisionsChoice()
				if _fcfdc := d.DecodeElement(&_egfgeb.Rcft, &_gacfg); _fcfdc != nil {
					return _fcfdc
				}
				_bggad.RevisionsChoice = append(_bggad.RevisionsChoice, _egfgeb)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _gacfg.Name)
				if _cfecc := d.Skip(); _cfecc != nil {
					return _cfecc
				}
			}
		case _a.EndElement:
			break _afcad
		case _a.CharData:
		}
	}
	return nil
}
func (_aaage *CT_Dialogsheet) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_eagb:
	for {
		_gebd, _fccgf := d.Token()
		if _fccgf != nil {
			return _fccgf
		}
		switch _efcc := _gebd.(type) {
		case _a.StartElement:
			switch _efcc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_aaage.SheetPr = NewCT_SheetPr()
				if _fbff := d.DecodeElement(_aaage.SheetPr, &_efcc); _fbff != nil {
					return _fbff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_aaage.SheetViews = NewCT_SheetViews()
				if _dgga := d.DecodeElement(_aaage.SheetViews, &_efcc); _dgga != nil {
					return _dgga
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_aaage.SheetFormatPr = NewCT_SheetFormatPr()
				if _abbbf := d.DecodeElement(_aaage.SheetFormatPr, &_efcc); _abbbf != nil {
					return _abbbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aaage.SheetProtection = NewCT_SheetProtection()
				if _aebde := d.DecodeElement(_aaage.SheetProtection, &_efcc); _aebde != nil {
					return _aebde
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_aaage.CustomSheetViews = NewCT_CustomSheetViews()
				if _cfag := d.DecodeElement(_aaage.CustomSheetViews, &_efcc); _cfag != nil {
					return _cfag
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_aaage.PrintOptions = NewCT_PrintOptions()
				if _bfbc := d.DecodeElement(_aaage.PrintOptions, &_efcc); _bfbc != nil {
					return _bfbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_aaage.PageMargins = NewCT_PageMargins()
				if _fdcd := d.DecodeElement(_aaage.PageMargins, &_efcc); _fdcd != nil {
					return _fdcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_aaage.PageSetup = NewCT_PageSetup()
				if _dafff := d.DecodeElement(_aaage.PageSetup, &_efcc); _dafff != nil {
					return _dafff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_aaage.HeaderFooter = NewCT_HeaderFooter()
				if _aabcf := d.DecodeElement(_aaage.HeaderFooter, &_efcc); _aabcf != nil {
					return _aabcf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_aaage.Drawing = NewCT_Drawing()
				if _dacbf := d.DecodeElement(_aaage.Drawing, &_efcc); _dacbf != nil {
					return _dacbf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_aaage.LegacyDrawing = NewCT_LegacyDrawing()
				if _fafdc := d.DecodeElement(_aaage.LegacyDrawing, &_efcc); _fafdc != nil {
					return _fafdc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_aaage.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _dbbee := d.DecodeElement(_aaage.LegacyDrawingHF, &_efcc); _dbbee != nil {
					return _dbbee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_aaage.DrawingHF = NewCT_DrawingHF()
				if _cdaf := d.DecodeElement(_aaage.DrawingHF, &_efcc); _cdaf != nil {
					return _cdaf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_aaage.OleObjects = NewCT_OleObjects()
				if _eaggg := d.DecodeElement(_aaage.OleObjects, &_efcc); _eaggg != nil {
					return _eaggg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_aaage.Controls = NewCT_Controls()
				if _fgcd := d.DecodeElement(_aaage.Controls, &_efcc); _fgcd != nil {
					return _fgcd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaage.ExtLst = NewCT_ExtensionList()
				if _aebf := d.DecodeElement(_aaage.ExtLst, &_efcc); _aebf != nil {
					return _aebf
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _efcc.Name)
				if _bcbda := d.Skip(); _bcbda != nil {
					return _bcbda
				}
			}
		case _a.EndElement:
			break _eagb
		case _a.CharData:
		}
	}
	return nil
}
func (_gfbfgg *CT_WebPublishItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_gfbfgg.SourceTypeAttr = ST_WebSourceType(1)
	for _, _gcgdd := range start.Attr {
		if _gcgdd.Name.Local == "\u0069\u0064" {
			_ccbadf, _abafbbe := _dd.ParseUint(_gcgdd.Value, 10, 32)
			if _abafbbe != nil {
				return _abafbbe
			}
			_gfbfgg.IdAttr = uint32(_ccbadf)
			continue
		}
		if _gcgdd.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_faeccd := _gcgdd.Value
			_gfbfgg.DivIdAttr = _faeccd
			continue
		}
		if _gcgdd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_gfbfgg.SourceTypeAttr.UnmarshalXMLAttr(_gcgdd)
			continue
		}
		if _gcgdd.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_fabgf := _gcgdd.Value
			_gfbfgg.SourceRefAttr = &_fabgf
			continue
		}
		if _gcgdd.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_cdbdb := _gcgdd.Value
			_gfbfgg.SourceObjectAttr = &_cdbdb
			continue
		}
		if _gcgdd.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_fafdcg := _gcgdd.Value
			_gfbfgg.DestinationFileAttr = _fafdcg
			continue
		}
		if _gcgdd.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_dcbee := _gcgdd.Value
			_gfbfgg.TitleAttr = &_dcbee
			continue
		}
		if _gcgdd.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_dgcadc, _aeagb := _dd.ParseBool(_gcgdd.Value)
			if _aeagb != nil {
				return _aeagb
			}
			_gfbfgg.AutoRepublishAttr = &_dgcadc
			continue
		}
	}
	for {
		_eeabag, _cafbf := d.Token()
		if _cafbf != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _cafbf)
		}
		if _dfgce, _fcggaa := _eeabag.(_a.EndElement); _fcggaa && _dfgce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfefg ST_CellType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gfefg.String(), start)
}
func (_gdgabe ST_RevisionAction) ValidateWithPath(path string) error {
	switch _gdgabe {
	case 0, 1, 2:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdgabe))
	}
	return nil
}

type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

func (_gbaagb *CT_PivotDimension) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gbaagb.MeasureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gbaagb.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gbaagb.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gbaagb.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _gbaagb.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_facge *Connections) ValidateWithPath(path string) error {
	if _bffgfd := _facge.CT_Connections.ValidateWithPath(path); _bffgfd != nil {
		return _bffgfd
	}
	return nil
}
func NewCT_CacheField() *CT_CacheField { _cde := &CT_CacheField{}; return _cde }

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}

func (_ecdfc *CT_I) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ecdfc.TAttr != ST_ItemTypeUnset {
		_bgdbb, _begbd := _ecdfc.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _begbd != nil {
			return _begbd
		}
		start.Attr = append(start.Attr, _bgdbb)
	}
	if _ecdfc.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_ecdfc.RAttr)})
	}
	if _ecdfc.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_ecdfc.IAttr)})
	}
	e.EncodeToken(start)
	if _ecdfc.X != nil {
		_cddgd := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0078"}}
		for _, _dbeg := range _ecdfc.X {
			e.EncodeElement(_dbeg, _cddgd)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}

func (_eegabc ST_FilterOperator) Validate() error { return _eegabc.ValidateWithPath("") }
func NewCT_MeasureGroups() *CT_MeasureGroups      { _bcff := &CT_MeasureGroups{}; return _bcff }

type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

func (_dedbf *CT_RevisionHeader) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dedbf.GuidAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _b.FormatDateTime(_dedbf.DateTimeAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dedbf.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _dedbf.UserNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _dedbf.IdAttr)})
	if _dedbf.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dedbf.MinRIdAttr)})
	}
	if _dedbf.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_dedbf.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_ddcgg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0073\u0068\u0065\u0065\u0074I\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_dedbf.SheetIdMap, _ddcgg)
	if _dedbf.ReviewedList != nil {
		_fcbfe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0072\u0065v\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_dedbf.ReviewedList, _fcbfe)
	}
	if _dedbf.ExtLst != nil {
		_ebgce := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dedbf.ExtLst, _ebgce)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Consolidation and its children
func (_adbgd *CT_Consolidation) Validate() error {
	return _adbgd.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}
func (_cbdge *CT_PhoneticRun) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _adagfb := range start.Attr {
		if _adagfb.Name.Local == "\u0073\u0062" {
			_ccbded, _agae := _dd.ParseUint(_adagfb.Value, 10, 32)
			if _agae != nil {
				return _agae
			}
			_cbdge.SbAttr = uint32(_ccbded)
			continue
		}
		if _adagfb.Name.Local == "\u0065\u0062" {
			_bccef, _bbefg := _dd.ParseUint(_adagfb.Value, 10, 32)
			if _bbefg != nil {
				return _bbefg
			}
			_cbdge.EbAttr = uint32(_bccef)
			continue
		}
	}
_dggfd:
	for {
		_gaddg, _egae := d.Token()
		if _egae != nil {
			return _egae
		}
		switch _ddafa := _gaddg.(type) {
		case _a.StartElement:
			switch _ddafa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _fggga := d.DecodeElement(&_cbdge.T, &_ddafa); _fggga != nil {
					return _fggga
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _ddafa.Name)
				if _bcffb := d.Skip(); _bcffb != nil {
					return _bcffb
				}
			}
		case _a.EndElement:
			break _dggfd
		case _a.CharData:
		}
	}
	return nil
}
func (_daac *CT_DataField) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _daac.NameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_daac.NameAttr)})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _daac.FldAttr)})
	if _daac.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_dacc, _cbdd := _daac.SubtotalAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _cbdd != nil {
			return _cbdd
		}
		start.Attr = append(start.Attr, _dacc)
	}
	if _daac.ShowDataAsAttr != ST_ShowDataAsUnset {
		_dffgf, _faddf := _daac.ShowDataAsAttr.MarshalXMLAttr(_a.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _faddf != nil {
			return _faddf
		}
		start.Attr = append(start.Attr, _dffgf)
	}
	if _daac.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _fd.Sprintf("\u0025\u0076", *_daac.BaseFieldAttr)})
	}
	if _daac.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _fd.Sprintf("\u0025\u0076", *_daac.BaseItemAttr)})
	}
	if _daac.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_daac.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _daac.ExtLst != nil {
		_ceaf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_daac.ExtLst, _ceaf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_adefcg *ST_TableStyleType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_abbed, _ggggc := d.Token()
	if _ggggc != nil {
		return _ggggc
	}
	if _ceebg, _eabfbd := _abbed.(_a.EndElement); _eabfbd && _ceebg.Name == start.Name {
		*_adefcg = 1
		return nil
	}
	if _babfad, _gfeacg := _abbed.(_a.CharData); !_gfeacg {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abbed)
	} else {
		switch string(_babfad) {
		case "":
			*_adefcg = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_adefcg = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_adefcg = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_adefcg = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_adefcg = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_adefcg = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_adefcg = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_adefcg = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_adefcg = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_adefcg = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_adefcg = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_adefcg = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_adefcg = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_adefcg = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_adefcg = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_adefcg = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_adefcg = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_adefcg = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_adefcg = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_adefcg = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_adefcg = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_adefcg = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_adefcg = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_adefcg = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_adefcg = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_adefcg = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_adefcg = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_adefcg = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_adefcg = 28
		}
	}
	_abbed, _ggggc = d.Token()
	if _ggggc != nil {
		return _ggggc
	}
	if _gbfef, _gegda := _abbed.(_a.EndElement); _gegda && _gbfef.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abbed)
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

func (_dbcac ST_Orientation) ValidateWithPath(path string) error {
	switch _dbcac {
	case 0, 1, 2, 3:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbcac))
	}
	return nil
}
func (_cgfag *CT_DataBinding) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _aggdc := range start.Attr {
		if _aggdc.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_dgfcf := _aggdc.Value
			_cgfag.DataBindingNameAttr = &_dgfcf
			continue
		}
		if _aggdc.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_cecc, _fcagg := _dd.ParseBool(_aggdc.Value)
			if _fcagg != nil {
				return _fcagg
			}
			_cgfag.FileBindingAttr = &_cecc
			continue
		}
		if _aggdc.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_eeecb, _cfaecc := _dd.ParseUint(_aggdc.Value, 10, 32)
			if _cfaecc != nil {
				return _cfaecc
			}
			_gaagg := uint32(_eeecb)
			_cgfag.ConnectionIDAttr = &_gaagg
			continue
		}
		if _aggdc.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_ddfd := _aggdc.Value
			_cgfag.FileBindingNameAttr = &_ddfd
			continue
		}
		if _aggdc.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_gebb, _edcg := _dd.ParseUint(_aggdc.Value, 10, 32)
			if _edcg != nil {
				return _edcg
			}
			_cgfag.DataBindingLoadModeAttr = uint32(_gebb)
			continue
		}
	}
_dcef:
	for {
		_fgdgc, _aebed := d.Token()
		if _aebed != nil {
			return _aebed
		}
		switch _bdaef := _fgdgc.(type) {
		case _a.StartElement:
			switch _bdaef.Name {
			default:
				if _abff, _acedc := _ff.CreateElement(_bdaef); _acedc != nil {
					return _acedc
				} else {
					if _gfdc := d.DecodeElement(_abff, &_bdaef); _gfdc != nil {
						return _gfdc
					}
					_cgfag.Any = _abff
				}
			}
		case _a.EndElement:
			break _dcef
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_agga *CT_Chartsheet) ValidateWithPath(path string) error {
	if _agga.SheetPr != nil {
		if _fcdc := _agga.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _fcdc != nil {
			return _fcdc
		}
	}
	if _geaab := _agga.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _geaab != nil {
		return _geaab
	}
	if _agga.SheetProtection != nil {
		if _bea := _agga.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _bea != nil {
			return _bea
		}
	}
	if _agga.CustomSheetViews != nil {
		if _dcaa := _agga.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _dcaa != nil {
			return _dcaa
		}
	}
	if _agga.PageMargins != nil {
		if _dgcac := _agga.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dgcac != nil {
			return _dgcac
		}
	}
	if _agga.PageSetup != nil {
		if _ebefd := _agga.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _ebefd != nil {
			return _ebefd
		}
	}
	if _agga.HeaderFooter != nil {
		if _acgc := _agga.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _acgc != nil {
			return _acgc
		}
	}
	if _gecfb := _agga.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _gecfb != nil {
		return _gecfb
	}
	if _agga.LegacyDrawing != nil {
		if _aega := _agga.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _aega != nil {
			return _aega
		}
	}
	if _agga.LegacyDrawingHF != nil {
		if _ccce := _agga.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ccce != nil {
			return _ccce
		}
	}
	if _agga.DrawingHF != nil {
		if _ccaaa := _agga.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ccaaa != nil {
			return _ccaaa
		}
	}
	if _agga.Picture != nil {
		if _eed := _agga.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _eed != nil {
			return _eed
		}
	}
	if _agga.WebPublishItems != nil {
		if _ddfc := _agga.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _ddfc != nil {
			return _ddfc
		}
	}
	if _agga.ExtLst != nil {
		if _edb := _agga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edb != nil {
			return _edb
		}
	}
	return nil
}
func (_fadab *CT_VolType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_aacde, _cffcb := _fadab.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _cffcb != nil {
		return _cffcb
	}
	start.Attr = append(start.Attr, _aacde)
	e.EncodeToken(start)
	_beffcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u006d\u0061\u0069\u006e"}}
	for _, _dccec := range _fadab.Main {
		e.EncodeElement(_dccec, _beffcf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_gefed *ST_FilterOperator) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_gefed = 0
	case "\u0065\u0071\u0075a\u006c":
		*_gefed = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_gefed = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_gefed = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_gefed = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_gefed = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_gefed = 6
	}
	return nil
}
func (_deccg ST_FontScheme) String() string {
	switch _deccg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

// Validate validates the CT_XmlPr and its children
func (_dffab *CT_XmlPr) Validate() error {
	return _dffab.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}
func (_aedbd *CT_Schema) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0049\u0044"}, Value: _fd.Sprintf("\u0025\u0076", _aedbd.IDAttr)})
	if _aedbd.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _fd.Sprintf("\u0025\u0076", *_aedbd.SchemaRefAttr)})
	}
	if _aedbd.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _fd.Sprintf("\u0025\u0076", *_aedbd.NamespaceAttr)})
	}
	if _aedbd.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_aedbd.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _aedbd.Any != nil {
		_aedbd.Any.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_feffa ST_DataConsolidateFunction) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bfead := _a.Attr{}
	_bfead.Name = name
	switch _feffa {
	case ST_DataConsolidateFunctionUnset:
		_bfead.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_bfead.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_bfead.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_bfead.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_bfead.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_bfead.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_bfead.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_bfead.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_bfead.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_bfead.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_bfead.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_bfead.Value = "\u0076\u0061\u0072\u0070"
	}
	return _bfead, nil
}

// Validate validates the CT_Sst and its children
func (_cbege *CT_Sst) Validate() error {
	return _cbege.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}
func (_ecgega ST_DynamicFilterType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_ecgega.String(), start)
}

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

func (_ffgf *CT_Fill) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_ffgf.FillChoice = NewCT_FillChoice()
_debdf:
	for {
		_fcdee, _afad := d.Token()
		if _afad != nil {
			return _afad
		}
		switch _dadd := _fcdee.(type) {
		case _a.StartElement:
			switch _dadd.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_ffgf.FillChoice = NewCT_FillChoice()
				if _ecaa := d.DecodeElement(&_ffgf.FillChoice.PatternFill, &_dadd); _ecaa != nil {
					return _ecaa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_ffgf.FillChoice = NewCT_FillChoice()
				if _dbfde := d.DecodeElement(&_ffgf.FillChoice.GradientFill, &_dadd); _dbfde != nil {
					return _dbfde
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _dadd.Name)
				if _gggec := d.Skip(); _gggec != nil {
					return _gggec
				}
			}
		case _a.EndElement:
			break _debdf
		case _a.CharData:
		}
	}
	return nil
}
func (_baebfc ST_PivotFilterType) Validate() error { return _baebfc.ValidateWithPath("") }
func (_bfbga *CT_IgnoredError) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _abbbff := range start.Attr {
		if _abbbff.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_adeea, _fbadf := ParseSliceST_Sqref(_abbbff.Value)
			if _fbadf != nil {
				return _fbadf
			}
			_bfbga.SqrefAttr = _adeea
			continue
		}
		if _abbbff.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_fdcg, _gcfc := _dd.ParseBool(_abbbff.Value)
			if _gcfc != nil {
				return _gcfc
			}
			_bfbga.EvalErrorAttr = &_fdcg
			continue
		}
		if _abbbff.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_babca, _fdgf := _dd.ParseBool(_abbbff.Value)
			if _fdgf != nil {
				return _fdgf
			}
			_bfbga.TwoDigitTextYearAttr = &_babca
			continue
		}
		if _abbbff.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_bgbbc, _aebda := _dd.ParseBool(_abbbff.Value)
			if _aebda != nil {
				return _aebda
			}
			_bfbga.NumberStoredAsTextAttr = &_bgbbc
			continue
		}
		if _abbbff.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_bbefa, _gbgfca := _dd.ParseBool(_abbbff.Value)
			if _gbgfca != nil {
				return _gbgfca
			}
			_bfbga.FormulaAttr = &_bbefa
			continue
		}
		if _abbbff.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_cdggb, _dfdbga := _dd.ParseBool(_abbbff.Value)
			if _dfdbga != nil {
				return _dfdbga
			}
			_bfbga.FormulaRangeAttr = &_cdggb
			continue
		}
		if _abbbff.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_cagcb, _bbdc := _dd.ParseBool(_abbbff.Value)
			if _bbdc != nil {
				return _bbdc
			}
			_bfbga.UnlockedFormulaAttr = &_cagcb
			continue
		}
		if _abbbff.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_aedc, _afff := _dd.ParseBool(_abbbff.Value)
			if _afff != nil {
				return _afff
			}
			_bfbga.EmptyCellReferenceAttr = &_aedc
			continue
		}
		if _abbbff.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_fefdfa, _cabgf := _dd.ParseBool(_abbbff.Value)
			if _cabgf != nil {
				return _cabgf
			}
			_bfbga.ListDataValidationAttr = &_fefdfa
			continue
		}
		if _abbbff.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_adeca, _efeebd := _dd.ParseBool(_abbbff.Value)
			if _efeebd != nil {
				return _efeebd
			}
			_bfbga.CalculatedColumnAttr = &_adeca
			continue
		}
	}
	for {
		_bcggg, _gbcea := d.Token()
		if _gbcea != nil {
			return _fd.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _gbcea)
		}
		if _daee, _dfga := _bcggg.(_a.EndElement); _dfga && _daee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}
type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}

func (_agdfe *ST_DdeValueType) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bfgdgd, _agfge := d.Token()
	if _agfge != nil {
		return _agfge
	}
	if _deefb, _faaced := _bfgdgd.(_a.EndElement); _faaced && _deefb.Name == start.Name {
		*_agdfe = 1
		return nil
	}
	if _gcfec, _ebccc := _bfgdgd.(_a.CharData); !_ebccc {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgdgd)
	} else {
		switch string(_gcfec) {
		case "":
			*_agdfe = 0
		case "\u006e\u0069\u006c":
			*_agdfe = 1
		case "\u0062":
			*_agdfe = 2
		case "\u006e":
			*_agdfe = 3
		case "\u0065":
			*_agdfe = 4
		case "\u0073\u0074\u0072":
			*_agdfe = 5
		}
	}
	_bfgdgd, _agfge = d.Token()
	if _agfge != nil {
		return _agfge
	}
	if _ggcce, _adaec := _bfgdgd.(_a.EndElement); _adaec && _ggcce.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgdgd)
}
func (_egece ST_RefMode) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cdaga := _a.Attr{}
	_cdaga.Name = name
	switch _egece {
	case ST_RefModeUnset:
		_cdaga.Value = ""
	case ST_RefModeA1:
		_cdaga.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_cdaga.Value = "\u0052\u0031\u0043\u0031"
	}
	return _cdaga, nil
}

type ST_HtmlFmt byte

func (_dafgd ST_Axis) String() string {
	switch _dafgd {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}
func (_fagg ST_Visibility) Validate() error { return _fagg.ValidateWithPath("") }
func (_geeegd ST_CfvoType) ValidateWithPath(path string) error {
	switch _geeegd {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_geeegd))
	}
	return nil
}
func (_bgdfce *ST_TableType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_bgdfce = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_bgdfce = 1
	case "\u0078\u006d\u006c":
		*_bgdfce = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_bgdfce = 3
	}
	return nil
}
func (_ccdfa *CT_Revisions) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	for _, _ageeb := range _ccdfa.RevisionsChoice {
		_ageeb.MarshalXML(e, _a.StartElement{})
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_cafd *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _ddga, _gaage := range _cafd.Mdx {
		if _abeedg := _gaage.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _ddga)); _abeedg != nil {
			return _abeedg
		}
	}
	return nil
}

type ST_WebSourceType byte

func (_fcabb ST_GrowShrinkType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_fcabb.String(), start)
}
func (_fagac *CT_Drawing) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _eeace := range start.Attr {
		if _eeace.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eeace.Name.Local == "\u0069\u0064" || _eeace.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eeace.Name.Local == "\u0069\u0064" {
			_dabg := _eeace.Value
			_fagac.IdAttr = _dabg
			continue
		}
	}
	for {
		_ebaa, _bgbfd := d.Token()
		if _bgbfd != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _bgbfd)
		}
		if _fbea, _efdec := _ebaa.(_a.EndElement); _efdec && _fbea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_WebPublishItems and its children
func (_dfagf *CT_WebPublishItems) Validate() error {
	return _dfagf.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}
func (_gggef *CT_SharedItemsChoice) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	if _gggef.M != nil {
		_cgabca := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006d"}}
		e.EncodeElement(_gggef.M, _cgabca)
	} else if _gggef.N != nil {
		_fcbgc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u006e"}}
		e.EncodeElement(_gggef.N, _fcbgc)
	} else if _gggef.B != nil {
		_aecacg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0062"}}
		e.EncodeElement(_gggef.B, _aecacg)
	} else if _gggef.E != nil {
		_fafag := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0065"}}
		e.EncodeElement(_gggef.E, _fafag)
	} else if _gggef.S != nil {
		_cbggda := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0073"}}
		e.EncodeElement(_gggef.S, _cbggda)
	} else if _gggef.D != nil {
		_ffbebc := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0064"}}
		e.EncodeElement(_gggef.D, _ffbebc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewAG_RevData() *AG_RevData { _df := &AG_RevData{}; return _df }
func (_eefcad ST_MdxKPIProperty) String() string {
	switch _eefcad {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

// Validate validates the CT_ChartsheetProtection and its children
func (_fded *CT_ChartsheetProtection) Validate() error {
	return _fded.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_eeec *CT_ChartFormats) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eeec.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eeec.CountAttr)})
	}
	e.EncodeToken(start)
	_edff := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0063\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}}
	for _, _fdeg := range _eeec.ChartFormat {
		e.EncodeElement(_fdeg, _edff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_ebfff *CT_PageSetup) ValidateWithPath(path string) error {
	if _ebfff.PaperHeightAttr != nil {
		if !_b.ST_PositiveUniversalMeasurePatternRe.MatchString(*_ebfff.PaperHeightAttr) {
			return _fd.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_PositiveUniversalMeasurePatternRe, *_ebfff.PaperHeightAttr)
		}
	}
	if _ebfff.PaperHeightAttr != nil {
		if !_b.ST_UniversalMeasurePatternRe.MatchString(*_ebfff.PaperHeightAttr) {
			return _fd.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_UniversalMeasurePatternRe, *_ebfff.PaperHeightAttr)
		}
	}
	if _ebfff.PaperWidthAttr != nil {
		if !_b.ST_PositiveUniversalMeasurePatternRe.MatchString(*_ebfff.PaperWidthAttr) {
			return _fd.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_PositiveUniversalMeasurePatternRe, *_ebfff.PaperWidthAttr)
		}
	}
	if _ebfff.PaperWidthAttr != nil {
		if !_b.ST_UniversalMeasurePatternRe.MatchString(*_ebfff.PaperWidthAttr) {
			return _fd.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _b.ST_UniversalMeasurePatternRe, *_ebfff.PaperWidthAttr)
		}
	}
	if _bdbdg := _ebfff.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _bdbdg != nil {
		return _bdbdg
	}
	if _gebdab := _ebfff.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gebdab != nil {
		return _gebdab
	}
	if _dfbeag := _ebfff.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _dfbeag != nil {
		return _dfbeag
	}
	if _dggee := _ebfff.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _dggee != nil {
		return _dggee
	}
	return nil
}
func (_efeag *CT_WorkbookProtection) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dfab := range start.Attr {
		if _dfab.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_gafa := _dfab.Value
			_efeag.WorkbookPasswordAttr = &_gafa
			continue
		}
		if _dfab.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_acdcd := _dfab.Value
			_efeag.WorkbookPasswordCharacterSetAttr = &_acdcd
			continue
		}
		if _dfab.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_fddcdb := _dfab.Value
			_efeag.RevisionsPasswordAttr = &_fddcdb
			continue
		}
		if _dfab.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_ddeed := _dfab.Value
			_efeag.RevisionsPasswordCharacterSetAttr = &_ddeed
			continue
		}
		if _dfab.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_fddcdbe, _fddbbf := _dd.ParseBool(_dfab.Value)
			if _fddbbf != nil {
				return _fddbbf
			}
			_efeag.LockStructureAttr = &_fddcdbe
			continue
		}
		if _dfab.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_eegce, _fgdeaa := _dd.ParseBool(_dfab.Value)
			if _fgdeaa != nil {
				return _fgdeaa
			}
			_efeag.LockWindowsAttr = &_eegce
			continue
		}
		if _dfab.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_aefbd, _abgfa := _dd.ParseBool(_dfab.Value)
			if _abgfa != nil {
				return _abgfa
			}
			_efeag.LockRevisionAttr = &_aefbd
			continue
		}
		if _dfab.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_fgdcg := _dfab.Value
			_efeag.RevisionsAlgorithmNameAttr = &_fgdcg
			continue
		}
		if _dfab.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_cgegb := _dfab.Value
			_efeag.RevisionsHashValueAttr = &_cgegb
			continue
		}
		if _dfab.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_bcefc := _dfab.Value
			_efeag.RevisionsSaltValueAttr = &_bcefc
			continue
		}
		if _dfab.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_cfcaee, _fbgbe := _dd.ParseUint(_dfab.Value, 10, 32)
			if _fbgbe != nil {
				return _fbgbe
			}
			_gbbgca := uint32(_cfcaee)
			_efeag.RevisionsSpinCountAttr = &_gbbgca
			continue
		}
		if _dfab.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_ecgce := _dfab.Value
			_efeag.WorkbookAlgorithmNameAttr = &_ecgce
			continue
		}
		if _dfab.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_abadbc := _dfab.Value
			_efeag.WorkbookHashValueAttr = &_abadbc
			continue
		}
		if _dfab.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_adfad := _dfab.Value
			_efeag.WorkbookSaltValueAttr = &_adfad
			continue
		}
		if _dfab.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_babgec, _adfec := _dd.ParseUint(_dfab.Value, 10, 32)
			if _adfec != nil {
				return _adfec
			}
			_ggebb := uint32(_babgec)
			_efeag.WorkbookSpinCountAttr = &_ggebb
			continue
		}
	}
	for {
		_eggdae, _abbbe := d.Token()
		if _abbbe != nil {
			return _fd.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _abbbe)
		}
		if _dadbgd, _beegad := _eggdae.(_a.EndElement); _beegad && _dadbgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egabd *CT_RgbColor) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _egabd.RgbAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0067\u0062"}, Value: _fd.Sprintf("\u0025\u0076", *_egabd.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

func (_fdbba *CT_Consolidation) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdbba.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbba.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _fdbba.Pages != nil {
		_bddd := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0070\u0061\u0067\u0065s"}}
		e.EncodeElement(_fdbba.Pages, _bddd)
	}
	_fbcbe := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_fdbba.RangeSets, _fbcbe)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_eeabbg ST_Visibility) String() string {
	switch _eeabbg {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}
func (_gegdd ST_SheetState) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbcfc := _a.Attr{}
	_bbcfc.Name = name
	switch _gegdd {
	case ST_SheetStateUnset:
		_bbcfc.Value = ""
	case ST_SheetStateVisible:
		_bbcfc.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_bbcfc.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_bbcfc.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _bbcfc, nil
}

type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}
type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

func (_afefea ST_TableType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_bbfbe := _a.Attr{}
	_bbfbe.Name = name
	switch _afefea {
	case ST_TableTypeUnset:
		_bbfbe.Value = ""
	case ST_TableTypeWorksheet:
		_bbfbe.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_bbfbe.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_bbfbe.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _bbfbe, nil
}
func NewWorksheet() *Worksheet {
	_ggegdd := &Worksheet{}
	_ggegdd.CT_Worksheet = *NewCT_Worksheet()
	return _ggegdd
}
func NewCT_Number() *CT_Number { _dcde := &CT_Number{}; return _dcde }
func (_eae *CT_Borders) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _eae.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_eae.CountAttr)})
	}
	e.EncodeToken(start)
	if _eae.Border != nil {
		_cab := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0062\u006f\u0072\u0064\u0065\u0072"}}
		for _, _bgb := range _eae.Border {
			e.EncodeElement(_bgb, _cab)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_bfcgd *CT_Metadata) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_dcddce:
	for {
		_bcdgb, _aacac := d.Token()
		if _aacac != nil {
			return _aacac
		}
		switch _fbfaf := _bcdgb.(type) {
		case _a.StartElement:
			switch _fbfaf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_bfcgd.MetadataTypes = NewCT_MetadataTypes()
				if _ebeff := d.DecodeElement(_bfcgd.MetadataTypes, &_fbfaf); _ebeff != nil {
					return _ebeff
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_bfcgd.MetadataStrings = NewCT_MetadataStrings()
				if _agcgf := d.DecodeElement(_bfcgd.MetadataStrings, &_fbfaf); _agcgf != nil {
					return _agcgf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_bfcgd.MdxMetadata = NewCT_MdxMetadata()
				if _faega := d.DecodeElement(_bfcgd.MdxMetadata, &_fbfaf); _faega != nil {
					return _faega
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_cbggg := NewCT_FutureMetadata()
				if _gfgbb := d.DecodeElement(_cbggg, &_fbfaf); _gfgbb != nil {
					return _gfgbb
				}
				_bfcgd.FutureMetadata = append(_bfcgd.FutureMetadata, _cbggg)
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_bfcgd.CellMetadata = NewCT_MetadataBlocks()
				if _egbea := d.DecodeElement(_bfcgd.CellMetadata, &_fbfaf); _egbea != nil {
					return _egbea
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_bfcgd.ValueMetadata = NewCT_MetadataBlocks()
				if _gegbe := d.DecodeElement(_bfcgd.ValueMetadata, &_fbfaf); _gegbe != nil {
					return _gegbe
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfcgd.ExtLst = NewCT_ExtensionList()
				if _gegf := d.DecodeElement(_bfcgd.ExtLst, &_fbfaf); _gegf != nil {
					return _gegf
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _fbfaf.Name)
				if _eeadd := d.Skip(); _eeadd != nil {
					return _eeadd
				}
			}
		case _a.EndElement:
			break _dcddce
		case _a.CharData:
		}
	}
	return nil
}
func (_ddcfd *CT_TableFormula) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(_ddcfd.ArrayAttr))})
	e.EncodeElement(_ddcfd.Content, start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_Visibility byte

func (_cdaea *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_cdaea = 0
	case "\u0073\u0074\u006f\u0070":
		*_cdaea = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_cdaea = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_cdaea = 3
	}
	return nil
}

type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_ggca *CT_DdeLink) ValidateWithPath(path string) error {
	if _ggca.DdeItems != nil {
		if _eebg := _ggca.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _eebg != nil {
			return _eebg
		}
	}
	return nil
}
func NewCT_PivotCaches() *CT_PivotCaches {
	_gggcf := &CT_PivotCaches{}
	return _gggcf
}

// Validate validates the CT_I and its children
func (_agaa *CT_I) Validate() error { return _agaa.ValidateWithPath("\u0043\u0054\u005f\u0049") }

// Validate validates the CT_GroupMembers and its children
func (_cddgfg *CT_GroupMembers) Validate() error {
	return _cddgfg.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}
func (_accee *ST_CalcMode) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_accee = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_accee = 1
	case "\u0061\u0075\u0074\u006f":
		*_accee = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_accee = 3
	}
	return nil
}

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_fcfbc *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _fcfbc.ExtLst != nil {
		if _adaadg := _fcfbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adaadg != nil {
			return _adaadg
		}
	}
	return nil
}
func NewCT_ExtensionList() *CT_ExtensionList {
	_fdbfg := &CT_ExtensionList{}
	return _fdbfg
}

type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

// Validate validates the CT_Cfvo and its children
func (_cgcd *CT_Cfvo) Validate() error {
	return _cgcd.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}
func (_fcgc *CT_CellXfs) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fcbb := range start.Attr {
		if _fcbb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abadd, _dfbc := _dd.ParseUint(_fcbb.Value, 10, 32)
			if _dfbc != nil {
				return _dfbc
			}
			_bbdgc := uint32(_abadd)
			_fcgc.CountAttr = &_bbdgc
			continue
		}
	}
_bgbe:
	for {
		_fggg, _efbef := d.Token()
		if _efbef != nil {
			return _efbef
		}
		switch _faeb := _fggg.(type) {
		case _a.StartElement:
			switch _faeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_ggga := NewCT_Xf()
				if _cede := d.DecodeElement(_ggga, &_faeb); _cede != nil {
					return _cede
				}
				_fcgc.Xf = append(_fcgc.Xf, _ggga)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _faeb.Name)
				if _cgdag := d.Skip(); _cgdag != nil {
					return _cgdag
				}
			}
		case _a.EndElement:
			break _bgbe
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

// Validate validates the CT_ReviewedRevisions and its children
func (_fdddc *CT_ReviewedRevisions) Validate() error {
	return _fdddc.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}
func (_daaafb *CT_VerticalAlignFontProperty) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_bgbbe, _gagdcb := _daaafb.ValAttr.MarshalXMLAttr(_a.Name{Local: "\u0076\u0061\u006c"})
	if _gagdcb != nil {
		return _gagdcb
	}
	start.Attr = append(start.Attr, _bgbbe)
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryTableRefresh and its children
func (_fggd *CT_QueryTableRefresh) Validate() error {
	return _fggd.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}

// Validate validates the CT_TableColumns and its children
func (_ggddf *CT_TableColumns) Validate() error {
	return _ggddf.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_bbbdb *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _bfbcb := _bbbdb.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bfbcb != nil {
		return _bfbcb
	}
	if _aeafd := _bbbdb.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _aeafd != nil {
		return _aeafd
	}
	return nil
}
func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_aabef := &CT_RevisionRowColumn{}
	_aabef.ActionAttr = ST_rwColActionType(1)
	return _aabef
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_cdbge *Worksheet) ValidateWithPath(path string) error {
	if _cdfged := _cdbge.CT_Worksheet.ValidateWithPath(path); _cdfged != nil {
		return _cdfged
	}
	return nil
}
func (_dgagee *CT_Table) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dgagee.TableColumns = NewCT_TableColumns()
	for _, _daeeed := range start.Attr {
		if _daeeed.Name.Local == "\u0069\u0064" {
			_fecafc, _cdbcd := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _cdbcd != nil {
				return _cdbcd
			}
			_dgagee.IdAttr = uint32(_fecafc)
			continue
		}
		if _daeeed.Name.Local == "\u006e\u0061\u006d\u0065" {
			_egdgdc := _daeeed.Value
			_dgagee.NameAttr = &_egdgdc
			continue
		}
		if _daeeed.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_gddcgd := _daeeed.Value
			_dgagee.DisplayNameAttr = _gddcgd
			continue
		}
		if _daeeed.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_bcfge := _daeeed.Value
			_dgagee.CommentAttr = &_bcfge
			continue
		}
		if _daeeed.Name.Local == "\u0072\u0065\u0066" {
			_dcded := _daeeed.Value
			_dgagee.RefAttr = _dcded
			continue
		}
		if _daeeed.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_dgagee.TableTypeAttr.UnmarshalXMLAttr(_daeeed)
			continue
		}
		if _daeeed.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_gecabg, _gefec := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _gefec != nil {
				return _gefec
			}
			_becge := uint32(_gecabg)
			_dgagee.HeaderRowCountAttr = &_becge
			continue
		}
		if _daeeed.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_cdcff, _gadee := _dd.ParseBool(_daeeed.Value)
			if _gadee != nil {
				return _gadee
			}
			_dgagee.InsertRowAttr = &_cdcff
			continue
		}
		if _daeeed.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_agefdg, _beefg := _dd.ParseBool(_daeeed.Value)
			if _beefg != nil {
				return _beefg
			}
			_dgagee.InsertRowShiftAttr = &_agefdg
			continue
		}
		if _daeeed.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_dccbc, _ggagc := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _ggagc != nil {
				return _ggagc
			}
			_bfefa := uint32(_dccbc)
			_dgagee.TotalsRowCountAttr = &_bfefa
			continue
		}
		if _daeeed.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_dbccb, _cbcac := _dd.ParseBool(_daeeed.Value)
			if _cbcac != nil {
				return _cbcac
			}
			_dgagee.TotalsRowShownAttr = &_dbccb
			continue
		}
		if _daeeed.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_ecedca, _fefagbg := _dd.ParseBool(_daeeed.Value)
			if _fefagbg != nil {
				return _fefagbg
			}
			_dgagee.PublishedAttr = &_ecedca
			continue
		}
		if _daeeed.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_gbegeb, _afgba := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _afgba != nil {
				return _afgba
			}
			_bfffb := uint32(_gbegeb)
			_dgagee.HeaderRowDxfIdAttr = &_bfffb
			continue
		}
		if _daeeed.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_ffdab, _fcbba := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _fcbba != nil {
				return _fcbba
			}
			_ggcbd := uint32(_ffdab)
			_dgagee.DataDxfIdAttr = &_ggcbd
			continue
		}
		if _daeeed.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_eaage, _gfaeb := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _gfaeb != nil {
				return _gfaeb
			}
			_gfbbfb := uint32(_eaage)
			_dgagee.TotalsRowDxfIdAttr = &_gfbbfb
			continue
		}
		if _daeeed.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_fadae, _dffgba := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _dffgba != nil {
				return _dffgba
			}
			_aadfg := uint32(_fadae)
			_dgagee.HeaderRowBorderDxfIdAttr = &_aadfg
			continue
		}
		if _daeeed.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_dccbf, _eegecd := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _eegecd != nil {
				return _eegecd
			}
			_aefceb := uint32(_dccbf)
			_dgagee.TableBorderDxfIdAttr = &_aefceb
			continue
		}
		if _daeeed.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_ffaae, _fegee := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _fegee != nil {
				return _fegee
			}
			_ccbdg := uint32(_ffaae)
			_dgagee.TotalsRowBorderDxfIdAttr = &_ccbdg
			continue
		}
		if _daeeed.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_edcd := _daeeed.Value
			_dgagee.HeaderRowCellStyleAttr = &_edcd
			continue
		}
		if _daeeed.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_ebgge := _daeeed.Value
			_dgagee.DataCellStyleAttr = &_ebgge
			continue
		}
		if _daeeed.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_ceeddf := _daeeed.Value
			_dgagee.TotalsRowCellStyleAttr = &_ceeddf
			continue
		}
		if _daeeed.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_bacdb, _bgdcgf := _dd.ParseUint(_daeeed.Value, 10, 32)
			if _bgdcgf != nil {
				return _bgdcgf
			}
			_dcbf := uint32(_bacdb)
			_dgagee.ConnectionIdAttr = &_dcbf
			continue
		}
	}
_abdaca:
	for {
		_bgcfg, _aabgf := d.Token()
		if _aabgf != nil {
			return _aabgf
		}
		switch _gdfabc := _bgcfg.(type) {
		case _a.StartElement:
			switch _gdfabc.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dgagee.AutoFilter = NewCT_AutoFilter()
				if _daabg := d.DecodeElement(_dgagee.AutoFilter, &_gdfabc); _daabg != nil {
					return _daabg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_dgagee.SortState = NewCT_SortState()
				if _deafdd := d.DecodeElement(_dgagee.SortState, &_gdfabc); _deafdd != nil {
					return _deafdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _fcfdf := d.DecodeElement(_dgagee.TableColumns, &_gdfabc); _fcfdf != nil {
					return _fcfdf
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_dgagee.TableStyleInfo = NewCT_TableStyleInfo()
				if _bbegb := d.DecodeElement(_dgagee.TableStyleInfo, &_gdfabc); _bbegb != nil {
					return _bbegb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgagee.ExtLst = NewCT_ExtensionList()
				if _ddcda := d.DecodeElement(_dgagee.ExtLst, &_gdfabc); _ddcda != nil {
					return _ddcda
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _gdfabc.Name)
				if _fdcdd := d.Skip(); _fdcdd != nil {
					return _fdcdd
				}
			}
		case _a.EndElement:
			break _abdaca
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_aefda *CT_UndoInfo) ValidateWithPath(path string) error {
	if _aefda.ExpAttr == ST_FormulaExpressionUnset {
		return _fd.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gdcgd := _aefda.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _gdcgd != nil {
		return _gdcgd
	}
	return nil
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_cfcgd *CT_SharedItems) ValidateWithPath(path string) error {
	for _fbbebe, _dffaed := range _cfcgd.SharedItemsChoice {
		if _bcbce := _dffaed.ValidateWithPath(_fd.Sprintf("\u0025s\u002f\u0053\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006ds\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _fbbebe)); _bcbce != nil {
			return _bcbce
		}
	}
	return nil
}

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_cbdead *PivotCacheRecords) ValidateWithPath(path string) error {
	if _cgfddg := _cbdead.CT_PivotCacheRecords.ValidateWithPath(path); _cgfddg != nil {
		return _cgfddg
	}
	return nil
}
func (_ccbde *CT_LevelGroup) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ccbde.NameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _ccbde.UniqueNameAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", _ccbde.CaptionAttr)})
	if _ccbde.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_ccbde.UniqueParentAttr)})
	}
	if _ccbde.IdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_ccbde.IdAttr)})
	}
	e.EncodeToken(start)
	_cbfg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061i\u003a\u0067\u0072o\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_ccbde.GroupMembers, _cbfg)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}

// Validate validates the CT_PivotSelection and its children
func (_bgaag *CT_PivotSelection) Validate() error {
	return _bgaag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_bafbd *CT_ColorFilter) ValidateWithPath(path string) error { return nil }
func (_cccbe ST_VolDepType) Validate() error                      { return _cccbe.ValidateWithPath("") }

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr            *uint32
	PCDSDTCEntriesChoice []*CT_PCDSDTCEntriesChoice
}

func NewCT_QueryTable() *CT_QueryTable { _gceeed := &CT_QueryTable{}; return _gceeed }

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_bcbf *CT_Extension) ValidateWithPath(path string) error { return nil }
func (_cfega ST_Type) Validate() error                         { return _cfega.ValidateWithPath("") }

type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_bebce *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _edda, _bgcdc := range _bebce.Hyperlink {
		if _ddabc := _bgcdc.ValidateWithPath(_fd.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _edda)); _ddabc != nil {
			return _ddabc
		}
	}
	return nil
}
func NewCT_Sheets() *CT_Sheets { _ffgbd := &CT_Sheets{}; return _ffgbd }
func (_fcfba *CT_PCDKPIs) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fcfba.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_fcfba.CountAttr)})
	}
	e.EncodeToken(start)
	if _fcfba.Kpi != nil {
		_ccefga := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u006b\u0070\u0069"}}
		for _, _dccgc := range _fcfba.Kpi {
			e.EncodeElement(_dccgc, _ccefga)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_effcg *CT_TableStyleInfo) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _affgdg := range start.Attr {
		if _affgdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aagba := _affgdg.Value
			_effcg.NameAttr = &_aagba
			continue
		}
		if _affgdg.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_dagcc, _ecfcg := _dd.ParseBool(_affgdg.Value)
			if _ecfcg != nil {
				return _ecfcg
			}
			_effcg.ShowFirstColumnAttr = &_dagcc
			continue
		}
		if _affgdg.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_gdbag, _dfba := _dd.ParseBool(_affgdg.Value)
			if _dfba != nil {
				return _dfba
			}
			_effcg.ShowLastColumnAttr = &_gdbag
			continue
		}
		if _affgdg.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_edagc, _dcgeb := _dd.ParseBool(_affgdg.Value)
			if _dcgeb != nil {
				return _dcgeb
			}
			_effcg.ShowRowStripesAttr = &_edagc
			continue
		}
		if _affgdg.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_facdc, _faab := _dd.ParseBool(_affgdg.Value)
			if _faab != nil {
				return _faab
			}
			_effcg.ShowColumnStripesAttr = &_facdc
			continue
		}
	}
	for {
		_bfbcbb, _febgf := d.Token()
		if _febgf != nil {
			return _fd.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _febgf)
		}
		if _fbeggf, _cbffdg := _bfbcbb.(_a.EndElement); _cbffdg && _fbeggf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_GroupLevel and its children
func (_dffaf *CT_GroupLevel) Validate() error {
	return _dffaf.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}

// Validate validates the CT_Users and its children
func (_efbee *CT_Users) Validate() error {
	return _efbee.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}
func (_gfcg *CT_CacheHierarchy) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gfcg.UniqueNameAttr)})
	if _gfcg.CaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.CaptionAttr)})
	}
	if _gfcg.MeasureAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.MeasureAttr))})
	}
	if _gfcg.SetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.SetAttr))})
	}
	if _gfcg.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.ParentSetAttr)})
	}
	if _gfcg.IconSetAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.IconSetAttr)})
	}
	if _gfcg.AttributeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.AttributeAttr))})
	}
	if _gfcg.TimeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.TimeAttr))})
	}
	if _gfcg.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.KeyAttributeAttr))})
	}
	if _gfcg.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.DefaultMemberUniqueNameAttr)})
	}
	if _gfcg.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.AllUniqueNameAttr)})
	}
	if _gfcg.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.AllCaptionAttr)})
	}
	if _gfcg.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.DimensionUniqueNameAttr)})
	}
	if _gfcg.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.DisplayFolderAttr)})
	}
	if _gfcg.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.MeasureGroupAttr)})
	}
	if _gfcg.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", _gfcg.CountAttr)})
	if _gfcg.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.OneFieldAttr))})
	}
	if _gfcg.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_gfcg.MemberValueDatatypeAttr)})
	}
	if _gfcg.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.UnbalancedAttr))})
	}
	if _gfcg.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.UnbalancedGroupAttr))})
	}
	if _gfcg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_gfcg.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _gfcg.FieldsUsage != nil {
		_bcgc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0066\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_gfcg.FieldsUsage, _bcgc)
	}
	if _gfcg.GroupLevels != nil {
		_fgbg := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_gfcg.GroupLevels, _fgbg)
	}
	if _gfcg.ExtLst != nil {
		_cfff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gfcg.ExtLst, _cfff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_cfebb ST_FilterOperator) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_dgbcdb := _a.Attr{}
	_dgbcdb.Name = name
	switch _cfebb {
	case ST_FilterOperatorUnset:
		_dgbcdb.Value = ""
	case ST_FilterOperatorEqual:
		_dgbcdb.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_dgbcdb.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_dgbcdb.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_dgbcdb.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_dgbcdb.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_dgbcdb.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _dgbcdb, nil
}
func (_aced *CT_CacheSourceChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cgba := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
		_aced.WorksheetSource = NewCT_WorksheetSource()
		if _efabg := d.DecodeElement(_aced.WorksheetSource, &_cgba); _efabg != nil {
			return _efabg
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
		_aced.Consolidation = NewCT_Consolidation()
		if _abe := d.DecodeElement(_aced.Consolidation, &_cgba); _abe != nil {
			return _abe
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
		_aced.ExtLst = NewCT_ExtensionList()
		if _cedb := d.DecodeElement(_aced.ExtLst, &_cgba); _cedb != nil {
			return _cedb
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cgba.Name)
		if _bdd := d.Skip(); _bdd != nil {
			return _bdd
		}
	}
	return nil
}

// Validate validates the CT_MetadataBlocks and its children
func (_afgda *CT_MetadataBlocks) Validate() error {
	return _afgda.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_febea *CT_MdxTuple) ValidateWithPath(path string) error {
	for _cceabe, _egee := range _febea.N {
		if _fdgg := _egee.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _cceabe)); _fdgg != nil {
			return _fdgg
		}
	}
	return nil
}
func (_fcacba *CT_QueryCache) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _dbcdd := range start.Attr {
		if _dbcdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccedc, _aaaef := _dd.ParseUint(_dbcdd.Value, 10, 32)
			if _aaaef != nil {
				return _aaaef
			}
			_abagad := uint32(_ccedc)
			_fcacba.CountAttr = &_abagad
			continue
		}
	}
_afgeg:
	for {
		_cfefa, _daabe := d.Token()
		if _daabe != nil {
			return _daabe
		}
		switch _eggeb := _cfefa.(type) {
		case _a.StartElement:
			switch _eggeb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_ebafe := NewCT_Query()
				if _ccgec := d.DecodeElement(_ebafe, &_eggeb); _ccgec != nil {
					return _ccgec
				}
				_fcacba.Query = append(_fcacba.Query, _ebafe)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _eggeb.Name)
				if _gbcabg := d.Skip(); _gbcabg != nil {
					return _gbcabg
				}
			}
		case _a.EndElement:
			break _afgeg
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_cdbeb *CT_Parameter) ValidateWithPath(path string) error {
	if _fefae := _cdbeb.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _fefae != nil {
		return _fefae
	}
	return nil
}
func (_dbdc *CT_Controls) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_fdgd := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _fgaa := range _dbdc.Control {
		e.EncodeElement(_fgaa, _fdgd)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_PatternFill() *CT_PatternFill { _edega := &CT_PatternFill{}; return _edega }
func NewCT_Tuple() *CT_Tuple             { _ccgae := &CT_Tuple{}; return _ccgae }

// Validate validates the CT_CalculatedItem and its children
func (_abgd *CT_CalculatedItem) Validate() error {
	return _abgd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_PCDKPI and its children
func (_bbfefa *CT_PCDKPI) Validate() error {
	return _bbfefa.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}

type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_cfdecb *CT_TableMissing) ValidateWithPath(path string) error { return nil }

// Validate validates the PivotCacheDefinition and its children
func (_eddabg *PivotCacheDefinition) Validate() error {
	return _eddabg.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}

// Validate validates the CT_CustomWorkbookView and its children
func (_eeecf *CT_CustomWorkbookView) Validate() error {
	return _eeecf.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_feddb ST_FormulaExpression) String() string {
	switch _feddb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

func (_cgd *CT_CacheHierarchies) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _acfc := range start.Attr {
		if _acfc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acg, _fafc := _dd.ParseUint(_acfc.Value, 10, 32)
			if _fafc != nil {
				return _fafc
			}
			_age := uint32(_acg)
			_cgd.CountAttr = &_age
			continue
		}
	}
_gagdc:
	for {
		_dace, _bgc := d.Token()
		if _bgc != nil {
			return _bgc
		}
		switch _bgcg := _dace.(type) {
		case _a.StartElement:
			switch _bgcg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_afef := NewCT_CacheHierarchy()
				if _baf := d.DecodeElement(_afef, &_bgcg); _baf != nil {
					return _baf
				}
				_cgd.CacheHierarchy = append(_cgd.CacheHierarchy, _afef)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _bgcg.Name)
				if _bfed := d.Skip(); _bfed != nil {
					return _bfed
				}
			}
		case _a.EndElement:
			break _gagdc
		case _a.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_ggbcc *CT_Sets) ValidateWithPath(path string) error {
	for _caddg, _ddbdc := range _ggbcc.Set {
		if _cddegf := _ddbdc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _caddg)); _cddegf != nil {
			return _cddegf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_eefcc *CT_Number) ValidateWithPath(path string) error {
	for _cgceg, _bfecc := range _eefcc.Tpls {
		if _ebbg := _bfecc.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _cgceg)); _ebbg != nil {
			return _ebbg
		}
	}
	for _babcab, _afegc := range _eefcc.X {
		if _gdacg := _afegc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _babcab)); _gdacg != nil {
			return _gdacg
		}
	}
	return nil
}
func NewCT_WebPublishObjects() *CT_WebPublishObjects {
	_bfgag := &CT_WebPublishObjects{}
	return _bfgag
}

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}

// Validate validates the CT_AutoSortScope and its children
func (_ebd *CT_AutoSortScope) Validate() error {
	return _ebd.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}
func NewCT_PhoneticPr() *CT_PhoneticPr { _affge := &CT_PhoneticPr{}; return _affge }

// ValidateWithPath validates the CT_GroupItemsChoice and its children, prefixing error messages with path
func (_daacf *CT_GroupItemsChoice) ValidateWithPath(path string) error {
	if _daacf.M != nil {
		if _aebbg := _daacf.M.ValidateWithPath(path + "\u002f\u004d"); _aebbg != nil {
			return _aebbg
		}
	}
	if _daacf.N != nil {
		if _fabg := _daacf.N.ValidateWithPath(path + "\u002f\u004e"); _fabg != nil {
			return _fabg
		}
	}
	if _daacf.B != nil {
		if _ebcd := _daacf.B.ValidateWithPath(path + "\u002f\u0042"); _ebcd != nil {
			return _ebcd
		}
	}
	if _daacf.E != nil {
		if _abbcb := _daacf.E.ValidateWithPath(path + "\u002f\u0045"); _abbcb != nil {
			return _abbcb
		}
	}
	if _daacf.S != nil {
		if _ecbee := _daacf.S.ValidateWithPath(path + "\u002f\u0053"); _ecbee != nil {
			return _ecbee
		}
	}
	if _daacf.D != nil {
		if _cgedd := _daacf.D.ValidateWithPath(path + "\u002f\u0044"); _cgedd != nil {
			return _cgedd
		}
	}
	return nil
}
func (_ffedef *CT_Item) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ffedef.NAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_ffedef.NAttr)})
	}
	if _ffedef.TAttr != ST_ItemTypeUnset {
		_ggad, _abga := _ffedef.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _abga != nil {
			return _abga
		}
		start.Attr = append(start.Attr, _ggad)
	}
	if _ffedef.HAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.HAttr))})
	}
	if _ffedef.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.SAttr))})
	}
	if _ffedef.SdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.SdAttr))})
	}
	if _ffedef.FAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.FAttr))})
	}
	if _ffedef.MAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.MAttr))})
	}
	if _ffedef.CAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.CAttr))})
	}
	if _ffedef.XAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0078"}, Value: _fd.Sprintf("\u0025\u0076", *_ffedef.XAttr)})
	}
	if _ffedef.DAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.DAttr))})
	}
	if _ffedef.EAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ffedef.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewPivotTableDefinition() *PivotTableDefinition {
	_defc := &PivotTableDefinition{}
	_defc.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _defc
}

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

func (_cgcbd *CT_VolTopic) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _cgcbd.TAttr != ST_VolValueTypeUnset {
		_cbefa, _cccfdc := _cgcbd.TAttr.MarshalXMLAttr(_a.Name{Local: "\u0074"})
		if _cccfdc != nil {
			return _cccfdc
		}
		start.Attr = append(start.Attr, _cbefa)
	}
	e.EncodeToken(start)
	_dbcaa := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0076"}}
	_ff.AddPreserveSpaceAttr(&_dbcaa, _cgcbd.V)
	e.EncodeElement(_cgcbd.V, _dbcaa)
	if _cgcbd.Stp != nil {
		_aabaea := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069\u003a\u0073\u0074\u0070"}}
		for _, _acebe := range _cgcbd.Stp {
			e.EncodeElement(_acebe, _aabaea)
		}
	}
	_bedaff := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0074\u0072"}}
	for _, _gafed := range _cgcbd.Tr {
		e.EncodeElement(_gafed, _bedaff)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

func NewCT_VolMain() *CT_VolMain { _ffaab := &CT_VolMain{}; return _ffaab }
func (_bbfde ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _bbfde {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _fd.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbfde))
	}
	return nil
}
func (_badb *CT_CalculatedItem) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_badb.PivotArea = NewCT_PivotArea()
	for _, _abad := range start.Attr {
		if _abad.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_gdee, _babe := _dd.ParseUint(_abad.Value, 10, 32)
			if _babe != nil {
				return _babe
			}
			_eecd := uint32(_gdee)
			_badb.FieldAttr = &_eecd
			continue
		}
		if _abad.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_gccc := _abad.Value
			_badb.FormulaAttr = &_gccc
			continue
		}
	}
_ead:
	for {
		_cegf, _aacd := d.Token()
		if _aacd != nil {
			return _aacd
		}
		switch _bfdb := _cegf.(type) {
		case _a.StartElement:
			switch _bfdb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _ecef := d.DecodeElement(_badb.PivotArea, &_bfdb); _ecef != nil {
					return _ecef
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_badb.ExtLst = NewCT_ExtensionList()
				if _ecfc := d.DecodeElement(_badb.ExtLst, &_bfdb); _ecfc != nil {
					return _ecfc
				}
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _bfdb.Name)
				if _cceb := d.Skip(); _cceb != nil {
					return _cceb
				}
			}
		case _a.EndElement:
			break _ead
		case _a.CharData:
		}
	}
	return nil
}
func (_fcbdc *CT_PivotCacheDefinition) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcbdc.CacheSource = NewCT_CacheSource()
	_fcbdc.CacheFields = NewCT_CacheFields()
	for _, _ecbaf := range start.Attr {
		if _ecbaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecbaf.Name.Local == "\u0069\u0064" || _ecbaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ecbaf.Name.Local == "\u0069\u0064" {
			_ddeeb := _ecbaf.Value
			_fcbdc.IdAttr = &_ddeeb
			continue
		}
		if _ecbaf.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_egbdg, _fdgcf := _dd.ParseBool(_ecbaf.Value)
			if _fdgcf != nil {
				return _fdgcf
			}
			_fcbdc.InvalidAttr = &_egbdg
			continue
		}
		if _ecbaf.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_cededd, _afeac := _dd.ParseBool(_ecbaf.Value)
			if _afeac != nil {
				return _afeac
			}
			_fcbdc.SaveDataAttr = &_cededd
			continue
		}
		if _ecbaf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_aedfg, _cgbbc := _dd.ParseBool(_ecbaf.Value)
			if _cgbbc != nil {
				return _cgbbc
			}
			_fcbdc.RefreshOnLoadAttr = &_aedfg
			continue
		}
		if _ecbaf.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_gfdg, _dadaf := _dd.ParseBool(_ecbaf.Value)
			if _dadaf != nil {
				return _dadaf
			}
			_fcbdc.OptimizeMemoryAttr = &_gfdg
			continue
		}
		if _ecbaf.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_geadd, _fabde := _dd.ParseBool(_ecbaf.Value)
			if _fabde != nil {
				return _fabde
			}
			_fcbdc.EnableRefreshAttr = &_geadd
			continue
		}
		if _ecbaf.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_dcged := _ecbaf.Value
			_fcbdc.RefreshedByAttr = &_dcged
			continue
		}
		if _ecbaf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_cgcec, _ddagae := _dd.ParseFloat(_ecbaf.Value, 64)
			if _ddagae != nil {
				return _ddagae
			}
			_fcbdc.RefreshedDateAttr = &_cgcec
			continue
		}
		if _ecbaf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_eafbb, _gbfe := ParseStdlibTime(_ecbaf.Value)
			if _gbfe != nil {
				return _gbfe
			}
			_fcbdc.RefreshedDateIsoAttr = &_eafbb
			continue
		}
		if _ecbaf.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_bfafab, _gaadc := _dd.ParseBool(_ecbaf.Value)
			if _gaadc != nil {
				return _gaadc
			}
			_fcbdc.BackgroundQueryAttr = &_bfafab
			continue
		}
		if _ecbaf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_beaag, _bgfee := _dd.ParseUint(_ecbaf.Value, 10, 32)
			if _bgfee != nil {
				return _bgfee
			}
			_bcdfg := uint32(_beaag)
			_fcbdc.MissingItemsLimitAttr = &_bcdfg
			continue
		}
		if _ecbaf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_dbacf, _bcacc := _dd.ParseUint(_ecbaf.Value, 10, 8)
			if _bcacc != nil {
				return _bcacc
			}
			_adgbf := uint8(_dbacf)
			_fcbdc.CreatedVersionAttr = &_adgbf
			continue
		}
		if _ecbaf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cceabee, _bcebd := _dd.ParseUint(_ecbaf.Value, 10, 8)
			if _bcebd != nil {
				return _bcebd
			}
			_ccab := uint8(_cceabee)
			_fcbdc.RefreshedVersionAttr = &_ccab
			continue
		}
		if _ecbaf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ccfbbd, _gbgac := _dd.ParseUint(_ecbaf.Value, 10, 8)
			if _gbgac != nil {
				return _gbgac
			}
			_feebb := uint8(_ccfbbd)
			_fcbdc.MinRefreshableVersionAttr = &_feebb
			continue
		}
		if _ecbaf.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_bdfgf, _dbceb := _dd.ParseUint(_ecbaf.Value, 10, 32)
			if _dbceb != nil {
				return _dbceb
			}
			_afdag := uint32(_bdfgf)
			_fcbdc.RecordCountAttr = &_afdag
			continue
		}
		if _ecbaf.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_agdggb, _accbf := _dd.ParseBool(_ecbaf.Value)
			if _accbf != nil {
				return _accbf
			}
			_fcbdc.UpgradeOnRefreshAttr = &_agdggb
			continue
		}
		if _ecbaf.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_ebdec, _faded := _dd.ParseBool(_ecbaf.Value)
			if _faded != nil {
				return _faded
			}
			_fcbdc.TupleCacheAttr = &_ebdec
			continue
		}
		if _ecbaf.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_fadeb, _daeaa := _dd.ParseBool(_ecbaf.Value)
			if _daeaa != nil {
				return _daeaa
			}
			_fcbdc.SupportSubqueryAttr = &_fadeb
			continue
		}
		if _ecbaf.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_bafg, _agbba := _dd.ParseBool(_ecbaf.Value)
			if _agbba != nil {
				return _agbba
			}
			_fcbdc.SupportAdvancedDrillAttr = &_bafg
			continue
		}
	}
_gccbf:
	for {
		_fcbgf, _ffdac := d.Token()
		if _ffdac != nil {
			return _ffdac
		}
		switch _fabbcg := _fcbgf.(type) {
		case _a.StartElement:
			switch _fabbcg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _ggdgec := d.DecodeElement(_fcbdc.CacheSource, &_fabbcg); _ggdgec != nil {
					return _ggdgec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _afabdd := d.DecodeElement(_fcbdc.CacheFields, &_fabbcg); _afabdd != nil {
					return _afabdd
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_fcbdc.CacheHierarchies = NewCT_CacheHierarchies()
				if _dgcec := d.DecodeElement(_fcbdc.CacheHierarchies, &_fabbcg); _dgcec != nil {
					return _dgcec
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_fcbdc.Kpis = NewCT_PCDKPIs()
				if _adeee := d.DecodeElement(_fcbdc.Kpis, &_fabbcg); _adeee != nil {
					return _adeee
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_fcbdc.TupleCache = NewCT_TupleCache()
				if _cegad := d.DecodeElement(_fcbdc.TupleCache, &_fabbcg); _cegad != nil {
					return _cegad
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_fcbdc.CalculatedItems = NewCT_CalculatedItems()
				if _bbfa := d.DecodeElement(_fcbdc.CalculatedItems, &_fabbcg); _bbfa != nil {
					return _bbfa
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_fcbdc.CalculatedMembers = NewCT_CalculatedMembers()
				if _cefbc := d.DecodeElement(_fcbdc.CalculatedMembers, &_fabbcg); _cefbc != nil {
					return _cefbc
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_fcbdc.Dimensions = NewCT_Dimensions()
				if _gefac := d.DecodeElement(_fcbdc.Dimensions, &_fabbcg); _gefac != nil {
					return _gefac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_fcbdc.MeasureGroups = NewCT_MeasureGroups()
				if _effbg := d.DecodeElement(_fcbdc.MeasureGroups, &_fabbcg); _effbg != nil {
					return _effbg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_fcbdc.Maps = NewCT_MeasureDimensionMaps()
				if _cdgeb := d.DecodeElement(_fcbdc.Maps, &_fabbcg); _cdgeb != nil {
					return _cdgeb
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcbdc.ExtLst = NewCT_ExtensionList()
				if _bdfcd := d.DecodeElement(_fcbdc.ExtLst, &_fabbcg); _bdfcd != nil {
					return _bdfcd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _fabbcg.Name)
				if _fbbge := d.Skip(); _fbbge != nil {
					return _fbbge
				}
			}
		case _a.EndElement:
			break _gccbf
		case _a.CharData:
		}
	}
	return nil
}

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

func (_eefbae ST_ExternalConnectionType) Validate() error { return _eefbae.ValidateWithPath("") }
func (_abefd *CT_RPrEltChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_abcgbe := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
		_abefd.RFont = NewCT_FontName()
		if _gedfc := d.DecodeElement(_abefd.RFont, &_abcgbe); _gedfc != nil {
			return _gedfc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
		_abefd.Charset = NewCT_IntProperty()
		if _acdfd := d.DecodeElement(_abefd.Charset, &_abcgbe); _acdfd != nil {
			return _acdfd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
		_abefd.Family = NewCT_IntProperty()
		if _fbffb := d.DecodeElement(_abefd.Family, &_abcgbe); _fbffb != nil {
			return _fbffb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
		_abefd.B = NewCT_BooleanProperty()
		if _fgfbc := d.DecodeElement(_abefd.B, &_abcgbe); _fgfbc != nil {
			return _fgfbc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
		_abefd.I = NewCT_BooleanProperty()
		if _dfbge := d.DecodeElement(_abefd.I, &_abcgbe); _dfbge != nil {
			return _dfbge
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
		_abefd.Strike = NewCT_BooleanProperty()
		if _gbfcg := d.DecodeElement(_abefd.Strike, &_abcgbe); _gbfcg != nil {
			return _gbfcg
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
		_abefd.Outline = NewCT_BooleanProperty()
		if _fadfc := d.DecodeElement(_abefd.Outline, &_abcgbe); _fadfc != nil {
			return _fadfc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
		_abefd.Shadow = NewCT_BooleanProperty()
		if _ebcfb := d.DecodeElement(_abefd.Shadow, &_abcgbe); _ebcfb != nil {
			return _ebcfb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
		_abefd.Condense = NewCT_BooleanProperty()
		if _afdgff := d.DecodeElement(_abefd.Condense, &_abcgbe); _afdgff != nil {
			return _afdgff
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
		_abefd.Extend = NewCT_BooleanProperty()
		if _gfbfb := d.DecodeElement(_abefd.Extend, &_abcgbe); _gfbfb != nil {
			return _gfbfb
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
		_abefd.Color = NewCT_Color()
		if _afcgc := d.DecodeElement(_abefd.Color, &_abcgbe); _afcgc != nil {
			return _afcgc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
		_abefd.Sz = NewCT_FontSize()
		if _bgafa := d.DecodeElement(_abefd.Sz, &_abcgbe); _bgafa != nil {
			return _bgafa
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
		_abefd.U = NewCT_UnderlineProperty()
		if _ecgdd := d.DecodeElement(_abefd.U, &_abcgbe); _ecgdd != nil {
			return _ecgdd
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
		_abefd.VertAlign = NewCT_VerticalAlignFontProperty()
		if _agedc := d.DecodeElement(_abefd.VertAlign, &_abcgbe); _agedc != nil {
			return _agedc
		}
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
		_abefd.Scheme = NewCT_FontScheme()
		if _fdeca := d.DecodeElement(_abefd.Scheme, &_abcgbe); _fdeca != nil {
			return _fdeca
		}
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _abcgbe.Name)
		if _edfaf := d.Skip(); _edfaf != nil {
			return _edfaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_afbbb *CT_Worksheet) ValidateWithPath(path string) error {
	if _afbbb.SheetPr != nil {
		if _ffcfb := _afbbb.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _ffcfb != nil {
			return _ffcfb
		}
	}
	if _afbbb.Dimension != nil {
		if _egeee := _afbbb.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _egeee != nil {
			return _egeee
		}
	}
	if _afbbb.SheetViews != nil {
		if _edgde := _afbbb.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _edgde != nil {
			return _edgde
		}
	}
	if _afbbb.SheetFormatPr != nil {
		if _cdabd := _afbbb.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _cdabd != nil {
			return _cdabd
		}
	}
	for _gcaabb, _fcfdfg := range _afbbb.Cols {
		if _adffe := _fcfdfg.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _gcaabb)); _adffe != nil {
			return _adffe
		}
	}
	if _ffedeb := _afbbb.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _ffedeb != nil {
		return _ffedeb
	}
	if _afbbb.SheetCalcPr != nil {
		if _egeef := _afbbb.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _egeef != nil {
			return _egeef
		}
	}
	if _afbbb.SheetProtection != nil {
		if _cafgg := _afbbb.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _cafgg != nil {
			return _cafgg
		}
	}
	if _afbbb.ProtectedRanges != nil {
		if _cbgff := _afbbb.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _cbgff != nil {
			return _cbgff
		}
	}
	if _afbbb.Scenarios != nil {
		if _agdafe := _afbbb.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _agdafe != nil {
			return _agdafe
		}
	}
	if _afbbb.AutoFilter != nil {
		if _acecgg := _afbbb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _acecgg != nil {
			return _acecgg
		}
	}
	if _afbbb.SortState != nil {
		if _fcgdgad := _afbbb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _fcgdgad != nil {
			return _fcgdgad
		}
	}
	if _afbbb.DataConsolidate != nil {
		if _cdbfa := _afbbb.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _cdbfa != nil {
			return _cdbfa
		}
	}
	if _afbbb.CustomSheetViews != nil {
		if _cbebd := _afbbb.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _cbebd != nil {
			return _cbebd
		}
	}
	if _afbbb.MergeCells != nil {
		if _dggbg := _afbbb.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _dggbg != nil {
			return _dggbg
		}
	}
	if _afbbb.PhoneticPr != nil {
		if _efagf := _afbbb.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _efagf != nil {
			return _efagf
		}
	}
	for _cfced, _efaea := range _afbbb.ConditionalFormatting {
		if _edfgf := _efaea.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _cfced)); _edfgf != nil {
			return _edfgf
		}
	}
	if _afbbb.DataValidations != nil {
		if _cadgbg := _afbbb.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _cadgbg != nil {
			return _cadgbg
		}
	}
	if _afbbb.Hyperlinks != nil {
		if _dfagd := _afbbb.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _dfagd != nil {
			return _dfagd
		}
	}
	if _afbbb.PrintOptions != nil {
		if _ffabc := _afbbb.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _ffabc != nil {
			return _ffabc
		}
	}
	if _afbbb.PageMargins != nil {
		if _befaa := _afbbb.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _befaa != nil {
			return _befaa
		}
	}
	if _afbbb.PageSetup != nil {
		if _dcdec := _afbbb.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _dcdec != nil {
			return _dcdec
		}
	}
	if _afbbb.HeaderFooter != nil {
		if _agaab := _afbbb.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _agaab != nil {
			return _agaab
		}
	}
	if _afbbb.RowBreaks != nil {
		if _cfdfgg := _afbbb.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _cfdfgg != nil {
			return _cfdfgg
		}
	}
	if _afbbb.ColBreaks != nil {
		if _ecgac := _afbbb.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _ecgac != nil {
			return _ecgac
		}
	}
	if _afbbb.CustomProperties != nil {
		if _dagede := _afbbb.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _dagede != nil {
			return _dagede
		}
	}
	if _afbbb.CellWatches != nil {
		if _ffcdc := _afbbb.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _ffcdc != nil {
			return _ffcdc
		}
	}
	if _afbbb.IgnoredErrors != nil {
		if _acebeg := _afbbb.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _acebeg != nil {
			return _acebeg
		}
	}
	if _afbbb.SmartTags != nil {
		if _caceg := _afbbb.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _caceg != nil {
			return _caceg
		}
	}
	if _afbbb.Drawing != nil {
		if _bbddbb := _afbbb.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _bbddbb != nil {
			return _bbddbb
		}
	}
	if _afbbb.LegacyDrawing != nil {
		if _aeefaa := _afbbb.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _aeefaa != nil {
			return _aeefaa
		}
	}
	if _afbbb.LegacyDrawingHF != nil {
		if _aacaa := _afbbb.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _aacaa != nil {
			return _aacaa
		}
	}
	if _afbbb.DrawingHF != nil {
		if _afabdb := _afbbb.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _afabdb != nil {
			return _afabdb
		}
	}
	if _afbbb.Picture != nil {
		if _cgfee := _afbbb.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _cgfee != nil {
			return _cgfee
		}
	}
	if _afbbb.OleObjects != nil {
		if _cdbff := _afbbb.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _cdbff != nil {
			return _cdbff
		}
	}
	if _afbbb.Controls != nil {
		if _dbefc := _afbbb.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _dbefc != nil {
			return _dbefc
		}
	}
	if _afbbb.WebPublishItems != nil {
		if _cbgcbe := _afbbb.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _cbgcbe != nil {
			return _cbgcbe
		}
	}
	if _afbbb.TableParts != nil {
		if _cbcbd := _afbbb.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _cbcbd != nil {
			return _cbcbd
		}
	}
	if _afbbb.ExtLst != nil {
		if _febfdg := _afbbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _febfdg != nil {
			return _febfdg
		}
	}
	return nil
}
func NewCT_FontFamily() *CT_FontFamily { _ffafb := &CT_FontFamily{}; _ffafb.ValAttr = 0; return _ffafb }
func (_gadfg ST_RevisionAction) String() string {
	switch _gadfg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}
func (_dccgfc *ST_DataValidationErrorStyle) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_fcdaf, _fafegf := d.Token()
	if _fafegf != nil {
		return _fafegf
	}
	if _caeaaf, _acecgf := _fcdaf.(_a.EndElement); _acecgf && _caeaaf.Name == start.Name {
		*_dccgfc = 1
		return nil
	}
	if _bcgab, _fbfac := _fcdaf.(_a.CharData); !_fbfac {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcdaf)
	} else {
		switch string(_bcgab) {
		case "":
			*_dccgfc = 0
		case "\u0073\u0074\u006f\u0070":
			*_dccgfc = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_dccgfc = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_dccgfc = 3
		}
	}
	_fcdaf, _fafegf = d.Token()
	if _fafegf != nil {
		return _fafegf
	}
	if _dcfgg, _decabd := _fcdaf.(_a.EndElement); _decabd && _dcfgg.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcdaf)
}
func (_ccdc *CT_CalcCell) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _ccdc.RAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072"}, Value: _fd.Sprintf("\u0025\u0076", *_ccdc.RAttr)})
	}
	if _ccdc.RefAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", *_ccdc.RefAttr)})
	}
	if _ccdc.IAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0069"}, Value: _fd.Sprintf("\u0025\u0076", *_ccdc.IAttr)})
	}
	if _ccdc.SAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ccdc.SAttr))})
	}
	if _ccdc.LAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006c"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ccdc.LAttr))})
	}
	if _ccdc.TAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ccdc.TAttr))})
	}
	if _ccdc.AAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_ccdc.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_ddea *CT_DynamicFilter) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	_cgcfbc, _gbba := _ddea.TypeAttr.MarshalXMLAttr(_a.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _gbba != nil {
		return _gbba
	}
	start.Attr = append(start.Attr, _cgcfbc)
	if _ddea.ValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_ddea.ValAttr)})
	}
	if _ddea.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _b.FormatDateTime(*_ddea.ValIsoAttr)})
	}
	if _ddea.MaxValAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", *_ddea.MaxValAttr)})
	}
	if _ddea.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _b.FormatDateTime(*_ddea.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_CellStyles() *CT_CellStyles { _dged := &CT_CellStyles{}; return _dged }

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_feabe *CT_rowItems) ValidateWithPath(path string) error {
	for _ggadda, _dfgdc := range _feabe.I {
		if _eefed := _dfgdc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _ggadda)); _eefed != nil {
			return _eefed
		}
	}
	return nil
}
func NewWorkbook() *Workbook {
	_eaaecg := &Workbook{}
	_eaaecg.CT_Workbook = *NewCT_Workbook()
	return _eaaecg
}

type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}

func (_addb *CT_Comment) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_addb.Text = NewCT_Rst()
	for _, _aaf := range start.Attr {
		if _aaf.Name.Local == "\u0072\u0065\u0066" {
			_ecdg := _aaf.Value
			_addb.RefAttr = _ecdg
			continue
		}
		if _aaf.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_dbga, _gbgd := _dd.ParseUint(_aaf.Value, 10, 32)
			if _gbgd != nil {
				return _gbgd
			}
			_addb.AuthorIdAttr = uint32(_dbga)
			continue
		}
		if _aaf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_baec := _aaf.Value
			_addb.GuidAttr = &_baec
			continue
		}
		if _aaf.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_gcbeg, _fedfe := _dd.ParseUint(_aaf.Value, 10, 32)
			if _fedfe != nil {
				return _fedfe
			}
			_bcfc := uint32(_gcbeg)
			_addb.ShapeIdAttr = &_bcfc
			continue
		}
	}
_bcaa:
	for {
		_befd, _eeag := d.Token()
		if _eeag != nil {
			return _eeag
		}
		switch _cdcf := _befd.(type) {
		case _a.StartElement:
			switch _cdcf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _cebeg := d.DecodeElement(_addb.Text, &_cdcf); _cebeg != nil {
					return _cebeg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_addb.CommentPr = NewCT_CommentPr()
				if _fgbaa := d.DecodeElement(_addb.CommentPr, &_cdcf); _fgbaa != nil {
					return _fgbaa
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _cdcf.Name)
				if _gbdec := d.Skip(); _gbdec != nil {
					return _gbdec
				}
			}
		case _a.EndElement:
			break _bcaa
		case _a.CharData:
		}
	}
	return nil
}
func (_faece *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_faece = 0
	case "\u006e\u006f\u006e\u0065":
		*_faece = 1
	case "\u0073\u0075\u006d":
		*_faece = 2
	case "\u006d\u0069\u006e":
		*_faece = 3
	case "\u006d\u0061\u0078":
		*_faece = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_faece = 5
	case "\u0063\u006f\u0075n\u0074":
		*_faece = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_faece = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_faece = 8
	case "\u0076\u0061\u0072":
		*_faece = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_faece = 10
	}
	return nil
}

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_bcgg *CT_DdeValues) ValidateWithPath(path string) error {
	for _debd, _cagbc := range _bcgg.Value {
		if _fbfa := _cagbc.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _debd)); _fbfa != nil {
			return _fbfa
		}
	}
	return nil
}

// Validate validates the CT_PivotFields and its children
func (_egafaa *CT_PivotFields) Validate() error {
	return _egafaa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}
func (_ddcdgd *CT_FontSize) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0076\u0061\u006c"}, Value: _fd.Sprintf("\u0025\u0076", _ddcdgd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_gcbgc *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }
func (_babecd *CT_VolTypes) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	e.EncodeToken(start)
	_gggecf := _a.StartElement{Name: _a.Name{Local: "m\u0061\u0069\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _bbafad := range _babecd.VolType {
		e.EncodeElement(_bbafad, _gggecf)
	}
	if _babecd.ExtLst != nil {
		_febgcf := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_babecd.ExtLst, _febgcf)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_caacc *ST_DvAspect) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_caacc = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_caacc = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_caacc = 2
	}
	return nil
}
func (_edcge *CT_MdxTuple) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _adfe := range start.Attr {
		if _adfe.Name.Local == "\u0063" {
			_ddged, _cgceb := _dd.ParseUint(_adfe.Value, 10, 32)
			if _cgceb != nil {
				return _cgceb
			}
			_dffb := uint32(_ddged)
			_edcge.CAttr = &_dffb
			continue
		}
		if _adfe.Name.Local == "\u0063\u0074" {
			_fccce := _adfe.Value
			_edcge.CtAttr = &_fccce
			continue
		}
		if _adfe.Name.Local == "\u0073\u0069" {
			_gadcd, _daaff := _dd.ParseUint(_adfe.Value, 10, 32)
			if _daaff != nil {
				return _daaff
			}
			_dddcd := uint32(_gadcd)
			_edcge.SiAttr = &_dddcd
			continue
		}
		if _adfe.Name.Local == "\u0066\u0069" {
			_cffff, _ggdge := _dd.ParseUint(_adfe.Value, 10, 32)
			if _ggdge != nil {
				return _ggdge
			}
			_ceegb := uint32(_cffff)
			_edcge.FiAttr = &_ceegb
			continue
		}
		if _adfe.Name.Local == "\u0062\u0063" {
			_baadc := _adfe.Value
			_edcge.BcAttr = &_baadc
			continue
		}
		if _adfe.Name.Local == "\u0066\u0063" {
			_acecf := _adfe.Value
			_edcge.FcAttr = &_acecf
			continue
		}
		if _adfe.Name.Local == "\u0069" {
			_aadg, _geafd := _dd.ParseBool(_adfe.Value)
			if _geafd != nil {
				return _geafd
			}
			_edcge.IAttr = &_aadg
			continue
		}
		if _adfe.Name.Local == "\u0075" {
			_dadgg, _fbgbf := _dd.ParseBool(_adfe.Value)
			if _fbgbf != nil {
				return _fbgbf
			}
			_edcge.UAttr = &_dadgg
			continue
		}
		if _adfe.Name.Local == "\u0073\u0074" {
			_fccf, _cabaef := _dd.ParseBool(_adfe.Value)
			if _cabaef != nil {
				return _cabaef
			}
			_edcge.StAttr = &_fccf
			continue
		}
		if _adfe.Name.Local == "\u0062" {
			_bebba, _dbbc := _dd.ParseBool(_adfe.Value)
			if _dbbc != nil {
				return _dbbc
			}
			_edcge.BAttr = &_bebba
			continue
		}
	}
_cfdgc:
	for {
		_dcdfbd, _ecgdg := d.Token()
		if _ecgdg != nil {
			return _ecgdg
		}
		switch _feefa := _dcdfbd.(type) {
		case _a.StartElement:
			switch _feefa.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gfeeg := NewCT_MetadataStringIndex()
				if _dgbegf := d.DecodeElement(_gfeeg, &_feefa); _dgbegf != nil {
					return _dgbegf
				}
				_edcge.N = append(_edcge.N, _gfeeg)
			default:
				_ae.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _feefa.Name)
				if _fgbfd := d.Skip(); _fgbfd != nil {
					return _fgbfd
				}
			}
		case _a.EndElement:
			break _cfdgc
		case _a.CharData:
		}
	}
	return nil
}
func (_gcecg *CT_Users) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _gcecg.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_gcecg.CountAttr)})
	}
	e.EncodeToken(start)
	if _gcecg.UserInfo != nil {
		_gbefg := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069:\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _adega := range _gcecg.UserInfo {
			e.EncodeElement(_adega, _gbefg)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func (_aeega *CT_PivotAreas) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _aeega.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_aeega.CountAttr)})
	}
	e.EncodeToken(start)
	if _aeega.PivotArea != nil {
		_bgffb := _a.StartElement{Name: _a.Name{Local: "\u006d\u0061\u0069\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _fbade := range _aeega.PivotArea {
			e.EncodeElement(_fbade, _bgffb)
		}
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type ST_GroupBy byte

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_cbadb *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _eefdc, _cdeca := range _cbadb.Map {
		if _fbfcgf := _cdeca.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _eefdc)); _fbfcgf != nil {
			return _fbfcgf
		}
	}
	return nil
}
func (_bgddc *CT_NumFmt) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _bgddc.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _bgddc.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

func (_gdffe *CT_RevisionsChoice) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_bddbdcg := start
	switch start.Name {
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
		_cefeg := NewCT_RevisionRowColumn()
		if _fadff := d.DecodeElement(_cefeg, &_bddbdcg); _fadff != nil {
			return _fadff
		}
		_gdffe.Rrc = append(_gdffe.Rrc, _cefeg)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
		_adfge := NewCT_RevisionMove()
		if _bcbfae := d.DecodeElement(_adfge, &_bddbdcg); _bcbfae != nil {
			return _bcbfae
		}
		_gdffe.Rm = append(_gdffe.Rm, _adfge)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
		_gddbd := NewCT_RevisionCustomView()
		if _ggbeg := d.DecodeElement(_gddbd, &_bddbdcg); _ggbeg != nil {
			return _ggbeg
		}
		_gdffe.Rcv = append(_gdffe.Rcv, _gddbd)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
		_dcacc := NewCT_RevisionSheetRename()
		if _bfbee := d.DecodeElement(_dcacc, &_bddbdcg); _bfbee != nil {
			return _bfbee
		}
		_gdffe.Rsnm = append(_gdffe.Rsnm, _dcacc)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
		_cbfcg := NewCT_RevisionInsertSheet()
		if _ggadd := d.DecodeElement(_cbfcg, &_bddbdcg); _ggadd != nil {
			return _ggadd
		}
		_gdffe.Ris = append(_gdffe.Ris, _cbfcg)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
		_ffdace := NewCT_RevisionCellChange()
		if _daffa := d.DecodeElement(_ffdace, &_bddbdcg); _daffa != nil {
			return _daffa
		}
		_gdffe.Rcc = append(_gdffe.Rcc, _ffdace)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
		_bggef := NewCT_RevisionFormatting()
		if _beede := d.DecodeElement(_bggef, &_bddbdcg); _beede != nil {
			return _beede
		}
		_gdffe.Rfmt = append(_gdffe.Rfmt, _bggef)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
		_aebfd := NewCT_RevisionAutoFormatting()
		if _cfaggb := d.DecodeElement(_aebfd, &_bddbdcg); _cfaggb != nil {
			return _cfaggb
		}
		_gdffe.Raf = append(_gdffe.Raf, _aebfd)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
		_bbfbf := NewCT_RevisionDefinedName()
		if _fafgg := d.DecodeElement(_bbfbf, &_bddbdcg); _fafgg != nil {
			return _fafgg
		}
		_gdffe.Rdn = append(_gdffe.Rdn, _bbfbf)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
		_cefd := NewCT_RevisionComment()
		if _acdacg := d.DecodeElement(_cefd, &_bddbdcg); _acdacg != nil {
			return _acdacg
		}
		_gdffe.Rcmt = append(_gdffe.Rcmt, _cefd)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
		_fgdaea := NewCT_RevisionQueryTableField()
		if _fegbg := d.DecodeElement(_fgdaea, &_bddbdcg); _fegbg != nil {
			return _fegbg
		}
		_gdffe.Rqt = append(_gdffe.Rqt, _fgdaea)
	case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
		_fdbca := NewCT_RevisionConflict()
		if _cdeeb := d.DecodeElement(_fdbca, &_bddbdcg); _cdeeb != nil {
			return _cdeeb
		}
		_gdffe.Rcft = append(_gdffe.Rcft, _fdbca)
	default:
		_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bddbdcg.Name)
		if _debeca := d.Skip(); _debeca != nil {
			return _debeca
		}
	}
	return nil
}
func NewCT_Groups() *CT_Groups { _agceb := &CT_Groups{}; return _agceb }

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_cfab *CT_CellWatch) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Set and its children
func (_babec *CT_Set) Validate() error {
	return _babec.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}
func (_bgbgc ST_SmartTagShow) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_cgdgdb := _a.Attr{}
	_cgdgdb.Name = name
	switch _bgbgc {
	case ST_SmartTagShowUnset:
		_cgdgdb.Value = ""
	case ST_SmartTagShowAll:
		_cgdgdb.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_cgdgdb.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_cgdgdb.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _cgdgdb, nil
}
func NewCT_ServerFormats() *CT_ServerFormats { _bddac := &CT_ServerFormats{}; return _bddac }
func (_effcfa ST_FieldSortType) String() string {
	switch _effcfa {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}
func (_gaabde ST_Scope) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_gaabde.String(), start)
}
func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_aaagec := &CT_RevisionFormatting{}
	return _aaagec
}
func (_bfbadd ST_DdeValueType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_eadfg := _a.Attr{}
	_eadfg.Name = name
	switch _bfbadd {
	case ST_DdeValueTypeUnset:
		_eadfg.Value = ""
	case ST_DdeValueTypeNil:
		_eadfg.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_eadfg.Value = "\u0062"
	case ST_DdeValueTypeN:
		_eadfg.Value = "\u006e"
	case ST_DdeValueTypeE:
		_eadfg.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_eadfg.Value = "\u0073\u0074\u0072"
	}
	return _eadfg, nil
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_eab *CT_CacheSource) ValidateWithPath(path string) error {
	if _eab.TypeAttr == ST_SourceTypeUnset {
		return _fd.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bgaf := _eab.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bgaf != nil {
		return _bgaf
	}
	if _eab.CacheSourceChoice != nil {
		if _dddc := _eab.CacheSourceChoice.ValidateWithPath(path + "\u002fC\u0061c\u0068\u0065\u0053\u006f\u0075r\u0063\u0065C\u0068\u006f\u0069\u0063\u0065"); _dddc != nil {
			return _dddc
		}
	}
	return nil
}
func (_acdfdg ST_FileType) MarshalXMLAttr(name _a.Name) (_a.Attr, error) {
	_fcabee := _a.Attr{}
	_fcabee.Name = name
	switch _acdfdg {
	case ST_FileTypeUnset:
		_fcabee.Value = ""
	case ST_FileTypeMac:
		_fcabee.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_fcabee.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_fcabee.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_fcabee.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_fcabee.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _fcabee, nil
}
func (_gacg *CT_HierarchyUsage) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _fd.Sprintf("\u0025\u0076", _gacg.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_String and its children
func (_acfd *CT_String) Validate() error {
	return _acfd.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}
func (_bcdfc *CT_WebPublishItems) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _bcdfc.CountAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _fd.Sprintf("\u0025\u0076", *_bcdfc.CountAttr)})
	}
	e.EncodeToken(start)
	_abacc := _a.StartElement{Name: _a.Name{Local: "\u006da\u0069:\u0077\u0065\u0062\u0050\u0075b\u006c\u0069s\u0068\u0049\u0074\u0065\u006d"}}
	for _, _fcffg := range _bcdfc.WebPublishItem {
		e.EncodeElement(_fcffg, _abacc)
	}
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}

func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_efcca := &CT_SingleXmlCell{}
	_efcca.XmlCellPr = NewCT_XmlCellPr()
	return _efcca
}
func (_dgegc *CT_SmartTagTypes) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
_cbdcbbc:
	for {
		_ffgad, _ggcedd := d.Token()
		if _ggcedd != nil {
			return _ggcedd
		}
		switch _bbdgf := _ffgad.(type) {
		case _a.StartElement:
			switch _bbdgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_fcbcga := NewCT_SmartTagType()
				if _ffafg := d.DecodeElement(_fcbcga, &_bbdgf); _ffafg != nil {
					return _ffafg
				}
				_dgegc.SmartTagType = append(_dgegc.SmartTagType, _fcbcga)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _bbdgf.Name)
				if _agebe := d.Skip(); _agebe != nil {
					return _agebe
				}
			}
		case _a.EndElement:
			break _cbdcbbc
		case _a.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Connection and its children
func (_fccea *CT_Connection) Validate() error {
	return _fccea.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_ffeae *CT_Tables) ValidateWithPath(path string) error {
	for _bcagf, _gffbg := range _ffeae.TablesChoice {
		if _geadf := _gffbg.ValidateWithPath(_fd.Sprintf("\u0025\u0073\u002f\u0054ab\u006c\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _bcagf)); _geadf != nil {
			return _geadf
		}
	}
	return nil
}
func (_cdca *CT_TextPr) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _fbdef := range start.Attr {
		if _fbdef.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_gcbdfe, _aedgfb := _dd.ParseBool(_fbdef.Value)
			if _aedgfb != nil {
				return _aedgfb
			}
			_cdca.PromptAttr = &_gcbdfe
			continue
		}
		if _fbdef.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_cdca.FileTypeAttr.UnmarshalXMLAttr(_fbdef)
			continue
		}
		if _fbdef.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_bdgcab, _eefadf := _dd.ParseUint(_fbdef.Value, 10, 32)
			if _eefadf != nil {
				return _eefadf
			}
			_cfccdg := uint32(_bdgcab)
			_cdca.CodePageAttr = &_cfccdg
			continue
		}
		if _fbdef.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_cabcff := _fbdef.Value
			_cdca.CharacterSetAttr = &_cabcff
			continue
		}
		if _fbdef.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_ccacd, _defbdd := _dd.ParseUint(_fbdef.Value, 10, 32)
			if _defbdd != nil {
				return _defbdd
			}
			_bgdgaa := uint32(_ccacd)
			_cdca.FirstRowAttr = &_bgdgaa
			continue
		}
		if _fbdef.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_dbaedf := _fbdef.Value
			_cdca.SourceFileAttr = &_dbaedf
			continue
		}
		if _fbdef.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_fgafc, _fccfg := _dd.ParseBool(_fbdef.Value)
			if _fccfg != nil {
				return _fccfg
			}
			_cdca.DelimitedAttr = &_fgafc
			continue
		}
		if _fbdef.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_fafdf := _fbdef.Value
			_cdca.DecimalAttr = &_fafdf
			continue
		}
		if _fbdef.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_gabbb := _fbdef.Value
			_cdca.ThousandsAttr = &_gabbb
			continue
		}
		if _fbdef.Name.Local == "\u0074\u0061\u0062" {
			_eegcac, _gaede := _dd.ParseBool(_fbdef.Value)
			if _gaede != nil {
				return _gaede
			}
			_cdca.TabAttr = &_eegcac
			continue
		}
		if _fbdef.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_bfce, _ffffbfe := _dd.ParseBool(_fbdef.Value)
			if _ffffbfe != nil {
				return _ffffbfe
			}
			_cdca.SpaceAttr = &_bfce
			continue
		}
		if _fbdef.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_gddecd, _gacdca := _dd.ParseBool(_fbdef.Value)
			if _gacdca != nil {
				return _gacdca
			}
			_cdca.CommaAttr = &_gddecd
			continue
		}
		if _fbdef.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_bgfdga, _dffbag := _dd.ParseBool(_fbdef.Value)
			if _dffbag != nil {
				return _dffbag
			}
			_cdca.SemicolonAttr = &_bgfdga
			continue
		}
		if _fbdef.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_degdg, _cggae := _dd.ParseBool(_fbdef.Value)
			if _cggae != nil {
				return _cggae
			}
			_cdca.ConsecutiveAttr = &_degdg
			continue
		}
		if _fbdef.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_cdca.QualifierAttr.UnmarshalXMLAttr(_fbdef)
			continue
		}
		if _fbdef.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_baebg := _fbdef.Value
			_cdca.DelimiterAttr = &_baebg
			continue
		}
	}
_efdcd:
	for {
		_aedgb, _ggdfg := d.Token()
		if _ggdfg != nil {
			return _ggdfg
		}
		switch _eaeebgb := _aedgb.(type) {
		case _a.StartElement:
			switch _eaeebgb.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_cdca.TextFields = NewCT_TextFields()
				if _daacbf := d.DecodeElement(_cdca.TextFields, &_eaeebgb); _daacbf != nil {
					return _daacbf
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _eaeebgb.Name)
				if _bgbea := d.Skip(); _bgbea != nil {
					return _bgbea
				}
			}
		case _a.EndElement:
			break _efdcd
		case _a.CharData:
		}
	}
	return nil
}
func (_fgcfd *CT_PivotField) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	for _, _edagdf := range start.Attr {
		if _edagdf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fecfg := _edagdf.Value
			_fgcfd.NameAttr = &_fecfg
			continue
		}
		if _edagdf.Name.Local == "\u0061\u0078\u0069\u0073" {
			_fgcfd.AxisAttr.UnmarshalXMLAttr(_edagdf)
			continue
		}
		if _edagdf.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_caaeeb, _bbcbeg := _dd.ParseBool(_edagdf.Value)
			if _bbcbeg != nil {
				return _bbcbeg
			}
			_fgcfd.DataFieldAttr = &_caaeeb
			continue
		}
		if _edagdf.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dgceg := _edagdf.Value
			_fgcfd.SubtotalCaptionAttr = &_dgceg
			continue
		}
		if _edagdf.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_gfcab, _ddcbac := _dd.ParseBool(_edagdf.Value)
			if _ddcbac != nil {
				return _ddcbac
			}
			_fgcfd.ShowDropDownsAttr = &_gfcab
			continue
		}
		if _edagdf.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_adgfc, _dgdbe := _dd.ParseBool(_edagdf.Value)
			if _dgdbe != nil {
				return _dgdbe
			}
			_fgcfd.HiddenLevelAttr = &_adgfc
			continue
		}
		if _edagdf.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_deaec := _edagdf.Value
			_fgcfd.UniqueMemberPropertyAttr = &_deaec
			continue
		}
		if _edagdf.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_badad, _aedffc := _dd.ParseBool(_edagdf.Value)
			if _aedffc != nil {
				return _aedffc
			}
			_fgcfd.CompactAttr = &_badad
			continue
		}
		if _edagdf.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_bfcae, _gefdb := _dd.ParseBool(_edagdf.Value)
			if _gefdb != nil {
				return _gefdb
			}
			_fgcfd.AllDrilledAttr = &_bfcae
			continue
		}
		if _edagdf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_eegcb, _bfbf := _dd.ParseUint(_edagdf.Value, 10, 32)
			if _bfbf != nil {
				return _bfbf
			}
			_cfafcc := uint32(_eegcb)
			_fgcfd.NumFmtIdAttr = &_cfafcc
			continue
		}
		if _edagdf.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cfeg, _bddcg := _dd.ParseBool(_edagdf.Value)
			if _bddcg != nil {
				return _bddcg
			}
			_fgcfd.OutlineAttr = &_cfeg
			continue
		}
		if _edagdf.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_cbgbg, _agddd := _dd.ParseBool(_edagdf.Value)
			if _agddd != nil {
				return _agddd
			}
			_fgcfd.SubtotalTopAttr = &_cbgbg
			continue
		}
		if _edagdf.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_deafdf, _bfbda := _dd.ParseBool(_edagdf.Value)
			if _bfbda != nil {
				return _bfbda
			}
			_fgcfd.DragToRowAttr = &_deafdf
			continue
		}
		if _edagdf.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_fegcf, _gafee := _dd.ParseBool(_edagdf.Value)
			if _gafee != nil {
				return _gafee
			}
			_fgcfd.DragToColAttr = &_fegcf
			continue
		}
		if _edagdf.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_faeea, _bbedc := _dd.ParseBool(_edagdf.Value)
			if _bbedc != nil {
				return _bbedc
			}
			_fgcfd.MultipleItemSelectionAllowedAttr = &_faeea
			continue
		}
		if _edagdf.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_adcfg, _dcbga := _dd.ParseBool(_edagdf.Value)
			if _dcbga != nil {
				return _dcbga
			}
			_fgcfd.DragToPageAttr = &_adcfg
			continue
		}
		if _edagdf.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_deafdb, _dadde := _dd.ParseBool(_edagdf.Value)
			if _dadde != nil {
				return _dadde
			}
			_fgcfd.DragToDataAttr = &_deafdb
			continue
		}
		if _edagdf.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_agdaf, _bfbdd := _dd.ParseBool(_edagdf.Value)
			if _bfbdd != nil {
				return _bfbdd
			}
			_fgcfd.DragOffAttr = &_agdaf
			continue
		}
		if _edagdf.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_befce, _bdfdd := _dd.ParseBool(_edagdf.Value)
			if _bdfdd != nil {
				return _bdfdd
			}
			_fgcfd.ShowAllAttr = &_befce
			continue
		}
		if _edagdf.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_dgec, _befgdg := _dd.ParseBool(_edagdf.Value)
			if _befgdg != nil {
				return _befgdg
			}
			_fgcfd.InsertBlankRowAttr = &_dgec
			continue
		}
		if _edagdf.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_bgcgc, _fbbcg := _dd.ParseBool(_edagdf.Value)
			if _fbbcg != nil {
				return _fbbcg
			}
			_fgcfd.ServerFieldAttr = &_bgcgc
			continue
		}
		if _edagdf.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_gefaf, _gddfba := _dd.ParseBool(_edagdf.Value)
			if _gddfba != nil {
				return _gddfba
			}
			_fgcfd.InsertPageBreakAttr = &_gefaf
			continue
		}
		if _edagdf.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_gaceg, _bfedg := _dd.ParseBool(_edagdf.Value)
			if _bfedg != nil {
				return _bfedg
			}
			_fgcfd.AutoShowAttr = &_gaceg
			continue
		}
		if _edagdf.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_dgfaa, _dbegd := _dd.ParseBool(_edagdf.Value)
			if _dbegd != nil {
				return _dbegd
			}
			_fgcfd.TopAutoShowAttr = &_dgfaa
			continue
		}
		if _edagdf.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_eefbc, _aaedd := _dd.ParseBool(_edagdf.Value)
			if _aaedd != nil {
				return _aaedd
			}
			_fgcfd.HideNewItemsAttr = &_eefbc
			continue
		}
		if _edagdf.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dgbgf, _acadf := _dd.ParseBool(_edagdf.Value)
			if _acadf != nil {
				return _acadf
			}
			_fgcfd.MeasureFilterAttr = &_dgbgf
			continue
		}
		if _edagdf.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_gfgef, _daabb := _dd.ParseBool(_edagdf.Value)
			if _daabb != nil {
				return _daabb
			}
			_fgcfd.IncludeNewItemsInFilterAttr = &_gfgef
			continue
		}
		if _edagdf.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_cbadg, _addcf := _dd.ParseUint(_edagdf.Value, 10, 32)
			if _addcf != nil {
				return _addcf
			}
			_gebca := uint32(_cbadg)
			_fgcfd.ItemPageCountAttr = &_gebca
			continue
		}
		if _edagdf.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_fgcfd.SortTypeAttr.UnmarshalXMLAttr(_edagdf)
			continue
		}
		if _edagdf.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_addafd, _bfcfa := _dd.ParseBool(_edagdf.Value)
			if _bfcfa != nil {
				return _bfcfa
			}
			_fgcfd.DataSourceSortAttr = &_addafd
			continue
		}
		if _edagdf.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_efgfd, _ecfbc := _dd.ParseBool(_edagdf.Value)
			if _ecfbc != nil {
				return _ecfbc
			}
			_fgcfd.NonAutoSortDefaultAttr = &_efgfd
			continue
		}
		if _edagdf.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_abaff, _aaadg := _dd.ParseUint(_edagdf.Value, 10, 32)
			if _aaadg != nil {
				return _aaadg
			}
			_aeggb := uint32(_abaff)
			_fgcfd.RankByAttr = &_aeggb
			continue
		}
		if _edagdf.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abddf, _fgcfdd := _dd.ParseBool(_edagdf.Value)
			if _fgcfdd != nil {
				return _fgcfdd
			}
			_fgcfd.DefaultSubtotalAttr = &_abddf
			continue
		}
		if _edagdf.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gdegb, _eabdcf := _dd.ParseBool(_edagdf.Value)
			if _eabdcf != nil {
				return _eabdcf
			}
			_fgcfd.SumSubtotalAttr = &_gdegb
			continue
		}
		if _edagdf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_gcbcef, _bacebg := _dd.ParseBool(_edagdf.Value)
			if _bacebg != nil {
				return _bacebg
			}
			_fgcfd.CountASubtotalAttr = &_gcbcef
			continue
		}
		if _edagdf.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cggbaa, _ageabg := _dd.ParseBool(_edagdf.Value)
			if _ageabg != nil {
				return _ageabg
			}
			_fgcfd.AvgSubtotalAttr = &_cggbaa
			continue
		}
		if _edagdf.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bbebg, _aeffc := _dd.ParseBool(_edagdf.Value)
			if _aeffc != nil {
				return _aeffc
			}
			_fgcfd.MaxSubtotalAttr = &_bbebg
			continue
		}
		if _edagdf.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gcadf, _fabeb := _dd.ParseBool(_edagdf.Value)
			if _fabeb != nil {
				return _fabeb
			}
			_fgcfd.MinSubtotalAttr = &_gcadf
			continue
		}
		if _edagdf.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fbdcc, _gddgbb := _dd.ParseBool(_edagdf.Value)
			if _gddgbb != nil {
				return _gddgbb
			}
			_fgcfd.ProductSubtotalAttr = &_fbdcc
			continue
		}
		if _edagdf.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gedeg, _bafc := _dd.ParseBool(_edagdf.Value)
			if _bafc != nil {
				return _bafc
			}
			_fgcfd.CountSubtotalAttr = &_gedeg
			continue
		}
		if _edagdf.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_gaccf, _efdag := _dd.ParseBool(_edagdf.Value)
			if _efdag != nil {
				return _efdag
			}
			_fgcfd.StdDevSubtotalAttr = &_gaccf
			continue
		}
		if _edagdf.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fffdg, _dfec := _dd.ParseBool(_edagdf.Value)
			if _dfec != nil {
				return _dfec
			}
			_fgcfd.StdDevPSubtotalAttr = &_fffdg
			continue
		}
		if _edagdf.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cadfg, _bbeee := _dd.ParseBool(_edagdf.Value)
			if _bbeee != nil {
				return _bbeee
			}
			_fgcfd.VarSubtotalAttr = &_cadfg
			continue
		}
		if _edagdf.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bcca, _aeggg := _dd.ParseBool(_edagdf.Value)
			if _aeggg != nil {
				return _aeggg
			}
			_fgcfd.VarPSubtotalAttr = &_bcca
			continue
		}
		if _edagdf.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_baccb, _dgged := _dd.ParseBool(_edagdf.Value)
			if _dgged != nil {
				return _dgged
			}
			_fgcfd.ShowPropCellAttr = &_baccb
			continue
		}
		if _edagdf.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_ddbda, _fbbgd := _dd.ParseBool(_edagdf.Value)
			if _fbbgd != nil {
				return _fbbgd
			}
			_fgcfd.ShowPropTipAttr = &_ddbda
			continue
		}
		if _edagdf.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_ddfcb, _fgeeb := _dd.ParseBool(_edagdf.Value)
			if _fgeeb != nil {
				return _fgeeb
			}
			_fgcfd.ShowPropAsCaptionAttr = &_ddfcb
			continue
		}
		if _edagdf.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_gecab, _gfggg := _dd.ParseBool(_edagdf.Value)
			if _gfggg != nil {
				return _gfggg
			}
			_fgcfd.DefaultAttributeDrillStateAttr = &_gecab
			continue
		}
	}
_gcgcb:
	for {
		_efdg, _cadce := d.Token()
		if _cadce != nil {
			return _cadce
		}
		switch _fgagg := _efdg.(type) {
		case _a.StartElement:
			switch _fgagg.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_fgcfd.Items = NewCT_Items()
				if _fegab := d.DecodeElement(_fgcfd.Items, &_fgagg); _fegab != nil {
					return _fegab
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_fgcfd.AutoSortScope = NewCT_AutoSortScope()
				if _bbabg := d.DecodeElement(_fgcfd.AutoSortScope, &_fgagg); _bbabg != nil {
					return _bbabg
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgcfd.ExtLst = NewCT_ExtensionList()
				if _fegec := d.DecodeElement(_fgcfd.ExtLst, &_fgagg); _fegec != nil {
					return _fegec
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _fgagg.Name)
				if _ffaee := d.Skip(); _ffaee != nil {
					return _ffaee
				}
			}
		case _a.EndElement:
			break _gcgcb
		case _a.CharData:
		}
	}
	return nil
}
func (_ccgdc *ST_PivotFilterType) UnmarshalXMLAttr(attr _a.Attr) error {
	switch attr.Value {
	case "":
		*_ccgdc = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_ccgdc = 1
	case "\u0063\u006f\u0075n\u0074":
		*_ccgdc = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_ccgdc = 3
	case "\u0073\u0075\u006d":
		*_ccgdc = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_ccgdc = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_ccgdc = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_ccgdc = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_ccgdc = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_ccgdc = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_ccgdc = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_ccgdc = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_ccgdc = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_ccgdc = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_ccgdc = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_ccgdc = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_ccgdc = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_ccgdc = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_ccgdc = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_ccgdc = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_ccgdc = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_ccgdc = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_ccgdc = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_ccgdc = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_ccgdc = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_ccgdc = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_ccgdc = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_ccgdc = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_ccgdc = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_ccgdc = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_ccgdc = 35
	case "\u0074\u006f\u0064a\u0079":
		*_ccgdc = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_ccgdc = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_ccgdc = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_ccgdc = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_ccgdc = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_ccgdc = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_ccgdc = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_ccgdc = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_ccgdc = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_ccgdc = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_ccgdc = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_ccgdc = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_ccgdc = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_ccgdc = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_ccgdc = 50
	case "\u0051\u0031":
		*_ccgdc = 51
	case "\u0051\u0032":
		*_ccgdc = 52
	case "\u0051\u0033":
		*_ccgdc = 53
	case "\u0051\u0034":
		*_ccgdc = 54
	case "\u004d\u0031":
		*_ccgdc = 55
	case "\u004d\u0032":
		*_ccgdc = 56
	case "\u004d\u0033":
		*_ccgdc = 57
	case "\u004d\u0034":
		*_ccgdc = 58
	case "\u004d\u0035":
		*_ccgdc = 59
	case "\u004d\u0036":
		*_ccgdc = 60
	case "\u004d\u0037":
		*_ccgdc = 61
	case "\u004d\u0038":
		*_ccgdc = 62
	case "\u004d\u0039":
		*_ccgdc = 63
	case "\u004d\u0031\u0030":
		*_ccgdc = 64
	case "\u004d\u0031\u0031":
		*_ccgdc = 65
	case "\u004d\u0031\u0032":
		*_ccgdc = 66
	}
	return nil
}

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_abbdg *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _eaagad, _ggba := range _abbdg.ProtectedRange {
		if _gagef := _ggba.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _eaagad)); _gagef != nil {
			return _gagef
		}
	}
	return nil
}
func (_fdbbaf *CT_Reviewed) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fdbbaf.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}
func NewCT_Field() *CT_Field { _degba := &CT_Field{}; return _degba }

// Validate validates the Workbook and its children
func (_gfacea *Workbook) Validate() error {
	return _gfacea.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}
func (_fdbbee *CT_WorkbookPr) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	if _fdbbee.Date1904Attr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.Date1904Attr))})
	}
	if _fdbbee.ShowObjectsAttr != ST_ObjectsUnset {
		_gbaec, _aegdfg := _fdbbee.ShowObjectsAttr.MarshalXMLAttr(_a.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _aegdfg != nil {
			return _aegdfg
		}
		start.Attr = append(start.Attr, _gbaec)
	}
	if _fdbbee.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.ShowBorderUnselectedTablesAttr))})
	}
	if _fdbbee.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.FilterPrivacyAttr))})
	}
	if _fdbbee.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.PromptedSolutionsAttr))})
	}
	if _fdbbee.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.ShowInkAnnotationAttr))})
	}
	if _fdbbee.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.BackupFileAttr))})
	}
	if _fdbbee.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.SaveExternalLinkValuesAttr))})
	}
	if _fdbbee.UpdateLinksAttr != ST_UpdateLinksUnset {
		_bgedfa, _fadcf := _fdbbee.UpdateLinksAttr.MarshalXMLAttr(_a.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _fadcf != nil {
			return _fadcf
		}
		start.Attr = append(start.Attr, _bgedfa)
	}
	if _fdbbee.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _fd.Sprintf("\u0025\u0076", *_fdbbee.CodeNameAttr)})
	}
	if _fdbbee.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.HidePivotFieldListAttr))})
	}
	if _fdbbee.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.ShowPivotChartFilterAttr))})
	}
	if _fdbbee.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.AllowRefreshQueryAttr))})
	}
	if _fdbbee.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.PublishItemsAttr))})
	}
	if _fdbbee.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.CheckCompatibilityAttr))})
	}
	if _fdbbee.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.AutoCompressPicturesAttr))})
	}
	if _fdbbee.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fdbbee.RefreshAllConnectionsAttr))})
	}
	if _fdbbee.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _fd.Sprintf("\u0025\u0076", *_fdbbee.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_bcdec := &CT_ExternalDefinedNames{}
	return _bcdec
}

type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}

func NewCT_FilterColumn() *CT_FilterColumn { _ebdcf := &CT_FilterColumn{}; return _ebdcf }

// Validate validates the CT_CfRule and its children
func (_ecbb *CT_CfRule) Validate() error {
	return _ecbb.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_dgeafe *CT_SmartTags) ValidateWithPath(path string) error {
	for _addba, _afaebd := range _dgeafe.CellSmartTags {
		if _fcddd := _afaebd.ValidateWithPath(_fd.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _addba)); _fcddd != nil {
			return _fcddd
		}
	}
	return nil
}

type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_cdea *CT_GroupMember) ValidateWithPath(path string) error { return nil }

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

func (_dfgc *CT_CustomChartsheetView) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_dfgc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _abacg := range start.Attr {
		if _abacg.Name.Local == "\u0067\u0075\u0069\u0064" {
			_bgfdg := _abacg.Value
			_dfgc.GuidAttr = _bgfdg
			continue
		}
		if _abacg.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_ccdg, _daabf := _dd.ParseUint(_abacg.Value, 10, 32)
			if _daabf != nil {
				return _daabf
			}
			_ccedb := uint32(_ccdg)
			_dfgc.ScaleAttr = &_ccedb
			continue
		}
		if _abacg.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_dfgc.StateAttr.UnmarshalXMLAttr(_abacg)
			continue
		}
		if _abacg.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_ecge, _adcc := _dd.ParseBool(_abacg.Value)
			if _adcc != nil {
				return _adcc
			}
			_dfgc.ZoomToFitAttr = &_ecge
			continue
		}
	}
_efcb:
	for {
		_cdfef, _gagcb := d.Token()
		if _gagcb != nil {
			return _gagcb
		}
		switch _cdgf := _cdfef.(type) {
		case _a.StartElement:
			switch _cdgf.Name {
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_dfgc.PageMargins = NewCT_PageMargins()
				if _acbcac := d.DecodeElement(_dfgc.PageMargins, &_cdgf); _acbcac != nil {
					return _acbcac
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_dfgc.PageSetup = NewCT_CsPageSetup()
				if _dada := d.DecodeElement(_dfgc.PageSetup, &_cdgf); _dada != nil {
					return _dada
				}
			case _a.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _a.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dfgc.HeaderFooter = NewCT_HeaderFooter()
				if _ddgge := d.DecodeElement(_dfgc.HeaderFooter, &_cdgf); _ddgge != nil {
					return _ddgge
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _cdgf.Name)
				if _dgcae := d.Skip(); _dgcae != nil {
					return _dgcae
				}
			}
		case _a.EndElement:
			break _efcb
		case _a.CharData:
		}
	}
	return nil
}

type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}

func NewCT_Dialogsheet() *CT_Dialogsheet { _aadcb := &CT_Dialogsheet{}; return _aadcb }
func NewCT_DataField() *CT_DataField     { _edecc := &CT_DataField{}; return _edecc }
func (_aafbc ST_TargetScreenSize) String() string {
	switch _aafbc {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}

func (_fbcbg *CT_RevisionAutoFormatting) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", _fbcbg.SheetIdAttr)})
	start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0072\u0065\u0066"}, Value: _fd.Sprintf("\u0025\u0076", _fbcbg.RefAttr)})
	if _fbcbg.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _fd.Sprintf("\u0025\u0076", *_fbcbg.AutoFormatIdAttr)})
	}
	if _fbcbg.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyNumberFormatsAttr))})
	}
	if _fbcbg.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyBorderFormatsAttr))})
	}
	if _fbcbg.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyFontFormatsAttr))})
	}
	if _fbcbg.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyPatternFormatsAttr))})
	}
	if _fbcbg.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyAlignmentFormatsAttr))})
	}
	if _fbcbg.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _a.Attr{Name: _a.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _fd.Sprintf("\u0025\u0064", _bbbge(*_fbcbg.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_a.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Break and its children
func (_ccgb *CT_Break) Validate() error {
	return _ccgb.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}

type ST_CellComments byte

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_bdega *CT_OleLink) ValidateWithPath(path string) error {
	if _bdega.OleItems != nil {
		if _agdfd := _bdega.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _agdfd != nil {
			return _agdfd
		}
	}
	return nil
}
func NewCT_SheetData() *CT_SheetData {
	_bgedd := &CT_SheetData{}
	return _bgedd
}

// Validate validates the CT_CustomWorkbookViews and its children
func (_ecfga *CT_CustomWorkbookViews) Validate() error {
	return _ecfga.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}
func NewCT_GroupLevel() *CT_GroupLevel {
	_fgbaaa := &CT_GroupLevel{}
	return _fgbaaa
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_abage *CT_Fonts) ValidateWithPath(path string) error {
	for _eaeb, _dfcfa := range _abage.Font {
		if _gbag := _dfcfa.ValidateWithPath(_fd.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _eaeb)); _gbag != nil {
			return _gbag
		}
	}
	return nil
}
func (_gfdfca *ST_Visibility) UnmarshalXML(d *_a.Decoder, start _a.StartElement) error {
	_cdgfg, _gfdbag := d.Token()
	if _gfdbag != nil {
		return _gfdbag
	}
	if _fggcgg, _cbcfca := _cdgfg.(_a.EndElement); _cbcfca && _fggcgg.Name == start.Name {
		*_gfdfca = 1
		return nil
	}
	if _gebcg, _fdegec := _cdgfg.(_a.CharData); !_fdegec {
		return _fd.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdgfg)
	} else {
		switch string(_gebcg) {
		case "":
			*_gfdfca = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_gfdfca = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_gfdfca = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_gfdfca = 3
		}
	}
	_cdgfg, _gfdbag = d.Token()
	if _gfdbag != nil {
		return _gfdbag
	}
	if _cgbecc, _aadbd := _cdgfg.(_a.EndElement); _aadbd && _cgbecc.Name == start.Name {
		return nil
	}
	return _fd.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdgfg)
}
func init() {
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}
func (_eddecb ST_CfType) MarshalXML(e *_a.Encoder, start _a.StartElement) error {
	return e.EncodeElement(_eddecb.String(), start)
}
func (_cbfda ST_SheetViewType) Validate() error { return _cbfda.ValidateWithPath("") }
