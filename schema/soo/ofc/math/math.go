//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package math

import (
	_e "encoding/xml"
	_ga "fmt"
	_g "strconv"
	_a "unioffice"
	_ef "unioffice/common/logger"
	_c "unioffice/schema/soo/ofc/sharedTypes"
)

func (_dffgd ST_FType) String() string {
	switch _dffgd {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0072"
	case 2:
		return "\u0073\u006b\u0077"
	case 3:
		return "\u006c\u0069\u006e"
	case 4:
		return "\u006e\u006f\u0042a\u0072"
	}
	return ""
}
func NewCT_YAlign() *CT_YAlign { _agef := &CT_YAlign{}; _agef.ValAttr = _c.ST_YAlign(1); return _agef }
func NewCT_M() *CT_M           { _fega := &CT_M{}; return _fega }

// ValidateWithPath validates the CT_LimLowPr and its children, prefixing error messages with path
func (_dbcfd *CT_LimLowPr) ValidateWithPath(path string) error {
	if _dbcfd.CtrlPr != nil {
		if _bcdc := _dbcfd.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bcdc != nil {
			return _bcdc
		}
	}
	return nil
}

type CT_OMathJc struct {

	// Value
	ValAttr ST_Jc
}

func (_fbgc *CT_SSupPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _fbgc.CtrlPr != nil {
		_bafe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_fbgc.CtrlPr, _bafe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_SSupPr() *CT_SSupPr { _gbefb := &CT_SSupPr{}; return _gbefb }
func (_egegd ST_Style) ValidateWithPath(path string) error {
	switch _egegd {
	case 0, 1, 2, 3, 4:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egegd))
	}
	return nil
}
func NewCT_OMathJc() *CT_OMathJc { _cbaa := &CT_OMathJc{}; return _cbaa }

// ValidateWithPath validates the CT_OMathArgPr and its children, prefixing error messages with path
func (_cbcd *CT_OMathArgPr) ValidateWithPath(path string) error {
	if _cbcd.ArgSz != nil {
		if _acda := _cbcd.ArgSz.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0053\u007a"); _acda != nil {
			return _acda
		}
	}
	return nil
}
func (_eabde *CT_SSubSup) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eabde.E = NewCT_OMathArg()
	_eabde.Sub = NewCT_OMathArg()
	_eabde.Sup = NewCT_OMathArg()
_ecc:
	for {
		_ebaf, _bbaba := d.Token()
		if _bbaba != nil {
			return _bbaba
		}
		switch _cgeg := _ebaf.(type) {
		case _e.StartElement:
			switch _cgeg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070\u0050r"}:
				_eabde.SSubSupPr = NewCT_SSubSupPr()
				if _bege := d.DecodeElement(_eabde.SSubSupPr, &_cgeg); _bege != nil {
					return _bege
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ffdf := d.DecodeElement(_eabde.E, &_cgeg); _ffdf != nil {
					return _ffdf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _fagbd := d.DecodeElement(_eabde.Sub, &_cgeg); _fagbd != nil {
					return _fagbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _fcge := d.DecodeElement(_eabde.Sup, &_cgeg); _fcge != nil {
					return _fcge
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0020\u0025\u0076", _cgeg.Name)
				if _abfbd := d.Skip(); _abfbd != nil {
					return _abfbd
				}
			}
		case _e.EndElement:
			break _ecc
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Script and its children
func (_cgge *CT_Script) Validate() error {
	return _cgge.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t")
}
func (_bcffe *ST_FType) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bcffe = 0
	case "\u0062\u0061\u0072":
		*_bcffe = 1
	case "\u0073\u006b\u0077":
		*_bcffe = 2
	case "\u006c\u0069\u006e":
		*_bcffe = 3
	case "\u006e\u006f\u0042a\u0072":
		*_bcffe = 4
	}
	return nil
}
func (_abfg *CT_Integer2) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _abfg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BorderBox and its children
func (_fcb *CT_BorderBox) Validate() error {
	return _fcb.ValidateWithPath("\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078")
}

// ValidateWithPath validates the CT_MR and its children, prefixing error messages with path
func (_geac *CT_MR) ValidateWithPath(path string) error {
	for _gdbb, _ddde := range _geac.E {
		if _gddc := _ddde.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _gdbb)); _gddc != nil {
			return _gddc
		}
	}
	return nil
}
func NewCT_MR() *CT_MR { _dfc := &CT_MR{}; return _dfc }

type CT_LimUppPr struct{ CtrlPr *CT_CtrlPr }

// ValidateWithPath validates the CT_TopBot and its children, prefixing error messages with path
func (_bbeaf *CT_TopBot) ValidateWithPath(path string) error {
	if _bbeaf.ValAttr == ST_TopBotUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gaeed := _bbeaf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gaeed != nil {
		return _gaeed
	}
	return nil
}
func (_fdff *ST_BreakBin) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_fdff = 0
	case "\u0062\u0065\u0066\u006f\u0072\u0065":
		*_fdff = 1
	case "\u0061\u0066\u0074e\u0072":
		*_fdff = 2
	case "\u0072\u0065\u0070\u0065\u0061\u0074":
		*_fdff = 3
	}
	return nil
}
func (_ede *CT_SSub) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ede.E = NewCT_OMathArg()
	_ede.Sub = NewCT_OMathArg()
_eggcg:
	for {
		_gecg, _ggbg := d.Token()
		if _ggbg != nil {
			return _ggbg
		}
		switch _gcgg := _gecg.(type) {
		case _e.StartElement:
			switch _gcgg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062\u0050\u0072"}:
				_ede.SSubPr = NewCT_SSubPr()
				if _dcdd := d.DecodeElement(_ede.SSubPr, &_gcgg); _dcdd != nil {
					return _dcdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _bead := d.DecodeElement(_ede.E, &_gcgg); _bead != nil {
					return _bead
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _aefg := d.DecodeElement(_ede.Sub, &_gcgg); _aefg != nil {
					return _aefg
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0062\u0020\u0025\u0076", _gcgg.Name)
				if _ggff := d.Skip(); _ggff != nil {
					return _ggff
				}
			}
		case _e.EndElement:
			break _eggcg
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LimUpp and its children
func (_cbgd *CT_LimUpp) Validate() error {
	return _cbgd.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p")
}
func (_agdg *CT_LimLowPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _agdg.CtrlPr != nil {
		_edf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_agdg.CtrlPr, _edf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gfde *CT_Func) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gfde.FName = NewCT_OMathArg()
	_gfde.E = NewCT_OMathArg()
_dadg:
	for {
		_ccdf, _afff := d.Token()
		if _afff != nil {
			return _afff
		}
		switch _aab := _ccdf.(type) {
		case _e.StartElement:
			switch _aab.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063\u0050\u0072"}:
				_gfde.FuncPr = NewCT_FuncPr()
				if _ed := d.DecodeElement(_gfde.FuncPr, &_aab); _ed != nil {
					return _ed
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u004e\u0061m\u0065"}:
				if _gga := d.DecodeElement(_gfde.FName, &_aab); _gga != nil {
					return _gga
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _efdf := d.DecodeElement(_gfde.E, &_aab); _efdf != nil {
					return _efdf
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u006e\u0063\u0020\u0025\u0076", _aab.Name)
				if _dfa := d.Skip(); _dfa != nil {
					return _dfa
				}
			}
		case _e.EndElement:
			break _dadg
		case _e.CharData:
		}
	}
	return nil
}
func (_ebcgd *CT_GroupChrPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_babdb:
	for {
		_cgb, _cefd := d.Token()
		if _cefd != nil {
			return _cefd
		}
		switch _ceeg := _cgb.(type) {
		case _e.StartElement:
			switch _ceeg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_ebcgd.Chr = NewCT_Char()
				if _eggb := d.DecodeElement(_ebcgd.Chr, &_ceeg); _eggb != nil {
					return _eggb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_ebcgd.Pos = NewCT_TopBot()
				if _ebcf := d.DecodeElement(_ebcgd.Pos, &_ceeg); _ebcf != nil {
					return _ebcf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0076\u0065\u0072\u0074\u004a\u0063"}:
				_ebcgd.VertJc = NewCT_TopBot()
				if _cgcgg := d.DecodeElement(_ebcgd.VertJc, &_ceeg); _cgcgg != nil {
					return _cgcgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_ebcgd.CtrlPr = NewCT_CtrlPr()
				if _afa := d.DecodeElement(_ebcgd.CtrlPr, &_ceeg); _afa != nil {
					return _afa
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072 \u0025\u0076", _ceeg.Name)
				if _eegg := d.Skip(); _eegg != nil {
					return _eegg
				}
			}
		case _e.EndElement:
			break _babdb
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the OMathPara and its children, prefixing error messages with path
func (_eadd *OMathPara) ValidateWithPath(path string) error {
	if _fdad := _eadd.CT_OMathPara.ValidateWithPath(path); _fdad != nil {
		return _fdad
	}
	return nil
}

// Validate validates the CT_DPr and its children
func (_dcc *CT_DPr) Validate() error {
	return _dcc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0050\u0072")
}

type CT_MathPrChoice struct {
	WrapIndent *CT_TwipsMeasure
	WrapRight  *CT_OnOff
}
type CT_D struct {

	// Delimiter Properties
	DPr *CT_DPr

	// Base
	E []*CT_OMathArg
}
type ST_Script byte

func (_dffg *CT_MCS) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_eaad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d\u0063"}}
	for _, _fada := range _dffg.Mc {
		e.EncodeElement(_fada, _eaad)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RadPr and its children
func (_fbbe *CT_RadPr) Validate() error {
	return _fbbe.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072")
}
func (_ff *CT_Acc) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ff.AccPr != nil {
		_d := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0061\u0063\u0063\u0050\u0072"}}
		e.EncodeElement(_ff.AccPr, _d)
	}
	_gg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_ff.E, _gg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_DPr struct {

	// Delimiter Beginning Character
	BegChr *CT_Char

	// Delimiter Separator Character
	SepChr *CT_Char

	// Delimiter Ending Character
	EndChr *CT_Char

	// Delimiter Grow
	Grow *CT_OnOff

	// Shape (Delimiters)
	Shp    *CT_Shp
	CtrlPr *CT_CtrlPr
}

func (_ebf *CT_BreakBinSub) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ggb := range start.Attr {
		if _ggb.Name.Local == "\u0076\u0061\u006c" {
			_ebf.ValAttr.UnmarshalXMLAttr(_ggb)
			continue
		}
	}
	for {
		_cfaf, _baf := d.Token()
		if _baf != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u0053\u0075\u0062:\u0020\u0025\u0073", _baf)
		}
		if _cgf, _dbdg := _cfaf.(_e.EndElement); _dbdg && _cgf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NaryPr and its children, prefixing error messages with path
func (_egfee *CT_NaryPr) ValidateWithPath(path string) error {
	if _egfee.Chr != nil {
		if _ffg := _egfee.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _ffg != nil {
			return _ffg
		}
	}
	if _egfee.LimLoc != nil {
		if _debb := _egfee.LimLoc.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0063"); _debb != nil {
			return _debb
		}
	}
	if _egfee.Grow != nil {
		if _egfb := _egfee.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _egfb != nil {
			return _egfb
		}
	}
	if _egfee.SubHide != nil {
		if _geef := _egfee.SubHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0048\u0069\u0064\u0065"); _geef != nil {
			return _geef
		}
	}
	if _egfee.SupHide != nil {
		if _edd := _egfee.SupHide.ValidateWithPath(path + "\u002f\u0053\u0075\u0070\u0048\u0069\u0064\u0065"); _edd != nil {
			return _edd
		}
	}
	if _egfee.CtrlPr != nil {
		if _fgdd := _egfee.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fgdd != nil {
			return _fgdd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LimUppPr and its children, prefixing error messages with path
func (_adbf *CT_LimUppPr) ValidateWithPath(path string) error {
	if _adbf.CtrlPr != nil {
		if _eeb := _adbf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _eeb != nil {
			return _eeb
		}
	}
	return nil
}

type CT_String struct {

	// value
	ValAttr *string
}

func NewCT_FuncPr() *CT_FuncPr { _aagb := &CT_FuncPr{}; return _aagb }

// ValidateWithPath validates the EG_ScriptStyle and its children, prefixing error messages with path
func (_eccg *EG_ScriptStyle) ValidateWithPath(path string) error {
	if _eccg.Scr != nil {
		if _dffdd := _eccg.Scr.ValidateWithPath(path + "\u002f\u0053\u0063\u0072"); _dffdd != nil {
			return _dffdd
		}
	}
	if _eccg.Sty != nil {
		if _gabag := _eccg.Sty.ValidateWithPath(path + "\u002f\u0053\u0074\u0079"); _gabag != nil {
			return _gabag
		}
	}
	return nil
}

// ValidateWithPath validates the EG_OMathMathElements and its children, prefixing error messages with path
func (_bbbbf *EG_OMathMathElements) ValidateWithPath(path string) error {
	if _acgb := _bbbbf.OMathMathElementsChoice.ValidateWithPath(path + "\u002fO\u004d\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065m\u0065\u006e\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065"); _acgb != nil {
		return _acgb
	}
	return nil
}

// Validate validates the CT_PhantPr and its children
func (_fgfa *CT_PhantPr) Validate() error {
	return _fgfa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072")
}
func (_cdgcfg ST_Style) String() string {
	switch _cdgcfg {
	case 0:
		return ""
	case 1:
		return "\u0070"
	case 2:
		return "\u0062"
	case 3:
		return "\u0069"
	case 4:
		return "\u0062\u0069"
	}
	return ""
}
func (_edeb *ST_LimLoc) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_edeb = 0
	case "\u0075\u006e\u0064\u004f\u0076\u0072":
		*_edeb = 1
	case "\u0073\u0075\u0062\u0053\u0075\u0070":
		*_edeb = 2
	}
	return nil
}
func (_ccbg *CT_RPR) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_adbd:
	for {
		_dfbc, _cbffa := d.Token()
		if _cbffa != nil {
			return _cbffa
		}
		switch _adde := _dfbc.(type) {
		case _e.StartElement:
			switch _adde.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u0074"}:
				_ccbg.Lit = NewCT_OnOff()
				if _facd := d.DecodeElement(_ccbg.Lit, &_adde); _facd != nil {
					return _facd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u006f\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u006f\u0072"}:
				_ccbg.Nor = NewCT_OnOff()
				if _bcdf := d.DecodeElement(_ccbg.Nor, &_adde); _bcdf != nil {
					return _bcdf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_ccbg.Brk = NewCT_ManualBreak()
				if _gcea := d.DecodeElement(_ccbg.Brk, &_adde); _gcea != nil {
					return _gcea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_ccbg.Aln = NewCT_OnOff()
				if _fbf := d.DecodeElement(_ccbg.Aln, &_adde); _fbf != nil {
					return _fbf
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0050\u0052\u0020\u0025\u0076", _adde.Name)
				if _gcda := d.Skip(); _gcda != nil {
					return _gcda
				}
			}
		case _e.EndElement:
			break _adbd
		case _e.CharData:
		}
	}
	return nil
}
func (_bgca *CT_Integer255) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _bgca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_XAlign and its children, prefixing error messages with path
func (_befe *CT_XAlign) ValidateWithPath(path string) error {
	if _befe.ValAttr == _c.ST_XAlignUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dgba := _befe.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dgba != nil {
		return _dgba
	}
	return nil
}
func NewMathPr() *MathPr { _gbad := &MathPr{}; _gbad.CT_MathPr = *NewCT_MathPr(); return _gbad }
func (_ccda *CT_MathPrChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ggef := start
	switch start.Name {
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
		_ccda.WrapIndent = NewCT_TwipsMeasure()
		if _ebcc := d.DecodeElement(_ccda.WrapIndent, &_ggef); _ebcc != nil {
			return _ebcc
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
		_ccda.WrapRight = NewCT_OnOff()
		if _fabd := d.DecodeElement(_ccda.WrapRight, &_ggef); _fabd != nil {
			return _fabd
		}
	default:
		_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ggef.Name)
		if _dggf := d.Skip(); _dggf != nil {
			return _dggf
		}
	}
	return nil
}
func (_gded *EG_OMathElementsChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
	_agfe := start
	switch start.Name {
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _aefa := d.DecodeElement(&_gded.OMathMathElementsChoice.Acc, &_agfe); _aefa != nil {
			return _aefa
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ecebd := d.DecodeElement(&_gded.OMathMathElementsChoice.Bar, &_agfe); _ecebd != nil {
			return _ecebd
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _gcgf := d.DecodeElement(&_gded.OMathMathElementsChoice.Box, &_agfe); _gcgf != nil {
			return _gcgf
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _acaee := d.DecodeElement(&_gded.OMathMathElementsChoice.BorderBox, &_agfe); _acaee != nil {
			return _acaee
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _dgcg := d.DecodeElement(&_gded.OMathMathElementsChoice.D, &_agfe); _dgcg != nil {
			return _dgcg
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _fdge := d.DecodeElement(&_gded.OMathMathElementsChoice.EqArr, &_agfe); _fdge != nil {
			return _fdge
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _bgdcb := d.DecodeElement(&_gded.OMathMathElementsChoice.F, &_agfe); _bgdcb != nil {
			return _bgdcb
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _daeg := d.DecodeElement(&_gded.OMathMathElementsChoice.Func, &_agfe); _daeg != nil {
			return _daeg
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _decg := d.DecodeElement(&_gded.OMathMathElementsChoice.GroupChr, &_agfe); _decg != nil {
			return _decg
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _egfg := d.DecodeElement(&_gded.OMathMathElementsChoice.LimLow, &_agfe); _egfg != nil {
			return _egfg
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _dgdfd := d.DecodeElement(&_gded.OMathMathElementsChoice.LimUpp, &_agfe); _dgdfd != nil {
			return _dgdfd
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _agag := d.DecodeElement(&_gded.OMathMathElementsChoice.M, &_agfe); _agag != nil {
			return _agag
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ddfed := d.DecodeElement(&_gded.OMathMathElementsChoice.Nary, &_agfe); _ddfed != nil {
			return _ddfed
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _fbcc := d.DecodeElement(&_gded.OMathMathElementsChoice.Phant, &_agfe); _fbcc != nil {
			return _fbcc
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _caee := d.DecodeElement(&_gded.OMathMathElementsChoice.Rad, &_agfe); _caee != nil {
			return _caee
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ebfc := d.DecodeElement(&_gded.OMathMathElementsChoice.SPre, &_agfe); _ebfc != nil {
			return _ebfc
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _geff := d.DecodeElement(&_gded.OMathMathElementsChoice.SSub, &_agfe); _geff != nil {
			return _geff
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ddfaf := d.DecodeElement(&_gded.OMathMathElementsChoice.SSubSup, &_agfe); _ddfaf != nil {
			return _ddfaf
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ccbcf := d.DecodeElement(&_gded.OMathMathElementsChoice.SSup, &_agfe); _ccbcf != nil {
			return _ccbcf
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
		_gded.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
		if _ddfd := d.DecodeElement(&_gded.OMathMathElementsChoice.R, &_agfe); _ddfd != nil {
			return _ddfd
		}
	default:
		_ef.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u004f\u004d\u0061\u0074h\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _agfe.Name)
		if _fcafg := d.Skip(); _fcafg != nil {
			return _fcafg
		}
	}
	return nil
}
func (_degb *ST_BreakBinSub) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_degb = 0
	case "\u002d\u002d":
		*_degb = 1
	case "\u002d\u002b":
		*_degb = 2
	case "\u002b\u002d":
		*_degb = 3
	}
	return nil
}

type CT_BreakBinSub struct {

	// Value
	ValAttr ST_BreakBinSub
}

func (_cgddb *CT_LimUpp) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cgddb.E = NewCT_OMathArg()
	_cgddb.Lim = NewCT_OMathArg()
_daeb:
	for {
		_bgaa, _fcg := d.Token()
		if _fcg != nil {
			return _fcg
		}
		switch _eedeb := _bgaa.(type) {
		case _e.StartElement:
			switch _eedeb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}:
				_cgddb.LimUppPr = NewCT_LimUppPr()
				if _dcedb := d.DecodeElement(_cgddb.LimUppPr, &_eedeb); _dcedb != nil {
					return _dcedb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _bccce := d.DecodeElement(_cgddb.E, &_eedeb); _bccce != nil {
					return _bccce
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _gee := d.DecodeElement(_cgddb.Lim, &_eedeb); _gee != nil {
					return _gee
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dU\u0070\u0070 \u0025\u0076", _eedeb.Name)
				if _bgbb := d.Skip(); _bgbb != nil {
					return _bgbb
				}
			}
		case _e.EndElement:
			break _daeb
		case _e.CharData:
		}
	}
	return nil
}
func (_gbea *CT_OMath) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gbea.EG_OMathElements != nil {
		for _, _aecb := range _gbea.EG_OMathElements {
			_aecb.MarshalXML(e, _e.StartElement{})
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_abfd *CT_MR) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_cfb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	for _, _gfc := range _abfd.E {
		e.EncodeElement(_gfc, _cfb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fcbb *CT_NaryPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _fcbb.Chr != nil {
		_cdebb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_fcbb.Chr, _cdebb)
	}
	if _fcbb.LimLoc != nil {
		_bggd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0063"}}
		e.EncodeElement(_fcbb.LimLoc, _bggd)
	}
	if _fcbb.Grow != nil {
		_gbaa := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_fcbb.Grow, _gbaa)
	}
	if _fcbb.SubHide != nil {
		_ceeb := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0073\u0075\u0062\u0048\u0069\u0064e"}}
		e.EncodeElement(_fcbb.SubHide, _ceeb)
	}
	if _fcbb.SupHide != nil {
		_gafc := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0073\u0075\u0070\u0048\u0069\u0064e"}}
		e.EncodeElement(_fcbb.SupHide, _gafc)
	}
	if _fcbb.CtrlPr != nil {
		_dccf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_fcbb.CtrlPr, _dccf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LimUppPr and its children
func (_cea *CT_LimUppPr) Validate() error {
	return _cea.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072")
}

// Validate validates the MathPr and its children
func (_fagg *MathPr) Validate() error {
	return _fagg.ValidateWithPath("\u004d\u0061\u0074\u0068\u0050\u0072")
}

// Validate validates the CT_M and its children
func (_afc *CT_M) Validate() error { return _afc.ValidateWithPath("\u0043\u0054\u005f\u004d") }
func NewCT_SPre() *CT_SPre {
	_bcgb := &CT_SPre{}
	_bcgb.Sub = NewCT_OMathArg()
	_bcgb.Sup = NewCT_OMathArg()
	_bcgb.E = NewCT_OMathArg()
	return _bcgb
}
func NewCT_Box() *CT_Box {
	_ccg := &CT_Box{}
	_ccg.E = NewCT_OMathArg()
	return _ccg
}
func (_faee *ST_TopBot) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_faee = 0
	case "\u0074\u006f\u0070":
		*_faee = 1
	case "\u0062\u006f\u0074":
		*_faee = 2
	}
	return nil
}

// ValidateWithPath validates the CT_M and its children, prefixing error messages with path
func (_fcaf *CT_M) ValidateWithPath(path string) error {
	if _fcaf.MPr != nil {
		if _bdg := _fcaf.MPr.ValidateWithPath(path + "\u002f\u004d\u0050\u0072"); _bdg != nil {
			return _bdg
		}
	}
	for _decb, _gdd := range _fcaf.Mr {
		if _gggb := _gdd.ValidateWithPath(_ga.Sprintf("\u0025s\u002f\u004d\u0072\u005b\u0025\u0064]", path, _decb)); _gggb != nil {
			return _gggb
		}
	}
	return nil
}
func (_cdbf *CT_SSup) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cdbf.SSupPr != nil {
		_ecad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_cdbf.SSupPr, _ecad)
	}
	_dcbc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_cdbf.E, _dcbc)
	_gcde := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_cdbf.Sup, _gcde)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Nary and its children
func (_ebdgb *CT_Nary) Validate() error {
	return _ebdgb.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079")
}

// Validate validates the EG_OMathElementsChoice and its children
func (_ebcca *EG_OMathElementsChoice) Validate() error {
	return _ebcca.ValidateWithPath("\u0045\u0047\u005f\u004fMa\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0043\u0068\u006f\u0069c\u0065")
}

// Validate validates the CT_MCPr and its children
func (_bdf *CT_MCPr) Validate() error {
	return _bdf.ValidateWithPath("\u0043T\u005f\u004d\u0043\u0050\u0072")
}

// ValidateWithPath validates the CT_SSubPr and its children, prefixing error messages with path
func (_eega *CT_SSubPr) ValidateWithPath(path string) error {
	if _eega.CtrlPr != nil {
		if _aacf := _eega.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aacf != nil {
			return _aacf
		}
	}
	return nil
}
func (_gadb ST_Shp) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cgeb := _e.Attr{}
	_cgeb.Name = name
	switch _gadb {
	case ST_ShpUnset:
		_cgeb.Value = ""
	case ST_ShpCentered:
		_cgeb.Value = "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case ST_ShpMatch:
		_cgeb.Value = "\u006d\u0061\u0074c\u0068"
	}
	return _cgeb, nil
}

type EG_ScriptStyle struct {

	// Script
	Scr *CT_Script

	// style
	Sty *CT_Style
}

func (_ebdb *CT_SpacingRule) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ebdb.ValAttr = 0
	for _, _abdb := range start.Attr {
		if _abdb.Name.Local == "\u0076\u0061\u006c" {
			_agecc, _dcgd := _g.ParseInt(_abdb.Value, 10, 64)
			if _dcgd != nil {
				return _dcgd
			}
			_ebdb.ValAttr = _agecc
			continue
		}
	}
	for {
		_bdgdg, _gaeee := d.Token()
		if _gaeee != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0070\u0061\u0063\u0069\u006e\u0067\u0052\u0075\u006c\u0065:\u0020\u0025\u0073", _gaeee)
		}
		if _gfaf, _ccea := _bdgdg.(_e.EndElement); _ccea && _gfaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beeec *CT_SSub) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _beeec.SSubPr != nil {
		_gabg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_beeec.SSubPr, _gabg)
	}
	_bfgc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_beeec.E, _bfgc)
	_bage := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_beeec.Sub, _bage)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_faef *CT_SSupPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bgaac:
	for {
		_ebbb, _bfadd := d.Token()
		if _bfadd != nil {
			return _bfadd
		}
		switch _affd := _ebbb.(type) {
		case _e.StartElement:
			switch _affd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_faef.CtrlPr = NewCT_CtrlPr()
				if _gfag := d.DecodeElement(_faef.CtrlPr, &_affd); _gfag != nil {
					return _gfag
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075p\u0050\u0072 \u0025\u0076", _affd.Name)
				if _acbdf := d.Skip(); _acbdf != nil {
					return _acbdf
				}
			}
		case _e.EndElement:
			break _bgaac
		case _e.CharData:
		}
	}
	return nil
}
func (_bcac *CT_M) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fdbgd:
	for {
		_aac, _caa := d.Token()
		if _caa != nil {
			return _caa
		}
		switch _aed := _aac.(type) {
		case _e.StartElement:
			switch _aed.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0050\u0072"}:
				_bcac.MPr = NewCT_MPr()
				if _fdac := d.DecodeElement(_bcac.MPr, &_aed); _fdac != nil {
					return _fdac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0072"}:
				_aae := NewCT_MR()
				if _edfb := d.DecodeElement(_aae, &_aed); _edfb != nil {
					return _edfb
				}
				_bcac.Mr = append(_bcac.Mr, _aae)
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u004d\u0020\u0025\u0076", _aed.Name)
				if _cfged := d.Skip(); _cfged != nil {
					return _cfged
				}
			}
		case _e.EndElement:
			break _fdbgd
		case _e.CharData:
		}
	}
	return nil
}
func (_cffe *CT_GroupChrPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cffe.Chr != nil {
		_geda := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_cffe.Chr, _geda)
	}
	if _cffe.Pos != nil {
		_beff := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_cffe.Pos, _beff)
	}
	if _cffe.VertJc != nil {
		_eef := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0076\u0065\u0072\u0074\u004a\u0063"}}
		e.EncodeElement(_cffe.VertJc, _eef)
	}
	if _cffe.CtrlPr != nil {
		_ccgg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cffe.CtrlPr, _ccgg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_EqArrPr() *CT_EqArrPr { _bcd := &CT_EqArrPr{}; return _bcd }
func (_ffb *CT_D) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ffb.DPr != nil {
		_faf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0064P\u0072"}}
		e.EncodeElement(_ffb.DPr, _faf)
	}
	_cda := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	for _, _egg := range _ffb.E {
		e.EncodeElement(_egg, _cda)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Box and its children, prefixing error messages with path
func (_bef *CT_Box) ValidateWithPath(path string) error {
	if _bef.BoxPr != nil {
		if _gdab := _bef.BoxPr.ValidateWithPath(path + "\u002f\u0042\u006f\u0078\u0050\u0072"); _gdab != nil {
			return _gdab
		}
	}
	if _bce := _bef.E.ValidateWithPath(path + "\u002f\u0045"); _bce != nil {
		return _bce
	}
	return nil
}
func (_bggg *CT_LimLow) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bggg.E = NewCT_OMathArg()
	_bggg.Lim = NewCT_OMathArg()
_fbcf:
	for {
		_fdae, _dagc := d.Token()
		if _dagc != nil {
			return _dagc
		}
		switch _dced := _fdae.(type) {
		case _e.StartElement:
			switch _dced.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}:
				_bggg.LimLowPr = NewCT_LimLowPr()
				if _dfe := d.DecodeElement(_bggg.LimLowPr, &_dced); _dfe != nil {
					return _dfe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _cgba := d.DecodeElement(_bggg.E, &_dced); _cgba != nil {
					return _cgba
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d"}:
				if _ggaa := d.DecodeElement(_bggg.Lim, &_dced); _ggaa != nil {
					return _ggaa
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004c\u0069\u006dL\u006f\u0077 \u0025\u0076", _dced.Name)
				if _fbdg := d.Skip(); _fbdg != nil {
					return _fbdg
				}
			}
		case _e.EndElement:
			break _fbcf
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Rad and its children
func (_gccc *CT_Rad) Validate() error {
	return _gccc.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0064")
}

type ST_Jc byte

// Validate validates the CT_CtrlPr and its children
func (_af *CT_CtrlPr) Validate() error {
	return _af.ValidateWithPath("\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r")
}
func NewCT_MCS() *CT_MCS { _fagb := &CT_MCS{}; return _fagb }
func (_ccgce *ST_Script) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cbbc, _acfgf := d.Token()
	if _acfgf != nil {
		return _acfgf
	}
	if _ddc, _baege := _cbbc.(_e.EndElement); _baege && _ddc.Name == start.Name {
		*_ccgce = 1
		return nil
	}
	if _bgbba, _bgbbeg := _cbbc.(_e.CharData); !_bgbbeg {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbbc)
	} else {
		switch string(_bgbba) {
		case "":
			*_ccgce = 0
		case "\u0072\u006f\u006da\u006e":
			*_ccgce = 1
		case "\u0073\u0063\u0072\u0069\u0070\u0074":
			*_ccgce = 2
		case "\u0066r\u0061\u006b\u0074\u0075\u0072":
			*_ccgce = 3
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
			*_ccgce = 4
		case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
			*_ccgce = 5
		case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
			*_ccgce = 6
		}
	}
	_cbbc, _acfgf = d.Token()
	if _acfgf != nil {
		return _acfgf
	}
	if _dca, _ddab := _cbbc.(_e.EndElement); _ddab && _dca.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbbc)
}
func (_dcdbf *CT_Script) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dcdbf.ValAttr != ST_ScriptUnset {
		_cedc, _cdgcf := _dcdbf.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _cdgcf != nil {
			return _cdgcf
		}
		start.Attr = append(start.Attr, _cedc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_Nary() *CT_Nary {
	_dgdfe := &CT_Nary{}
	_dgdfe.Sub = NewCT_OMathArg()
	_dgdfe.Sup = NewCT_OMathArg()
	_dgdfe.E = NewCT_OMathArg()
	return _dgdfe
}
func (_bbba *EG_OMathElementsChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	_bbba.OMathMathElementsChoice.MarshalXML(e, _e.StartElement{})
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ebcg *CT_FType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_bga, _fgba := _ebcg.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _fgba != nil {
		return _fgba
	}
	start.Attr = append(start.Attr, _bga)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fbbg ST_BreakBin) Validate() error { return _fbbg.ValidateWithPath("") }
func NewCT_Func() *CT_Func {
	_gba := &CT_Func{}
	_gba.FName = NewCT_OMathArg()
	_gba.E = NewCT_OMathArg()
	return _gba
}
func (_gbbc *CT_LimUppPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_dacf:
	for {
		_aggd, _dacc := d.Token()
		if _dacc != nil {
			return _dacc
		}
		switch _egc := _aggd.(type) {
		case _e.StartElement:
			switch _egc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gbbc.CtrlPr = NewCT_CtrlPr()
				if _cge := d.DecodeElement(_gbbc.CtrlPr, &_egc); _cge != nil {
					return _cge
				}
			default:
				_ef.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072\u0020\u0025\u0076", _egc.Name)
				if _eecd := d.Skip(); _eecd != nil {
					return _eecd
				}
			}
		case _e.EndElement:
			break _dacf
		case _e.CharData:
		}
	}
	return nil
}
func (_ea *CT_AccPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ea.Chr != nil {
		_ged := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063h\u0072"}}
		e.EncodeElement(_ea.Chr, _ged)
	}
	if _ea.CtrlPr != nil {
		_ddg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_ea.CtrlPr, _ddg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dfeg ST_BreakBin) String() string {
	switch _dfeg {
	case 0:
		return ""
	case 1:
		return "\u0062\u0065\u0066\u006f\u0072\u0065"
	case 2:
		return "\u0061\u0066\u0074e\u0072"
	case 3:
		return "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return ""
}
func (_aaa *CT_Bar) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _aaa.BarPr != nil {
		_ee := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0062\u0061\u0072\u0050\u0072"}}
		e.EncodeElement(_aaa.BarPr, _ee)
	}
	_aef := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aaa.E, _aef)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bgefc *CT_MR) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eca:
	for {
		_abfda, _ebfed := d.Token()
		if _ebfed != nil {
			return _ebfed
		}
		switch _fac := _abfda.(type) {
		case _e.StartElement:
			switch _fac.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_adad := NewCT_OMathArg()
				if _fbeg := d.DecodeElement(_adad, &_fac); _fbeg != nil {
					return _fbeg
				}
				_bgefc.E = append(_bgefc.E, _adad)
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0052 \u0025\u0076", _fac.Name)
				if _cdfb := d.Skip(); _cdfb != nil {
					return _cdfb
				}
			}
		case _e.EndElement:
			break _eca
		case _e.CharData:
		}
	}
	return nil
}
func (_cfff *CT_OnOff) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cfff.ValAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", *_cfff.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_acfdc *CT_OnOff) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _egba := range start.Attr {
		if _egba.Name.Local == "\u0076\u0061\u006c" {
			_eeae, _fgf := ParseUnionST_OnOff(_egba.Value)
			if _fgf != nil {
				return _fgf
			}
			_acfdc.ValAttr = &_eeae
			continue
		}
	}
	for {
		_edcbb, _bebd := d.Token()
		if _bebd != nil {
			return _ga.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fO\u006e\u004f\u0066\u0066: \u0025\u0073", _bebd)
		}
		if _agbb, _bede := _edcbb.(_e.EndElement); _bede && _agbb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_R() *CT_R { _febc := &CT_R{}; return _febc }

type CT_OMathParaPr struct {

	// Justification
	Jc *CT_OMathJc
}

func (_dgcba *CT_TwipsMeasure) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _fgef := range start.Attr {
		if _fgef.Name.Local == "\u0076\u0061\u006c" {
			_aacfd, _gdbe := ParseUnionST_TwipsMeasure(_fgef.Value)
			if _gdbe != nil {
				return _gdbe
			}
			_dgcba.ValAttr = _aacfd
			continue
		}
	}
	for {
		_bafc, _geacb := d.Token()
		if _geacb != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0077\u0069\u0070\u0073\u004de\u0061\u0073\u0075r\u0065:\u0020\u0025\u0073", _geacb)
		}
		if _acbb, _dbbd := _bafc.(_e.EndElement); _dbbd && _acbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddec *CT_BreakBinSub) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ddec.ValAttr != ST_BreakBinSubUnset {
		_gdc, _ddd := _ddec.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _ddd != nil {
			return _ddd
		}
		start.Attr = append(start.Attr, _gdc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_BorderBox() *CT_BorderBox { _ac := &CT_BorderBox{}; _ac.E = NewCT_OMathArg(); return _ac }
func (_cec *CT_Text) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _dfad := range start.Attr {
		if _dfad.Name.Space == "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065" && _dfad.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_afcc := _dfad.Value
			_cec.SpaceAttr = &_afcc
			continue
		}
	}
	for {
		_fcabee, _ggfdf := d.Token()
		if _ggfdf != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _ggfdf)
		}
		if _gcbb, _caffb := _fcabee.(_e.CharData); _caffb {
			_cec.Content = string(_gcbb)
		}
		if _fdceb, _gfdb := _fcabee.(_e.EndElement); _gfdb && _fdceb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_geca *CT_EqArrPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _geca.BaseJc != nil {
		_bcb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_geca.BaseJc, _bcb)
	}
	if _geca.MaxDist != nil {
		_ega := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006d\u0061\u0078\u0044\u0069\u0073t"}}
		e.EncodeElement(_geca.MaxDist, _ega)
	}
	if _geca.ObjDist != nil {
		_beee := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006f\u0062\u006a\u0044\u0069\u0073t"}}
		e.EncodeElement(_geca.ObjDist, _beee)
	}
	if _geca.RSpRule != nil {
		_daf := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_geca.RSpRule, _daf)
	}
	if _geca.RSp != nil {
		_bab := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_geca.RSp, _bab)
	}
	if _geca.CtrlPr != nil {
		_gdae := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_geca.CtrlPr, _gdae)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cbce *EG_OMathMathElements) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
_ebgf:
	for {
		_fbdgb, _gbafc := d.Token()
		if _gbafc != nil {
			return _gbafc
		}
		switch _bfce := _fbdgb.(type) {
		case _e.StartElement:
			switch _bfce.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _dagd := d.DecodeElement(&_cbce.OMathMathElementsChoice.Acc, &_bfce); _dagd != nil {
					return _dagd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _ebfda := d.DecodeElement(&_cbce.OMathMathElementsChoice.Bar, &_bfce); _ebfda != nil {
					return _ebfda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _dgbd := d.DecodeElement(&_cbce.OMathMathElementsChoice.Box, &_bfce); _dgbd != nil {
					return _dgbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _ebbe := d.DecodeElement(&_cbce.OMathMathElementsChoice.BorderBox, &_bfce); _ebbe != nil {
					return _ebbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _bafgg := d.DecodeElement(&_cbce.OMathMathElementsChoice.D, &_bfce); _bafgg != nil {
					return _bafgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _dceab := d.DecodeElement(&_cbce.OMathMathElementsChoice.EqArr, &_bfce); _dceab != nil {
					return _dceab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _ffcb := d.DecodeElement(&_cbce.OMathMathElementsChoice.F, &_bfce); _ffcb != nil {
					return _ffcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _fgadc := d.DecodeElement(&_cbce.OMathMathElementsChoice.Func, &_bfce); _fgadc != nil {
					return _fgadc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _fedc := d.DecodeElement(&_cbce.OMathMathElementsChoice.GroupChr, &_bfce); _fedc != nil {
					return _fedc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _ceag := d.DecodeElement(&_cbce.OMathMathElementsChoice.LimLow, &_bfce); _ceag != nil {
					return _ceag
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _gdaa := d.DecodeElement(&_cbce.OMathMathElementsChoice.LimUpp, &_bfce); _gdaa != nil {
					return _gdaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _gaaf := d.DecodeElement(&_cbce.OMathMathElementsChoice.M, &_bfce); _gaaf != nil {
					return _gaaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _fcad := d.DecodeElement(&_cbce.OMathMathElementsChoice.Nary, &_bfce); _fcad != nil {
					return _fcad
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _cedcb := d.DecodeElement(&_cbce.OMathMathElementsChoice.Phant, &_bfce); _cedcb != nil {
					return _cedcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _fcgb := d.DecodeElement(&_cbce.OMathMathElementsChoice.Rad, &_bfce); _fcgb != nil {
					return _fcgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _agbbb := d.DecodeElement(&_cbce.OMathMathElementsChoice.SPre, &_bfce); _agbbb != nil {
					return _agbbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _cgaf := d.DecodeElement(&_cbce.OMathMathElementsChoice.SSub, &_bfce); _cgaf != nil {
					return _cgaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _cabc := d.DecodeElement(&_cbce.OMathMathElementsChoice.SSubSup, &_bfce); _cabc != nil {
					return _cabc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _gfbfg := d.DecodeElement(&_cbce.OMathMathElementsChoice.SSup, &_bfce); _gfbfg != nil {
					return _gfbfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
				_cbce.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
				if _bagea := d.DecodeElement(&_cbce.OMathMathElementsChoice.R, &_bfce); _bagea != nil {
					return _bagea
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _bfce.Name)
				if _adge := d.Skip(); _adge != nil {
					return _adge
				}
			}
		case _e.EndElement:
			break _ebgf
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SSub and its children
func (_eecg *CT_SSub) Validate() error {
	return _eecg.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062")
}

type CT_YAlign struct {

	// Value
	ValAttr _c.ST_YAlign
}

func NewCT_Shp() *CT_Shp { _gabcg := &CT_Shp{}; _gabcg.ValAttr = ST_Shp(1); return _gabcg }

// Validate validates the CT_SSup and its children
func (_ggfbd *CT_SSup) Validate() error {
	return _ggfbd.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070")
}
func NewEG_OMathMathElementsChoice() *EG_OMathMathElementsChoice {
	_fdbf := &EG_OMathMathElementsChoice{}
	return _fdbf
}

type CT_RadPr struct {

	// Hide Degree
	DegHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

func NewCT_Style() *CT_Style { _dabbd := &CT_Style{}; return _dabbd }
func (_agd *CT_Char) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gfd := range start.Attr {
		if _gfd.Name.Local == "\u0076\u0061\u006c" {
			_cac := _gfd.Value
			_agd.ValAttr = _cac
			continue
		}
	}
	for {
		_gdb, _feg := d.Token()
		if _feg != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0073", _feg)
		}
		if _fdb, _ggdf := _gdb.(_e.EndElement); _ggdf && _fdb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_MPr struct {

	// Matrix Base Justification
	BaseJc *CT_YAlign

	// Hide Placeholders (Matrix)
	PlcHide *CT_OnOff

	// Row Spacing Rule
	RSpRule *CT_SpacingRule

	// Matrix Column Gap Rule
	CGpRule *CT_SpacingRule

	// Row Spacing (Matrix)
	RSp *CT_UnSignedInteger

	// Minimum Matrix Column Width
	CSp *CT_UnSignedInteger

	// Matrix Column Gap
	CGp *CT_UnSignedInteger

	// Matrix Columns
	Mcs    *CT_MCS
	CtrlPr *CT_CtrlPr
}

func (_fcea *CT_LimLowPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_caed:
	for {
		_eaeg, _gdag := d.Token()
		if _gdag != nil {
			return _gdag
		}
		switch _efda := _eaeg.(type) {
		case _e.StartElement:
			switch _efda.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fcea.CtrlPr = NewCT_CtrlPr()
				if _afac := d.DecodeElement(_fcea.CtrlPr, &_efda); _afac != nil {
					return _afac
				}
			default:
				_ef.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072\u0020\u0025\u0076", _efda.Name)
				if _afd := d.Skip(); _afd != nil {
					return _afd
				}
			}
		case _e.EndElement:
			break _caed
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_SSubSup() *CT_SSubSup {
	_ebfd := &CT_SSubSup{}
	_ebfd.E = NewCT_OMathArg()
	_ebfd.Sub = NewCT_OMathArg()
	_ebfd.Sup = NewCT_OMathArg()
	return _ebfd
}

type CT_Phant struct {

	// Phantom Properties
	PhantPr *CT_PhantPr

	// Base
	E *CT_OMathArg
}

const (
	ST_BreakBinSubUnset ST_BreakBinSub = 0
	ST_BreakBinSub__    ST_BreakBinSub = 1
	ST_BreakBinSub___   ST_BreakBinSub = 2
	ST_BreakBinSub____  ST_BreakBinSub = 3
)

func NewCT_OMathArgPr() *CT_OMathArgPr { _adag := &CT_OMathArgPr{}; return _adag }
func NewCT_FType() *CT_FType           { _bbg := &CT_FType{}; _bbg.ValAttr = ST_FType(1); return _bbg }
func (_ddf *CT_F) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _ddf.FPr != nil {
		_bcbb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0066P\u0072"}}
		e.EncodeElement(_ddf.FPr, _bcbb)
	}
	_ebbg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006eu\u006d"}}
	e.EncodeElement(_ddf.Num, _ebbg)
	_aff := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0064e\u006e"}}
	e.EncodeElement(_ddf.Den, _aff)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_acbf ST_LimLoc) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_acbf.String(), start)
}

type CT_AccPr struct {

	// Character
	Chr *CT_Char

	// Control Properties
	CtrlPr *CT_CtrlPr
}

func NewCT_LimLowPr() *CT_LimLowPr { _gfdd := &CT_LimLowPr{}; return _gfdd }

type ST_FType byte

func (_cccb *ST_TopBot) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gddd, _fceag := d.Token()
	if _fceag != nil {
		return _fceag
	}
	if _babb, _egbc := _gddd.(_e.EndElement); _egbc && _babb.Name == start.Name {
		*_cccb = 1
		return nil
	}
	if _bbddf, _fccb := _gddd.(_e.CharData); !_fccb {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gddd)
	} else {
		switch string(_bbddf) {
		case "":
			*_cccb = 0
		case "\u0074\u006f\u0070":
			*_cccb = 1
		case "\u0062\u006f\u0074":
			*_cccb = 2
		}
	}
	_gddd, _fceag = d.Token()
	if _fceag != nil {
		return _fceag
	}
	if _cecaa, _fccf := _gddd.(_e.EndElement); _fccf && _cecaa.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gddd)
}

// Validate validates the CT_Box and its children
func (_dag *CT_Box) Validate() error {
	return _dag.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078")
}

// ValidateWithPath validates the CT_MCS and its children, prefixing error messages with path
func (_cdbd *CT_MCS) ValidateWithPath(path string) error {
	for _aedb, _adbfb := range _cdbd.Mc {
		if _dffd := _adbfb.ValidateWithPath(_ga.Sprintf("\u0025s\u002f\u004d\u0063\u005b\u0025\u0064]", path, _aedb)); _dffd != nil {
			return _dffd
		}
	}
	return nil
}
func (_cgfa *CT_String) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _aced := range start.Attr {
		if _aced.Name.Local == "\u0076\u0061\u006c" {
			_aadfc := _aced.Value
			_cgfa.ValAttr = &_aadfc
			continue
		}
	}
	for {
		_aecbg, _dgff := d.Token()
		if _dgff != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0074\u0072i\u006e\u0067\u003a\u0020\u0025\u0073", _dgff)
		}
		if _bcaca, _gabga := _aecbg.(_e.EndElement); _gabga && _bcaca.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the EG_OMathMathElementsChoice and its children, prefixing error messages with path
func (_aacac *EG_OMathMathElementsChoice) ValidateWithPath(path string) error {
	if _aacac.Acc != nil {
		if _cfdb := _aacac.Acc.ValidateWithPath(path + "\u002f\u0041\u0063\u0063"); _cfdb != nil {
			return _cfdb
		}
	}
	if _aacac.Bar != nil {
		if _ggacd := _aacac.Bar.ValidateWithPath(path + "\u002f\u0042\u0061\u0072"); _ggacd != nil {
			return _ggacd
		}
	}
	if _aacac.Box != nil {
		if _aaae := _aacac.Box.ValidateWithPath(path + "\u002f\u0042\u006f\u0078"); _aaae != nil {
			return _aaae
		}
	}
	if _aacac.BorderBox != nil {
		if _fbfac := _aacac.BorderBox.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"); _fbfac != nil {
			return _fbfac
		}
	}
	if _aacac.D != nil {
		if _bcca := _aacac.D.ValidateWithPath(path + "\u002f\u0044"); _bcca != nil {
			return _bcca
		}
	}
	if _aacac.EqArr != nil {
		if _ecb := _aacac.EqArr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072"); _ecb != nil {
			return _ecb
		}
	}
	if _aacac.F != nil {
		if _ebfedd := _aacac.F.ValidateWithPath(path + "\u002f\u0046"); _ebfedd != nil {
			return _ebfedd
		}
	}
	if _aacac.Func != nil {
		if _dddcg := _aacac.Func.ValidateWithPath(path + "\u002f\u0046\u0075n\u0063"); _dddcg != nil {
			return _dddcg
		}
	}
	if _aacac.GroupChr != nil {
		if _bcdag := _aacac.GroupChr.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0043\u0068r"); _bcdag != nil {
			return _bcdag
		}
	}
	if _aacac.LimLow != nil {
		if _ecag := _aacac.LimLow.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077"); _ecag != nil {
			return _ecag
		}
	}
	if _aacac.LimUpp != nil {
		if _aebe := _aacac.LimUpp.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070"); _aebe != nil {
			return _aebe
		}
	}
	if _aacac.M != nil {
		if _gdaga := _aacac.M.ValidateWithPath(path + "\u002f\u004d"); _gdaga != nil {
			return _gdaga
		}
	}
	if _aacac.Nary != nil {
		if _effa := _aacac.Nary.ValidateWithPath(path + "\u002f\u004e\u0061r\u0079"); _effa != nil {
			return _effa
		}
	}
	if _aacac.Phant != nil {
		if _bedcc := _aacac.Phant.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074"); _bedcc != nil {
			return _bedcc
		}
	}
	if _aacac.Rad != nil {
		if _fcgf := _aacac.Rad.ValidateWithPath(path + "\u002f\u0052\u0061\u0064"); _fcgf != nil {
			return _fcgf
		}
	}
	if _aacac.SPre != nil {
		if _cbag := _aacac.SPre.ValidateWithPath(path + "\u002f\u0053\u0050r\u0065"); _cbag != nil {
			return _cbag
		}
	}
	if _aacac.SSub != nil {
		if _faga := _aacac.SSub.ValidateWithPath(path + "\u002f\u0053\u0053u\u0062"); _faga != nil {
			return _faga
		}
	}
	if _aacac.SSubSup != nil {
		if _ecce := _aacac.SSubSup.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070"); _ecce != nil {
			return _ecce
		}
	}
	if _aacac.SSup != nil {
		if _fbabc := _aacac.SSup.ValidateWithPath(path + "\u002f\u0053\u0053u\u0070"); _fbabc != nil {
			return _fbabc
		}
	}
	if _aacac.R != nil {
		if _daab := _aacac.R.ValidateWithPath(path + "\u002f\u0052"); _daab != nil {
			return _daab
		}
	}
	return nil
}

type CT_Script struct {

	// Value
	ValAttr ST_Script
}
type CT_OMath struct{ EG_OMathElements []*EG_OMathElements }
type CT_FType struct {

	// Value
	ValAttr ST_FType
}

func (_cgdb ST_TopBot) ValidateWithPath(path string) error {
	switch _cgdb {
	case 0, 1, 2:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cgdb))
	}
	return nil
}
func NewCT_Script() *CT_Script { _dcede := &CT_Script{}; return _dcede }

type CT_UnSignedInteger struct {

	// Value
	ValAttr uint32
}

// Validate validates the CT_EqArr and its children
func (_eaab *CT_EqArr) Validate() error {
	return _eaab.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072")
}

// Validate validates the CT_MPr and its children
func (_eda *CT_MPr) Validate() error {
	return _eda.ValidateWithPath("\u0043\u0054\u005f\u004d\u0050\u0072")
}
func (_cbfb *CT_EqArrPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bdb:
	for {
		_fda, _dcd := d.Token()
		if _dcd != nil {
			return _dcd
		}
		switch _cgg := _fda.(type) {
		case _e.StartElement:
			switch _cgg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_cbfb.BaseJc = NewCT_YAlign()
				if _abgd := d.DecodeElement(_cbfb.BaseJc, &_cgg); _abgd != nil {
					return _abgd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006da\u0078\u0044\u0069\u0073\u0074"}:
				_cbfb.MaxDist = NewCT_OnOff()
				if _bgbg := d.DecodeElement(_cbfb.MaxDist, &_cgg); _bgbg != nil {
					return _bgbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006fb\u006a\u0044\u0069\u0073\u0074"}:
				_cbfb.ObjDist = NewCT_OnOff()
				if _gce := d.DecodeElement(_cbfb.ObjDist, &_cgg); _gce != nil {
					return _gce
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_cbfb.RSpRule = NewCT_SpacingRule()
				if _abaa := d.DecodeElement(_cbfb.RSpRule, &_cgg); _abaa != nil {
					return _abaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_cbfb.RSp = NewCT_UnSignedInteger()
				if _dgcb := d.DecodeElement(_cbfb.RSp, &_cgg); _dgcb != nil {
					return _dgcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cbfb.CtrlPr = NewCT_CtrlPr()
				if _gge := d.DecodeElement(_cbfb.CtrlPr, &_cgg); _gge != nil {
					return _gge
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fE\u0071\u0041\u0072\u0072\u0050\u0072\u0020\u0025\u0076", _cgg.Name)
				if _cgfb := d.Skip(); _cgfb != nil {
					return _cgfb
				}
			}
		case _e.EndElement:
			break _bdb
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_MC() *CT_MC { _feb := &CT_MC{}; return _feb }

// ValidateWithPath validates the CT_Text and its children, prefixing error messages with path
func (_cddc *CT_Text) ValidateWithPath(path string) error { return nil }
func NewCT_String() *CT_String                            { _ffecb := &CT_String{}; return _ffecb }

// Validate validates the CT_RChoice and its children
func (_bgfb *CT_RChoice) Validate() error {
	return _bgfb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_afbb *CT_SSubSup) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _afbb.SSubSupPr != nil {
		_cgce := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0073\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"}}
		e.EncodeElement(_afbb.SSubSupPr, _cgce)
	}
	_fgbf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_afbb.E, _fgbf)
	_fgda := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_afbb.Sub, _fgda)
	_fdbdb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_afbb.Sup, _fdbdb)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_deee ST_Script) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_babee := _e.Attr{}
	_babee.Name = name
	switch _deee {
	case ST_ScriptUnset:
		_babee.Value = ""
	case ST_ScriptRoman:
		_babee.Value = "\u0072\u006f\u006da\u006e"
	case ST_ScriptScript:
		_babee.Value = "\u0073\u0063\u0072\u0069\u0070\u0074"
	case ST_ScriptFraktur:
		_babee.Value = "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case ST_ScriptDouble_struck:
		_babee.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case ST_ScriptSans_serif:
		_babee.Value = "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case ST_ScriptMonospace:
		_babee.Value = "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return _babee, nil
}
func (_dafg *CT_SSubPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fade:
	for {
		_ggc, _ebbd := d.Token()
		if _ebbd != nil {
			return _ebbd
		}
		switch _acec := _ggc.(type) {
		case _e.StartElement:
			switch _acec.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_dafg.CtrlPr = NewCT_CtrlPr()
				if _bafb := d.DecodeElement(_dafg.CtrlPr, &_acec); _bafb != nil {
					return _bafb
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0053\u0075b\u0050\u0072 \u0025\u0076", _acec.Name)
				if _gfbf := d.Skip(); _gfbf != nil {
					return _gfbf
				}
			}
		case _e.EndElement:
			break _fade
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_XAlign() *CT_XAlign {
	_dcdba := &CT_XAlign{}
	_dcdba.ValAttr = _c.ST_XAlign(1)
	return _dcdba
}

// Validate validates the CT_Char and its children
func (_bgb *CT_Char) Validate() error {
	return _bgb.ValidateWithPath("\u0043T\u005f\u0043\u0068\u0061\u0072")
}
func (_dcdeb *CT_Rad) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dcdeb.RadPr != nil {
		_ffbe := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0072\u0061\u0064\u0050\u0072"}}
		e.EncodeElement(_dcdeb.RadPr, _ffbe)
	}
	_bfad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0064e\u0067"}}
	e.EncodeElement(_dcdeb.Deg, _bfad)
	_bea := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dcdeb.E, _bea)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BorderBoxPr and its children
func (_ggge *CT_BorderBoxPr) Validate() error {
	return _ggge.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072")
}
func (_bece *CT_LimUppPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bece.CtrlPr != nil {
		_fdaec := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bece.CtrlPr, _fdaec)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gfecg *CT_SpacingRule) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _gfecg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_dafga ST_Script) String() string {
	switch _dafga {
	case 0:
		return ""
	case 1:
		return "\u0072\u006f\u006da\u006e"
	case 2:
		return "\u0073\u0063\u0072\u0069\u0070\u0074"
	case 3:
		return "\u0066r\u0061\u006b\u0074\u0075\u0072"
	case 4:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b"
	case 5:
		return "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066"
	case 6:
		return "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e"
	}
	return ""
}

// Validate validates the CT_TopBot and its children
func (_afdf *CT_TopBot) Validate() error {
	return _afdf.ValidateWithPath("\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft")
}

// Validate validates the CT_XAlign and its children
func (_aacc *CT_XAlign) Validate() error {
	return _aacc.ValidateWithPath("\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n")
}
func (_dfgg *CT_XAlign) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_efaab, _cgae := _dfgg.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _cgae != nil {
		return _cgae
	}
	start.Attr = append(start.Attr, _efaab)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_M struct {

	// Matrix Properties
	MPr *CT_MPr

	// Matrix Row
	Mr []*CT_MR
}

func (_bedg *CT_SPre) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bedg.SPrePr != nil {
		_bddg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065\u0050\u0072"}}
		e.EncodeElement(_bedg.SPrePr, _bddg)
	}
	_ddb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_bedg.Sub, _ddb)
	_cdfe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_bedg.Sup, _cdfe)
	_bbea := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_bedg.E, _bbea)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_LimUpp() *CT_LimUpp {
	_bdd := &CT_LimUpp{}
	_bdd.E = NewCT_OMathArg()
	_bdd.Lim = NewCT_OMathArg()
	return _bdd
}
func (_egec *CT_R) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _egec.RPr != nil {
		_eefg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0072P\u0072"}}
		e.EncodeElement(_egec.RPr, _eefg)
	}
	if _egec.RChoice != nil {
		for _, _bbf := range _egec.RChoice {
			_bbf.MarshalXML(e, _e.StartElement{})
		}
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

const (
	ST_JcUnset       ST_Jc = 0
	ST_JcLeft        ST_Jc = 1
	ST_JcRight       ST_Jc = 2
	ST_JcCenter      ST_Jc = 3
	ST_JcCenterGroup ST_Jc = 4
)

func (_gfded *CT_OMathJc) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _gfded.ValAttr != ST_JcUnset {
		_ggdc, _afcf := _gfded.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _afcf != nil {
			return _afcf
		}
		start.Attr = append(start.Attr, _ggdc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Char and its children, prefixing error messages with path
func (_aee *CT_Char) ValidateWithPath(path string) error { return nil }
func (_fgc *CT_CtrlPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for {
		_fbcb, _efbd := d.Token()
		if _efbd != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0074\u0072l\u0050\u0072\u003a\u0020\u0025\u0073", _efbd)
		}
		if _cbf, _acf := _fbcb.(_e.EndElement); _acf && _cbf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccf *CT_TopBot) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ccf.ValAttr = ST_TopBot(1)
	for _, _aacfb := range start.Attr {
		if _aacfb.Name.Local == "\u0076\u0061\u006c" {
			_ccf.ValAttr.UnmarshalXMLAttr(_aacfb)
			continue
		}
	}
	for {
		_ceab, _fddg := d.Token()
		if _fddg != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0054\u006f\u0070B\u006f\u0074\u003a\u0020\u0025\u0073", _fddg)
		}
		if _egga, _gegf := _ceab.(_e.EndElement); _gegf && _egga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the OMathPara and its children
func (_gdgg *OMathPara) Validate() error {
	return _gdgg.ValidateWithPath("\u004fM\u0061\u0074\u0068\u0050\u0061\u0072a")
}

// ValidateWithPath validates the OMath and its children, prefixing error messages with path
func (_dgcbc *OMath) ValidateWithPath(path string) error {
	if _cded := _dgcbc.CT_OMath.ValidateWithPath(path); _cded != nil {
		return _cded
	}
	return nil
}
func (_dcff *CT_FuncPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_dcffd:
	for {
		_ebdg, _bde := d.Token()
		if _bde != nil {
			return _bde
		}
		switch _bec := _ebdg.(type) {
		case _e.StartElement:
			switch _bec.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_dcff.CtrlPr = NewCT_CtrlPr()
				if _abb := d.DecodeElement(_dcff.CtrlPr, &_bec); _abb != nil {
					return _abb
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u0075\u006ec\u0050\u0072 \u0025\u0076", _bec.Name)
				if _cef := d.Skip(); _cef != nil {
					return _cef
				}
			}
		case _e.EndElement:
			break _dcffd
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BreakBin and its children, prefixing error messages with path
func (_bcc *CT_BreakBin) ValidateWithPath(path string) error {
	if _cbg := _bcc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbg != nil {
		return _cbg
	}
	return nil
}
func (_cga *CT_OMathParaPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_edcb:
	for {
		_ebac, _fgbdd := d.Token()
		if _fgbdd != nil {
			return _fgbdd
		}
		switch _efea := _ebac.(type) {
		case _e.StartElement:
			switch _efea.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006a\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006a\u0063"}:
				_cga.Jc = NewCT_OMathJc()
				if _aege := d.DecodeElement(_cga.Jc, &_efea); _aege != nil {
					return _aege
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050\u0061r\u0061P\u0072\u0020\u0025\u0076", _efea.Name)
				if _eecfb := d.Skip(); _eecfb != nil {
					return _eecfb
				}
			}
		case _e.EndElement:
			break _edcb
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_SSubSupPr() *CT_SSubSupPr { _ddee := &CT_SSubSupPr{}; return _ddee }

type CT_NaryPr struct {

	// n-ary Operator Character
	Chr *CT_Char

	// n-ary Limit Location
	LimLoc *CT_LimLoc

	// n-ary Grow
	Grow *CT_OnOff

	// Hide Subscript (n-ary)
	SubHide *CT_OnOff

	// Hide Superscript (n-ary)
	SupHide *CT_OnOff
	CtrlPr  *CT_CtrlPr
}

// Validate validates the CT_Phant and its children
func (_gbg *CT_Phant) Validate() error {
	return _gbg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074")
}
func NewCT_Phant() *CT_Phant { _caeb := &CT_Phant{}; _caeb.E = NewCT_OMathArg(); return _caeb }
func (_cfeb ST_LimLoc) ValidateWithPath(path string) error {
	switch _cfeb {
	case 0, 1, 2:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfeb))
	}
	return nil
}
func (_bdc *CT_Shp) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_aebc, _gacd := _bdc.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gacd != nil {
		return _gacd
	}
	start.Attr = append(start.Attr, _aebc)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_Rad struct {

	// Radical Properties
	RadPr *CT_RadPr

	// Degree
	Deg *CT_OMathArg

	// Base
	E *CT_OMathArg
}
type CT_Style struct {

	// Value
	ValAttr ST_Style
}

func (_fgeb *OMath) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d:\u006f\u004d\u0061\u0074\u0068"
	return _fgeb.CT_OMath.MarshalXML(e, start)
}
func NewCT_CtrlPr() *CT_CtrlPr { _deg := &CT_CtrlPr{}; return _deg }

// Validate validates the CT_OMathArgPr and its children
func (_dagea *CT_OMathArgPr) Validate() error {
	return _dagea.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072")
}

// Validate validates the CT_ManualBreak and its children
func (_fegg *CT_ManualBreak) Validate() error {
	return _fegg.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b")
}
func (_fbfa *CT_UnSignedInteger) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _acga := range start.Attr {
		if _acga.Name.Local == "\u0076\u0061\u006c" {
			_bbad, _acfe := _g.ParseUint(_acga.Value, 10, 32)
			if _acfe != nil {
				return _acfe
			}
			_fbfa.ValAttr = uint32(_bbad)
			continue
		}
	}
	for {
		_aeag, _ceg := d.Token()
		if _ceg != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0055\u006e\u0053\u0069\u0067\u006e\u0065d\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _ceg)
		}
		if _efdag, _gcgdg := _aeag.(_e.EndElement); _gcgdg && _efdag.Name == start.Name {
			break
		}
	}
	return nil
}
func (_faabg *CT_MC) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_edfd:
	for {
		_adg, _dfdd := d.Token()
		if _dfdd != nil {
			return _dfdd
		}
		switch _dbef := _adg.(type) {
		case _e.StartElement:
			switch _dbef.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0050\u0072"}:
				_faabg.McPr = NewCT_MCPr()
				if _ecfe := d.DecodeElement(_faabg.McPr, &_dbef); _ecfe != nil {
					return _ecfe
				}
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fM\u0043 \u0025\u0076", _dbef.Name)
				if _fed := d.Skip(); _fed != nil {
					return _fed
				}
			}
		case _e.EndElement:
			break _edfd
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_EqArr() *CT_EqArr { _bbe := &CT_EqArr{}; return _bbe }
func (_gec *CT_BarPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ecf:
	for {
		_caec, _egf := d.Token()
		if _egf != nil {
			return _egf
		}
		switch _bg := _caec.(type) {
		case _e.StartElement:
			switch _bg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073"}:
				_gec.Pos = NewCT_TopBot()
				if _cc := d.DecodeElement(_gec.Pos, &_bg); _cc != nil {
					return _cc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gec.CtrlPr = NewCT_CtrlPr()
				if _fa := d.DecodeElement(_gec.CtrlPr, &_bg); _fa != nil {
					return _fa
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072\u0020\u0025\u0076", _bg.Name)
				if _dgd := d.Skip(); _dgd != nil {
					return _dgd
				}
			}
		case _e.EndElement:
			break _ecf
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Style and its children, prefixing error messages with path
func (_dbgg *CT_Style) ValidateWithPath(path string) error {
	if _cfggd := _dbgg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cfggd != nil {
		return _cfggd
	}
	return nil
}
func (_gabe ST_TopBot) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_cebd := _e.Attr{}
	_cebd.Name = name
	switch _gabe {
	case ST_TopBotUnset:
		_cebd.Value = ""
	case ST_TopBotTop:
		_cebd.Value = "\u0074\u006f\u0070"
	case ST_TopBotBot:
		_cebd.Value = "\u0062\u006f\u0074"
	}
	return _cebd, nil
}
func (_gfff ST_BreakBinSub) ValidateWithPath(path string) error {
	switch _gfff {
	case 0, 1, 2, 3:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfff))
	}
	return nil
}
func (_gfdf *CT_D) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_baeg:
	for {
		_bbdd, _dbbg := d.Token()
		if _dbbg != nil {
			return _dbbg
		}
		switch _dagg := _bbdd.(type) {
		case _e.StartElement:
			switch _dagg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0050\u0072"}:
				_gfdf.DPr = NewCT_DPr()
				if _aea := d.DecodeElement(_gfdf.DPr, &_dagg); _aea != nil {
					return _aea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_fgea := NewCT_OMathArg()
				if _bad := d.DecodeElement(_fgea, &_dagg); _bad != nil {
					return _bad
				}
				_gfdf.E = append(_gfdf.E, _fgea)
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0044\u0020\u0025\u0076", _dagg.Name)
				if _fde := d.Skip(); _fde != nil {
					return _fde
				}
			}
		case _e.EndElement:
			break _baeg
		case _e.CharData:
		}
	}
	return nil
}
func (_gcaf ST_TopBot) String() string {
	switch _gcaf {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0062\u006f\u0074"
	}
	return ""
}

// Validate validates the CT_EqArrPr and its children
func (_aag *CT_EqArrPr) Validate() error {
	return _aag.ValidateWithPath("\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072")
}
func (_acad *CT_OMathJc) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _gbfg := range start.Attr {
		if _gbfg.Name.Local == "\u0076\u0061\u006c" {
			_acad.ValAttr.UnmarshalXMLAttr(_gbfg)
			continue
		}
	}
	for {
		_edaa, _bdgd := d.Token()
		if _bdgd != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063\u003a\u0020%\u0073", _bdgd)
		}
		if _fgddc, _ced := _edaa.(_e.EndElement); _ced && _fgddc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffae *CT_OMath) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_aabcf:
	for {
		_dbf, _ebff := d.Token()
		if _ebff != nil {
			return _ebff
		}
		switch _fdce := _dbf.(type) {
		case _e.StartElement:
			switch _fdce.Name {
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0020\u0025\u0076", _fdce.Name)
				if _efaf := d.Skip(); _efaf != nil {
					return _efaf
				}
			}
		case _e.EndElement:
			break _aabcf
		case _e.CharData:
		}
	}
	return nil
}
func (_bb *CT_AccPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gc:
	for {
		_cf, _eg := d.Token()
		if _eg != nil {
			return _eg
		}
		switch _gb := _cf.(type) {
		case _e.StartElement:
			switch _gb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_bb.Chr = NewCT_Char()
				if _ca := d.DecodeElement(_bb.Chr, &_gb); _ca != nil {
					return _ca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bb.CtrlPr = NewCT_CtrlPr()
				if _gae := d.DecodeElement(_bb.CtrlPr, &_gb); _gae != nil {
					return _gae
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072\u0020\u0025\u0076", _gb.Name)
				if _be := d.Skip(); _be != nil {
					return _be
				}
			}
		case _e.EndElement:
			break _gc
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_RChoice() *CT_RChoice { _egdf := &CT_RChoice{}; return _egdf }

type CT_OnOff struct {

	// value
	ValAttr *_c.ST_OnOff
}

func (_eegd *CT_MathPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _eegd.MathFont != nil {
		_beda := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_eegd.MathFont, _beda)
	}
	if _eegd.BrkBin != nil {
		_egfe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062\u0072\u006b\u0042\u0069\u006e"}}
		e.EncodeElement(_eegd.BrkBin, _egfe)
	}
	if _eegd.BrkBinSub != nil {
		_acfd := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0062\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"}}
		e.EncodeElement(_eegd.BrkBinSub, _acfd)
	}
	if _eegd.SmallFrac != nil {
		_gfa := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0073\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"}}
		e.EncodeElement(_eegd.SmallFrac, _gfa)
	}
	if _eegd.DispDef != nil {
		_gad := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0064\u0069\u0073\u0070\u0044\u0065f"}}
		e.EncodeElement(_eegd.DispDef, _gad)
	}
	if _eegd.LMargin != nil {
		_eeda := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006c\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_eegd.LMargin, _eeda)
	}
	if _eegd.RMargin != nil {
		_bedd := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0072\u004d\u0061\u0072\u0067\u0069n"}}
		e.EncodeElement(_eegd.RMargin, _bedd)
	}
	if _eegd.DefJc != nil {
		_bbcc := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0064\u0065\u0066\u004a\u0063"}}
		e.EncodeElement(_eegd.DefJc, _bbcc)
	}
	if _eegd.PreSp != nil {
		_beef := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0070\u0072\u0065\u0053\u0070"}}
		e.EncodeElement(_eegd.PreSp, _beef)
	}
	if _eegd.PostSp != nil {
		_gbfb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0070\u006f\u0073\u0074\u0053\u0070"}}
		e.EncodeElement(_eegd.PostSp, _gbfb)
	}
	if _eegd.InterSp != nil {
		_faff := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0069\u006e\u0074\u0065\u0072\u0053p"}}
		e.EncodeElement(_eegd.InterSp, _faff)
	}
	if _eegd.IntraSp != nil {
		_gcb := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0069\u006e\u0074\u0072\u0061\u0053p"}}
		e.EncodeElement(_eegd.IntraSp, _gcb)
	}
	if _eegd.MathPrChoice != nil {
		_eegd.MathPrChoice.MarshalXML(e, _e.StartElement{})
	}
	if _eegd.IntLim != nil {
		_efc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0069\u006e\u0074\u004c\u0069\u006d"}}
		e.EncodeElement(_eegd.IntLim, _efc)
	}
	if _eegd.NaryLim != nil {
		_daec := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006e\u0061\u0072\u0079\u004c\u0069m"}}
		e.EncodeElement(_eegd.NaryLim, _daec)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_OMathElementsChoice and its children, prefixing error messages with path
func (_gefc *EG_OMathElementsChoice) ValidateWithPath(path string) error {
	if _ebda := _gefc.OMathMathElementsChoice.ValidateWithPath(path + "\u002fO\u004d\u0061\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065m\u0065\u006e\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065"); _ebda != nil {
		return _ebda
	}
	return nil
}
func (_cdef *CT_Func) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cdef.FuncPr != nil {
		_bfba := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063\u0050\u0072"}}
		e.EncodeElement(_cdef.FuncPr, _bfba)
	}
	_faae := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0066\u004e\u0061\u006d\u0065"}}
	e.EncodeElement(_cdef.FName, _faae)
	_cgdd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_cdef.E, _cgdd)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_ffeg *EG_OMathMathElementsChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cfdd := start
	switch start.Name {
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063"}:
		_ffeg.Acc = NewCT_Acc()
		if _dbdge := d.DecodeElement(_ffeg.Acc, &_cfdd); _dbdge != nil {
			return _dbdge
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072"}:
		_ffeg.Bar = NewCT_Bar()
		if _dgfbg := d.DecodeElement(_ffeg.Bar, &_cfdd); _dgfbg != nil {
			return _dgfbg
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078"}:
		_ffeg.Box = NewCT_Box()
		if _ecfgag := d.DecodeElement(_ffeg.Box, &_cfdd); _ecfgag != nil {
			return _ecfgag
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062o\u0072\u0064\u0065\u0072\u0042\u006fx"}:
		_ffeg.BorderBox = NewCT_BorderBox()
		if _eaag := d.DecodeElement(_ffeg.BorderBox, &_cfdd); _eaag != nil {
			return _eaag
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064"}:
		_ffeg.D = NewCT_D()
		if _fefc := d.DecodeElement(_ffeg.D, &_cfdd); _fefc != nil {
			return _fefc
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u0071\u0041r\u0072"}:
		_ffeg.EqArr = NewCT_EqArr()
		if _aaec := d.DecodeElement(_ffeg.EqArr, &_cfdd); _aaec != nil {
			return _aaec
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066"}:
		_ffeg.F = NewCT_F()
		if _bedea := d.DecodeElement(_ffeg.F, &_cfdd); _bedea != nil {
			return _bedea
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0075\u006e\u0063"}:
		_ffeg.Func = NewCT_Func()
		if _dcdf := d.DecodeElement(_ffeg.Func, &_cfdd); _dcdf != nil {
			return _dcdf
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}:
		_ffeg.GroupChr = NewCT_GroupChr()
		if _fecb := d.DecodeElement(_ffeg.GroupChr, &_cfdd); _fecb != nil {
			return _fecb
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0077"}:
		_ffeg.LimLow = NewCT_LimLow()
		if _gcca := d.DecodeElement(_ffeg.LimLow, &_cfdd); _gcca != nil {
			return _gcca
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u0055\u0070\u0070"}:
		_ffeg.LimUpp = NewCT_LimUpp()
		if _gddag := d.DecodeElement(_ffeg.LimUpp, &_cfdd); _gddag != nil {
			return _gddag
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d"}:
		_ffeg.M = NewCT_M()
		if _cfac := d.DecodeElement(_ffeg.M, &_cfdd); _cfac != nil {
			return _cfac
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079"}:
		_ffeg.Nary = NewCT_Nary()
		if _bfbc := d.DecodeElement(_ffeg.Nary, &_cfdd); _bfbc != nil {
			return _bfbc
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0068\u0061n\u0074"}:
		_ffeg.Phant = NewCT_Phant()
		if _fcaff := d.DecodeElement(_ffeg.Phant, &_cfdd); _fcaff != nil {
			return _fcaff
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064"}:
		_ffeg.Rad = NewCT_Rad()
		if _faaa := d.DecodeElement(_ffeg.Rad, &_cfdd); _faaa != nil {
			return _faaa
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065"}:
		_ffeg.SPre = NewCT_SPre()
		if _daaa := d.DecodeElement(_ffeg.SPre, &_cfdd); _daaa != nil {
			return _daaa
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0062"}:
		_ffeg.SSub = NewCT_SSub()
		if _eedbe := d.DecodeElement(_ffeg.SSub, &_cfdd); _eedbe != nil {
			return _eedbe
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073S\u0075\u0062\u0053\u0075\u0070"}:
		_ffeg.SSubSup = NewCT_SSubSup()
		if _dgaab := d.DecodeElement(_ffeg.SSubSup, &_cfdd); _dgaab != nil {
			return _dgaab
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070"}:
		_ffeg.SSup = NewCT_SSup()
		if _gfbb := d.DecodeElement(_ffeg.SSup, &_cfdd); _gfbb != nil {
			return _gfbb
		}
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072"}:
		_ffeg.R = NewCT_R()
		if _fgfg := d.DecodeElement(_ffeg.R, &_cfdd); _fgfg != nil {
			return _fgfg
		}
	default:
		_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0045\u0047_\u004f\u004da\u0074\u0068\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cfdd.Name)
		if _afce := d.Skip(); _afce != nil {
			return _afce
		}
	}
	return nil
}

type CT_RPR struct {

	// Literal
	Lit *CT_OnOff
	Nor *CT_OnOff

	// Break
	Brk *CT_ManualBreak

	// Align
	Aln *CT_OnOff
}

func (_eeee *CT_RadPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eadfc:
	for {
		_dfdda, _fadg := d.Token()
		if _fadg != nil {
			return _fadg
		}
		switch _baegc := _dfdda.(type) {
		case _e.StartElement:
			switch _baegc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064e\u0067\u0048\u0069\u0064\u0065"}:
				_eeee.DegHide = NewCT_OnOff()
				if _cfed := d.DecodeElement(_eeee.DegHide, &_baegc); _cfed != nil {
					return _cfed
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_eeee.CtrlPr = NewCT_CtrlPr()
				if _fdcb := d.DecodeElement(_eeee.CtrlPr, &_baegc); _fdcb != nil {
					return _fdcb
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072\u0020\u0025\u0076", _baegc.Name)
				if _geb := d.Skip(); _geb != nil {
					return _geb
				}
			}
		case _e.EndElement:
			break _eadfc
		case _e.CharData:
		}
	}
	return nil
}

type CT_Text struct {
	SpaceAttr *string
	Content   string
}
type CT_LimLow struct {

	// Lower-Limit Properties
	LimLowPr *CT_LimLowPr

	// Base
	E *CT_OMathArg

	// Limit
	Lim *CT_OMathArg
}
type CT_RChoice struct{ T *CT_Text }

// ValidateWithPath validates the MathPr and its children, prefixing error messages with path
func (_egbf *MathPr) ValidateWithPath(path string) error {
	if _cca := _egbf.CT_MathPr.ValidateWithPath(path); _cca != nil {
		return _cca
	}
	return nil
}
func (_fgd *CT_FType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fgd.ValAttr = ST_FType(1)
	for _, _cbef := range start.Attr {
		if _cbef.Name.Local == "\u0076\u0061\u006c" {
			_fgd.ValAttr.UnmarshalXMLAttr(_cbef)
			continue
		}
	}
	for {
		_cee, _fgdf := d.Token()
		if _fgdf != nil {
			return _ga.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0054\u0079\u0070\u0065: \u0025\u0073", _fgdf)
		}
		if _fcfd, _afbc := _cee.(_e.EndElement); _afbc && _fcfd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_FPr and its children
func (_fag *CT_FPr) Validate() error {
	return _fag.ValidateWithPath("\u0043\u0054\u005f\u0046\u0050\u0072")
}
func (_bfcff ST_Jc) String() string {
	switch _bfcff {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0072\u0069\u0067h\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return ""
}

// ValidateWithPath validates the CT_SPre and its children, prefixing error messages with path
func (_gabb *CT_SPre) ValidateWithPath(path string) error {
	if _gabb.SPrePr != nil {
		if _beegc := _gabb.SPrePr.ValidateWithPath(path + "\u002fS\u0050\u0072\u0065\u0050\u0072"); _beegc != nil {
			return _beegc
		}
	}
	if _gbfe := _gabb.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _gbfe != nil {
		return _gbfe
	}
	if _ccef := _gabb.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _ccef != nil {
		return _ccef
	}
	if _fcef := _gabb.E.ValidateWithPath(path + "\u002f\u0045"); _fcef != nil {
		return _fcef
	}
	return nil
}
func (_fgad *CT_MPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eee:
	for {
		_gbff, _dddc := d.Token()
		if _dddc != nil {
			return _dddc
		}
		switch _egebb := _gbff.(type) {
		case _e.StartElement:
			switch _egebb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0073\u0065\u004a\u0063"}:
				_fgad.BaseJc = NewCT_YAlign()
				if _baeb := d.DecodeElement(_fgad.BaseJc, &_egebb); _baeb != nil {
					return _baeb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070l\u0063\u0048\u0069\u0064\u0065"}:
				_fgad.PlcHide = NewCT_OnOff()
				if _daff := d.DecodeElement(_fgad.PlcHide, &_egebb); _daff != nil {
					return _daff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072S\u0070\u0052\u0075\u006c\u0065"}:
				_fgad.RSpRule = NewCT_SpacingRule()
				if _defd := d.DecodeElement(_fgad.RSpRule, &_egebb); _defd != nil {
					return _defd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063G\u0070\u0052\u0075\u006c\u0065"}:
				_fgad.CGpRule = NewCT_SpacingRule()
				if _dbee := d.DecodeElement(_fgad.CGpRule, &_egebb); _dbee != nil {
					return _dbee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0053\u0070"}:
				_fgad.RSp = NewCT_UnSignedInteger()
				if _bcebf := d.DecodeElement(_fgad.RSp, &_egebb); _bcebf != nil {
					return _bcebf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0053\u0070"}:
				_fgad.CSp = NewCT_UnSignedInteger()
				if _ffec := d.DecodeElement(_fgad.CSp, &_egebb); _ffec != nil {
					return _ffec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0047\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0047\u0070"}:
				_fgad.CGp = NewCT_UnSignedInteger()
				if _edg := d.DecodeElement(_fgad.CGp, &_egebb); _edg != nil {
					return _edg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u0073"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u0073"}:
				_fgad.Mcs = NewCT_MCS()
				if _acdgg := d.DecodeElement(_fgad.Mcs, &_egebb); _acdgg != nil {
					return _acdgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fgad.CtrlPr = NewCT_CtrlPr()
				if _gfea := d.DecodeElement(_fgad.CtrlPr, &_egebb); _gfea != nil {
					return _gfea
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0050\u0072\u0020\u0025\u0076", _egebb.Name)
				if _ceae := d.Skip(); _ceae != nil {
					return _ceae
				}
			}
		case _e.EndElement:
			break _eee
		case _e.CharData:
		}
	}
	return nil
}

type CT_Char struct {

	// value
	ValAttr string
}

func (_b *CT_Acc) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_b.E = NewCT_OMathArg()
_aa:
	for {
		_cb, _dd := d.Token()
		if _dd != nil {
			return _dd
		}
		switch _fg := _cb.(type) {
		case _e.StartElement:
			switch _fg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0063\u0063P\u0072"}:
				_b.AccPr = NewCT_AccPr()
				if _dg := d.DecodeElement(_b.AccPr, &_fg); _dg != nil {
					return _dg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ag := d.DecodeElement(_b.E, &_fg); _ag != nil {
					return _ag
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0063\u0063\u0020\u0025\u0076", _fg.Name)
				if _eb := d.Skip(); _eb != nil {
					return _eb
				}
			}
		case _e.EndElement:
			break _aa
		case _e.CharData:
		}
	}
	return nil
}
func (_efac ST_FType) Validate() error { return _efac.ValidateWithPath("") }

// ValidateWithPath validates the CT_CtrlPr and its children, prefixing error messages with path
func (_ecfd *CT_CtrlPr) ValidateWithPath(path string) error { return nil }
func NewCT_LimUppPr() *CT_LimUppPr                          { _fcag := &CT_LimUppPr{}; return _fcag }
func (_gfg *CT_DPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bca:
	for {
		_gdcg, _fce := d.Token()
		if _fce != nil {
			return _fce
		}
		switch _fec := _gdcg.(type) {
		case _e.StartElement:
			switch _fec.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0065\u0067\u0043\u0068\u0072"}:
				_gfg.BegChr = NewCT_Char()
				if _ccb := d.DecodeElement(_gfg.BegChr, &_fec); _ccb != nil {
					return _ccb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0065\u0070\u0043\u0068\u0072"}:
				_gfg.SepChr = NewCT_Char()
				if _gfgc := d.DecodeElement(_gfg.SepChr, &_fec); _gfgc != nil {
					return _gfgc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065\u006e\u0064\u0043\u0068\u0072"}:
				_gfg.EndChr = NewCT_Char()
				if _gbe := d.DecodeElement(_gfg.EndChr, &_fec); _gbe != nil {
					return _gbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_gfg.Grow = NewCT_OnOff()
				if _bbc := d.DecodeElement(_gfg.Grow, &_fec); _bbc != nil {
					return _bbc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u0070"}:
				_gfg.Shp = NewCT_Shp()
				if _ecee := d.DecodeElement(_gfg.Shp, &_fec); _ecee != nil {
					return _ecee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gfg.CtrlPr = NewCT_CtrlPr()
				if _bbde := d.DecodeElement(_gfg.CtrlPr, &_fec); _bbde != nil {
					return _bbde
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0050\u0072\u0020\u0025\u0076", _fec.Name)
				if _cbfe := d.Skip(); _cbfe != nil {
					return _cbfe
				}
			}
		case _e.EndElement:
			break _bca
		case _e.CharData:
		}
	}
	return nil
}
func NewEG_OMathElements() *EG_OMathElements {
	_bacd := &EG_OMathElements{}
	_bacd.OMathElementsChoice = NewEG_OMathElementsChoice()
	return _bacd
}
func (_cdcb *ST_Style) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gbcc, _aagec := d.Token()
	if _aagec != nil {
		return _aagec
	}
	if _gdacf, _cbgdca := _gbcc.(_e.EndElement); _cbgdca && _gdacf.Name == start.Name {
		*_cdcb = 1
		return nil
	}
	if _dade, _baff := _gbcc.(_e.CharData); !_baff {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbcc)
	} else {
		switch string(_dade) {
		case "":
			*_cdcb = 0
		case "\u0070":
			*_cdcb = 1
		case "\u0062":
			*_cdcb = 2
		case "\u0069":
			*_cdcb = 3
		case "\u0062\u0069":
			*_cdcb = 4
		}
	}
	_gbcc, _aagec = d.Token()
	if _aagec != nil {
		return _aagec
	}
	if _abeeb, _fcgbe := _gbcc.(_e.EndElement); _fcgbe && _abeeb.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbcc)
}

// Validate validates the CT_OMath and its children
func (_dage *CT_OMath) Validate() error {
	return _dage.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068")
}

// ValidateWithPath validates the CT_SSubSupPr and its children, prefixing error messages with path
func (_cggd *CT_SSubSupPr) ValidateWithPath(path string) error {
	if _cggd.AlnScr != nil {
		if _dega := _cggd.AlnScr.ValidateWithPath(path + "\u002fA\u006c\u006e\u0053\u0063\u0072"); _dega != nil {
			return _dega
		}
	}
	if _cggd.CtrlPr != nil {
		if _cdea := _cggd.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _cdea != nil {
			return _cdea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MathPrChoice and its children, prefixing error messages with path
func (_agc *CT_MathPrChoice) ValidateWithPath(path string) error {
	if _agc.WrapIndent != nil {
		if _ecga := _agc.WrapIndent.ValidateWithPath(path + "/\u0057\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"); _ecga != nil {
			return _ecga
		}
	}
	if _agc.WrapRight != nil {
		if _gbcaf := _agc.WrapRight.ValidateWithPath(path + "\u002f\u0057\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"); _gbcaf != nil {
			return _gbcaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Phant and its children, prefixing error messages with path
func (_afabc *CT_Phant) ValidateWithPath(path string) error {
	if _afabc.PhantPr != nil {
		if _gagfc := _afabc.PhantPr.ValidateWithPath(path + "\u002f\u0050\u0068\u0061\u006e\u0074\u0050\u0072"); _gagfc != nil {
			return _gagfc
		}
	}
	if _baea := _afabc.E.ValidateWithPath(path + "\u002f\u0045"); _baea != nil {
		return _baea
	}
	return nil
}

// ValidateWithPath validates the CT_OMathParaPr and its children, prefixing error messages with path
func (_eece *CT_OMathParaPr) ValidateWithPath(path string) error {
	if _eece.Jc != nil {
		if _dagf := _eece.Jc.ValidateWithPath(path + "\u002f\u004a\u0063"); _dagf != nil {
			return _dagf
		}
	}
	return nil
}
func NewCT_MathPr() *CT_MathPr {
	_ffbg := &CT_MathPr{}
	return _ffbg
}
func NewCT_OMathPara() *CT_OMathPara { _aafb := &CT_OMathPara{}; return _aafb }
func (_dacb *EG_OMathElements) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dacb.OMathElementsChoice = NewEG_OMathElementsChoice()
_egbb:
	for {
		_aebf, _addc := d.Token()
		if _addc != nil {
			return _addc
		}
		switch _gccb := _aebf.(type) {
		case _e.StartElement:
			switch _gccb.Name {
			default:
				_cbefe := _dacb.OMathElementsChoice
				if _cbefe == nil {
					_cbefe = NewEG_OMathElementsChoice()
				}
				if _bebb := d.DecodeElement(&_cbefe, &_gccb); _bebb == nil {
					_dacb.OMathElementsChoice = _cbefe
				}
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0020\u0025v", _gccb.Name)
				if _gde := d.Skip(); _gde != nil {
					return _gde
				}
			}
		case _e.EndElement:
			break _egbb
		case _e.CharData:
		}
	}
	return nil
}
func (_ffca *CT_ManualBreak) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _ffca.AlnAtAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d:\u0061\u006c\u006e\u0041\u0074"}, Value: _ga.Sprintf("\u0025\u0076", *_ffca.AlnAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Rad and its children, prefixing error messages with path
func (_fcca *CT_Rad) ValidateWithPath(path string) error {
	if _fcca.RadPr != nil {
		if _face := _fcca.RadPr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0050\u0072"); _face != nil {
			return _face
		}
	}
	if _agae := _fcca.Deg.ValidateWithPath(path + "\u002f\u0044\u0065\u0067"); _agae != nil {
		return _agae
	}
	if _gdgcf := _fcca.E.ValidateWithPath(path + "\u002f\u0045"); _gdgcf != nil {
		return _gdgcf
	}
	return nil
}
func (_gecaa *CT_GroupChr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gecaa.GroupChrPr != nil {
		_ccge := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0067r\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}}
		e.EncodeElement(_gecaa.GroupChrPr, _ccge)
	}
	_cgcg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_gecaa.E, _cgcg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cabg *CT_RadPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cabg.DegHide != nil {
		_gadd := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0064\u0065\u0067\u0048\u0069\u0064e"}}
		e.EncodeElement(_cabg.DegHide, _gadd)
	}
	if _cabg.CtrlPr != nil {
		_degf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_cabg.CtrlPr, _degf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_cfbgg ST_BreakBin) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_cfbgg.String(), start)
}

// ValidateWithPath validates the CT_RChoice and its children, prefixing error messages with path
func (_egab *CT_RChoice) ValidateWithPath(path string) error {
	if _egab.T != nil {
		if _abde := _egab.T.ValidateWithPath(path + "\u002f\u0054"); _abde != nil {
			return _abde
		}
	}
	return nil
}
func (_beabd ST_BreakBinSub) String() string {
	switch _beabd {
	case 0:
		return ""
	case 1:
		return "\u002d\u002d"
	case 2:
		return "\u002d\u002b"
	case 3:
		return "\u002b\u002d"
	}
	return ""
}
func NewCT_Acc() *CT_Acc { _fb := &CT_Acc{}; _fb.E = NewCT_OMathArg(); return _fb }
func (_bdaf *CT_RChoice) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_gfbe := start
	switch start.Name {
	case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
		_bdaf.T = NewCT_Text()
		if _fdea := d.DecodeElement(_bdaf.T, &_gfbe); _fdea != nil {
			return _fdea
		}
	default:
		_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fR\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gfbe.Name)
		if _acaeb := d.Skip(); _acaeb != nil {
			return _acaeb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SSubSup and its children, prefixing error messages with path
func (_fddf *CT_SSubSup) ValidateWithPath(path string) error {
	if _fddf.SSubSupPr != nil {
		if _ddfa := _fddf.SSubSupPr.ValidateWithPath(path + "\u002f\u0053\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072"); _ddfa != nil {
			return _ddfa
		}
	}
	if _agdfg := _fddf.E.ValidateWithPath(path + "\u002f\u0045"); _agdfg != nil {
		return _agdfg
	}
	if _ddgff := _fddf.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _ddgff != nil {
		return _ddgff
	}
	if _ffcg := _fddf.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _ffcg != nil {
		return _ffcg
	}
	return nil
}
func NewCT_BarPr() *CT_BarPr { _cfa := &CT_BarPr{}; return _cfa }

// ValidateWithPath validates the CT_FPr and its children, prefixing error messages with path
func (_cdb *CT_FPr) ValidateWithPath(path string) error {
	if _cdb.Type != nil {
		if _egad := _cdb.Type.ValidateWithPath(path + "\u002f\u0054\u0079p\u0065"); _egad != nil {
			return _egad
		}
	}
	if _cdb.CtrlPr != nil {
		if _bbbff := _cdb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bbbff != nil {
			return _bbbff
		}
	}
	return nil
}

const (
	ST_FTypeUnset ST_FType = 0
	ST_FTypeBar   ST_FType = 1
	ST_FTypeSkw   ST_FType = 2
	ST_FTypeLin   ST_FType = 3
	ST_FTypeNoBar ST_FType = 4
)

func (_abbb *CT_LimUpp) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _abbb.LimUppPr != nil {
		_age := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070\u0050\u0072"}}
		e.EncodeElement(_abbb.LimUppPr, _age)
	}
	_dfec := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_abbb.E, _dfec)
	_afe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_abbb.Lim, _afe)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_CtrlPr struct{}

func NewEG_OMathMathElements() *EG_OMathMathElements {
	_gdaef := &EG_OMathMathElements{}
	_gdaef.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
	return _gdaef
}
func NewCT_FPr() *CT_FPr { _ggfc := &CT_FPr{}; return _ggfc }

type CT_MC struct {

	// Matrix Column Properties
	McPr *CT_MCPr
}

func (_dcg *CT_Phant) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dcg.E = NewCT_OMathArg()
_eebaa:
	for {
		_dgab, _aggee := d.Token()
		if _aggee != nil {
			return _aggee
		}
		switch _fdg := _dgab.(type) {
		case _e.StartElement:
			switch _fdg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070h\u0061\u006e\u0074\u0050\u0072"}:
				_dcg.PhantPr = NewCT_PhantPr()
				if _acca := d.DecodeElement(_dcg.PhantPr, &_fdg); _acca != nil {
					return _acca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _babc := d.DecodeElement(_dcg.E, &_fdg); _babc != nil {
					return _babc
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0020\u0025\u0076", _fdg.Name)
				if _efde := d.Skip(); _efde != nil {
					return _efde
				}
			}
		case _e.EndElement:
			break _eebaa
		case _e.CharData:
		}
	}
	return nil
}
func (_dcdg *CT_MCPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dcdg.Count != nil {
		_afab := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0063\u006f\u0075\u006e\u0074"}}
		e.EncodeElement(_dcdg.Count, _afab)
	}
	if _dcdg.McJc != nil {
		_dabc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d\u0063\u004a\u0063"}}
		e.EncodeElement(_dcdg.McJc, _dabc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gbab *CT_Phant) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gbab.PhantPr != nil {
		_dbcd := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074\u0050r"}}
		e.EncodeElement(_gbab.PhantPr, _dbcd)
	}
	_aaaa := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_gbab.E, _aaaa)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BreakBinSub and its children, prefixing error messages with path
func (_adf *CT_BreakBinSub) ValidateWithPath(path string) error {
	if _cde := _adf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cde != nil {
		return _cde
	}
	return nil
}
func (_gaba *CT_Nary) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gaba.NaryPr != nil {
		_bcfde := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079\u0050\u0072"}}
		e.EncodeElement(_gaba.NaryPr, _bcfde)
	}
	_bfbgb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0062"}}
	e.EncodeElement(_gaba.Sub, _bfbgb)
	_cgcgf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073u\u0070"}}
	e.EncodeElement(_gaba.Sup, _cgcgf)
	_cgea := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_gaba.E, _cgea)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Func and its children
func (_ebee *CT_Func) Validate() error {
	return _ebee.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063")
}
func (_geed ST_BreakBinSub) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_geed.String(), start)
}

type CT_FPr struct {

	// Fraction type
	Type   *CT_FType
	CtrlPr *CT_CtrlPr
}

// ValidateWithPath validates the CT_Integer2 and its children, prefixing error messages with path
func (_fbdd *CT_Integer2) ValidateWithPath(path string) error {
	if _fbdd.ValAttr < -2 {
		return _ga.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003e\u003d\u0020\u002d2 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _fbdd.ValAttr)
	}
	if _fbdd.ValAttr > 2 {
		return _ga.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0032\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _fbdd.ValAttr)
	}
	return nil
}
func (_cdgd *CT_RChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _cdgd.T != nil {
		_efgd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0074"}}
		e.EncodeElement(_cdgd.T, _efgd)
	}
	return nil
}

// Validate validates the CT_Style and its children
func (_ggac *CT_Style) Validate() error {
	return _ggac.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065")
}
func (_dfga *CT_OMathPara) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dfga.OMathParaPr != nil {
		_ggda := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}}
		e.EncodeElement(_dfga.OMathParaPr, _ggda)
	}
	_egb := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006f\u004d\u0061\u0074\u0068"}}
	for _, _geee := range _dfga.OMath {
		e.EncodeElement(_geee, _egb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_GroupChrPr struct {

	// Group Character (Grouping Character)
	Chr *CT_Char

	// Position (Group Character)
	Pos *CT_TopBot

	// Vertical Justification
	VertJc *CT_TopBot
	CtrlPr *CT_CtrlPr
}
type CT_SSup struct {

	// Superscript Properties
	SSupPr *CT_SSupPr

	// Base
	E *CT_OMathArg

	// Superscript (Superscript object)
	Sup *CT_OMathArg
}

// ValidateWithPath validates the CT_R and its children, prefixing error messages with path
func (_bcda *CT_R) ValidateWithPath(path string) error {
	if _bcda.RPr != nil {
		if _afec := _bcda.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _afec != nil {
			return _afec
		}
	}
	for _fdba, _efgg := range _bcda.RChoice {
		if _fbaf := _efgg.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002f\u0052\u0043\u0068\u006f\u0069\u0063e\u005b\u0025\u0064\u005d", path, _fdba)); _fbaf != nil {
			return _fbaf
		}
	}
	return nil
}
func NewCT_LimLoc() *CT_LimLoc { _ddeb := &CT_LimLoc{}; _ddeb.ValAttr = ST_LimLoc(1); return _ddeb }
func (_gbefe ST_Style) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gbefe.String(), start)
}
func NewCT_GroupChrPr() *CT_GroupChrPr { _eace := &CT_GroupChrPr{}; return _eace }
func (_efbf ST_LimLoc) String() string {
	switch _efbf {
	case 0:
		return ""
	case 1:
		return "\u0075\u006e\u0064\u004f\u0076\u0072"
	case 2:
		return "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return ""
}

type CT_BorderBox struct {

	// Border-Box Properties
	BorderBoxPr *CT_BorderBoxPr

	// Base
	E *CT_OMathArg
}

// ValidateWithPath validates the CT_BorderBox and its children, prefixing error messages with path
func (_gda *CT_BorderBox) ValidateWithPath(path string) error {
	if _gda.BorderBoxPr != nil {
		if _ddgf := _gda.BorderBoxPr.ValidateWithPath(path + "\u002f\u0042\u006fr\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"); _ddgf != nil {
			return _ddgf
		}
	}
	if _bag := _gda.E.ValidateWithPath(path + "\u002f\u0045"); _bag != nil {
		return _bag
	}
	return nil
}

type CT_SSubSupPr struct {

	// Align Scripts
	AlnScr *CT_OnOff
	CtrlPr *CT_CtrlPr
}

// Validate validates the EG_OMathMathElements and its children
func (_affb *EG_OMathMathElements) Validate() error {
	return _affb.ValidateWithPath("E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073")
}
func (_bff *CT_FuncPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bff.CtrlPr != nil {
		_ggfd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bff.CtrlPr, _ggfd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_Bar struct {

	// Bar Properties
	BarPr *CT_BarPr

	// Base
	E *CT_OMathArg
}

func NewCT_RadPr() *CT_RadPr { _abdef := &CT_RadPr{}; return _abdef }

type CT_OMathArgPr struct {

	// Argument Size
	ArgSz *CT_Integer2
}

func (_bffc *ST_FType) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ddbf, _bdcc := d.Token()
	if _bdcc != nil {
		return _bdcc
	}
	if _cadb, _bbgac := _ddbf.(_e.EndElement); _bbgac && _cadb.Name == start.Name {
		*_bffc = 1
		return nil
	}
	if _dcffg, _cffdf := _ddbf.(_e.CharData); !_cffdf {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddbf)
	} else {
		switch string(_dcffg) {
		case "":
			*_bffc = 0
		case "\u0062\u0061\u0072":
			*_bffc = 1
		case "\u0073\u006b\u0077":
			*_bffc = 2
		case "\u006c\u0069\u006e":
			*_bffc = 3
		case "\u006e\u006f\u0042a\u0072":
			*_bffc = 4
		}
	}
	_ddbf, _bdcc = d.Token()
	if _bdcc != nil {
		return _bdcc
	}
	if _ffbb, _faabf := _ddbf.(_e.EndElement); _faabf && _ffbb.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddbf)
}
func (_defb *CT_MCPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fdf:
	for {
		_gecb, _gea := d.Token()
		if _gea != nil {
			return _gea
		}
		switch _babe := _gecb.(type) {
		case _e.StartElement:
			switch _babe.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u006f\u0075n\u0074"}:
				_defb.Count = NewCT_Integer255()
				if _ada := d.DecodeElement(_defb.Count, &_babe); _ada != nil {
					return _ada
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063\u004a\u0063"}:
				_defb.McJc = NewCT_XAlign()
				if _fea := d.DecodeElement(_defb.McJc, &_babe); _fea != nil {
					return _fea
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004d\u0043\u0050\u0072\u0020\u0025\u0076", _babe.Name)
				if _bfe := d.Skip(); _bfe != nil {
					return _bfe
				}
			}
		case _e.EndElement:
			break _fdf
		case _e.CharData:
		}
	}
	return nil
}
func (_bcff *CT_TwipsMeasure) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _bcff.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gbd *CT_Char) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _gbd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_OMathElements and its children, prefixing error messages with path
func (_bega *EG_OMathElements) ValidateWithPath(path string) error {
	if _dcbd := _bega.OMathElementsChoice.ValidateWithPath(path + "/\u004fM\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065n\u0074\u0073\u0043\u0068oi\u0063\u0065"); _dcbd != nil {
		return _dcbd
	}
	return nil
}

// ValidateWithPath validates the CT_D and its children, prefixing error messages with path
func (_eaba *CT_D) ValidateWithPath(path string) error {
	if _eaba.DPr != nil {
		if _cgc := _eaba.DPr.ValidateWithPath(path + "\u002f\u0044\u0050\u0072"); _cgc != nil {
			return _cgc
		}
	}
	for _dcf, _gca := range _eaba.E {
		if _dbg := _gca.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _dcf)); _dbg != nil {
			return _dbg
		}
	}
	return nil
}
func NewCT_UnSignedInteger() *CT_UnSignedInteger { _dece := &CT_UnSignedInteger{}; return _dece }
func (_acc *CT_BorderBox) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _acc.BorderBoxPr != nil {
		_ab := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_acc.BorderBoxPr, _ab)
	}
	_fe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_acc.E, _fe)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_SPrePr() *CT_SPrePr {
	_cccg := &CT_SPrePr{}
	return _cccg
}
func (_dgb *CT_BorderBoxPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dgb.HideTop != nil {
		_eaf := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0054\u006fp"}}
		e.EncodeElement(_dgb.HideTop, _eaf)
	}
	if _dgb.HideBot != nil {
		_dde := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0068\u0069\u0064\u0065\u0042\u006ft"}}
		e.EncodeElement(_dgb.HideBot, _dde)
	}
	if _dgb.HideLeft != nil {
		_accg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}}
		e.EncodeElement(_dgb.HideLeft, _accg)
	}
	if _dgb.HideRight != nil {
		_fad := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0068\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_dgb.HideRight, _fad)
	}
	if _dgb.StrikeH != nil {
		_ggg := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065H"}}
		e.EncodeElement(_dgb.StrikeH, _ggg)
	}
	if _dgb.StrikeV != nil {
		_fbe := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0073\u0074\u0072\u0069\u006b\u0065V"}}
		e.EncodeElement(_dgb.StrikeV, _fbe)
	}
	if _dgb.StrikeBLTR != nil {
		_bc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}}
		e.EncodeElement(_dgb.StrikeBLTR, _bc)
	}
	if _dgb.StrikeTLBR != nil {
		_geg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073t\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}}
		e.EncodeElement(_dgb.StrikeTLBR, _geg)
	}
	if _dgb.CtrlPr != nil {
		_dfb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_dgb.CtrlPr, _dfb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gfaa *CT_SSubSupPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gfaa.AlnScr != nil {
		_bbgg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0061\u006c\u006e\u0053\u0063\u0072"}}
		e.EncodeElement(_gfaa.AlnScr, _bbgg)
	}
	if _gfaa.CtrlPr != nil {
		_cbcg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_gfaa.CtrlPr, _cbcg)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Acc and its children, prefixing error messages with path
func (_ge *CT_Acc) ValidateWithPath(path string) error {
	if _ge.AccPr != nil {
		if _fga := _ge.AccPr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0050\u0072"); _fga != nil {
			return _fga
		}
	}
	if _gd := _ge.E.ValidateWithPath(path + "\u002f\u0045"); _gd != nil {
		return _gd
	}
	return nil
}
func NewCT_BorderBoxPr() *CT_BorderBoxPr { _eeg := &CT_BorderBoxPr{}; return _eeg }

// Validate validates the CT_SSubPr and its children
func (_ebgc *CT_SSubPr) Validate() error {
	return _ebgc.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r")
}

type CT_SpacingRule struct {

	// Value
	ValAttr int64
}

// Validate validates the CT_BreakBinSub and its children
func (_dac *CT_BreakBinSub) Validate() error {
	return _dac.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062")
}
func (_abbag *ST_Shp) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bdfa, _edce := d.Token()
	if _edce != nil {
		return _edce
	}
	if _ggeb, _bfgd := _bdfa.(_e.EndElement); _bfgd && _ggeb.Name == start.Name {
		*_abbag = 1
		return nil
	}
	if _egfbb, _fcagea := _bdfa.(_e.CharData); !_fcagea {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdfa)
	} else {
		switch string(_egfbb) {
		case "":
			*_abbag = 0
		case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
			*_abbag = 1
		case "\u006d\u0061\u0074c\u0068":
			*_abbag = 2
		}
	}
	_bdfa, _edce = d.Token()
	if _edce != nil {
		return _edce
	}
	if _aaag, _adab := _bdfa.(_e.EndElement); _adab && _aaag.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdfa)
}

// Validate validates the CT_AccPr and its children
func (_da *CT_AccPr) Validate() error {
	return _da.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072")
}

type ST_Style byte

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_daa *CT_String) ValidateWithPath(path string) error { return nil }

type CT_SSupPr struct{ CtrlPr *CT_CtrlPr }

func (_fgecd *CT_UnSignedInteger) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", _fgecd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OMathJc and its children
func (_bcba *CT_OMathJc) Validate() error {
	return _bcba.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063")
}
func (_adca *ST_BreakBin) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fgeg, _aagf := d.Token()
	if _aagf != nil {
		return _aagf
	}
	if _ecda, _gdgcb := _fgeg.(_e.EndElement); _gdgcb && _ecda.Name == start.Name {
		*_adca = 1
		return nil
	}
	if _aggdf, _ffdb := _fgeg.(_e.CharData); !_ffdb {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgeg)
	} else {
		switch string(_aggdf) {
		case "":
			*_adca = 0
		case "\u0062\u0065\u0066\u006f\u0072\u0065":
			*_adca = 1
		case "\u0061\u0066\u0074e\u0072":
			*_adca = 2
		case "\u0072\u0065\u0070\u0065\u0061\u0074":
			*_adca = 3
		}
	}
	_fgeg, _aagf = d.Token()
	if _aagf != nil {
		return _aagf
	}
	if _fdagg, _fefca := _fgeg.(_e.EndElement); _fefca && _fdagg.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgeg)
}
func (_beeb *CT_BoxPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _beeb.OpEmu != nil {
		_ace := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006f\u0070\u0045\u006d\u0075"}}
		e.EncodeElement(_beeb.OpEmu, _ace)
	}
	if _beeb.NoBreak != nil {
		_bgef := _e.StartElement{Name: _e.Name{Local: "\u006d:\u006e\u006f\u0042\u0072\u0065\u0061k"}}
		e.EncodeElement(_beeb.NoBreak, _bgef)
	}
	if _beeb.Diff != nil {
		_ecfg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0064\u0069\u0066\u0066"}}
		e.EncodeElement(_beeb.Diff, _ecfg)
	}
	if _beeb.Brk != nil {
		_bd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_beeb.Brk, _bd)
	}
	if _beeb.Aln != nil {
		_eed := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_beeb.Aln, _eed)
	}
	if _beeb.CtrlPr != nil {
		_adc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_beeb.CtrlPr, _adc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bbfd *EG_OMathMathElementsChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bbfd.Acc != nil {
		_aeae := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0061c\u0063"}}
		e.EncodeElement(_bbfd.Acc, _aeae)
	} else if _bbfd.Bar != nil {
		_dfgaf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062a\u0072"}}
		e.EncodeElement(_bbfd.Bar, _dfgaf)
	} else if _bbfd.Box != nil {
		_deced := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062o\u0078"}}
		e.EncodeElement(_bbfd.Box, _deced)
	} else if _bbfd.BorderBox != nil {
		_gfece := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078"}}
		e.EncodeElement(_bbfd.BorderBox, _gfece)
	} else if _bbfd.D != nil {
		_egaf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0064"}}
		e.EncodeElement(_bbfd.D, _egaf)
	} else if _bbfd.EqArr != nil {
		_bfee := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072"}}
		e.EncodeElement(_bbfd.EqArr, _bfee)
	} else if _bbfd.F != nil {
		_dggb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0066"}}
		e.EncodeElement(_bbfd.F, _dggb)
	} else if _bbfd.Func != nil {
		_acgbd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0066\u0075\u006e\u0063"}}
		e.EncodeElement(_bbfd.Func, _acgbd)
	} else if _bbfd.GroupChr != nil {
		_dgad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_bbfd.GroupChr, _dgad)
	} else if _bbfd.LimLow != nil {
		_fbfb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077"}}
		e.EncodeElement(_bbfd.LimLow, _fbfb)
	} else if _bbfd.LimUpp != nil {
		_efdd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u0055\u0070\u0070"}}
		e.EncodeElement(_bbfd.LimUpp, _efdd)
	} else if _bbfd.M != nil {
		_gcgbd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d"}}
		e.EncodeElement(_bbfd.M, _gcgbd)
	} else if _bbfd.Nary != nil {
		_acfg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006e\u0061\u0072\u0079"}}
		e.EncodeElement(_bbfd.Nary, _acfg)
	} else if _bbfd.Phant != nil {
		_accf := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0070\u0068\u0061\u006e\u0074"}}
		e.EncodeElement(_bbfd.Phant, _accf)
	} else if _bbfd.Rad != nil {
		_agde := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0072a\u0064"}}
		e.EncodeElement(_bbfd.Rad, _agde)
	} else if _bbfd.SPre != nil {
		_gafb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0050\u0072\u0065"}}
		e.EncodeElement(_bbfd.SPre, _gafb)
	} else if _bbfd.SSub != nil {
		_befg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0062"}}
		e.EncodeElement(_bbfd.SSub, _befg)
	} else if _bbfd.SSubSup != nil {
		_fbab := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0073\u0053\u0075\u0062\u0053\u0075p"}}
		e.EncodeElement(_bbfd.SSubSup, _fbab)
	} else if _bbfd.SSup != nil {
		_gcf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0053\u0075\u0070"}}
		e.EncodeElement(_bbfd.SSup, _gcf)
	} else if _bbfd.R != nil {
		_dcdc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0072"}}
		e.EncodeElement(_bbfd.R, _dcdc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bbgbc *ST_Script) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bbgbc = 0
	case "\u0072\u006f\u006da\u006e":
		*_bbgbc = 1
	case "\u0073\u0063\u0072\u0069\u0070\u0074":
		*_bbgbc = 2
	case "\u0066r\u0061\u006b\u0074\u0075\u0072":
		*_bbgbc = 3
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u002d\u0073\u0074\u0072\u0075\u0063\u006b":
		*_bbgbc = 4
	case "\u0073\u0061\u006e\u0073\u002d\u0073\u0065\u0072\u0069\u0066":
		*_bbgbc = 5
	case "\u006do\u006e\u006f\u0073\u0070\u0061\u0063e":
		*_bbgbc = 6
	}
	return nil
}
func (_gcbe ST_TopBot) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_gcbe.String(), start)
}
func (_gcg *CT_LimLoc) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_eabb, _edb := _gcg.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _edb != nil {
		return _edb
	}
	start.Attr = append(start.Attr, _eabb)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_fdd *CT_SPre) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fdd.Sub = NewCT_OMathArg()
	_fdd.Sup = NewCT_OMathArg()
	_fdd.E = NewCT_OMathArg()
_gef:
	for {
		_agac, _cdgcb := d.Token()
		if _cdgcb != nil {
			return _cdgcb
		}
		switch _cedf := _agac.(type) {
		case _e.StartElement:
			switch _cedf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0050\u0072\u0065\u0050\u0072"}:
				_fdd.SPrePr = NewCT_SPrePr()
				if _cfbg := d.DecodeElement(_fdd.SPrePr, &_cedf); _cfbg != nil {
					return _cfbg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _fbcfg := d.DecodeElement(_fdd.Sub, &_cedf); _fbcfg != nil {
					return _fbcfg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _ddbd := d.DecodeElement(_fdd.Sup, &_cedf); _ddbd != nil {
					return _ddbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _ccbfc := d.DecodeElement(_fdd.E, &_cedf); _ccbfc != nil {
					return _ccbfc
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0050\u0072\u0065\u0020\u0025\u0076", _cedf.Name)
				if _bdeb := d.Skip(); _bdeb != nil {
					return _bdeb
				}
			}
		case _e.EndElement:
			break _gef
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_SSubPr() *CT_SSubPr { _addd := &CT_SSubPr{}; return _addd }

type MathPr struct{ CT_MathPr }

func (_dgfac ST_Shp) Validate() error { return _dgfac.ValidateWithPath("") }
func (_gege *ST_BreakBinSub) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fabb, _ebec := d.Token()
	if _ebec != nil {
		return _ebec
	}
	if _aceb, _bgfbb := _fabb.(_e.EndElement); _bgfbb && _aceb.Name == start.Name {
		*_gege = 1
		return nil
	}
	if _gfcc, _fgbe := _fabb.(_e.CharData); !_fgbe {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fabb)
	} else {
		switch string(_gfcc) {
		case "":
			*_gege = 0
		case "\u002d\u002d":
			*_gege = 1
		case "\u002d\u002b":
			*_gege = 2
		case "\u002b\u002d":
			*_gege = 3
		}
	}
	_fabb, _ebec = d.Token()
	if _ebec != nil {
		return _ebec
	}
	if _gddf, _dadf := _fabb.(_e.EndElement); _dadf && _gddf.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fabb)
}
func (_fccg *CT_Nary) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fccg.Sub = NewCT_OMathArg()
	_fccg.Sup = NewCT_OMathArg()
	_fccg.E = NewCT_OMathArg()
_fcd:
	for {
		_eabg, _eea := d.Token()
		if _eea != nil {
			return _eea
		}
		switch _bfd := _eabg.(type) {
		case _e.StartElement:
			switch _bfd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0061\u0072\u0079\u0050\u0072"}:
				_fccg.NaryPr = NewCT_NaryPr()
				if _gagf := d.DecodeElement(_fccg.NaryPr, &_bfd); _gagf != nil {
					return _gagf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0062"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0062"}:
				if _agdfe := d.DecodeElement(_fccg.Sub, &_bfd); _agdfe != nil {
					return _agdfe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _cacfd := d.DecodeElement(_fccg.Sup, &_bfd); _cacfd != nil {
					return _cacfd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dabe := d.DecodeElement(_fccg.E, &_bfd); _dabe != nil {
					return _dabe
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u0061\u0072\u0079\u0020\u0025\u0076", _bfd.Name)
				if _abfb := d.Skip(); _abfb != nil {
					return _abfb
				}
			}
		case _e.EndElement:
			break _fcd
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LimLoc and its children
func (_cgbc *CT_LimLoc) Validate() error {
	return _cgbc.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc")
}

// ValidateWithPath validates the CT_ManualBreak and its children, prefixing error messages with path
func (_ccbf *CT_ManualBreak) ValidateWithPath(path string) error {
	if _ccbf.AlnAtAttr != nil {
		if *_ccbf.AlnAtAttr < 1 {
			return _ga.Errorf("\u0025\u0073/\u006d\u002e\u0041\u006cn\u0041\u0074A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ccbf.AlnAtAttr)
		}
		if *_ccbf.AlnAtAttr > 255 {
			return _ga.Errorf("\u0025\u0073\u002f\u006d\u002e\u0041\u006c\u006e\u0041\u0074\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ccbf.AlnAtAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AccPr and its children, prefixing error messages with path
func (_ad *CT_AccPr) ValidateWithPath(path string) error {
	if _ad.Chr != nil {
		if _bbb := _ad.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _bbb != nil {
			return _bbb
		}
	}
	if _ad.CtrlPr != nil {
		if _df := _ad.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _df != nil {
			return _df
		}
	}
	return nil
}

type CT_Box struct {

	// Box Properties
	BoxPr *CT_BoxPr

	// Base
	E *CT_OMathArg
}
type CT_SPrePr struct{ CtrlPr *CT_CtrlPr }

// ValidateWithPath validates the CT_FuncPr and its children, prefixing error messages with path
func (_fab *CT_FuncPr) ValidateWithPath(path string) error {
	if _fab.CtrlPr != nil {
		if _gab := _fab.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gab != nil {
			return _gab
		}
	}
	return nil
}

const (
	ST_StyleUnset ST_Style = 0
	ST_StyleP     ST_Style = 1
	ST_StyleB     ST_Style = 2
	ST_StyleI     ST_Style = 3
	ST_StyleBi    ST_Style = 4
)

type CT_EqArrPr struct {

	// Equation Array Base Justification
	BaseJc *CT_YAlign

	// Maximum Distribution
	MaxDist *CT_OnOff

	// Object Distribution
	ObjDist *CT_OnOff

	// Row Spacing Rule
	RSpRule *CT_SpacingRule

	// Row Spacing (Array)
	RSp    *CT_UnSignedInteger
	CtrlPr *CT_CtrlPr
}

func (_ecaa *CT_Style) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ddecb := range start.Attr {
		if _ddecb.Name.Local == "\u0076\u0061\u006c" {
			_ecaa.ValAttr.UnmarshalXMLAttr(_ddecb)
			continue
		}
	}
	for {
		_ebab, _eedbf := d.Token()
		if _eedbf != nil {
			return _ga.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0074\u0079\u006c\u0065: \u0025\u0073", _eedbf)
		}
		if _fbeb, _abdf := _ebab.(_e.EndElement); _abdf && _fbeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eddf ST_Style) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fbcd := _e.Attr{}
	_fbcd.Name = name
	switch _eddf {
	case ST_StyleUnset:
		_fbcd.Value = ""
	case ST_StyleP:
		_fbcd.Value = "\u0070"
	case ST_StyleB:
		_fbcd.Value = "\u0062"
	case ST_StyleI:
		_fbcd.Value = "\u0069"
	case ST_StyleBi:
		_fbcd.Value = "\u0062\u0069"
	}
	return _fbcd, nil
}
func (_aabf ST_Style) Validate() error { return _aabf.ValidateWithPath("") }

type CT_SPre struct {

	// Pre-Sub-Superscript Properties
	SPrePr *CT_SPrePr

	// Subscript (Pre-Sub-Superscript)
	Sub *CT_OMathArg

	// Superscript(Pre-Sub-Superscript function)
	Sup *CT_OMathArg

	// Base
	E *CT_OMathArg
}

func (_ggd *CT_BorderBox) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ggd.E = NewCT_OMathArg()
_fca:
	for {
		_cbd, _eaa := d.Token()
		if _eaa != nil {
			return _eaa
		}
		switch _fd := _cbd.(type) {
		case _e.StartElement:
			switch _fd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "b\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078\u0050\u0072"}:
				_ggd.BorderBoxPr = NewCT_BorderBoxPr()
				if _fbge := d.DecodeElement(_ggd.BorderBoxPr, &_fd); _fbge != nil {
					return _fbge
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _fcab := d.DecodeElement(_ggd.E, &_fd); _fcab != nil {
					return _fcab
				}
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u0072d\u0065\u0072\u0042\u006f\u0078\u0020\u0025\u0076", _fd.Name)
				if _ebe := d.Skip(); _ebe != nil {
					return _ebe
				}
			}
		case _e.EndElement:
			break _fca
		case _e.CharData:
		}
	}
	return nil
}
func (_acfc *CT_OMathArgPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _acfc.ArgSz != nil {
		_gaa := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0061\u0072\u0067\u0053\u007a"}}
		e.EncodeElement(_acfc.ArgSz, _gaa)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BarPr and its children, prefixing error messages with path
func (_bee *CT_BarPr) ValidateWithPath(path string) error {
	if _bee.Pos != nil {
		if _gdg := _bee.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _gdg != nil {
			return _gdg
		}
	}
	if _bee.CtrlPr != nil {
		if _fbb := _bee.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _fbb != nil {
			return _fbb
		}
	}
	return nil
}
func (_fbd *CT_Integer2) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fbd.ValAttr = -2
	for _, _eacd := range start.Attr {
		if _eacd.Name.Local == "\u0076\u0061\u006c" {
			_bbbb, _eggc := _g.ParseInt(_eacd.Value, 10, 64)
			if _eggc != nil {
				return _eggc
			}
			_fbd.ValAttr = _bbbb
			continue
		}
	}
	for {
		_ecfb, _bcfg := d.Token()
		if _bcfg != nil {
			return _ga.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u003a\u0020\u0025\u0073", _bcfg)
		}
		if _dfbg, _eaaa := _ecfb.(_e.EndElement); _eaaa && _dfbg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Acc and its children
func (_ae *CT_Acc) Validate() error {
	return _ae.ValidateWithPath("\u0043\u0054\u005f\u0041\u0063\u0063")
}
func (_ebc *CT_F) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ebc.Num = NewCT_OMathArg()
	_ebc.Den = NewCT_OMathArg()
_dbdb:
	for {
		_adfa, _gcd := d.Token()
		if _gcd != nil {
			return _gcd
		}
		switch _faab := _adfa.(type) {
		case _e.StartElement:
			switch _faab.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0066\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0066\u0050\u0072"}:
				_ebc.FPr = NewCT_FPr()
				if _ded := d.DecodeElement(_ebc.FPr, &_faab); _ded != nil {
					return _ded
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006e\u0075\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006e\u0075\u006d"}:
				if _beg := d.DecodeElement(_ebc.Num, &_faab); _beg != nil {
					return _beg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u006e"}:
				if _bceb := d.DecodeElement(_ebc.Den, &_faab); _bceb != nil {
					return _bceb
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0046\u0020\u0025\u0076", _faab.Name)
				if _gdcc := d.Skip(); _gdcc != nil {
					return _gdcc
				}
			}
		case _e.EndElement:
			break _dbdb
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupChrPr and its children, prefixing error messages with path
func (_efe *CT_GroupChrPr) ValidateWithPath(path string) error {
	if _efe.Chr != nil {
		if _baee := _efe.Chr.ValidateWithPath(path + "\u002f\u0043\u0068\u0072"); _baee != nil {
			return _baee
		}
	}
	if _efe.Pos != nil {
		if _affg := _efe.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _affg != nil {
			return _affg
		}
	}
	if _efe.VertJc != nil {
		if _agda := _efe.VertJc.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u004a\u0063"); _agda != nil {
			return _agda
		}
	}
	if _efe.CtrlPr != nil {
		if _aabc := _efe.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aabc != nil {
			return _aabc
		}
	}
	return nil
}

// Validate validates the CT_MathPrChoice and its children
func (_afde *CT_MathPrChoice) Validate() error {
	return _afde.ValidateWithPath("\u0043T\u005fM\u0061\u0074\u0068\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_OnOff() *CT_OnOff { _dgbe := &CT_OnOff{}; return _dgbe }

type CT_LimUpp struct {

	// Upper-Limit Properties
	LimUppPr *CT_LimUppPr

	// Base
	E *CT_OMathArg

	// Limit (Upper)
	Lim *CT_OMathArg
}

// ValidateWithPath validates the CT_OMathJc and its children, prefixing error messages with path
func (_deba *CT_OMathJc) ValidateWithPath(path string) error {
	if _eafd := _deba.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eafd != nil {
		return _eafd
	}
	return nil
}
func (_ceegf *CT_YAlign) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ceegf.ValAttr = _c.ST_YAlign(1)
	for _, _adaf := range start.Attr {
		if _adaf.Name.Local == "\u0076\u0061\u006c" {
			_ceegf.ValAttr.UnmarshalXMLAttr(_adaf)
			continue
		}
	}
	for {
		_cefa, _ecef := d.Token()
		if _ecef != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0059\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _ecef)
		}
		if _bcdfb, _fgae := _cefa.(_e.EndElement); _fgae && _bcdfb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SSup() *CT_SSup {
	_fcde := &CT_SSup{}
	_fcde.E = NewCT_OMathArg()
	_fcde.Sup = NewCT_OMathArg()
	return _fcde
}
func (_cbdg *CT_Shp) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cbdg.ValAttr = ST_Shp(1)
	for _, _dgbc := range start.Attr {
		if _dgbc.Name.Local == "\u0076\u0061\u006c" {
			_cbdg.ValAttr.UnmarshalXMLAttr(_dgbc)
			continue
		}
	}
	for {
		_gbeea, _dgda := d.Token()
		if _dgda != nil {
			return _ga.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0053h\u0070\u003a\u0020\u0025\u0073", _dgda)
		}
		if _aadf, _bfec := _gbeea.(_e.EndElement); _bfec && _aadf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewOMathPara() *OMathPara {
	_cgbd := &OMathPara{}
	_cgbd.CT_OMathPara = *NewCT_OMathPara()
	return _cgbd
}

// Validate validates the CT_Shp and its children
func (_ddfe *CT_Shp) Validate() error {
	return _ddfe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0070")
}

type OMath struct{ CT_OMath }

func (_fef *CT_Box) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fef.E = NewCT_OMathArg()
_cfg:
	for {
		_bfb, _ege := d.Token()
		if _ege != nil {
			return _ege
		}
		switch _bge := _bfb.(type) {
		case _e.StartElement:
			switch _bge.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u006f\u0078P\u0072"}:
				_fef.BoxPr = NewCT_BoxPr()
				if _eec := d.DecodeElement(_fef.BoxPr, &_bge); _eec != nil {
					return _eec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _eae := d.DecodeElement(_fef.E, &_bge); _eae != nil {
					return _eae
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0020\u0025\u0076", _bge.Name)
				if _cba := d.Skip(); _cba != nil {
					return _cba
				}
			}
		case _e.EndElement:
			break _cfg
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_MPr() *CT_MPr { _ddaf := &CT_MPr{}; return _ddaf }
func NewCT_TopBot() *CT_TopBot {
	_dffde := &CT_TopBot{}
	_dffde.ValAttr = ST_TopBot(1)
	return _dffde
}
func (_aecc *CT_R) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bcfge:
	for {
		_dfgc, _ecge := d.Token()
		if _ecge != nil {
			return _ecge
		}
		switch _adbc := _dfgc.(type) {
		case _e.StartElement:
			switch _adbc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0050\u0072"}:
				_aecc.RPr = NewCT_RPR()
				if _acdc := d.DecodeElement(_aecc.RPr, &_adbc); _acdc != nil {
					return _acdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074"}:
				_dee := NewCT_RChoice()
				if _efcb := d.DecodeElement(&_dee.T, &_adbc); _efcb != nil {
					return _efcb
				}
				_aecc.RChoice = append(_aecc.RChoice, _dee)
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0052\u0020\u0025\u0076", _adbc.Name)
				if _fffc := d.Skip(); _fffc != nil {
					return _fffc
				}
			}
		case _e.EndElement:
			break _bcfge
		case _e.CharData:
		}
	}
	return nil
}
func (_gdfg ST_BreakBin) ValidateWithPath(path string) error {
	switch _gdfg {
	case 0, 1, 2, 3:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdfg))
	}
	return nil
}

// ValidateWithPath validates the CT_Nary and its children, prefixing error messages with path
func (_dgfa *CT_Nary) ValidateWithPath(path string) error {
	if _dgfa.NaryPr != nil {
		if _dcdad := _dgfa.NaryPr.ValidateWithPath(path + "\u002fN\u0061\u0072\u0079\u0050\u0072"); _dcdad != nil {
			return _dcdad
		}
	}
	if _ccgb := _dgfa.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _ccgb != nil {
		return _ccgb
	}
	if _ddae := _dgfa.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _ddae != nil {
		return _ddae
	}
	if _dceb := _dgfa.E.ValidateWithPath(path + "\u002f\u0045"); _dceb != nil {
		return _dceb
	}
	return nil
}

// ValidateWithPath validates the CT_RPR and its children, prefixing error messages with path
func (_becg *CT_RPR) ValidateWithPath(path string) error {
	if _becg.Lit != nil {
		if _eedb := _becg.Lit.ValidateWithPath(path + "\u002f\u004c\u0069\u0074"); _eedb != nil {
			return _eedb
		}
	}
	if _becg.Nor != nil {
		if _cbfd := _becg.Nor.ValidateWithPath(path + "\u002f\u004e\u006f\u0072"); _cbfd != nil {
			return _cbfd
		}
	}
	if _becg.Brk != nil {
		if _bfde := _becg.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _bfde != nil {
			return _bfde
		}
	}
	if _becg.Aln != nil {
		if _caad := _becg.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _caad != nil {
			return _caad
		}
	}
	return nil
}

type CT_Nary struct {

	// n-ary Properties
	NaryPr *CT_NaryPr

	// Lower limit (n-ary)
	Sub *CT_OMathArg

	// Upper limit (n-ary)
	Sup *CT_OMathArg

	// Base (Argument)
	E *CT_OMathArg
}
type EG_OMathMathElementsChoice struct {

	// Accent
	Acc *CT_Acc

	// Bar
	Bar *CT_Bar

	// Box Object
	Box *CT_Box

	// Border-Box Object
	BorderBox *CT_BorderBox

	// Delimiter Object
	D *CT_D

	// Array Object
	EqArr *CT_EqArr

	// Fraction Object
	F *CT_F

	// Function Apply Object
	Func *CT_Func

	// Group-Character Object
	GroupChr *CT_GroupChr

	// Lower-Limit Object
	LimLow *CT_LimLow

	// Upper-Limit Object
	LimUpp *CT_LimUpp

	// Matrix Object
	M *CT_M

	// n-ary Operator Object
	Nary *CT_Nary

	// Phantom Object
	Phant *CT_Phant

	// Radical Object
	Rad *CT_Rad

	// Pre-Sub-Superscript Object
	SPre *CT_SPre

	// Subscript Object
	SSub *CT_SSub

	// Sub-Superscript Object
	SSubSup *CT_SSubSup

	// Superscript Object
	SSup *CT_SSup

	// Run
	R *CT_R
}

const (
	ST_TopBotUnset ST_TopBot = 0
	ST_TopBotTop   ST_TopBot = 1
	ST_TopBotBot   ST_TopBot = 2
)

func (_fdag *OMathPara) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u003a\u006f\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061"
	return _fdag.CT_OMathPara.MarshalXML(e, start)
}
func (_dgcd *CT_Text) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _dgcd.SpaceAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u003a\u0073\u0070\u0061\u0063e"}, Value: _ga.Sprintf("\u0025\u0076", *_dgcd.SpaceAttr)})
	}
	e.EncodeElement(_dgcd.Content, start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewEG_ScriptStyle() *EG_ScriptStyle { _bdda := &EG_ScriptStyle{}; return _bdda }

type CT_MCPr struct {

	// Matrix Column Count
	Count *CT_Integer255

	// Matrix Column Justification
	McJc *CT_XAlign
}

func (_gaee *CT_PhantPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gaad:
	for {
		_dgbef, _bfae := d.Token()
		if _bfae != nil {
			return _bfae
		}
		switch _cebf := _dgbef.(type) {
		case _e.StartElement:
			switch _cebf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0068\u006f\u0077"}:
				_gaee.Show = NewCT_OnOff()
				if _ddeg := d.DecodeElement(_gaee.Show, &_cebf); _ddeg != nil {
					return _ddeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0057\u0069\u0064"}:
				_gaee.ZeroWid = NewCT_OnOff()
				if _dfcg := d.DecodeElement(_gaee.ZeroWid, &_cebf); _dfcg != nil {
					return _dfcg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007ae\u0072\u006f\u0041\u0073\u0063"}:
				_gaee.ZeroAsc = NewCT_OnOff()
				if _cfea := d.DecodeElement(_gaee.ZeroAsc, &_cebf); _cfea != nil {
					return _cfea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}:
				_gaee.ZeroDesc = NewCT_OnOff()
				if _eagb := d.DecodeElement(_gaee.ZeroDesc, &_cebf); _eagb != nil {
					return _eagb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0072\u0061\u006e\u0073\u0070"}:
				_gaee.Transp = NewCT_OnOff()
				if _dadc := d.DecodeElement(_gaee.Transp, &_cebf); _dadc != nil {
					return _dadc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_gaee.CtrlPr = NewCT_CtrlPr()
				if _acb := d.DecodeElement(_gaee.CtrlPr, &_cebf); _acb != nil {
					return _acb
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0068\u0061\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _cebf.Name)
				if _fbgeb := d.Skip(); _fbgeb != nil {
					return _fbgeb
				}
			}
		case _e.EndElement:
			break _gaad
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_F and its children
func (_gdf *CT_F) Validate() error { return _gdf.ValidateWithPath("\u0043\u0054\u005f\u0046") }
func NewCT_NaryPr() *CT_NaryPr     { _ddaag := &CT_NaryPr{}; return _ddaag }

// ValidateWithPath validates the CT_YAlign and its children, prefixing error messages with path
func (_ffabc *CT_YAlign) ValidateWithPath(path string) error {
	if _ffabc.ValAttr == _c.ST_YAlignUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edcg := _ffabc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _edcg != nil {
		return _edcg
	}
	return nil
}

// Validate validates the CT_SpacingRule and its children
func (_baebe *CT_SpacingRule) Validate() error {
	return _baebe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065")
}

// Validate validates the CT_GroupChr and its children
func (_bafg *CT_GroupChr) Validate() error {
	return _bafg.ValidateWithPath("C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072")
}

type CT_MathPr struct {

	// Math Font
	MathFont *CT_String

	// Break on Binary Operators
	BrkBin *CT_BreakBin

	// Break on Binary Subtraction
	BrkBinSub *CT_BreakBinSub

	// Small Fraction
	SmallFrac *CT_OnOff

	// Use Display Math Defaults
	DispDef *CT_OnOff

	// Left Margin
	LMargin *CT_TwipsMeasure

	// Right Margin
	RMargin *CT_TwipsMeasure

	// Default Justification
	DefJc *CT_OMathJc

	// Pre-Paragraph Spacing
	PreSp *CT_TwipsMeasure

	// Post-Paragraph Spacing
	PostSp *CT_TwipsMeasure

	// Inter-Equation Spacing
	InterSp *CT_TwipsMeasure

	// Intra-Equation Spacing
	IntraSp      *CT_TwipsMeasure
	MathPrChoice *CT_MathPrChoice

	// Integral Limit Locations
	IntLim *CT_LimLoc

	// n-ary Limit Location
	NaryLim *CT_LimLoc
}

func (_bedb *ST_Style) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_bedb = 0
	case "\u0070":
		*_bedb = 1
	case "\u0062":
		*_bedb = 2
	case "\u0069":
		*_bedb = 3
	case "\u0062\u0069":
		*_bedb = 4
	}
	return nil
}

// Validate validates the EG_ScriptStyle and its children
func (_gbacc *EG_ScriptStyle) Validate() error {
	return _gbacc.ValidateWithPath("\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_LimLowPr and its children
func (_daee *CT_LimLowPr) Validate() error {
	return _daee.ValidateWithPath("C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072")
}
func (_dbcfg *OMath) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dbcfg.CT_OMath = *NewCT_OMath()
_ccga:
	for {
		_bdaa, _cabd := d.Token()
		if _cabd != nil {
			return _cabd
		}
		switch _faefa := _bdaa.(type) {
		case _e.StartElement:
			switch _faefa.Name {
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004f\u004d\u0061t\u0068 \u0025\u0076", _faefa.Name)
				if _gcec := d.Skip(); _gcec != nil {
					return _gcec
				}
			}
		case _e.EndElement:
			break _ccga
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_UnSignedInteger and its children, prefixing error messages with path
func (_dacfc *CT_UnSignedInteger) ValidateWithPath(path string) error { return nil }

type CT_PhantPr struct {

	// Phantom Show
	Show *CT_OnOff

	// Phantom Zero Width
	ZeroWid *CT_OnOff

	// Phantom Zero Ascent
	ZeroAsc *CT_OnOff

	// Phantom Zero Descent
	ZeroDesc *CT_OnOff

	// Transparent (Phantom)
	Transp *CT_OnOff
	CtrlPr *CT_CtrlPr
}

func (_fdgg ST_Script) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fdgg.String(), start)
}

// ValidateWithPath validates the CT_SSup and its children, prefixing error messages with path
func (_aacb *CT_SSup) ValidateWithPath(path string) error {
	if _aacb.SSupPr != nil {
		if _edgg := _aacb.SSupPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0070\u0050\u0072"); _edgg != nil {
			return _edgg
		}
	}
	if _dbad := _aacb.E.ValidateWithPath(path + "\u002f\u0045"); _dbad != nil {
		return _dbad
	}
	if _gbdc := _aacb.Sup.ValidateWithPath(path + "\u002f\u0053\u0075\u0070"); _gbdc != nil {
		return _gbdc
	}
	return nil
}

type CT_ManualBreak struct {

	// Index of Operator to Align To
	AlnAtAttr *int64
}
type CT_R struct {

	// Run Properties
	RPr     *CT_RPR
	RChoice []*CT_RChoice
}

// Validate validates the CT_MathPr and its children
func (_cdgc *CT_MathPr) Validate() error {
	return _cdgc.ValidateWithPath("\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r")
}
func (_cgega ST_Script) Validate() error { return _cgega.ValidateWithPath("") }
func (_gbda *CT_M) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _gbda.MPr != nil {
		_ddad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006dP\u0072"}}
		e.EncodeElement(_gbda.MPr, _ddad)
	}
	_abag := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d\u0072"}}
	for _, _egd := range _gbda.Mr {
		e.EncodeElement(_egd, _abag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_TwipsMeasure struct {

	// Value
	ValAttr _c.ST_TwipsMeasure
}

func NewCT_Text() *CT_Text { _ggcf := &CT_Text{}; return _ggcf }

const (
	ST_ShpUnset    ST_Shp = 0
	ST_ShpCentered ST_Shp = 1
	ST_ShpMatch    ST_Shp = 2
)

func (_geag *CT_OMathArg) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eaegf:
	for {
		_edab, _bdfc := d.Token()
		if _bdfc != nil {
			return _bdfc
		}
		switch _dfg := _edab.(type) {
		case _e.StartElement:
			switch _dfg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067P\u0072"}:
				_geag.ArgPr = NewCT_OMathArgPr()
				if _efee := d.DecodeElement(_geag.ArgPr, &_dfg); _efee != nil {
					return _efee
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_geag.CtrlPr = NewCT_CtrlPr()
				if _edcf := d.DecodeElement(_geag.CtrlPr, &_dfg); _edcf != nil {
					return _edcf
				}
			default:
				_ef.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0020\u0025\u0076", _dfg.Name)
				if _bceeb := d.Skip(); _bceeb != nil {
					return _bceeb
				}
			}
		case _e.EndElement:
			break _eaegf
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SSubSupPr and its children
func (_cbeg *CT_SSubSupPr) Validate() error {
	return _cbeg.ValidateWithPath("\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072")
}
func NewCT_MCPr() *CT_MCPr { _gcaae := &CT_MCPr{}; return _gcaae }
func ParseUnionST_TwipsMeasure(s string) (_c.ST_TwipsMeasure, error) {
	_eecec := _c.ST_TwipsMeasure{}
	if _c.ST_PositiveUniversalMeasurePatternRe.MatchString(s) {
		_eecec.ST_PositiveUniversalMeasure = &s
	} else {
		_acdfa, _ccae := _g.ParseFloat(s, 64)
		if _ccae != nil {
			return _eecec, _ga.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0075\u0069\u006e\u0074\u003a\u0020%\u0073", s, _ccae)
		}
		_eecec.ST_UnsignedDecimalNumber = _a.Uint64(uint64(_acdfa))
	}
	return _eecec, nil
}
func NewCT_TwipsMeasure() *CT_TwipsMeasure { _baac := &CT_TwipsMeasure{}; return _baac }

// Validate validates the CT_BarPr and its children
func (_cd *CT_BarPr) Validate() error {
	return _cd.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072")
}

// Validate validates the CT_SPre and its children
func (_gdfa *CT_SPre) Validate() error {
	return _gdfa.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065")
}

type OMathPara struct{ CT_OMathPara }

func (_cebe *EG_ScriptStyle) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gaef:
	for {
		_dfbge, _gbbb := d.Token()
		if _gbbb != nil {
			return _gbbb
		}
		switch _befc := _dfbge.(type) {
		case _e.StartElement:
			switch _befc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0063\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0063\u0072"}:
				_cebe.Scr = NewCT_Script()
				if _bcaa := d.DecodeElement(_cebe.Scr, &_befc); _bcaa != nil {
					return _bcaa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0079"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0079"}:
				_cebe.Sty = NewCT_Style()
				if _dfca := d.DecodeElement(_cebe.Sty, &_befc); _dfca != nil {
					return _dfca
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074\u0053t\u0079l\u0065\u0020\u0025\u0076", _befc.Name)
				if _geea := d.Skip(); _geea != nil {
					return _geea
				}
			}
		case _e.EndElement:
			break _gaef
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FType and its children
func (_gbee *CT_FType) Validate() error {
	return _gbee.ValidateWithPath("\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065")
}
func (_defdg *CT_OMathPara) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_afg:
	for {
		_eeba, _ebeda := d.Token()
		if _ebeda != nil {
			return _ebeda
		}
		switch _ffcc := _eeba.(type) {
		case _e.StartElement:
			switch _ffcc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_defdg.OMathParaPr = NewCT_OMathParaPr()
				if _begb := d.DecodeElement(_defdg.OMathParaPr, &_ffcc); _begb != nil {
					return _begb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_efg := NewCT_OMath()
				if _ccdfg := d.DecodeElement(_efg, &_ffcc); _ccdfg != nil {
					return _ccdfg
				}
				_defdg.OMath = append(_defdg.OMath, _efg)
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u004d\u0061t\u0068\u0050\u0061\u0072\u0061\u0020\u0025\u0076", _ffcc.Name)
				if _bgee := d.Skip(); _bgee != nil {
					return _bgee
				}
			}
		case _e.EndElement:
			break _afg
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_OMath() *CT_OMath { _ceb := &CT_OMath{}; return _ceb }

// ValidateWithPath validates the CT_MC and its children, prefixing error messages with path
func (_gdff *CT_MC) ValidateWithPath(path string) error {
	if _gdff.McPr != nil {
		if _aga := _gdff.McPr.ValidateWithPath(path + "\u002f\u004d\u0063P\u0072"); _aga != nil {
			return _aga
		}
	}
	return nil
}

// Validate validates the CT_FuncPr and its children
func (_eceeb *CT_FuncPr) Validate() error {
	return _eceeb.ValidateWithPath("\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r")
}
func NewEG_OMathElementsChoice() *EG_OMathElementsChoice {
	_dceg := &EG_OMathElementsChoice{}
	_dceg.OMathMathElementsChoice = NewEG_OMathMathElementsChoice()
	return _dceg
}

// Validate validates the EG_OMathElements and its children
func (_gegc *EG_OMathElements) Validate() error {
	return _gegc.ValidateWithPath("\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073")
}
func (_dbca *CT_TopBot) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_bbga, _dffb := _dbca.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _dffb != nil {
		return _dffb
	}
	start.Attr = append(start.Attr, _bbga)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_gcdee *ST_LimLoc) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_fdaf, _bdac := d.Token()
	if _bdac != nil {
		return _bdac
	}
	if _aacca, _edcd := _fdaf.(_e.EndElement); _edcd && _aacca.Name == start.Name {
		*_gcdee = 1
		return nil
	}
	if _gaafa, _abfba := _fdaf.(_e.CharData); !_abfba {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdaf)
	} else {
		switch string(_gaafa) {
		case "":
			*_gcdee = 0
		case "\u0075\u006e\u0064\u004f\u0076\u0072":
			*_gcdee = 1
		case "\u0073\u0075\u0062\u0053\u0075\u0070":
			*_gcdee = 2
		}
	}
	_fdaf, _bdac = d.Token()
	if _bdac != nil {
		return _bdac
	}
	if _bgcd, _badcc := _fdaf.(_e.EndElement); _badcc && _bgcd.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdaf)
}
func (_gdgcff ST_Jc) Validate() error { return _gdgcff.ValidateWithPath("") }
func (_fefe ST_Jc) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fefe.String(), start)
}
func (_cbgdc ST_FType) ValidateWithPath(path string) error {
	switch _cbgdc {
	case 0, 1, 2, 3, 4:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbgdc))
	}
	return nil
}

const (
	ST_ScriptUnset         ST_Script = 0
	ST_ScriptRoman         ST_Script = 1
	ST_ScriptScript        ST_Script = 2
	ST_ScriptFraktur       ST_Script = 3
	ST_ScriptDouble_struck ST_Script = 4
	ST_ScriptSans_serif    ST_Script = 5
	ST_ScriptMonospace     ST_Script = 6
)

type CT_GroupChr struct {

	// Group-Character Properties
	GroupChrPr *CT_GroupChrPr

	// Base
	E *CT_OMathArg
}

// ValidateWithPath validates the CT_Integer255 and its children, prefixing error messages with path
func (_ecgd *CT_Integer255) ValidateWithPath(path string) error {
	if _ecgd.ValAttr < 1 {
		return _ga.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ecgd.ValAttr)
	}
	if _ecgd.ValAttr > 255 {
		return _ga.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0032\u0035\u0035\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ecgd.ValAttr)
	}
	return nil
}
func NewCT_BreakBin() *CT_BreakBin { _egeb := &CT_BreakBin{}; return _egeb }
func (_bfgce *CT_YAlign) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_gddcg, _gfdc := _bfgce.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
	if _gfdc != nil {
		return _gfdc
	}
	start.Attr = append(start.Attr, _gddcg)
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BreakBin and its children
func (_ade *CT_BreakBin) Validate() error {
	return _ade.ValidateWithPath("C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e")
}

type ST_TopBot byte

// Validate validates the OMath and its children
func (_egeg *OMath) Validate() error { return _egeg.ValidateWithPath("\u004f\u004d\u0061t\u0068") }

// ValidateWithPath validates the CT_F and its children, prefixing error messages with path
func (_dgf *CT_F) ValidateWithPath(path string) error {
	if _dgf.FPr != nil {
		if _acac := _dgf.FPr.ValidateWithPath(path + "\u002f\u0046\u0050\u0072"); _acac != nil {
			return _acac
		}
	}
	if _babd := _dgf.Num.ValidateWithPath(path + "\u002f\u004e\u0075\u006d"); _babd != nil {
		return _babd
	}
	if _cgd := _dgf.Den.ValidateWithPath(path + "\u002f\u0044\u0065\u006e"); _cgd != nil {
		return _cgd
	}
	return nil
}

type CT_LimLowPr struct{ CtrlPr *CT_CtrlPr }

func (_abf *CT_DPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _abf.BegChr != nil {
		_adeb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062\u0065\u0067\u0043\u0068\u0072"}}
		e.EncodeElement(_abf.BegChr, _adeb)
	}
	if _abf.SepChr != nil {
		_bfa := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0065\u0070\u0043\u0068\u0072"}}
		e.EncodeElement(_abf.SepChr, _bfa)
	}
	if _abf.EndChr != nil {
		_bbbc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065\u006e\u0064\u0043\u0068\u0072"}}
		e.EncodeElement(_abf.EndChr, _bbbc)
	}
	if _abf.Grow != nil {
		_dge := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0067\u0072\u006f\u0077"}}
		e.EncodeElement(_abf.Grow, _dge)
	}
	if _abf.Shp != nil {
		_dec := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073h\u0070"}}
		e.EncodeElement(_abf.Shp, _dec)
	}
	if _abf.CtrlPr != nil {
		_fegd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_abf.CtrlPr, _fegd)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_Rad() *CT_Rad {
	_cbcc := &CT_Rad{}
	_cbcc.Deg = NewCT_OMathArg()
	_cbcc.E = NewCT_OMathArg()
	return _cbcc
}

// Validate validates the CT_NaryPr and its children
func (_adfd *CT_NaryPr) Validate() error {
	return _adfd.ValidateWithPath("\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r")
}
func NewCT_AccPr() *CT_AccPr { _agf := &CT_AccPr{}; return _agf }
func (_abg *CT_BreakBin) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _abg.ValAttr != ST_BreakBinUnset {
		_eac, _dcb := _abg.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _dcb != nil {
			return _dcb
		}
		start.Attr = append(start.Attr, _eac)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_efddg ST_Shp) ValidateWithPath(path string) error {
	switch _efddg {
	case 0, 1, 2:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efddg))
	}
	return nil
}

// Validate validates the CT_MCS and its children
func (_fgaa *CT_MCS) Validate() error {
	return _fgaa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0043\u0053")
}

type CT_TopBot struct {

	// Value
	ValAttr ST_TopBot
}

func (_bfg *CT_SPrePr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_dgea:
	for {
		_gbac, _fdbd := d.Token()
		if _fdbd != nil {
			return _fdbd
		}
		switch _caae := _gbac.(type) {
		case _e.StartElement:
			switch _caae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bfg.CtrlPr = NewCT_CtrlPr()
				if _bffd := d.DecodeElement(_bfg.CtrlPr, &_caae); _bffd != nil {
					return _bffd
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0050\u0072e\u0050\u0072 \u0025\u0076", _caae.Name)
				if _fcfe := d.Skip(); _fcfe != nil {
					return _fcfe
				}
			}
		case _e.EndElement:
			break _dgea
		case _e.CharData:
		}
	}
	return nil
}
func (_cfdbd *MathPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_cfdbd.CT_MathPr = *NewCT_MathPr()
_accd:
	for {
		_bdbg, _abba := d.Token()
		if _abba != nil {
			return _abba
		}
		switch _gfgff := _bdbg.(type) {
		case _e.StartElement:
			switch _gfgff.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_cfdbd.MathFont = NewCT_String()
				if _ggfa := d.DecodeElement(_cfdbd.MathFont, &_gfgff); _ggfa != nil {
					return _ggfa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_cfdbd.BrkBin = NewCT_BreakBin()
				if _dagec := d.DecodeElement(_cfdbd.BrkBin, &_gfgff); _dagec != nil {
					return _dagec
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_cfdbd.BrkBinSub = NewCT_BreakBinSub()
				if _fcbf := d.DecodeElement(_cfdbd.BrkBinSub, &_gfgff); _fcbf != nil {
					return _fcbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_cfdbd.SmallFrac = NewCT_OnOff()
				if _gebe := d.DecodeElement(_cfdbd.SmallFrac, &_gfgff); _gebe != nil {
					return _gebe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_cfdbd.DispDef = NewCT_OnOff()
				if _aada := d.DecodeElement(_cfdbd.DispDef, &_gfgff); _aada != nil {
					return _aada
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_cfdbd.LMargin = NewCT_TwipsMeasure()
				if _faaf := d.DecodeElement(_cfdbd.LMargin, &_gfgff); _faaf != nil {
					return _faaf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_cfdbd.RMargin = NewCT_TwipsMeasure()
				if _eacf := d.DecodeElement(_cfdbd.RMargin, &_gfgff); _eacf != nil {
					return _eacf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_cfdbd.DefJc = NewCT_OMathJc()
				if _cead := d.DecodeElement(_cfdbd.DefJc, &_gfgff); _cead != nil {
					return _cead
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_cfdbd.PreSp = NewCT_TwipsMeasure()
				if _aafa := d.DecodeElement(_cfdbd.PreSp, &_gfgff); _aafa != nil {
					return _aafa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_cfdbd.PostSp = NewCT_TwipsMeasure()
				if _cced := d.DecodeElement(_cfdbd.PostSp, &_gfgff); _cced != nil {
					return _cced
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_cfdbd.InterSp = NewCT_TwipsMeasure()
				if _gcdf := d.DecodeElement(_cfdbd.InterSp, &_gfgff); _gcdf != nil {
					return _gcdf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_cfdbd.IntraSp = NewCT_TwipsMeasure()
				if _febdd := d.DecodeElement(_cfdbd.IntraSp, &_gfgff); _febdd != nil {
					return _febdd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_cfdbd.MathPrChoice = NewCT_MathPrChoice()
				if _egfa := d.DecodeElement(&_cfdbd.MathPrChoice.WrapIndent, &_gfgff); _egfa != nil {
					return _egfa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_cfdbd.MathPrChoice = NewCT_MathPrChoice()
				if _gefd := d.DecodeElement(&_cfdbd.MathPrChoice.WrapRight, &_gfgff); _gefd != nil {
					return _gefd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_cfdbd.IntLim = NewCT_LimLoc()
				if _bcfc := d.DecodeElement(_cfdbd.IntLim, &_gfgff); _bcfc != nil {
					return _bcfc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_cfdbd.NaryLim = NewCT_LimLoc()
				if _gefb := d.DecodeElement(_cfdbd.NaryLim, &_gfgff); _gefb != nil {
					return _gefb
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0061\u0074\u0068\u0050\u0072\u0020\u0025\u0076", _gfgff.Name)
				if _feba := d.Skip(); _feba != nil {
					return _feba
				}
			}
		case _e.EndElement:
			break _accd
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RPR and its children
func (_egdb *CT_RPR) Validate() error {
	return _egdb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0050\u0052")
}

// ValidateWithPath validates the CT_RadPr and its children, prefixing error messages with path
func (_bbce *CT_RadPr) ValidateWithPath(path string) error {
	if _bbce.DegHide != nil {
		if _bcgf := _bbce.DegHide.ValidateWithPath(path + "\u002f\u0044\u0065\u0067\u0048\u0069\u0064\u0065"); _bcgf != nil {
			return _bcgf
		}
	}
	if _bbce.CtrlPr != nil {
		if _dbfg := _bbce.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dbfg != nil {
			return _dbfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LimUpp and its children, prefixing error messages with path
func (_dfdc *CT_LimUpp) ValidateWithPath(path string) error {
	if _dfdc.LimUppPr != nil {
		if _ffe := _dfdc.LimUppPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u0055\u0070\u0070\u0050r"); _ffe != nil {
			return _ffe
		}
	}
	if _ggfb := _dfdc.E.ValidateWithPath(path + "\u002f\u0045"); _ggfb != nil {
		return _ggfb
	}
	if _cdaa := _dfdc.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _cdaa != nil {
		return _cdaa
	}
	return nil
}

// ValidateWithPath validates the CT_Func and its children, prefixing error messages with path
func (_cff *CT_Func) ValidateWithPath(path string) error {
	if _cff.FuncPr != nil {
		if _gdce := _cff.FuncPr.ValidateWithPath(path + "\u002fF\u0075\u006e\u0063\u0050\u0072"); _gdce != nil {
			return _gdce
		}
	}
	if _bccc := _cff.FName.ValidateWithPath(path + "\u002f\u0046\u004e\u0061\u006d\u0065"); _bccc != nil {
		return _bccc
	}
	if _bcab := _cff.E.ValidateWithPath(path + "\u002f\u0045"); _bcab != nil {
		return _bcab
	}
	return nil
}

// ValidateWithPath validates the CT_SSupPr and its children, prefixing error messages with path
func (_cdae *CT_SSupPr) ValidateWithPath(path string) error {
	if _cdae.CtrlPr != nil {
		if _gaed := _cdae.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gaed != nil {
			return _gaed
		}
	}
	return nil
}
func (_gfee *EG_OMathElements) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_gfee.OMathElementsChoice.MarshalXML(e, _e.StartElement{})
	return nil
}

type CT_Integer2 struct {

	// Value
	ValAttr int64
}

// Validate validates the CT_D and its children
func (_fffa *CT_D) Validate() error { return _fffa.ValidateWithPath("\u0043\u0054\u005f\u0044") }

type EG_OMathElementsChoice struct{ OMathMathElementsChoice *EG_OMathMathElementsChoice }

func (_cdeb *CT_MC) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cdeb.McPr != nil {
		_ffc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006d\u0063\u0050\u0072"}}
		e.EncodeElement(_cdeb.McPr, _ffc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type ST_LimLoc byte

// Validate validates the CT_YAlign and its children
func (_aeaa *CT_YAlign) Validate() error {
	return _aeaa.ValidateWithPath("\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n")
}

// ValidateWithPath validates the CT_OMathPara and its children, prefixing error messages with path
func (_bfcf *CT_OMathPara) ValidateWithPath(path string) error {
	if _bfcf.OMathParaPr != nil {
		if _bbee := _bfcf.OMathParaPr.ValidateWithPath(path + "\u002f\u004f\u004da\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"); _bbee != nil {
			return _bbee
		}
	}
	for _ffda, _bgcb := range _bfcf.OMath {
		if _abc := _bgcb.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002fO\u004d\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _ffda)); _abc != nil {
			return _abc
		}
	}
	return nil
}
func NewCT_Integer2() *CT_Integer2 { _agge := &CT_Integer2{}; _agge.ValAttr = -2; return _agge }
func (_dbbf *CT_EqArr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_bfbg:
	for {
		_fbea, _ddag := d.Token()
		if _ddag != nil {
			return _ddag
		}
		switch _fdc := _fbea.(type) {
		case _e.StartElement:
			switch _fdc.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065q\u0041\u0072\u0072\u0050\u0072"}:
				_dbbf.EqArrPr = NewCT_EqArrPr()
				if _faa := d.DecodeElement(_dbbf.EqArrPr, &_fdc); _faa != nil {
					return _faa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				_ebg := NewCT_OMathArg()
				if _aeac := d.DecodeElement(_ebg, &_fdc); _aeac != nil {
					return _aeac
				}
				_dbbf.E = append(_dbbf.E, _ebg)
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0020\u0025\u0076", _fdc.Name)
				if _ffab := d.Skip(); _ffab != nil {
					return _ffab
				}
			}
		case _e.EndElement:
			break _bfbg
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_OMathArg() *CT_OMathArg { _cbgc := &CT_OMathArg{}; return _cbgc }

// ValidateWithPath validates the CT_Script and its children, prefixing error messages with path
func (_cgeab *CT_Script) ValidateWithPath(path string) error {
	if _bcga := _cgeab.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bcga != nil {
		return _bcga
	}
	return nil
}

// Validate validates the CT_MR and its children
func (_dgdb *CT_MR) Validate() error { return _dgdb.ValidateWithPath("\u0043\u0054\u005fM\u0052") }

// ValidateWithPath validates the CT_OMathArg and its children, prefixing error messages with path
func (_agcb *CT_OMathArg) ValidateWithPath(path string) error {
	if _agcb.ArgPr != nil {
		if _cbff := _agcb.ArgPr.ValidateWithPath(path + "\u002f\u0041\u0072\u0067\u0050\u0072"); _cbff != nil {
			return _cbff
		}
	}
	for _fcfb, _efag := range _agcb.EG_OMathElements {
		if _bcfgg := _efag.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002fEG\u005f\u004f\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u005b\u0025\u0064\u005d", path, _fcfb)); _bcfgg != nil {
			return _bcfgg
		}
	}
	if _agcb.CtrlPr != nil {
		if _eade := _agcb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _eade != nil {
			return _eade
		}
	}
	return nil
}

// Validate validates the CT_LimLow and its children
func (_gcgd *CT_LimLow) Validate() error {
	return _gcgd.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw")
}

type CT_OMathPara struct {

	// Office Math Paragraph Properties
	OMathParaPr *CT_OMathParaPr

	// Office Math
	OMath []*CT_OMath
}

func NewCT_PhantPr() *CT_PhantPr { _gaaa := &CT_PhantPr{}; return _gaaa }
func (_babg *CT_OMathArgPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gdda:
	for {
		_ebbgg, _dcbg := d.Token()
		if _dcbg != nil {
			return _dcbg
		}
		switch _aedf := _ebbgg.(type) {
		case _e.StartElement:
			switch _aedf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u0072\u0067S\u007a"}:
				_babg.ArgSz = NewCT_Integer2()
				if _fee := d.DecodeElement(_babg.ArgSz, &_aedf); _fee != nil {
					return _fee
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fM\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072 \u0025\u0076", _aedf.Name)
				if _cdegf := d.Skip(); _cdegf != nil {
					return _cdegf
				}
			}
		case _e.EndElement:
			break _gdda
		case _e.CharData:
		}
	}
	return nil
}
func (_dc *CT_Bar) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_dc.E = NewCT_OMathArg()
_fc:
	for {
		_gbb, _bf := d.Token()
		if _bf != nil {
			return _bf
		}
		switch _cae := _gbb.(type) {
		case _e.StartElement:
			switch _cae.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0061\u0072P\u0072"}:
				_dc.BarPr = NewCT_BarPr()
				if _caf := d.DecodeElement(_dc.BarPr, &_cae); _caf != nil {
					return _caf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _bfc := d.DecodeElement(_dc.E, &_cae); _bfc != nil {
					return _bfc
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0072\u0020\u0025\u0076", _cae.Name)
				if _db := d.Skip(); _db != nil {
					return _db
				}
			}
		case _e.EndElement:
			break _fc
		case _e.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TwipsMeasure and its children
func (_bbae *CT_TwipsMeasure) Validate() error {
	return _bbae.ValidateWithPath("\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
}
func (_bbd *CT_BarPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bbd.Pos != nil {
		_ec := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0070o\u0073"}}
		e.EncodeElement(_bbd.Pos, _ec)
	}
	if _bbd.CtrlPr != nil {
		_gf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bbd.CtrlPr, _gf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OMathParaPr and its children
func (_dbdc *CT_OMathParaPr) Validate() error {
	return _dbdc.ValidateWithPath("\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072")
}
func (_daed *CT_LimLoc) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_daed.ValAttr = ST_LimLoc(1)
	for _, _bgcf := range start.Attr {
		if _bgcf.Name.Local == "\u0076\u0061\u006c" {
			_daed.ValAttr.UnmarshalXMLAttr(_bgcf)
			continue
		}
	}
	for {
		_ggde, _badf := d.Token()
		if _badf != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004c\u0069\u006dL\u006f\u0063\u003a\u0020\u0025\u0073", _badf)
		}
		if _bcg, _dgdc := _ggde.(_e.EndElement); _dgdc && _bcg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_F struct {

	// Fraction Properties
	FPr *CT_FPr

	// Numerator
	Num *CT_OMathArg

	// Denominator
	Den *CT_OMathArg
}
type CT_BoxPr struct {

	// Operator Emulator
	OpEmu *CT_OnOff

	// No Break
	NoBreak *CT_OnOff

	// Differential
	Diff *CT_OnOff

	// Break
	Brk *CT_ManualBreak

	// Alignment
	Aln    *CT_OnOff
	CtrlPr *CT_CtrlPr
}

func (_fbda ST_Shp) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_fbda.String(), start)
}
func (_bgd *CT_Integer255) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_bgd.ValAttr = 1
	for _, _cdg := range start.Attr {
		if _cdg.Name.Local == "\u0076\u0061\u006c" {
			_aec, _ccdb := _g.ParseInt(_cdg.Value, 10, 64)
			if _ccdb != nil {
				return _ccdb
			}
			_bgd.ValAttr = _aec
			continue
		}
	}
	for {
		_gggf, _dfd := d.Token()
		if _dfd != nil {
			return _ga.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0074e\u0067e\u0072\u0032\u0035\u0035\u003a\u0020\u0025s", _dfd)
		}
		if _gedg, _ddaa := _gggf.(_e.EndElement); _ddaa && _gedg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SPrePr and its children
func (_aaga *CT_SPrePr) Validate() error {
	return _aaga.ValidateWithPath("\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r")
}

// ValidateWithPath validates the CT_Bar and its children, prefixing error messages with path
func (_fbc *CT_Bar) ValidateWithPath(path string) error {
	if _fbc.BarPr != nil {
		if _ba := _fbc.BarPr.ValidateWithPath(path + "\u002f\u0042\u0061\u0072\u0050\u0072"); _ba != nil {
			return _ba
		}
	}
	if _ggf := _fbc.E.ValidateWithPath(path + "\u002f\u0045"); _ggf != nil {
		return _ggf
	}
	return nil
}

type CT_FuncPr struct{ CtrlPr *CT_CtrlPr }

func (_dadd ST_BreakBinSub) Validate() error { return _dadd.ValidateWithPath("") }
func (_agg *CT_GroupChr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_agg.E = NewCT_OMathArg()
_aeb:
	for {
		_eecf, _fgdb := d.Token()
		if _fgdb != nil {
			return _fgdb
		}
		switch _fdbg := _eecf.(type) {
		case _e.StartElement:
			switch _fdbg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"}:
				_agg.GroupChrPr = NewCT_GroupChrPr()
				if _gecf := d.DecodeElement(_agg.GroupChrPr, &_fdbg); _gecf != nil {
					return _gecf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _becb := d.DecodeElement(_agg.E, &_fdbg); _becb != nil {
					return _becb
				}
			default:
				_ef.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0020\u0025\u0076", _fdbg.Name)
				if _cfge := d.Skip(); _cfge != nil {
					return _cfge
				}
			}
		case _e.EndElement:
			break _aeb
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_MathPrChoice() *CT_MathPrChoice { _efab := &CT_MathPrChoice{}; return _efab }
func (_aeg *CT_FPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cafd:
	for {
		_ggdg, _fbgb := d.Token()
		if _fbgb != nil {
			return _fbgb
		}
		switch _afb := _ggdg.(type) {
		case _e.StartElement:
			switch _afb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0074\u0079\u0070\u0065"}:
				_aeg.Type = NewCT_FType()
				if _fafc := d.DecodeElement(_aeg.Type, &_afb); _fafc != nil {
					return _fafc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_aeg.CtrlPr = NewCT_CtrlPr()
				if _baca := d.DecodeElement(_aeg.CtrlPr, &_afb); _baca != nil {
					return _baca
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0050\u0072\u0020\u0025\u0076", _afb.Name)
				if _dcbe := d.Skip(); _dcbe != nil {
					return _dcbe
				}
			}
		case _e.EndElement:
			break _cafd
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OMath and its children, prefixing error messages with path
func (_dabec *CT_OMath) ValidateWithPath(path string) error {
	for _dedg, _agec := range _dabec.EG_OMathElements {
		if _affa := _agec.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002fEG\u005f\u004f\u004d\u0061\u0074\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u005b\u0025\u0064\u005d", path, _dedg)); _affa != nil {
			return _affa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MCPr and its children, prefixing error messages with path
func (_cdab *CT_MCPr) ValidateWithPath(path string) error {
	if _cdab.Count != nil {
		if _abe := _cdab.Count.ValidateWithPath(path + "\u002f\u0043\u006f\u0075\u006e\u0074"); _abe != nil {
			return _abe
		}
	}
	if _cdab.McJc != nil {
		if _eff := _cdab.McJc.ValidateWithPath(path + "\u002f\u004d\u0063J\u0063"); _eff != nil {
			return _eff
		}
	}
	return nil
}

// Validate validates the CT_OnOff and its children
func (_bgbbe *CT_OnOff) Validate() error {
	return _bgbbe.ValidateWithPath("\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066")
}

type CT_XAlign struct {

	// Value
	ValAttr _c.ST_XAlign
}

// ValidateWithPath validates the CT_FType and its children, prefixing error messages with path
func (_bgc *CT_FType) ValidateWithPath(path string) error {
	if _bgc.ValAttr == ST_FTypeUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gcaa := _bgc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gcaa != nil {
		return _gcaa
	}
	return nil
}

// Validate validates the CT_SSupPr and its children
func (_cgaa *CT_SSupPr) Validate() error {
	return _cgaa.ValidateWithPath("\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r")
}
func (_facgf *CT_XAlign) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_facgf.ValAttr = _c.ST_XAlign(1)
	for _, _cafdf := range start.Attr {
		if _cafdf.Name.Local == "\u0076\u0061\u006c" {
			_facgf.ValAttr.UnmarshalXMLAttr(_cafdf)
			continue
		}
	}
	for {
		_gedb, _cfgee := d.Token()
		if _cfgee != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0058\u0041\u006ci\u0067\u006e\u003a\u0020\u0025\u0073", _cfgee)
		}
		if _fbec, _gbdd := _gedb.(_e.EndElement); _gbdd && _fbec.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Bar() *CT_Bar { _fbg := &CT_Bar{}; _fbg.E = NewCT_OMathArg(); return _fbg }
func (_gdge ST_Jc) ValidateWithPath(path string) error {
	switch _gdge {
	case 0, 1, 2, 3, 4:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdge))
	}
	return nil
}

const (
	ST_LimLocUnset  ST_LimLoc = 0
	ST_LimLocUndOvr ST_LimLoc = 1
	ST_LimLocSubSup ST_LimLoc = 2
)

func NewCT_SSub() *CT_SSub {
	_eefgc := &CT_SSub{}
	_eefgc.E = NewCT_OMathArg()
	_eefgc.Sub = NewCT_OMathArg()
	return _eefgc
}

// Validate validates the CT_Bar and its children
func (_fff *CT_Bar) Validate() error {
	return _fff.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0072")
}

// ValidateWithPath validates the CT_BoxPr and its children, prefixing error messages with path
func (_ebb *CT_BoxPr) ValidateWithPath(path string) error {
	if _ebb.OpEmu != nil {
		if _fadf := _ebb.OpEmu.ValidateWithPath(path + "\u002f\u004f\u0070\u0045\u006d\u0075"); _fadf != nil {
			return _fadf
		}
	}
	if _ebb.NoBreak != nil {
		if _fge := _ebb.NoBreak.ValidateWithPath(path + "\u002f\u004e\u006f\u0042\u0072\u0065\u0061\u006b"); _fge != nil {
			return _fge
		}
	}
	if _ebb.Diff != nil {
		if _cce := _ebb.Diff.ValidateWithPath(path + "\u002f\u0044\u0069f\u0066"); _cce != nil {
			return _cce
		}
	}
	if _ebb.Brk != nil {
		if _ecfga := _ebb.Brk.ValidateWithPath(path + "\u002f\u0042\u0072\u006b"); _ecfga != nil {
			return _ecfga
		}
	}
	if _ebb.Aln != nil {
		if _fgb := _ebb.Aln.ValidateWithPath(path + "\u002f\u0041\u006c\u006e"); _fgb != nil {
			return _fgb
		}
	}
	if _ebb.CtrlPr != nil {
		if _dgdd := _ebb.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dgdd != nil {
			return _dgdd
		}
	}
	return nil
}
func (_bbff ST_FType) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	return e.EncodeElement(_bbff.String(), start)
}
func ParseUnionST_OnOff(s string) (_c.ST_OnOff, error) { return _c.ParseUnionST_OnOff(s) }
func (_adef *CT_Rad) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_adef.Deg = NewCT_OMathArg()
	_adef.E = NewCT_OMathArg()
_acdf:
	for {
		_cefg, _facg := d.Token()
		if _facg != nil {
			return _facg
		}
		switch _dada := _cefg.(type) {
		case _e.StartElement:
			switch _dada.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072\u0061\u0064P\u0072"}:
				_adef.RadPr = NewCT_RadPr()
				if _eegf := d.DecodeElement(_adef.RadPr, &_dada); _eegf != nil {
					return _eegf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0067"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0067"}:
				if _aecbe := d.DecodeElement(_adef.Deg, &_dada); _aecbe != nil {
					return _aecbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _eadf := d.DecodeElement(_adef.E, &_dada); _eadf != nil {
					return _eadf
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0061\u0064\u0020\u0025\u0076", _dada.Name)
				if _eaee := d.Skip(); _eaee != nil {
					return _eaee
				}
			}
		case _e.EndElement:
			break _acdf
		case _e.CharData:
		}
	}
	return nil
}
func (_gbc *CT_MathPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_fbee:
	for {
		_gdgc, _agbc := d.Token()
		if _agbc != nil {
			return _agbc
		}
		switch _eedf := _gdgc.(type) {
		case _e.StartElement:
			switch _eedf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0061\u0074\u0068\u0046\u006f\u006e\u0074"}:
				_gbc.MathFont = NewCT_String()
				if _aaca := d.DecodeElement(_gbc.MathFont, &_eedf); _aaca != nil {
					return _aaca
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b\u0042\u0069\u006e"}:
				_gbc.BrkBin = NewCT_BreakBin()
				if _bgdc := d.DecodeElement(_gbc.BrkBin, &_eedf); _bgdc != nil {
					return _bgdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062r\u006b\u0042\u0069\u006e\u0053\u0075b"}:
				_gbc.BrkBinSub = NewCT_BreakBinSub()
				if _abbf := d.DecodeElement(_gbc.BrkBinSub, &_eedf); _abbf != nil {
					return _abbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073m\u0061\u006c\u006c\u0046\u0072\u0061c"}:
				_gbc.SmallFrac = NewCT_OnOff()
				if _fgbd := d.DecodeElement(_gbc.SmallFrac, &_eedf); _fgbd != nil {
					return _fgbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064i\u0073\u0070\u0044\u0065\u0066"}:
				_gbc.DispDef = NewCT_OnOff()
				if _ead := d.DecodeElement(_gbc.DispDef, &_eedf); _ead != nil {
					return _ead
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006cM\u0061\u0072\u0067\u0069\u006e"}:
				_gbc.LMargin = NewCT_TwipsMeasure()
				if _ffea := d.DecodeElement(_gbc.LMargin, &_eedf); _ffea != nil {
					return _ffea
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0072M\u0061\u0072\u0067\u0069\u006e"}:
				_gbc.RMargin = NewCT_TwipsMeasure()
				if _febd := d.DecodeElement(_gbc.RMargin, &_eedf); _febd != nil {
					return _febd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0065\u0066J\u0063"}:
				_gbc.DefJc = NewCT_OMathJc()
				if _acae := d.DecodeElement(_gbc.DefJc, &_eedf); _acae != nil {
					return _acae
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u0072\u0065S\u0070"}:
				_gbc.PreSp = NewCT_TwipsMeasure()
				if _dgg := d.DecodeElement(_gbc.PreSp, &_eedf); _dgg != nil {
					return _dgg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0070\u006f\u0073\u0074\u0053\u0070"}:
				_gbc.PostSp = NewCT_TwipsMeasure()
				if _fbac := d.DecodeElement(_gbc.PostSp, &_eedf); _fbac != nil {
					return _fbac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0065\u0072\u0053\u0070"}:
				_gbc.InterSp = NewCT_TwipsMeasure()
				if _dabg := d.DecodeElement(_gbc.InterSp, &_eedf); _dabg != nil {
					return _dabg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069n\u0074\u0072\u0061\u0053\u0070"}:
				_gbc.IntraSp = NewCT_TwipsMeasure()
				if _beeg := d.DecodeElement(_gbc.IntraSp, &_eedf); _beeg != nil {
					return _beeg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077\u0072\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}:
				_gbc.MathPrChoice = NewCT_MathPrChoice()
				if _gcc := d.DecodeElement(&_gbc.MathPrChoice.WrapIndent, &_eedf); _gcc != nil {
					return _gcc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0077r\u0061\u0070\u0052\u0069\u0067\u0068t"}:
				_gbc.MathPrChoice = NewCT_MathPrChoice()
				if _dbdbd := d.DecodeElement(&_gbc.MathPrChoice.WrapRight, &_eedf); _dbdbd != nil {
					return _dbdbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0069\u006e\u0074\u004c\u0069\u006d"}:
				_gbc.IntLim = NewCT_LimLoc()
				if _dcda := d.DecodeElement(_gbc.IntLim, &_eedf); _dcda != nil {
					return _dcda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006ea\u0072\u0079\u004c\u0069\u006d"}:
				_gbc.NaryLim = NewCT_LimLoc()
				if _aead := d.DecodeElement(_gbc.NaryLim, &_eedf); _aead != nil {
					return _aead
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0061\u0074h\u0050\u0072 \u0025\u0076", _eedf.Name)
				if _bedc := d.Skip(); _bedc != nil {
					return _bedc
				}
			}
		case _e.EndElement:
			break _fbee
		case _e.CharData:
		}
	}
	return nil
}
func (_eabe *ST_Jc) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_ffcf, _daba := d.Token()
	if _daba != nil {
		return _daba
	}
	if _efgf, _agad := _ffcf.(_e.EndElement); _agad && _efgf.Name == start.Name {
		*_eabe = 1
		return nil
	}
	if _gagfa, _cgac := _ffcf.(_e.CharData); !_cgac {
		return _ga.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffcf)
	} else {
		switch string(_gagfa) {
		case "":
			*_eabe = 0
		case "\u006c\u0065\u0066\u0074":
			*_eabe = 1
		case "\u0072\u0069\u0067h\u0074":
			*_eabe = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_eabe = 3
		case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_eabe = 4
		}
	}
	_ffcf, _daba = d.Token()
	if _daba != nil {
		return _daba
	}
	if _feac, _ebacf := _ffcf.(_e.EndElement); _ebacf && _feac.Name == start.Name {
		return nil
	}
	return _ga.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffcf)
}
func NewCT_RPR() *CT_RPR { _fede := &CT_RPR{}; return _fede }

// ValidateWithPath validates the CT_DPr and its children, prefixing error messages with path
func (_gecd *CT_DPr) ValidateWithPath(path string) error {
	if _gecd.BegChr != nil {
		if _fbae := _gecd.BegChr.ValidateWithPath(path + "\u002fB\u0065\u0067\u0043\u0068\u0072"); _fbae != nil {
			return _fbae
		}
	}
	if _gecd.SepChr != nil {
		if _efd := _gecd.SepChr.ValidateWithPath(path + "\u002fS\u0065\u0070\u0043\u0068\u0072"); _efd != nil {
			return _efd
		}
	}
	if _gecd.EndChr != nil {
		if _fegdc := _gecd.EndChr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0068\u0072"); _fegdc != nil {
			return _fegdc
		}
	}
	if _gecd.Grow != nil {
		if _cfc := _gecd.Grow.ValidateWithPath(path + "\u002f\u0047\u0072o\u0077"); _cfc != nil {
			return _cfc
		}
	}
	if _gecd.Shp != nil {
		if _beb := _gecd.Shp.ValidateWithPath(path + "\u002f\u0053\u0068\u0070"); _beb != nil {
			return _beb
		}
	}
	if _gecd.CtrlPr != nil {
		if _dgddc := _gecd.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dgddc != nil {
			return _dgddc
		}
	}
	return nil
}
func (_bedf *CT_MPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _bedf.BaseJc != nil {
		_fcbc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062\u0061\u0073\u0065\u004a\u0063"}}
		e.EncodeElement(_bedf.BaseJc, _fcbc)
	}
	if _bedf.PlcHide != nil {
		_caff := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0070\u006c\u0063\u0048\u0069\u0064e"}}
		e.EncodeElement(_bedf.PlcHide, _caff)
	}
	if _bedf.RSpRule != nil {
		_aadg := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0072\u0053\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_bedf.RSpRule, _aadg)
	}
	if _bedf.CGpRule != nil {
		_ffd := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0063\u0047\u0070\u0052\u0075\u006ce"}}
		e.EncodeElement(_bedf.CGpRule, _ffd)
	}
	if _bedf.RSp != nil {
		_cdga := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0072S\u0070"}}
		e.EncodeElement(_bedf.RSp, _cdga)
	}
	if _bedf.CSp != nil {
		_abee := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063S\u0070"}}
		e.EncodeElement(_bedf.CSp, _abee)
	}
	if _bedf.CGp != nil {
		_edff := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063G\u0070"}}
		e.EncodeElement(_bedf.CGp, _edff)
	}
	if _bedf.Mcs != nil {
		_accgd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006dc\u0073"}}
		e.EncodeElement(_bedf.Mcs, _accgd)
	}
	if _bedf.CtrlPr != nil {
		_ccdbc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_bedf.CtrlPr, _ccdbc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_ManualBreak() *CT_ManualBreak { _badbf := &CT_ManualBreak{}; return _badbf }
func (_fgdg *CT_ManualBreak) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _degd := range start.Attr {
		if _degd.Name.Local == "\u0061\u006c\u006eA\u0074" {
			_fcabe, _cacf := _g.ParseInt(_degd.Value, 10, 64)
			if _cacf != nil {
				return _cacf
			}
			_fgdg.AlnAtAttr = &_fcabe
			continue
		}
	}
	for {
		_edfdf, _gbbf := d.Token()
		if _gbbf != nil {
			return _ga.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fM\u0061\u006e\u0075\u0061\u006c\u0042\u0072\u0065\u0061\u006b:\u0020\u0025\u0073", _gbbf)
		}
		if _gedaf, _cabf := _edfdf.(_e.EndElement); _cabf && _gedaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhantPr and its children, prefixing error messages with path
func (_baba *CT_PhantPr) ValidateWithPath(path string) error {
	if _baba.Show != nil {
		if _adbe := _baba.Show.ValidateWithPath(path + "\u002f\u0053\u0068o\u0077"); _adbe != nil {
			return _adbe
		}
	}
	if _baba.ZeroWid != nil {
		if _gcgb := _baba.ZeroWid.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0057\u0069\u0064"); _gcgb != nil {
			return _gcgb
		}
	}
	if _baba.ZeroAsc != nil {
		if _dcdb := _baba.ZeroAsc.ValidateWithPath(path + "\u002f\u005a\u0065\u0072\u006f\u0041\u0073\u0063"); _dcdb != nil {
			return _dcdb
		}
	}
	if _baba.ZeroDesc != nil {
		if _ffeb := _baba.ZeroDesc.ValidateWithPath(path + "\u002fZ\u0065\u0072\u006f\u0044\u0065\u0073c"); _ffeb != nil {
			return _ffeb
		}
	}
	if _baba.Transp != nil {
		if _fege := _baba.Transp.ValidateWithPath(path + "\u002fT\u0072\u0061\u006e\u0073\u0070"); _fege != nil {
			return _fege
		}
	}
	if _baba.CtrlPr != nil {
		if _dgfb := _baba.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _dgfb != nil {
			return _dgfb
		}
	}
	return nil
}
func (_edfdd *CT_OMathParaPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _edfdd.Jc != nil {
		_fdfe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006a\u0063"}}
		e.EncodeElement(_edfdd.Jc, _fdfe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewCT_LimLow() *CT_LimLow {
	_bba := &CT_LimLow{}
	_bba.E = NewCT_OMathArg()
	_bba.Lim = NewCT_OMathArg()
	return _bba
}

const (
	ST_BreakBinUnset  ST_BreakBin = 0
	ST_BreakBinBefore ST_BreakBin = 1
	ST_BreakBinAfter  ST_BreakBin = 2
	ST_BreakBinRepeat ST_BreakBin = 3
)

type ST_BreakBinSub byte

func (_fgeab *ST_Shp) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_fgeab = 0
	case "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064":
		*_fgeab = 1
	case "\u006d\u0061\u0074c\u0068":
		*_fgeab = 2
	}
	return nil
}
func NewCT_BoxPr() *CT_BoxPr { _dea := &CT_BoxPr{}; return _dea }
func NewCT_DPr() *CT_DPr     { _gfb := &CT_DPr{}; return _gfb }

type CT_Shp struct {

	// Value
	ValAttr ST_Shp
}

func (_afda *CT_RPR) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _afda.Lit != nil {
		_deed := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006ci\u0074"}}
		e.EncodeElement(_afda.Lit, _deed)
	}
	if _afda.Nor != nil {
		_deab := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006eo\u0072"}}
		e.EncodeElement(_afda.Nor, _deab)
	}
	if _afda.Brk != nil {
		_abab := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0062r\u006b"}}
		e.EncodeElement(_afda.Brk, _abab)
	}
	if _afda.Aln != nil {
		_babag := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0061l\u006e"}}
		e.EncodeElement(_afda.Aln, _babag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_aaaag *CT_Script) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _ggab := range start.Attr {
		if _ggab.Name.Local == "\u0076\u0061\u006c" {
			_aaaag.ValAttr.UnmarshalXMLAttr(_ggab)
			continue
		}
	}
	for {
		_cdee, _aded := d.Token()
		if _aded != nil {
			return _ga.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0063\u0072i\u0070\u0074\u003a\u0020\u0025\u0073", _aded)
		}
		if _feea, _gbgg := _cdee.(_e.EndElement); _gbgg && _feea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbdc *CT_BorderBoxPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_eab:
	for {
		_dga, _dgaa := d.Token()
		if _dgaa != nil {
			return _dgaa
		}
		switch _dce := _dga.(type) {
		case _e.StartElement:
			switch _dce.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0054\u006f\u0070"}:
				_cbdc.HideTop = NewCT_OnOff()
				if _cbb := d.DecodeElement(_cbdc.HideTop, &_dce); _cbb != nil {
					return _cbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0042\u006f\u0074"}:
				_cbdc.HideBot = NewCT_OnOff()
				if _gff := d.DecodeElement(_cbdc.HideBot, &_dce); _gff != nil {
					return _gff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068\u0069\u0064\u0065\u004c\u0065\u0066\u0074"}:
				_cbdc.HideLeft = NewCT_OnOff()
				if _gfe := d.DecodeElement(_cbdc.HideLeft, &_dce); _gfe != nil {
					return _gfe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0068i\u0064\u0065\u0052\u0069\u0067\u0068t"}:
				_cbdc.HideRight = NewCT_OnOff()
				if _ddgb := d.DecodeElement(_cbdc.HideRight, &_dce); _ddgb != nil {
					return _ddgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0048"}:
				_cbdc.StrikeH = NewCT_OnOff()
				if _dbb := d.DecodeElement(_cbdc.StrikeH, &_dce); _dbb != nil {
					return _dbb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073t\u0072\u0069\u006b\u0065\u0056"}:
				_cbdc.StrikeV = NewCT_OnOff()
				if _ccd := d.DecodeElement(_cbdc.StrikeV, &_dce); _ccd != nil {
					return _ccd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"}:
				_cbdc.StrikeBLTR = NewCT_OnOff()
				if _bed := d.DecodeElement(_cbdc.StrikeBLTR, &_dce); _bed != nil {
					return _bed
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"}:
				_cbdc.StrikeTLBR = NewCT_OnOff()
				if _cbe := d.DecodeElement(_cbdc.StrikeTLBR, &_dce); _cbe != nil {
					return _cbe
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_cbdc.CtrlPr = NewCT_CtrlPr()
				if _fcc := d.DecodeElement(_cbdc.CtrlPr, &_dce); _fcc != nil {
					return _fcc
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0042o\u0078P\u0072\u0020\u0025\u0076", _dce.Name)
				if _dgdf := d.Skip(); _dgdf != nil {
					return _dgdf
				}
			}
		case _e.EndElement:
			break _eab
		case _e.CharData:
		}
	}
	return nil
}

type ST_BreakBin byte

func (_edbc ST_BreakBinSub) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_gcggf := _e.Attr{}
	_gcggf.Name = name
	switch _edbc {
	case ST_BreakBinSubUnset:
		_gcggf.Value = ""
	case ST_BreakBinSub__:
		_gcggf.Value = "\u002d\u002d"
	case ST_BreakBinSub___:
		_gcggf.Value = "\u002d\u002b"
	case ST_BreakBinSub____:
		_gcggf.Value = "\u002b\u002d"
	}
	return _gcggf, nil
}

// ValidateWithPath validates the CT_SSub and its children, prefixing error messages with path
func (_dgga *CT_SSub) ValidateWithPath(path string) error {
	if _dgga.SSubPr != nil {
		if _bgde := _dgga.SSubPr.ValidateWithPath(path + "\u002fS\u0053\u0075\u0062\u0050\u0072"); _bgde != nil {
			return _bgde
		}
	}
	if _eeffc := _dgga.E.ValidateWithPath(path + "\u002f\u0045"); _eeffc != nil {
		return _eeffc
	}
	if _ecd := _dgga.Sub.ValidateWithPath(path + "\u002f\u0053\u0075\u0062"); _ecd != nil {
		return _ecd
	}
	return nil
}

// ValidateWithPath validates the CT_SPrePr and its children, prefixing error messages with path
func (_eebe *CT_SPrePr) ValidateWithPath(path string) error {
	if _eebe.CtrlPr != nil {
		if _acbd := _eebe.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _acbd != nil {
			return _acbd
		}
	}
	return nil
}
func (_eba *CT_OMathArg) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _eba.ArgPr != nil {
		_ffff := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0061\u0072\u0067\u0050\u0072"}}
		e.EncodeElement(_eba.ArgPr, _ffff)
	}
	if _eba.EG_OMathElements != nil {
		for _, _fcage := range _eba.EG_OMathElements {
			_fcage.MarshalXML(e, _e.StartElement{})
		}
	}
	if _eba.CtrlPr != nil {
		_accc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_eba.CtrlPr, _accc)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_BreakBin struct {

	// Value
	ValAttr ST_BreakBin
}

func NewCT_BreakBinSub() *CT_BreakBinSub { _dae := &CT_BreakBinSub{}; return _dae }
func (_fbca *CT_MCS) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_aad:
	for {
		_ggag, _bgf := d.Token()
		if _bgf != nil {
			return _bgf
		}
		switch _deb := _ggag.(type) {
		case _e.StartElement:
			switch _deb.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006d\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006d\u0063"}:
				_dgbg := NewCT_MC()
				if _dgeb := d.DecodeElement(_dgbg, &_deb); _dgeb != nil {
					return _dgeb
				}
				_fbca.Mc = append(_fbca.Mc, _dgbg)
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0043\u0053\u0020\u0025\u0076", _deb.Name)
				if _gcgc := d.Skip(); _gcgc != nil {
					return _gcgc
				}
			}
		case _e.EndElement:
			break _aad
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MPr and its children, prefixing error messages with path
func (_aaf *CT_MPr) ValidateWithPath(path string) error {
	if _aaf.BaseJc != nil {
		if _cdd := _aaf.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _cdd != nil {
			return _cdd
		}
	}
	if _aaf.PlcHide != nil {
		if _ggbc := _aaf.PlcHide.ValidateWithPath(path + "\u002f\u0050\u006c\u0063\u0048\u0069\u0064\u0065"); _ggbc != nil {
			return _ggbc
		}
	}
	if _aaf.RSpRule != nil {
		if _cfd := _aaf.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _cfd != nil {
			return _cfd
		}
	}
	if _aaf.CGpRule != nil {
		if _agdf := _aaf.CGpRule.ValidateWithPath(path + "\u002f\u0043\u0047\u0070\u0052\u0075\u006c\u0065"); _agdf != nil {
			return _agdf
		}
	}
	if _aaf.RSp != nil {
		if _cdc := _aaf.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _cdc != nil {
			return _cdc
		}
	}
	if _aaf.CSp != nil {
		if _ebeg := _aaf.CSp.ValidateWithPath(path + "\u002f\u0043\u0053\u0070"); _ebeg != nil {
			return _ebeg
		}
	}
	if _aaf.CGp != nil {
		if _cafc := _aaf.CGp.ValidateWithPath(path + "\u002f\u0043\u0047\u0070"); _cafc != nil {
			return _cafc
		}
	}
	if _aaf.Mcs != nil {
		if _cdaag := _aaf.Mcs.ValidateWithPath(path + "\u002f\u004d\u0063\u0073"); _cdaag != nil {
			return _cdaag
		}
	}
	if _aaf.CtrlPr != nil {
		if _gcdd := _aaf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _gcdd != nil {
			return _gcdd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LimLoc and its children, prefixing error messages with path
func (_fabe *CT_LimLoc) ValidateWithPath(path string) error {
	if _fabe.ValAttr == ST_LimLocUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebfe := _fabe.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ebfe != nil {
		return _ebfe
	}
	return nil
}
func NewCT_D() *CT_D { _add := &CT_D{}; return _add }

// Validate validates the CT_Integer255 and its children
func (_gbde *CT_Integer255) Validate() error {
	return _gbde.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035")
}
func (_aefc *CT_LimLow) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _aefc.LimLowPr != nil {
		_cad := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006c\u0069\u006d\u004c\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_aefc.LimLowPr, _cad)
	}
	_fgcd := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_aefc.E, _fgcd)
	_cbc := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u006ci\u006d"}}
	e.EncodeElement(_aefc.Lim, _cbc)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_bcgd *EG_OMathMathElements) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	_bcgd.OMathMathElementsChoice.MarshalXML(e, _e.StartElement{})
	return nil
}

// Validate validates the CT_Text and its children
func (_cbcdg *CT_Text) Validate() error {
	return _cbcdg.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074")
}

type CT_BarPr struct {

	// Position
	Pos    *CT_TopBot
	CtrlPr *CT_CtrlPr
}

// ValidateWithPath validates the CT_OnOff and its children, prefixing error messages with path
func (_aggg *CT_OnOff) ValidateWithPath(path string) error {
	if _aggg.ValAttr != nil {
		if _fdca := _aggg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fdca != nil {
			return _fdca
		}
	}
	return nil
}

type CT_Integer255 struct {

	// Value
	ValAttr int64
}

func NewCT_F() *CT_F {
	_bcfd := &CT_F{}
	_bcfd.Num = NewCT_OMathArg()
	_bcfd.Den = NewCT_OMathArg()
	return _bcfd
}
func (_dcea *CT_CtrlPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OMathArg and its children
func (_egff *CT_OMathArg) Validate() error {
	return _egff.ValidateWithPath("C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067")
}
func (_afcg *ST_Jc) UnmarshalXMLAttr(attr _e.Attr) error {
	switch attr.Value {
	case "":
		*_afcg = 0
	case "\u006c\u0065\u0066\u0074":
		*_afcg = 1
	case "\u0072\u0069\u0067h\u0074":
		*_afcg = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_afcg = 3
	case "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_afcg = 4
	}
	return nil
}
func (_afad *MathPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u006d"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u003a\u006d\u0061\u0074\u0068\u0050\u0072"
	return _afad.CT_MathPr.MarshalXML(e, start)
}
func (_cdgaf ST_FType) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_baegf := _e.Attr{}
	_baegf.Name = name
	switch _cdgaf {
	case ST_FTypeUnset:
		_baegf.Value = ""
	case ST_FTypeBar:
		_baegf.Value = "\u0062\u0061\u0072"
	case ST_FTypeSkw:
		_baegf.Value = "\u0073\u006b\u0077"
	case ST_FTypeLin:
		_baegf.Value = "\u006c\u0069\u006e"
	case ST_FTypeNoBar:
		_baegf.Value = "\u006e\u006f\u0042a\u0072"
	}
	return _baegf, nil
}
func (_bbbgg *CT_String) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _bbbgg.ValAttr != nil {
		start.Attr = append(start.Attr, _e.Attr{Name: _e.Name{Local: "\u006d\u003a\u0076a\u006c"}, Value: _ga.Sprintf("\u0025\u0076", *_bbbgg.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LimLow and its children, prefixing error messages with path
func (_befa *CT_LimLow) ValidateWithPath(path string) error {
	if _befa.LimLowPr != nil {
		if _gbef := _befa.LimLowPr.ValidateWithPath(path + "\u002fL\u0069\u006d\u004c\u006f\u0077\u0050r"); _gbef != nil {
			return _gbef
		}
	}
	if _def := _befa.E.ValidateWithPath(path + "\u002f\u0045"); _def != nil {
		return _def
	}
	if _fbaea := _befa.Lim.ValidateWithPath(path + "\u002f\u004c\u0069\u006d"); _fbaea != nil {
		return _fbaea
	}
	return nil
}
func (_bae *CT_BoxPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_ece:
	for {
		_acg, _ebd := d.Token()
		if _ebd != nil {
			return _ebd
		}
		switch _cbdd := _acg.(type) {
		case _e.StartElement:
			switch _cbdd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u0070\u0045m\u0075"}:
				_bae.OpEmu = NewCT_OnOff()
				if _dbd := d.DecodeElement(_bae.OpEmu, &_cbdd); _dbd != nil {
					return _dbd
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006eo\u0042\u0072\u0065\u0061\u006b"}:
				_bae.NoBreak = NewCT_OnOff()
				if _ffa := d.DecodeElement(_bae.NoBreak, &_cbdd); _ffa != nil {
					return _ffa
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0064\u0069\u0066\u0066"}:
				_bae.Diff = NewCT_OnOff()
				if _gbf := d.DecodeElement(_bae.Diff, &_cbdd); _gbf != nil {
					return _gbf
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0062\u0072\u006b"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0062\u0072\u006b"}:
				_bae.Brk = NewCT_ManualBreak()
				if _efb := d.DecodeElement(_bae.Brk, &_cbdd); _efb != nil {
					return _efb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e"}:
				_bae.Aln = NewCT_OnOff()
				if _dda := d.DecodeElement(_bae.Aln, &_cbdd); _dda != nil {
					return _dda
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_bae.CtrlPr = NewCT_CtrlPr()
				if _dff := d.DecodeElement(_bae.CtrlPr, &_cbdd); _dff != nil {
					return _dff
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072\u0020\u0025\u0076", _cbdd.Name)
				if _aba := d.Skip(); _aba != nil {
					return _aba
				}
			}
		case _e.EndElement:
			break _ece
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MathPr and its children, prefixing error messages with path
func (_efa *CT_MathPr) ValidateWithPath(path string) error {
	if _efa.MathFont != nil {
		if _cbac := _efa.MathFont.ValidateWithPath(path + "\u002fM\u0061\u0074\u0068\u0046\u006f\u006et"); _cbac != nil {
			return _cbac
		}
	}
	if _efa.BrkBin != nil {
		if _degg := _efa.BrkBin.ValidateWithPath(path + "\u002fB\u0072\u006b\u0042\u0069\u006e"); _degg != nil {
			return _degg
		}
	}
	if _efa.BrkBinSub != nil {
		if _daeec := _efa.BrkBinSub.ValidateWithPath(path + "\u002f\u0042\u0072\u006b\u0042\u0069\u006e\u0053\u0075\u0062"); _daeec != nil {
			return _daeec
		}
	}
	if _efa.SmallFrac != nil {
		if _cffd := _efa.SmallFrac.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u006c\u006c\u0046\u0072\u0061\u0063"); _cffd != nil {
			return _cffd
		}
	}
	if _efa.DispDef != nil {
		if _dgfg := _efa.DispDef.ValidateWithPath(path + "\u002f\u0044\u0069\u0073\u0070\u0044\u0065\u0066"); _dgfg != nil {
			return _dgfg
		}
	}
	if _efa.LMargin != nil {
		if _eceb := _efa.LMargin.ValidateWithPath(path + "\u002f\u004c\u004d\u0061\u0072\u0067\u0069\u006e"); _eceb != nil {
			return _eceb
		}
	}
	if _efa.RMargin != nil {
		if _gbca := _efa.RMargin.ValidateWithPath(path + "\u002f\u0052\u004d\u0061\u0072\u0067\u0069\u006e"); _gbca != nil {
			return _gbca
		}
	}
	if _efa.DefJc != nil {
		if _ebgb := _efa.DefJc.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u004a\u0063"); _ebgb != nil {
			return _ebgb
		}
	}
	if _efa.PreSp != nil {
		if _fdec := _efa.PreSp.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0053\u0070"); _fdec != nil {
			return _fdec
		}
	}
	if _efa.PostSp != nil {
		if _ebca := _efa.PostSp.ValidateWithPath(path + "\u002fP\u006f\u0073\u0074\u0053\u0070"); _ebca != nil {
			return _ebca
		}
	}
	if _efa.InterSp != nil {
		if _fedf := _efa.InterSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0065\u0072\u0053\u0070"); _fedf != nil {
			return _fedf
		}
	}
	if _efa.IntraSp != nil {
		if _bcag := _efa.IntraSp.ValidateWithPath(path + "\u002f\u0049\u006e\u0074\u0072\u0061\u0053\u0070"); _bcag != nil {
			return _bcag
		}
	}
	if _efa.MathPrChoice != nil {
		if _agaa := _efa.MathPrChoice.ValidateWithPath(path + "\u002f\u004d\u0061\u0074\u0068\u0050\u0072\u0043\u0068\u006f\u0069\u0063\u0065"); _agaa != nil {
			return _agaa
		}
	}
	if _efa.IntLim != nil {
		if _bgbd := _efa.IntLim.ValidateWithPath(path + "\u002fI\u006e\u0074\u004c\u0069\u006d"); _bgbd != nil {
			return _bgbd
		}
	}
	if _efa.NaryLim != nil {
		if _bdga := _efa.NaryLim.ValidateWithPath(path + "\u002f\u004e\u0061\u0072\u0079\u004c\u0069\u006d"); _bdga != nil {
			return _bdga
		}
	}
	return nil
}
func (_bgdf ST_LimLoc) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fefd := _e.Attr{}
	_fefd.Name = name
	switch _bgdf {
	case ST_LimLocUnset:
		_fefd.Value = ""
	case ST_LimLocUndOvr:
		_fefd.Value = "\u0075\u006e\u0064\u004f\u0076\u0072"
	case ST_LimLocSubSup:
		_fefd.Value = "\u0073\u0075\u0062\u0053\u0075\u0070"
	}
	return _fefd, nil
}

// Validate validates the CT_MC and its children
func (_cab *CT_MC) Validate() error { return _cab.ValidateWithPath("\u0043\u0054\u005fM\u0043") }
func (_dbe *CT_FPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dbe.Type != nil {
		_bbbf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0074\u0079\u0070\u0065"}}
		e.EncodeElement(_dbe.Type, _bbbf)
	}
	if _dbe.CtrlPr != nil {
		_gag := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_dbe.CtrlPr, _gag)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_OMathMathElementsChoice and its children
func (_efdg *EG_OMathMathElementsChoice) Validate() error {
	return _efdg.ValidateWithPath("\u0045\u0047\u005f\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0043\u0068o\u0069\u0063\u0065")
}
func (_edgd *CT_PhantPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _edgd.Show != nil {
		_dafe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073\u0068\u006f\u0077"}}
		e.EncodeElement(_edgd.Show, _dafe)
	}
	if _edgd.ZeroWid != nil {
		_bda := _e.StartElement{Name: _e.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0057\u0069d"}}
		e.EncodeElement(_edgd.ZeroWid, _bda)
	}
	if _edgd.ZeroAsc != nil {
		_cdde := _e.StartElement{Name: _e.Name{Local: "\u006d:\u007a\u0065\u0072\u006f\u0041\u0073c"}}
		e.EncodeElement(_edgd.ZeroAsc, _cdde)
	}
	if _edgd.ZeroDesc != nil {
		_cdag := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u007a\u0065\u0072\u006f\u0044\u0065\u0073\u0063"}}
		e.EncodeElement(_edgd.ZeroDesc, _cdag)
	}
	if _edgd.Transp != nil {
		_dgfe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0074\u0072\u0061\u006e\u0073\u0070"}}
		e.EncodeElement(_edgd.Transp, _dgfe)
	}
	if _edgd.CtrlPr != nil {
		_gged := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_edgd.CtrlPr, _gged)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func NewOMath() *OMath { _begaf := &OMath{}; _begaf.CT_OMath = *NewCT_OMath(); return _begaf }
func NewCT_OMathParaPr() *CT_OMathParaPr {
	_feef := &CT_OMathParaPr{}
	return _feef
}
func (_acdd *CT_SSubPr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _acdd.CtrlPr != nil {
		_ffaf := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_acdd.CtrlPr, _ffaf)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

type CT_Func struct {

	// Function Properties
	FuncPr *CT_FuncPr

	// Function Name
	FName *CT_OMathArg

	// Element (Argument)
	E *CT_OMathArg
}
type CT_OMathArg struct {

	// Argument Properties
	ArgPr            *CT_OMathArgPr
	EG_OMathElements []*EG_OMathElements
	CtrlPr           *CT_CtrlPr
}

// Validate validates the CT_R and its children
func (_baa *CT_R) Validate() error { return _baa.ValidateWithPath("\u0043\u0054\u005f\u0052") }

// Validate validates the CT_String and its children
func (_edbg *CT_String) Validate() error {
	return _edbg.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}
func (_babgb *CT_SSup) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_babgb.E = NewCT_OMathArg()
	_babgb.Sup = NewCT_OMathArg()
_dfgd:
	for {
		_bfade, _gbfba := d.Token()
		if _gbfba != nil {
			return _gbfba
		}
		switch _bbdg := _bfade.(type) {
		case _e.StartElement:
			switch _bbdg.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0053\u0075\u0070\u0050\u0072"}:
				_babgb.SSupPr = NewCT_SSupPr()
				if _bced := d.DecodeElement(_babgb.SSupPr, &_bbdg); _bced != nil {
					return _bced
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0065"}:
				if _dfgdc := d.DecodeElement(_babgb.E, &_bbdg); _dfgdc != nil {
					return _dfgdc
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073\u0075\u0070"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073\u0075\u0070"}:
				if _eccb := d.DecodeElement(_babgb.Sup, &_bbdg); _eccb != nil {
					return _eccb
				}
			default:
				_ef.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0053\u0075\u0070\u0020\u0025\u0076", _bbdg.Name)
				if _adfdb := d.Skip(); _adfdb != nil {
					return _adfdb
				}
			}
		case _e.EndElement:
			break _dfgd
		case _e.CharData:
		}
	}
	return nil
}
func NewCT_Char() *CT_Char { _acdg := &CT_Char{}; return _acdg }
func NewCT_GroupChr() *CT_GroupChr {
	_dcde := &CT_GroupChr{}
	_dcde.E = NewCT_OMathArg()
	return _dcde
}

type CT_SSub struct {

	// Subscript Properties
	SSubPr *CT_SSubPr

	// Base
	E *CT_OMathArg

	// Subscript (Subscript function)
	Sub *CT_OMathArg
}

// ValidateWithPath validates the CT_Shp and its children, prefixing error messages with path
func (_beab *CT_Shp) ValidateWithPath(path string) error {
	if _beab.ValAttr == ST_ShpUnset {
		return _ga.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbcf := _beab.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbcf != nil {
		return _cbcf
	}
	return nil
}
func (_fae *CT_NaryPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_cgfbb:
	for {
		_ffecg, _bacg := d.Token()
		if _bacg != nil {
			return _bacg
		}
		switch _aegd := _ffecg.(type) {
		case _e.StartElement:
			switch _aegd.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0068\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0068\u0072"}:
				_fae.Chr = NewCT_Char()
				if _bbab := d.DecodeElement(_fae.Chr, &_aegd); _bbab != nil {
					return _bbab
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006c\u0069\u006d\u004c\u006f\u0063"}:
				_fae.LimLoc = NewCT_LimLoc()
				if _eeff := d.DecodeElement(_fae.LimLoc, &_aegd); _eeff != nil {
					return _eeff
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0067\u0072\u006f\u0077"}:
				_fae.Grow = NewCT_OnOff()
				if _cbcb := d.DecodeElement(_fae.Grow, &_aegd); _cbcb != nil {
					return _cbcb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0062\u0048\u0069\u0064\u0065"}:
				_fae.SubHide = NewCT_OnOff()
				if _bgdg := d.DecodeElement(_fae.SubHide, &_aegd); _bgdg != nil {
					return _bgdg
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0073u\u0070\u0048\u0069\u0064\u0065"}:
				_fae.SupHide = NewCT_OnOff()
				if _fgdge := d.DecodeElement(_fae.SupHide, &_aegd); _fgdge != nil {
					return _fgdge
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fae.CtrlPr = NewCT_CtrlPr()
				if _dggd := d.DecodeElement(_fae.CtrlPr, &_aegd); _dggd != nil {
					return _dggd
				}
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0061\u0072y\u0050\u0072 \u0025\u0076", _aegd.Name)
				if _cfaa := d.Skip(); _cfaa != nil {
					return _cfaa
				}
			}
		case _e.EndElement:
			break _cgfbb
		case _e.CharData:
		}
	}
	return nil
}
func (_ebega ST_BreakBin) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_befab := _e.Attr{}
	_befab.Name = name
	switch _ebega {
	case ST_BreakBinUnset:
		_befab.Value = ""
	case ST_BreakBinBefore:
		_befab.Value = "\u0062\u0065\u0066\u006f\u0072\u0065"
	case ST_BreakBinAfter:
		_befab.Value = "\u0061\u0066\u0074e\u0072"
	case ST_BreakBinRepeat:
		_befab.Value = "\u0072\u0065\u0070\u0065\u0061\u0074"
	}
	return _befab, nil
}

type CT_SSubPr struct {
	CtrlPr *CT_CtrlPr
}

// Validate validates the CT_SSubSup and its children
func (_aacfe *CT_SSubSup) Validate() error {
	return _aacfe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070")
}

// ValidateWithPath validates the CT_SpacingRule and its children, prefixing error messages with path
func (_ccgc *CT_SpacingRule) ValidateWithPath(path string) error {
	if _ccgc.ValAttr < 0 {
		return _ga.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ccgc.ValAttr)
	}
	if _ccgc.ValAttr > 4 {
		return _ga.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0034\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ccgc.ValAttr)
	}
	return nil
}
func (_accfa ST_Script) ValidateWithPath(path string) error {
	switch _accfa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _ga.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_accfa))
	}
	return nil
}
func (_eggcb ST_TopBot) Validate() error { return _eggcb.ValidateWithPath("") }
func (_fbdfc ST_Shp) String() string {
	switch _fbdfc {
	case 0:
		return ""
	case 1:
		return "\u0063\u0065\u006e\u0074\u0065\u0072\u0065\u0064"
	case 2:
		return "\u006d\u0061\u0074c\u0068"
	}
	return ""
}

// ValidateWithPath validates the CT_BorderBoxPr and its children, prefixing error messages with path
func (_ce *CT_BorderBoxPr) ValidateWithPath(path string) error {
	if _ce.HideTop != nil {
		if _bac := _ce.HideTop.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0054\u006f\u0070"); _bac != nil {
			return _bac
		}
	}
	if _ce.HideBot != nil {
		if _acd := _ce.HideBot.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0042\u006f\u0074"); _acd != nil {
			return _acd
		}
	}
	if _ce.HideLeft != nil {
		if _ccdg := _ce.HideLeft.ValidateWithPath(path + "\u002fH\u0069\u0064\u0065\u004c\u0065\u0066t"); _ccdg != nil {
			return _ccdg
		}
	}
	if _ce.HideRight != nil {
		if _dbc := _ce.HideRight.ValidateWithPath(path + "\u002f\u0048\u0069\u0064\u0065\u0052\u0069\u0067\u0068\u0074"); _dbc != nil {
			return _dbc
		}
	}
	if _ce.StrikeH != nil {
		if _dab := _ce.StrikeH.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0048"); _dab != nil {
			return _dab
		}
	}
	if _ce.StrikeV != nil {
		if _eabd := _ce.StrikeV.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u0056"); _eabd != nil {
			return _eabd
		}
	}
	if _ce.StrikeBLTR != nil {
		if _bcf := _ce.StrikeBLTR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0042\u004c\u0054\u0052"); _bcf != nil {
			return _bcf
		}
	}
	if _ce.StrikeTLBR != nil {
		if _gaf := _ce.StrikeTLBR.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0054\u004c\u0042\u0052"); _gaf != nil {
			return _gaf
		}
	}
	if _ce.CtrlPr != nil {
		if _bbbg := _ce.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _bbbg != nil {
			return _bbbg
		}
	}
	return nil
}

type CT_MCS struct {

	// Matrix Column
	Mc []*CT_MC
}

func (_eaca *OMathPara) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	_eaca.CT_OMathPara = *NewCT_OMathPara()
_efcf:
	for {
		_ebdf, _ceca := d.Token()
		if _ceca != nil {
			return _ceca
		}
		switch _dfadf := _ebdf.(type) {
		case _e.StartElement:
			switch _dfadf.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "o\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061\u0050\u0072"}:
				_eaca.OMathParaPr = NewCT_OMathParaPr()
				if _cfgb := d.DecodeElement(_eaca.OMathParaPr, &_dfadf); _cfgb != nil {
					return _cfgb
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u006f\u004d\u0061t\u0068"}:
				_cddee := NewCT_OMath()
				if _bfef := d.DecodeElement(_cddee, &_dfadf); _bfef != nil {
					return _bfef
				}
				_eaca.OMath = append(_eaca.OMath, _cddee)
			default:
				_ef.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061 \u0025\u0076", _dfadf.Name)
				if _bcbf := d.Skip(); _bcbf != nil {
					return _bcbf
				}
			}
		case _e.EndElement:
			break _efcf
		case _e.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EqArrPr and its children, prefixing error messages with path
func (_dbcf *CT_EqArrPr) ValidateWithPath(path string) error {
	if _dbcf.BaseJc != nil {
		if _bcee := _dbcf.BaseJc.ValidateWithPath(path + "\u002fB\u0061\u0073\u0065\u004a\u0063"); _bcee != nil {
			return _bcee
		}
	}
	if _dbcf.MaxDist != nil {
		if _bgg := _dbcf.MaxDist.ValidateWithPath(path + "\u002f\u004d\u0061\u0078\u0044\u0069\u0073\u0074"); _bgg != nil {
			return _bgg
		}
	}
	if _dbcf.ObjDist != nil {
		if _fgac := _dbcf.ObjDist.ValidateWithPath(path + "\u002f\u004f\u0062\u006a\u0044\u0069\u0073\u0074"); _fgac != nil {
			return _fgac
		}
	}
	if _dbcf.RSpRule != nil {
		if _fgec := _dbcf.RSpRule.ValidateWithPath(path + "\u002f\u0052\u0053\u0070\u0052\u0075\u006c\u0065"); _fgec != nil {
			return _fgec
		}
	}
	if _dbcf.RSp != nil {
		if _eede := _dbcf.RSp.ValidateWithPath(path + "\u002f\u0052\u0053\u0070"); _eede != nil {
			return _eede
		}
	}
	if _dbcf.CtrlPr != nil {
		if _aage := _dbcf.CtrlPr.ValidateWithPath(path + "\u002fC\u0074\u0072\u006c\u0050\u0072"); _aage != nil {
			return _aage
		}
	}
	return nil
}

type CT_BorderBoxPr struct {

	// Hide Top Edge
	HideTop *CT_OnOff

	// Hide Bottom Edge
	HideBot *CT_OnOff

	// Hide Left Edge
	HideLeft *CT_OnOff

	// Hide Right Edge
	HideRight *CT_OnOff

	// Border Box Strikethrough Horizontal
	StrikeH *CT_OnOff

	// Border Box Strikethrough Vertical
	StrikeV *CT_OnOff

	// Border Box Strikethrough Bottom-Left to Top-Right
	StrikeBLTR *CT_OnOff

	// Border Box Strikethrough Top-Left to Bottom-Right
	StrikeTLBR *CT_OnOff
	CtrlPr     *CT_CtrlPr
}

func (_edc *CT_MathPrChoice) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _edc.WrapIndent != nil {
		_cfe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0077r\u0061\u0070\u0049\u006e\u0064\u0065\u006e\u0074"}}
		e.EncodeElement(_edc.WrapIndent, _cfe)
	} else if _edc.WrapRight != nil {
		_ccc := _e.StartElement{Name: _e.Name{Local: "m\u003a\u0077\u0072\u0061\u0070\u0052\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_edc.WrapRight, _ccc)
	}
	return nil
}

type CT_LimLoc struct {

	// Value
	ValAttr ST_LimLoc
}

func (_adaga ST_Jc) MarshalXMLAttr(name _e.Name) (_e.Attr, error) {
	_fdbc := _e.Attr{}
	_fdbc.Name = name
	switch _adaga {
	case ST_JcUnset:
		_fdbc.Value = ""
	case ST_JcLeft:
		_fdbc.Value = "\u006c\u0065\u0066\u0074"
	case ST_JcRight:
		_fdbc.Value = "\u0072\u0069\u0067h\u0074"
	case ST_JcCenter:
		_fdbc.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_JcCenterGroup:
		_fdbc.Value = "c\u0065\u006e\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	}
	return _fdbc, nil
}

// Validate validates the CT_UnSignedInteger and its children
func (_gdac *CT_UnSignedInteger) Validate() error {
	return _gdac.ValidateWithPath("\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072")
}

type ST_Shp byte

// Validate validates the CT_BoxPr and its children
func (_fba *CT_BoxPr) Validate() error {
	return _fba.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072")
}

type CT_EqArr struct {

	// Array Properties
	EqArrPr *CT_EqArrPr

	// Element
	E []*CT_OMathArg
}

// Validate validates the CT_Integer2 and its children
func (_fdef *CT_Integer2) Validate() error {
	return _fdef.ValidateWithPath("C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032")
}
func NewCT_Integer255() *CT_Integer255 { _gfgf := &CT_Integer255{}; _gfgf.ValAttr = 1; return _gfgf }

type EG_OMathMathElements struct {
	OMathMathElementsChoice *EG_OMathMathElementsChoice
}
type CT_SSubSup struct {

	// Sub-Superscript Properties
	SSubSupPr *CT_SSubSupPr

	// Base
	E *CT_OMathArg

	// Subscript (Sub-Superscript)
	Sub *CT_OMathArg

	// Superscript (Sub-Superscript function)
	Sup *CT_OMathArg
}
type CT_Acc struct {

	// Accent Properties
	AccPr *CT_AccPr

	// Base
	E *CT_OMathArg
}

// ValidateWithPath validates the CT_TwipsMeasure and its children, prefixing error messages with path
func (_bfgb *CT_TwipsMeasure) ValidateWithPath(path string) error {
	if _fadec := _bfgb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fadec != nil {
		return _fadec
	}
	return nil
}
func NewCT_SpacingRule() *CT_SpacingRule {
	_abfa := &CT_SpacingRule{}
	_abfa.ValAttr = 0
	return _abfa
}

// ValidateWithPath validates the CT_GroupChr and its children, prefixing error messages with path
func (_bbdb *CT_GroupChr) ValidateWithPath(path string) error {
	if _bbdb.GroupChrPr != nil {
		if _dffe := _bbdb.GroupChrPr.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072"); _dffe != nil {
			return _dffe
		}
	}
	if _cdba := _bbdb.E.ValidateWithPath(path + "\u002f\u0045"); _cdba != nil {
		return _cdba
	}
	return nil
}

type CT_MR struct {

	// Element
	E []*CT_OMathArg
}

// Validate validates the CT_GroupChrPr and its children
func (_fbga *CT_GroupChrPr) Validate() error {
	return _fbga.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072")
}
func (_cdac *CT_EqArr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _cdac.EqArrPr != nil {
		_dad := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0065\u0071\u0041\u0072\u0072\u0050r"}}
		e.EncodeElement(_cdac.EqArrPr, _dad)
	}
	_befb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	for _, _acfa := range _cdac.E {
		e.EncodeElement(_acfa, _befb)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OMathPara and its children
func (_gaeg *CT_OMathPara) Validate() error {
	return _gaeg.ValidateWithPath("\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061")
}
func (_fcec *CT_SSubSupPr) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
_gagb:
	for {
		_ddgbd, _cgfbd := d.Token()
		if _cgfbd != nil {
			return _cgfbd
		}
		switch _cag := _ddgbd.(type) {
		case _e.StartElement:
			switch _cag.Name {
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0061\u006c\u006e\u0053\u0063\u0072"}:
				_fcec.AlnScr = NewCT_OnOff()
				if _gac := d.DecodeElement(_fcec.AlnScr, &_cag); _gac != nil {
					return _gac
				}
			case _e.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}, _e.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u006d\u0061\u0074\u0068", Local: "\u0063\u0074\u0072\u006c\u0050\u0072"}:
				_fcec.CtrlPr = NewCT_CtrlPr()
				if _cfgg := d.DecodeElement(_fcec.CtrlPr, &_cag); _cfgg != nil {
					return _cfgg
				}
			default:
				_ef.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0053\u0075b\u0053\u0075\u0070\u0050\u0072\u0020\u0025\u0076", _cag.Name)
				if _ddda := d.Skip(); _ddda != nil {
					return _ddda
				}
			}
		case _e.EndElement:
			break _gagb
		case _e.CharData:
		}
	}
	return nil
}
func (_efaa *CT_SPrePr) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _efaa.CtrlPr != nil {
		_affe := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0063\u0074\u0072\u006c\u0050\u0072"}}
		e.EncodeElement(_efaa.CtrlPr, _affe)
	}
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_agb *CT_BreakBin) UnmarshalXML(d *_e.Decoder, start _e.StartElement) error {
	for _, _aca := range start.Attr {
		if _aca.Name.Local == "\u0076\u0061\u006c" {
			_agb.ValAttr.UnmarshalXMLAttr(_aca)
			continue
		}
	}
	for {
		_gbbd, _fcf := d.Token()
		if _fcf != nil {
			return _ga.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e\u003a\u0020\u0025\u0073", _fcf)
		}
		if _dgc, _dgbf := _gbbd.(_e.EndElement); _dgbf && _dgc.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EqArr and its children, prefixing error messages with path
func (_aeab *CT_EqArr) ValidateWithPath(path string) error {
	if _aeab.EqArrPr != nil {
		if _cbddd := _aeab.EqArrPr.ValidateWithPath(path + "\u002f\u0045\u0071\u0041\u0072\u0072\u0050\u0072"); _cbddd != nil {
			return _cbddd
		}
	}
	for _ecg, _ebed := range _aeab.E {
		if _badb := _ebed.ValidateWithPath(_ga.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _ecg)); _badb != nil {
			return _badb
		}
	}
	return nil
}

type EG_OMathElements struct{ OMathElementsChoice *EG_OMathElementsChoice }

func (_egca ST_LimLoc) Validate() error { return _egca.ValidateWithPath("") }
func (_fffe *CT_Style) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	if _fffe.ValAttr != ST_StyleUnset {
		_fbgebc, _faec := _fffe.ValAttr.MarshalXMLAttr(_e.Name{Local: "\u006d\u003a\u0076a\u006c"})
		if _faec != nil {
			return _faec
		}
		start.Attr = append(start.Attr, _fbgebc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func (_babdd *EG_ScriptStyle) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	start.Name.Local = "\u006d\u003aE\u0047\u005f\u0053c\u0072\u0069\u0070\u0074\u0053\u0074\u0079\u006c\u0065"
	if _babdd.Scr != nil {
		_fgag := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073c\u0072"}}
		e.EncodeElement(_babdd.Scr, _fgag)
	}
	if _babdd.Sty != nil {
		_bdbb := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0073t\u0079"}}
		e.EncodeElement(_babdd.Sty, _bdbb)
	}
	return nil
}
func (_dabb *CT_Box) MarshalXML(e *_e.Encoder, start _e.StartElement) error {
	e.EncodeToken(start)
	if _dabb.BoxPr != nil {
		_de := _e.StartElement{Name: _e.Name{Local: "\u006d:\u0062\u006f\u0078\u0050\u0072"}}
		e.EncodeElement(_dabb.BoxPr, _de)
	}
	_cg := _e.StartElement{Name: _e.Name{Local: "\u006d\u003a\u0065"}}
	e.EncodeElement(_dabb.E, _cg)
	e.EncodeToken(_e.EndElement{Name: start.Name})
	return nil
}
func init() {
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032\u0035\u0035", NewCT_Integer255)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0049\u006e\u0074\u0065\u0067\u0065\u0072\u0032", NewCT_Integer2)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0070\u0061\u0063\u0069\u006eg\u0052\u0075\u006c\u0065", NewCT_SpacingRule)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fU\u006e\u0053\u0069\u0067\u006ee\u0064\u0049n\u0074\u0065\u0067\u0065\u0072", NewCT_UnSignedInteger)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0068\u0061\u0072", NewCT_Char)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066", NewCT_OnOff)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0058\u0041\u006c\u0069\u0067n", NewCT_XAlign)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0059\u0041\u006c\u0069\u0067n", NewCT_YAlign)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0068\u0070", NewCT_Shp)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0054\u0079\u0070\u0065", NewCT_FType)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fc", NewCT_LimLoc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u006f\u0070\u0042\u006ft", NewCT_TopBot)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0063\u0072\u0069\u0070t", NewCT_Script)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065", NewCT_Style)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0061\u006e\u0075\u0061\u006cB\u0072\u0065\u0061\u006b", NewCT_ManualBreak)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0050\u0052", NewCT_RPR)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0054\u0065\u0078\u0074", NewCT_Text)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052", NewCT_R)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0043\u0074\u0072\u006c\u0050r", NewCT_CtrlPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063\u0050\u0072", NewCT_AccPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0041\u0063\u0063", NewCT_Acc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072\u0050\u0072", NewCT_BarPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0061\u0072", NewCT_Bar)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078\u0050\u0072", NewCT_BoxPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0078", NewCT_Box)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072B\u006f\u0078\u0050\u0072", NewCT_BorderBoxPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0042\u006f\u0078", NewCT_BorderBox)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044\u0050\u0072", NewCT_DPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0044", NewCT_D)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072\u0050\u0072", NewCT_EqArrPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0045\u0071\u0041\u0072\u0072", NewCT_EqArr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046\u0050\u0072", NewCT_FPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0046", NewCT_F)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063\u0050r", NewCT_FuncPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0046\u0075\u006e\u0063", NewCT_Func)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072\u0050\u0072", NewCT_GroupChrPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u0072", NewCT_GroupChr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u004c\u006f\u0077\u0050\u0072", NewCT_LimLowPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u004c\u006fw", NewCT_LimLow)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004c\u0069\u006d\u0055\u0070\u0070\u0050\u0072", NewCT_LimUppPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004c\u0069\u006d\u0055\u0070p", NewCT_LimUpp)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0043\u0050\u0072", NewCT_MCPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0043", NewCT_MC)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0043\u0053", NewCT_MCS)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d\u0050\u0072", NewCT_MPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fM\u0052", NewCT_MR)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004d", NewCT_M)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079\u0050r", NewCT_NaryPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004e\u0061\u0072\u0079", NewCT_Nary)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074\u0050\u0072", NewCT_PhantPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0050\u0068\u0061\u006e\u0074", NewCT_Phant)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064\u0050\u0072", NewCT_RadPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0052\u0061\u0064", NewCT_Rad)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065\u0050r", NewCT_SPrePr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0050\u0072\u0065", NewCT_SPre)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062\u0050r", NewCT_SSubPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0062", NewCT_SSub)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fS\u0053\u0075\u0062\u0053\u0075\u0070\u0050\u0072", NewCT_SSubSupPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0053\u0053\u0075\u0062\u0053\u0075\u0070", NewCT_SSubSup)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070\u0050r", NewCT_SSupPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u0053\u0053\u0075\u0070", NewCT_SSup)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067\u0050\u0072", NewCT_OMathArgPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0041\u0072\u0067", NewCT_OMathArg)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u004a\u0063", NewCT_OMathJc)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068\u0050a\u0072\u0061\u0050\u0072", NewCT_OMathParaPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005fT\u0077\u0069\u0070\u0073\u004d\u0065\u0061\u0073\u0075\u0072\u0065", NewCT_TwipsMeasure)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "C\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042\u0069\u006e", NewCT_BreakBin)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b\u0042i\u006e\u0053\u0075\u0062", NewCT_BreakBinSub)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043T\u005f\u004d\u0061\u0074\u0068\u0050r", NewCT_MathPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005fO\u004d\u0061\u0074\u0068\u0050\u0061\u0072\u0061", NewCT_OMathPara)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0043\u0054\u005f\u004f\u004d\u0061\u0074\u0068", NewCT_OMath)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006d\u0061\u0074\u0068\u0050\u0072", NewMathPr)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006fM\u0061\u0074\u0068\u0050\u0061\u0072a", NewOMathPara)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u006f\u004d\u0061t\u0068", NewOMath)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047\u005f\u0053\u0063\u0072\u0069\u0070\u0074S\u0074\u0079\u006c\u0065", NewEG_ScriptStyle)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "E\u0047_\u004f\u004d\u0061\u0074\u0068\u004d\u0061\u0074h\u0045\u006c\u0065\u006den\u0074\u0073", NewEG_OMathMathElements)
	_a.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075m\u0065\u006e\u0074\u002f\u0032\u00300\u0036\u002f\u006da\u0074\u0068", "\u0045\u0047_\u004f\u004d\u0061t\u0068\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073", NewEG_OMathElements)
}
