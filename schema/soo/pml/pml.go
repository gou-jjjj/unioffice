//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pml

import (
	_b "encoding/xml"
	_c "fmt"
	_e "strconv"
	_ac "time"
	_f "unioffice"
	_ea "unioffice/common/logger"
	_d "unioffice/schema/soo/dml"
	_db "unioffice/schema/soo/ofc/sharedTypes"
)

func (_fbed *CT_SlideMasterTextStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fbed.TitleStyle != nil {
		_ffaeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fbed.TitleStyle, _ffaeg)
	}
	if _fbed.BodyStyle != nil {
		_ebeaf := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fbed.BodyStyle, _ebeaf)
	}
	if _fbed.OtherStyle != nil {
		_dfgag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fbed.OtherStyle, _dfgag)
	}
	if _fbed.ExtLst != nil {
		_defg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbed.ExtLst, _defg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ababgf ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _ababgf {
	case 0, 1:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ababgf))
	}
	return nil
}

type NotesMaster struct{ CT_NotesMaster }

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_fcc *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_aacdd *CmAuthorLst) ValidateWithPath(path string) error {
	if _dafc := _aacdd.CT_CommentAuthorList.ValidateWithPath(path); _dafc != nil {
		return _dafc
	}
	return nil
}

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_abg *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _feag := _abg.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _feag != nil {
		return _feag
	}
	if _bff := _abg.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _bff != nil {
		return _bff
	}
	return nil
}
func (_cfa *CT_Connector) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfa.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_cfa.SpPr = _d.NewCT_ShapeProperties()
_afb:
	for {
		_aec, _bcf := d.Token()
		if _bcf != nil {
			return _bcf
		}
		switch _bgea := _aec.(type) {
		case _b.StartElement:
			switch _bgea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _fbaf := d.DecodeElement(_cfa.NvCxnSpPr, &_bgea); _fbaf != nil {
					return _fbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _deeb := d.DecodeElement(_cfa.SpPr, &_bgea); _deeb != nil {
					return _deeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_cfa.Style = _d.NewCT_ShapeStyle()
				if _fcd := d.DecodeElement(_cfa.Style, &_bgea); _fcd != nil {
					return _fcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfa.ExtLst = NewCT_ExtensionListModify()
				if _egaf := d.DecodeElement(_cfa.ExtLst, &_bgea); _egaf != nil {
					return _egaf
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _bgea.Name)
				if _fbfd := d.Skip(); _fbfd != nil {
					return _fbfd
				}
			}
		case _b.EndElement:
			break _afb
		case _b.CharData:
		}
	}
	return nil
}
func (_abbaf *CT_TLCommonBehaviorData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abbaf.CTn = NewCT_TLCommonTimeNodeData()
	_abbaf.TgtEl = NewCT_TLTimeTargetElement()
	for _, _deebgb := range start.Attr {
		if _deebgb.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_abbaf.AdditiveAttr.UnmarshalXMLAttr(_deebgb)
			continue
		}
		if _deebgb.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_abbaf.AccumulateAttr.UnmarshalXMLAttr(_deebgb)
			continue
		}
		if _deebgb.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_abbaf.XfrmTypeAttr.UnmarshalXMLAttr(_deebgb)
			continue
		}
		if _deebgb.Name.Local == "\u0066\u0072\u006f\u006d" {
			_cbdad := _deebgb.Value
			_abbaf.FromAttr = &_cbdad
			continue
		}
		if _deebgb.Name.Local == "\u0074\u006f" {
			_gbdd := _deebgb.Value
			_abbaf.ToAttr = &_gbdd
			continue
		}
		if _deebgb.Name.Local == "\u0062\u0079" {
			_gacdc := _deebgb.Value
			_abbaf.ByAttr = &_gacdc
			continue
		}
		if _deebgb.Name.Local == "\u0072\u0063\u0074\u0078" {
			_eddeb := _deebgb.Value
			_abbaf.RctxAttr = &_eddeb
			continue
		}
		if _deebgb.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_abbaf.OverrideAttr.UnmarshalXMLAttr(_deebgb)
			continue
		}
	}
_agfae:
	for {
		_aadd, _cgecc := d.Token()
		if _cgecc != nil {
			return _cgecc
		}
		switch _bgfb := _aadd.(type) {
		case _b.StartElement:
			switch _bgfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _cfbe := d.DecodeElement(_abbaf.CTn, &_bgfb); _cfbe != nil {
					return _cfbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _bfbad := d.DecodeElement(_abbaf.TgtEl, &_bgfb); _bfbad != nil {
					return _bfbad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_abbaf.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _ecdea := d.DecodeElement(_abbaf.AttrNameLst, &_bgfb); _ecdea != nil {
					return _ecdea
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _bgfb.Name)
				if _fbcd := d.Skip(); _fbcd != nil {
					return _fbcd
				}
			}
		case _b.EndElement:
			break _agfae
		case _b.CharData:
		}
	}
	return nil
}
func (_dgbfa *CT_PresentationProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dgbfa.HtmlPubPr != nil {
		_cefe := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_dgbfa.HtmlPubPr, _cefe)
	}
	if _dgbfa.WebPr != nil {
		_bfbcd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_dgbfa.WebPr, _bfbcd)
	}
	if _dgbfa.PrnPr != nil {
		_ccbc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_dgbfa.PrnPr, _ccbc)
	}
	if _dgbfa.ShowPr != nil {
		_dddd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_dgbfa.ShowPr, _dddd)
	}
	if _dgbfa.ClrMru != nil {
		_ggfbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_dgbfa.ClrMru, _ggfbg)
	}
	if _dgbfa.ExtLst != nil {
		_faaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgbfa.ExtLst, _faaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeIndefinite byte

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_d.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_ebda *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _fbbg := _ebda.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fbbg != nil {
		return _fbbg
	}
	if _aeaba := _ebda.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _aeaba != nil {
		return _aeaba
	}
	if _eecc := _ebda.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _eecc != nil {
		return _eecc
	}
	return nil
}
func (_ebgcd *CT_TLTimeTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebgcd.TLTimeTargetElementChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bebc *CT_OleObjectLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbgd := range start.Attr {
		if _cbgd.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_fcba, _cgff := _e.ParseBool(_cbgd.Value)
			if _cgff != nil {
				return _cgff
			}
			_bebc.UpdateAutomaticAttr = &_fcba
			continue
		}
	}
_gcag:
	for {
		_daaa, _bgac := d.Token()
		if _bgac != nil {
			return _bgac
		}
		switch _eea := _daaa.(type) {
		case _b.StartElement:
			switch _eea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bebc.ExtLst = NewCT_ExtensionList()
				if _accf := d.DecodeElement(_bebc.ExtLst, &_eea); _accf != nil {
					return _accf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _eea.Name)
				if _dadc := d.Skip(); _dadc != nil {
					return _dadc
				}
			}
		case _b.EndElement:
			break _gcag
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_fgfd := &CT_NormalViewProperties{}
	_fgfd.RestoredLeft = NewCT_NormalViewPortion()
	_fgfd.RestoredTop = NewCT_NormalViewPortion()
	return _fgfd
}

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_acfdc *CT_SlideTiming) ValidateWithPath(path string) error {
	if _acfdc.TnLst != nil {
		if _gcafd := _acfdc.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _gcafd != nil {
			return _gcafd
		}
	}
	if _acfdc.BldLst != nil {
		if _eaee := _acfdc.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _eaee != nil {
			return _eaee
		}
	}
	if _acfdc.ExtLst != nil {
		if _bgfac := _acfdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgfac != nil {
			return _bgfac
		}
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter {
	_agag := &CT_HeaderFooter{}
	return _agag
}

// Validate validates the CT_EmbeddedFontList and its children
func (_gfbf *CT_EmbeddedFontList) Validate() error {
	return _gfbf.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_gbgga *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_daegf := &CT_SlideTransitionChoice{}
	return _daegf
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_ccea *CT_Control) ValidateWithPath(path string) error {
	if _ccea.ExtLst != nil {
		if _fbfg := _ccea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbfg != nil {
			return _fbfg
		}
	}
	if _ccea.Pic != nil {
		if _acga := _ccea.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _acga != nil {
			return _acga
		}
	}
	if _ccea.ImgWAttr != nil {
		if *_ccea.ImgWAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ccea.ImgWAttr)
		}
	}
	if _ccea.ImgHAttr != nil {
		if *_ccea.ImgHAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ccea.ImgHAttr)
		}
	}
	return nil
}
func (_fbgf ST_PlaceholderType) Validate() error { return _fbgf.ValidateWithPath("") }

type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

// Validate validates the CT_CustomShowId and its children
func (_afab *CT_CustomShowId) Validate() error {
	return _afab.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}
func (_bdeg *CT_Picture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdeg.NvPicPr = NewCT_PictureNonVisual()
	_bdeg.BlipFill = _d.NewCT_BlipFillProperties()
	_bdeg.SpPr = _d.NewCT_ShapeProperties()
_fddcc:
	for {
		_cbeec, _gggf := d.Token()
		if _gggf != nil {
			return _gggf
		}
		switch _ggec := _cbeec.(type) {
		case _b.StartElement:
			switch _ggec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _befcf := d.DecodeElement(_bdeg.NvPicPr, &_ggec); _befcf != nil {
					return _befcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _cfea := d.DecodeElement(_bdeg.BlipFill, &_ggec); _cfea != nil {
					return _cfea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _efge := d.DecodeElement(_bdeg.SpPr, &_ggec); _efge != nil {
					return _efge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_bdeg.Style = _d.NewCT_ShapeStyle()
				if _dfgc := d.DecodeElement(_bdeg.Style, &_ggec); _dfgc != nil {
					return _dfgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdeg.ExtLst = NewCT_ExtensionListModify()
				if _gafcd := d.DecodeElement(_bdeg.ExtLst, &_ggec); _gafcd != nil {
					return _gafcd
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _ggec.Name)
				if _agfg := d.Skip(); _agfg != nil {
					return _agfg
				}
			}
		case _b.EndElement:
			break _fddcc
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_ggdfa *CT_Placeholder) ValidateWithPath(path string) error {
	if _efdd := _ggdfa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _efdd != nil {
		return _efdd
	}
	if _fbfee := _ggdfa.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _fbfee != nil {
		return _fbfee
	}
	if _bdaa := _ggdfa.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _bdaa != nil {
		return _bdaa
	}
	if _ggdfa.ExtLst != nil {
		if _gdee := _ggdfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdee != nil {
			return _gdee
		}
	}
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_dgbe *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }
func (_bcd *CT_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bcd.Ext != nil {
		_dgfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _eecgg := range _bcd.Ext {
			e.EncodeElement(_eecgg, _dgfa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_cabb *CT_Rel) ValidateWithPath(path string) error { return nil }
func (_egd *CT_CommonViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egd.Scale = _d.NewCT_Scale2D()
	_egd.Origin = _d.NewCT_Point2D()
	for _, _bbg := range start.Attr {
		if _bbg.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_cad, _ecdc := _e.ParseBool(_bbg.Value)
			if _ecdc != nil {
				return _ecdc
			}
			_egd.VarScaleAttr = &_cad
			continue
		}
	}
_edb:
	for {
		_fddc, _geg := d.Token()
		if _geg != nil {
			return _geg
		}
		switch _adc := _fddc.(type) {
		case _b.StartElement:
			switch _adc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _bcc := d.DecodeElement(_egd.Scale, &_adc); _bcc != nil {
					return _bcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _cfe := d.DecodeElement(_egd.Origin, &_adc); _cfe != nil {
					return _cfe
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _adc.Name)
				if _fddd := d.Skip(); _fddd != nil {
					return _fddd
				}
			}
		case _b.EndElement:
			break _edb
		case _b.CharData:
		}
	}
	return nil
}
func (_gbab ST_TLAnimateColorDirection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbab.String(), start)
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_ffdfb *CT_TLTemplate) ValidateWithPath(path string) error {
	if _eaebd := _ffdfb.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _eaebd != nil {
		return _eaebd
	}
	return nil
}
func NewSldLayout() *SldLayout {
	_ffbge := &SldLayout{}
	_ffbge.CT_SlideLayout = *NewCT_SlideLayout()
	return _ffbge
}
func (_dbddc ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _dbddc {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbddc))
	}
	return nil
}

// Validate validates the EG_SlideListChoice and its children
func (_faaac *EG_SlideListChoice) Validate() error {
	return _faaac.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func (_fafd *CT_TLMediaNodeVideo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fafd.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fafd.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_gedee := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_fafd.CMediaNode, _gedee)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLAnimVariant struct{ TLAnimVariantChoice *CT_TLAnimVariantChoice }

func (_egdef ST_TLDiagramBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cecg := _b.Attr{}
	_cecg.Name = name
	switch _egdef {
	case ST_TLDiagramBuildTypeUnset:
		_cecg.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_cecg.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_cecg.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_cecg.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_cecg.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_cecg.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_cecg.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_cecg.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_cecg.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_cecg.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_cecg.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_cecg.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_cecg.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_cecg.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_cecg.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_cecg.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_cecg.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_cecg.Value = "\u0063\u0075\u0073\u0074"
	}
	return _cecg, nil
}

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_edee *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _gffd := _edee.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _gffd != nil {
		return _gffd
	}
	if _defe := _edee.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _defe != nil {
		return _defe
	}
	if _fdbf := _edee.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fdbf != nil {
		return _fdbf
	}
	if _dcca := _edee.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _dcca != nil {
		return _dcca
	}
	if _edee.ExtLst != nil {
		if _fefa := _edee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fefa != nil {
			return _fefa
		}
	}
	return nil
}
func (_agcbfe *CT_TagList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_agaefd:
	for {
		_edbb, _fcfc := d.Token()
		if _fcfc != nil {
			return _fcfc
		}
		switch _ffag := _edbb.(type) {
		case _b.StartElement:
			switch _ffag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_cgacb := NewCT_StringTag()
				if _fcgbc := d.DecodeElement(_cgacb, &_ffag); _fcgbc != nil {
					return _fcgbc
				}
				_agcbfe.Tag = append(_agcbfe.Tag, _cgacb)
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ffag.Name)
				if _cbgdb := d.Skip(); _cbgdb != nil {
					return _cbgdb
				}
			}
		case _b.EndElement:
			break _agaefd
		case _b.CharData:
		}
	}
	return nil
}

type OleObj struct{ CT_OleObject }

// Validate validates the CT_SmartTags and its children
func (_gcea *CT_SmartTags) Validate() error {
	return _gcea.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}
func (_adcga *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cecb := range start.Attr {
		if _cecb.Name.Local == "\u0076\u0061\u006c" {
			_dffec, _cefcc := _e.ParseFloat(_cecb.Value, 64)
			if _cefcc != nil {
				return _cefcc
			}
			_adcga.ValAttr = float32(_dffec)
			continue
		}
	}
	for {
		_dffeg, _ccgbe := d.Token()
		if _ccgbe != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _ccgbe)
		}
		if _gfddg, _cecce := _dffeg.(_b.EndElement); _cecce && _gfddg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TransitionSpeed byte

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_bafcb *NotesMaster) ValidateWithPath(path string) error {
	if _bbaaf := _bafcb.CT_NotesMaster.ValidateWithPath(path); _bbaaf != nil {
		return _bbaaf
	}
	return nil
}

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _d.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

func (_cffb *CT_Rel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecba := range start.Attr {
		if _ecba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecba.Name.Local == "\u0069\u0064" || _ecba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ecba.Name.Local == "\u0069\u0064" {
			_ebgbf := _ecba.Value
			_cffb.IdAttr = _ebgbf
			continue
		}
	}
	for {
		_dgfe, _ggfe := d.Token()
		if _ggfe != nil {
			return _c.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _ggfe)
		}
		if _ffdf, _bfdf := _dgfe.(_b.EndElement); _bfdf && _ffdf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bedc *CT_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdbc:
	for {
		_dacc, _caacd := d.Token()
		if _caacd != nil {
			return _caacd
		}
		switch _fcfg := _dacc.(type) {
		case _b.StartElement:
			switch _fcfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_eeed := NewCT_Extension()
				if _fefe := d.DecodeElement(_eeed, &_fcfg); _fefe != nil {
					return _fefe
				}
				_bedc.Ext = append(_bedc.Ext, _eeed)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _fcfg.Name)
				if _fefb := d.Skip(); _fefb != nil {
					return _fefb
				}
			}
		case _b.EndElement:
			break _cdbc
		case _b.CharData:
		}
	}
	return nil
}

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

// Validate validates the CT_IndexRange and its children
func (_fdcb *CT_IndexRange) Validate() error {
	return _fdcb.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}
func (_acab *CT_HtmlPublishProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acab.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_acab.ShowSpeakerNotesAttr))})
	}
	if _acab.TargetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_acab.TargetAttr)})
	}
	if _acab.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_acab.TitleAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _acab.IdAttr)})
	e.EncodeToken(start)
	if _acab.SldAll != nil {
		_gdfgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_acab.SldAll, _gdfgb)
	}
	if _acab.SldRg != nil {
		_acdd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_acab.SldRg, _acdd)
	}
	if _acab.CustShow != nil {
		_bedfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_acab.CustShow, _bedfa)
	}
	if _acab.ExtLst != nil {
		_egbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acab.ExtLst, _egbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_egge *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _egge.DirAttr != nil {
		if _gbag := _egge.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _gbag != nil {
			return _gbag
		}
	}
	return nil
}

// Validate validates the CT_NotesSlide and its children
func (_bcgg *CT_NotesSlide) Validate() error {
	return _bcgg.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}
func (_ccgcf *EG_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccgcf.Ext != nil {
		_bdege := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _fdeabe := range _ccgcf.Ext {
			e.EncodeElement(_fdeabe, _bdege)
		}
	}
	return nil
}
func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_badfc := &CT_TLCommonBehaviorData{}
	_badfc.CTn = NewCT_TLCommonTimeNodeData()
	_badfc.TgtEl = NewCT_TLTimeTargetElement()
	return _badfc
}

// Validate validates the CT_CommonSlideViewProperties and its children
func (_dabd *CT_CommonSlideViewProperties) Validate() error {
	return _dabd.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

type ST_TLDiagramBuildType byte

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_gagc *CT_Comment) ValidateWithPath(path string) error {
	if _aag := _gagc.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _aag != nil {
		return _aag
	}
	if _gagc.ExtLst != nil {
		if _gde := _gagc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gde != nil {
			return _gde
		}
	}
	return nil
}
func (_cfcbe ST_TLOleChartBuildType) Validate() error { return _cfcbe.ValidateWithPath("") }
func (_bcgf *Notes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcgf.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _gcgac := range start.Attr {
		if _gcgac.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gcafdf, _bbeaf := _e.ParseBool(_gcgac.Value)
			if _bbeaf != nil {
				return _bbeaf
			}
			_bcgf.ShowMasterSpAttr = &_gcafdf
			continue
		}
		if _gcgac.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_dffee, _cedc := _e.ParseBool(_gcgac.Value)
			if _cedc != nil {
				return _cedc
			}
			_bcgf.ShowMasterPhAnimAttr = &_dffee
			continue
		}
	}
_cbdge:
	for {
		_eccfd, _aceeg := d.Token()
		if _aceeg != nil {
			return _aceeg
		}
		switch _fggfg := _eccfd.(type) {
		case _b.StartElement:
			switch _fggfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bbgdf := d.DecodeElement(_bcgf.CSld, &_fggfg); _bbgdf != nil {
					return _bbgdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_bcgf.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _ccbcg := d.DecodeElement(_bcgf.ClrMapOvr, &_fggfg); _ccbcg != nil {
					return _ccbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcgf.ExtLst = NewCT_ExtensionListModify()
				if _bgcea := d.DecodeElement(_bcgf.ExtLst, &_fggfg); _bgcea != nil {
					return _bgcea
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _fggfg.Name)
				if _edbee := d.Skip(); _edbee != nil {
					return _edbee
				}
			}
		case _b.EndElement:
			break _cbdge
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}

func (_badbf ST_WebColorType) String() string {
	switch _badbf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}
func NewCT_PresentationProperties() *CT_PresentationProperties {
	_bgeaa := &CT_PresentationProperties{}
	return _bgeaa
}
func (_bdbg *CT_CommonSlideData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdbg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_bdbg.NameAttr)})
	}
	e.EncodeToken(start)
	if _bdbg.Bg != nil {
		_gdgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_bdbg.Bg, _gdgf)
	}
	_bae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_bdbg.SpTree, _bae)
	if _bdbg.CustDataLst != nil {
		_afgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_bdbg.CustDataLst, _afgf)
	}
	if _bdbg.Controls != nil {
		_bddb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_bdbg.Controls, _bddb)
	}
	if _bdbg.ExtLst != nil {
		_ecg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdbg.ExtLst, _ecg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffebc *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffebc = 0
	case "\u0065\u006e\u0074\u0072":
		*_ffebc = 1
	case "\u0065\u0078\u0069\u0074":
		*_ffebc = 2
	case "\u0065\u006d\u0070\u0068":
		*_ffebc = 3
	case "\u0070\u0061\u0074\u0068":
		*_ffebc = 4
	case "\u0076\u0065\u0072\u0062":
		*_ffebc = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_ffebc = 6
	}
	return nil
}

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_eeedg *CT_NotesMasterIdListEntry) Validate() error {
	return _eeedg.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_bdcga ST_PhotoAlbumFrameShape) String() string {
	switch _bdcga {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_fag *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _fag.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}

type EG_ShowTypeChoice struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}
type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

func (_fadc *CT_TagsData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _fadc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdaegf *TagLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdaegf.CT_TagList = *NewCT_TagList()
_fcbbae:
	for {
		_bdccf, _facfg := d.Token()
		if _facfg != nil {
			return _facfg
		}
		switch _cbaa := _bdccf.(type) {
		case _b.StartElement:
			switch _cbaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_fcef := NewCT_StringTag()
				if _dbdeb := d.DecodeElement(_fcef, &_cbaa); _dbdeb != nil {
					return _dbdeb
				}
				_fdaegf.Tag = append(_fdaegf.Tag, _fcef)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _cbaa.Name)
				if _abdgd := d.Skip(); _abdgd != nil {
					return _abdgd
				}
			}
		case _b.EndElement:
			break _fcbbae
		case _b.CharData:
		}
	}
	return nil
}
func (_gbgcd ST_ViewType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbgcd.String(), start)
}

type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}
type CT_TLTimeTargetElementChoice struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_d.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}

func (_caaf *CT_PrintProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _caaf.PrnWhatAttr != ST_PrintWhatUnset {
		_eddbd, _bgbg := _caaf.PrnWhatAttr.MarshalXMLAttr(_b.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _bgbg != nil {
			return _bgbg
		}
		start.Attr = append(start.Attr, _eddbd)
	}
	if _caaf.ClrModeAttr != ST_PrintColorModeUnset {
		_gagb, _gbbfd := _caaf.ClrModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _gbbfd != nil {
			return _gbbfd
		}
		start.Attr = append(start.Attr, _gagb)
	}
	if _caaf.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_caaf.HiddenSlidesAttr))})
	}
	if _caaf.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_caaf.ScaleToFitPaperAttr))})
	}
	if _caaf.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_caaf.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _caaf.ExtLst != nil {
		_bfg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caaf.ExtLst, _bfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_cacf := &CT_TLAnimVariantIntegerVal{}
	return _cacf
}
func (_bgdca *HandoutMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgdca.CT_HandoutMaster = *NewCT_HandoutMaster()
_fbfeb:
	for {
		_fgcdb, _eefdf := d.Token()
		if _eefdf != nil {
			return _eefdf
		}
		switch _gdbdf := _fgcdb.(type) {
		case _b.StartElement:
			switch _gdbdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _abcgf := d.DecodeElement(_bgdca.CSld, &_gdbdf); _abcgf != nil {
					return _abcgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _dfgeb := d.DecodeElement(_bgdca.ClrMap, &_gdbdf); _dfgeb != nil {
					return _dfgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bgdca.Hf = NewCT_HeaderFooter()
				if _ebdaf := d.DecodeElement(_bgdca.Hf, &_gdbdf); _ebdaf != nil {
					return _ebdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgdca.ExtLst = NewCT_ExtensionListModify()
				if _bgcc := d.DecodeElement(_bgdca.ExtLst, &_gdbdf); _bgcc != nil {
					return _bgcc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _gdbdf.Name)
				if _abaaa := d.Skip(); _abaaa != nil {
					return _abaaa
				}
			}
		case _b.EndElement:
			break _fbfeb
		case _b.CharData:
		}
	}
	return nil
}
func (_ffggcg *CT_TLPoint) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bffff := range start.Attr {
		if _bffff.Name.Local == "\u0078" {
			_fafed, _bgeabe := ParseUnionST_Percentage(_bffff.Value)
			if _bgeabe != nil {
				return _bgeabe
			}
			_ffggcg.XAttr = _fafed
			continue
		}
		if _bffff.Name.Local == "\u0079" {
			_bcgb, _gdbg := ParseUnionST_Percentage(_bffff.Value)
			if _gdbg != nil {
				return _gdbg
			}
			_ffggcg.YAttr = _bcgb
			continue
		}
	}
	for {
		_ggccg, _ccac := d.Token()
		if _ccac != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _ccac)
		}
		if _fcbba, _bggea := _ggccg.(_b.EndElement); _bggea && _fcbba.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

func (_caf *CT_Connector) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cbac := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_caf.NvCxnSpPr, _cbac)
	_gacb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_caf.SpPr, _gacb)
	if _caf.Style != nil {
		_agba := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_caf.Style, _agba)
	}
	if _caf.ExtLst != nil {
		_afgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caf.ExtLst, _afgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewAG_Ole() *AG_Ole {
	_eae := &AG_Ole{}
	return _eae
}

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_gdgd *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _gdgd.HandoutMasterId != nil {
		if _ffcf := _gdgd.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _ffcf != nil {
			return _ffcf
		}
	}
	return nil
}
func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_aebe := &CT_EmbeddedFontListEntry{}
	_aebe.Font = _d.NewCT_TextFont()
	return _aebe
}
func (_fea *CT_Comment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fea.Pos = _d.NewCT_Point2D()
	for _, _gda := range start.Attr {
		if _gda.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_dee, _ccbb := _e.ParseUint(_gda.Value, 10, 32)
			if _ccbb != nil {
				return _ccbb
			}
			_fea.AuthorIdAttr = uint32(_dee)
			continue
		}
		if _gda.Name.Local == "\u0064\u0074" {
			_ddd, _ede := ParseStdlibTime(_gda.Value)
			if _ede != nil {
				return _ede
			}
			_fea.DtAttr = &_ddd
			continue
		}
		if _gda.Name.Local == "\u0069\u0064\u0078" {
			_aabg, _bbd := _e.ParseUint(_gda.Value, 10, 32)
			if _bbd != nil {
				return _bbd
			}
			_fea.IdxAttr = uint32(_aabg)
			continue
		}
	}
_fef:
	for {
		_gga, _fbdc := d.Token()
		if _fbdc != nil {
			return _fbdc
		}
		switch _dbc := _gga.(type) {
		case _b.StartElement:
			switch _dbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _fbf := d.DecodeElement(_fea.Pos, &_dbc); _fbf != nil {
					return _fbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _dcg := d.DecodeElement(&_fea.Text, &_dbc); _dcg != nil {
					return _dcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fea.ExtLst = NewCT_ExtensionListModify()
				if _fca := d.DecodeElement(_fea.ExtLst, &_dbc); _fca != nil {
					return _fca
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _dbc.Name)
				if _bfb := d.Skip(); _bfb != nil {
					return _bfb
				}
			}
		case _b.EndElement:
			break _fef
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_aefbg *CT_TLCommonMediaNodeData) Validate() error {
	return _aefbg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_ceegg *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _ceegg.IdAttr != nil {
		if *_ceegg.IdAttr < 2147483648 {
			return _c.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ceegg.IdAttr)
		}
	}
	if _ceegg.ExtLst != nil {
		if _dgdg := _ceegg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgdg != nil {
			return _dgdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_ccga *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _gdegf := _ccga.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _gdegf != nil {
		return _gdegf
	}
	if _dcgb := _ccga.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _dcgb != nil {
		return _dcgb
	}
	if _ccga.Hf != nil {
		if _afc := _ccga.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _afc != nil {
			return _afc
		}
	}
	if _ccga.ExtLst != nil {
		if _dbfd := _ccga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbfd != nil {
			return _dbfd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_afcf *CT_Kinsoku) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Rel and its children
func (_fdbef *CT_Rel) Validate() error {
	return _fdbef.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}

// Validate validates the CT_NotesMaster and its children
func (_gfgd *CT_NotesMaster) Validate() error {
	return _gfgd.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

type ST_TLTimeNodeSyncType byte

func (_acdea *CT_PresentationProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adaa:
	for {
		_eaed, _dbge := d.Token()
		if _dbge != nil {
			return _dbge
		}
		switch _dagf := _eaed.(type) {
		case _b.StartElement:
			switch _dagf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_acdea.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _bfdc := d.DecodeElement(_acdea.HtmlPubPr, &_dagf); _bfdc != nil {
					return _bfdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_acdea.WebPr = NewCT_WebProperties()
				if _cbab := d.DecodeElement(_acdea.WebPr, &_dagf); _cbab != nil {
					return _cbab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_acdea.PrnPr = NewCT_PrintProperties()
				if _cggc := d.DecodeElement(_acdea.PrnPr, &_dagf); _cggc != nil {
					return _cggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_acdea.ShowPr = NewCT_ShowProperties()
				if _ebcef := d.DecodeElement(_acdea.ShowPr, &_dagf); _ebcef != nil {
					return _ebcef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_acdea.ClrMru = _d.NewCT_ColorMRU()
				if _baac := d.DecodeElement(_acdea.ClrMru, &_dagf); _baac != nil {
					return _baac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_acdea.ExtLst = NewCT_ExtensionList()
				if _fgbgd := d.DecodeElement(_acdea.ExtLst, &_dagf); _fgbgd != nil {
					return _fgbgd
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _dagf.Name)
				if _ceec := d.Skip(); _ceec != nil {
					return _ceec
				}
			}
		case _b.EndElement:
			break _adaa
		case _b.CharData:
		}
	}
	return nil
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_d.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_d.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}

func (_agca *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agca = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_agca = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_agca = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_agca = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_agca = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_agca = 5
	}
	return nil
}
func (_badedf *ST_PlaceholderType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_badedf = 0
	case "\u0074\u0069\u0074l\u0065":
		*_badedf = 1
	case "\u0062\u006f\u0064\u0079":
		*_badedf = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_badedf = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_badedf = 4
	case "\u0064\u0074":
		*_badedf = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_badedf = 6
	case "\u0066\u0074\u0072":
		*_badedf = 7
	case "\u0068\u0064\u0072":
		*_badedf = 8
	case "\u006f\u0062\u006a":
		*_badedf = 9
	case "\u0063\u0068\u0061r\u0074":
		*_badedf = 10
	case "\u0074\u0062\u006c":
		*_badedf = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_badedf = 12
	case "\u0064\u0067\u006d":
		*_badedf = 13
	case "\u006d\u0065\u0064i\u0061":
		*_badedf = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_badedf = 15
	case "\u0070\u0069\u0063":
		*_badedf = 16
	}
	return nil
}

// Validate validates the CT_ShapeNonVisual and its children
func (_ffec *CT_ShapeNonVisual) Validate() error {
	return _ffec.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}
func (_efa *CT_BuildList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	for _, _gagd := range _efa.BuildListChoice {
		_gagd.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fded *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fded.TLGraphicalObjectBuildChoice = NewCT_TLGraphicalObjectBuildChoice()
	for _, _afbfc := range start.Attr {
		if _afbfc.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dbaa, _gacbd := _e.ParseUint(_afbfc.Value, 10, 32)
			if _gacbd != nil {
				return _gacbd
			}
			_fded.SpidAttr = uint32(_dbaa)
			continue
		}
		if _afbfc.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_abgd, _ccbd := _e.ParseUint(_afbfc.Value, 10, 32)
			if _ccbd != nil {
				return _ccbd
			}
			_fded.GrpIdAttr = uint32(_abgd)
			continue
		}
		if _afbfc.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_dfbd, _aegde := _e.ParseBool(_afbfc.Value)
			if _aegde != nil {
				return _aegde
			}
			_fded.UiExpandAttr = &_dfbd
			continue
		}
	}
_cccbc:
	for {
		_bgcd, _bcdbb := d.Token()
		if _bcdbb != nil {
			return _bcdbb
		}
		switch _gabff := _bgcd.(type) {
		case _b.StartElement:
			switch _gabff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_fded.TLGraphicalObjectBuildChoice = NewCT_TLGraphicalObjectBuildChoice()
				if _fggbg := d.DecodeElement(&_fded.TLGraphicalObjectBuildChoice.BldAsOne, &_gabff); _fggbg != nil {
					return _fggbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_fded.TLGraphicalObjectBuildChoice = NewCT_TLGraphicalObjectBuildChoice()
				if _feaba := d.DecodeElement(&_fded.TLGraphicalObjectBuildChoice.BldSub, &_gabff); _feaba != nil {
					return _feaba
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _gabff.Name)
				if _fdeab := d.Skip(); _fdeab != nil {
					return _fdeab
				}
			}
		case _b.EndElement:
			break _cccbc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_egcf *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _ccec := _egcf.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _ccec != nil {
		return _ccec
	}
	if _egcf.DurAttr != nil {
		if _fecd := _egcf.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _fecd != nil {
			return _fecd
		}
	}
	if _egcf.RepeatCountAttr != nil {
		if _ecfcb := _egcf.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _ecfcb != nil {
			return _ecfcb
		}
	}
	if _egcf.RepeatDurAttr != nil {
		if _aaade := _egcf.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _aaade != nil {
			return _aaade
		}
	}
	if _egcf.SpdAttr != nil {
		if _ecbae := _egcf.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _ecbae != nil {
			return _ecbae
		}
	}
	if _egcf.AccelAttr != nil {
		if _ddecd := _egcf.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _ddecd != nil {
			return _ddecd
		}
	}
	if _egcf.DecelAttr != nil {
		if _cgbdg := _egcf.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _cgbdg != nil {
			return _cgbdg
		}
	}
	if _bbae := _egcf.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _bbae != nil {
		return _bbae
	}
	if _gabd := _egcf.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _gabd != nil {
		return _gabd
	}
	if _ggfa := _egcf.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _ggfa != nil {
		return _ggfa
	}
	if _babe := _egcf.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _babe != nil {
		return _babe
	}
	if _ceebe := _egcf.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ceebe != nil {
		return _ceebe
	}
	if _egcf.StCondLst != nil {
		if _ecgbe := _egcf.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _ecgbe != nil {
			return _ecgbe
		}
	}
	if _egcf.EndCondLst != nil {
		if _efdb := _egcf.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _efdb != nil {
			return _efdb
		}
	}
	if _egcf.EndSync != nil {
		if _ccgdf := _egcf.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _ccgdf != nil {
			return _ccgdf
		}
	}
	if _egcf.Iterate != nil {
		if _eecge := _egcf.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _eecge != nil {
			return _eecge
		}
	}
	if _egcf.ChildTnLst != nil {
		if _dafa := _egcf.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _dafa != nil {
			return _dafa
		}
	}
	if _egcf.SubTnLst != nil {
		if _bgabe := _egcf.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _bgabe != nil {
			return _bgabe
		}
	}
	return nil
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

func (_facfc ST_TransitionCornerDirectionType) Validate() error { return _facfc.ValidateWithPath("") }

// Validate validates the CT_CommentAuthorList and its children
func (_faa *CT_CommentAuthorList) Validate() error {
	return _faa.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

func (_cdbg *CT_CustomShow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", _cdbg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _cdbg.IdAttr)})
	e.EncodeToken(start)
	_feaa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_cdbg.SldLst, _feaa)
	if _cdbg.ExtLst != nil {
		_dfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdbg.ExtLst, _dfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Kinsoku and its children
func (_deeeb *CT_Kinsoku) Validate() error {
	return _deeeb.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}
func (_afaf *CT_TLAnimateEffectBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afaf.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_gcege, _bbgd := _afaf.TransitionAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _bbgd != nil {
			return _bbgd
		}
		start.Attr = append(start.Attr, _gcege)
	}
	if _afaf.FilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _c.Sprintf("\u0025\u0076", *_afaf.FilterAttr)})
	}
	if _afaf.PrLstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_afaf.PrLstAttr)})
	}
	e.EncodeToken(start)
	_efccc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_afaf.CBhvr, _efccc)
	if _afaf.Progress != nil {
		_baag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_afaf.Progress, _baag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgffa *CT_TLIterateDataChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fgffa.TmAbs != nil {
		_gcaec := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_fgffa.TmAbs, _gcaec)
	} else if _fgffa.TmPct != nil {
		_bcgcf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_fgffa.TmPct, _bcgcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_bggeg := &CT_EightDirectionTransition{}
	return _bggeg
}

// Validate validates the CT_TLMediaNodeAudio and its children
func (_fdfdg *CT_TLMediaNodeAudio) Validate() error {
	return _fdfdg.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}
func (_agce ST_PhotoAlbumLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_agce.String(), start)
}

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_ccba *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _fefg := _ccba.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _fefg != nil {
		return _fefg
	}
	if _bgaec := _ccba.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _bgaec != nil {
		return _bgaec
	}
	if _baccf := _ccba.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _baccf != nil {
		return _baccf
	}
	return nil
}
func (_bdgdfb *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdgdfb = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_bdgdfb = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_bdgdfb = 2
	case "\u006e\u0065\u0076e\u0072":
		*_bdgdfb = 3
	}
	return nil
}
func NewCT_OleObject() *CT_OleObject {
	_bdcee := &CT_OleObject{}
	_bdcee.OleObjectChoice = NewCT_OleObjectChoice()
	return _bdcee
}

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_bfe *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _abd := _bfe.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _abd != nil {
		return _abd
	}
	return nil
}
func (_bffd *CT_OleObjectLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bffd.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bffd.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _bffd.ExtLst != nil {
		_fbcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bffd.ExtLst, _fbcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfgef ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _gfgef {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gfgef))
	}
	return nil
}

type CT_TimeNodeListChoice struct {

	// Parallel Time Node
	Par *CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq *CT_TLTimeNodeSequence

	// Exclusive
	Excl *CT_TLTimeNodeExclusive

	// Animate
	Anim *CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr *CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect *CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion *CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot *CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale *CT_TLAnimateScaleBehavior

	// Command
	Cmd *CT_TLCommandBehavior

	// Set Time Node Behavior
	Set *CT_TLSetBehavior

	// Audio
	Audio *CT_TLMediaNodeAudio

	// Video
	Video *CT_TLMediaNodeVideo
}

// Validate validates the CT_TLAnimVariantChoice and its children
func (_ggeda *CT_TLAnimVariantChoice) Validate() error {
	return _ggeda.ValidateWithPath("\u0043\u0054\u005f\u0054LA\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0043\u0068\u006f\u0069c\u0065")
}
func (_bfcbg ST_WebColorType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_baefb := _b.Attr{}
	_baefb.Name = name
	switch _bfcbg {
	case ST_WebColorTypeUnset:
		_baefb.Value = ""
	case ST_WebColorTypeNone:
		_baefb.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_baefb.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_baefb.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_baefb.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_baefb.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_baefb.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _baefb, nil
}

// Validate validates the CT_TLPoint and its children
func (_cdade *CT_TLPoint) Validate() error {
	return _cdade.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}
func NewCT_CommentAuthor() *CT_CommentAuthor { _fgcd := &CT_CommentAuthor{}; return _fgcd }
func (_feacg ST_TLTimeAnimateValueTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _feacg.ST_PositiveFixedPercentage != nil {
		e.Encode(_feacg.ST_PositiveFixedPercentage)
	}
	if _feacg.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_b.CharData(_feacg.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_gdfgg *CT_TLSetBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fbcgfc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_gdfgg.CBhvr, _fbcgfc)
	if _gdfgg.To != nil {
		_bddbda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_gdfgg.To, _bddbda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}
type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_d.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_agdg ST_TLNextActionType) Validate() error { return _agdg.ValidateWithPath("") }

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_afabe *CT_TLAnimVariantStringVal) Validate() error {
	return _afabe.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}

type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_d.CT_ShapeProperties

	// Shape Style
	Style *_d.CT_ShapeStyle

	// Shape Text Body
	TxBody *_d.CT_TextBody
	ExtLst *CT_ExtensionListModify
}

func (_addgc ST_TLTimeNodePresetClassType) Validate() error { return _addgc.ValidateWithPath("") }

// Validate validates the CT_EightDirectionTransition and its children
func (_gefe *CT_EightDirectionTransition) Validate() error {
	return _gefe.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}
func (_egecg *Sld) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _egecg.CT_Slide.MarshalXML(e, start)
}
func (_gdcb *CT_NotesMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dbac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gdcb.CSld, _dbac)
	_bdec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_gdcb.ClrMap, _bdec)
	if _gdcb.Hf != nil {
		_gdcgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gdcb.Hf, _gdcgf)
	}
	if _gdcb.NotesStyle != nil {
		_cgde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gdcb.NotesStyle, _cgde)
	}
	if _gdcb.ExtLst != nil {
		_eacgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdcb.ExtLst, _eacgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbac *CT_CustomerDataList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gbac.CustData != nil {
		_bda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _gfbc := range _gbac.CustData {
			e.EncodeElement(_gfbc, _bda)
		}
	}
	if _gbac.Tags != nil {
		_bdae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_gbac.Tags, _bdae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efbag ST_TLCommandType) ValidateWithPath(path string) error {
	switch _efbag {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efbag))
	}
	return nil
}
func (_bdaec *ST_WebScreenSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bdaec = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_bdaec = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_bdaec = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_bdaec = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_bdaec = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_bdaec = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_bdaec = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_bdaec = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_bdaec = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_bdaec = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_bdaec = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_bdaec = 11
	}
	return nil
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_bfbb *CT_HtmlPublishProperties) Validate() error {
	return _bfbb.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_BuildListChoice and its children
func (_efg *CT_BuildListChoice) Validate() error {
	return _efg.ValidateWithPath("\u0043T\u005fB\u0075\u0069\u006c\u0064\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_ffbd *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _egdgd, _eeadb := range _ffbd.Tmpl {
		if _ccfde := _eeadb.ValidateWithPath(_c.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _egdgd)); _ccfde != nil {
			return _ccfde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_ebabe *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _degf := _ebabe.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _degf != nil {
		return _degf
	}
	if _cgbcb := _ebabe.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _cgbcb != nil {
		return _cgbcb
	}
	if _ebdbb := _ebabe.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ebdbb != nil {
		return _ebdbb
	}
	if _dbgb := _ebabe.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _dbgb != nil {
		return _dbgb
	}
	if _ecdeg := _ebabe.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _ecdeg != nil {
		return _ecdeg
	}
	if _bfefc := _ebabe.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _bfefc != nil {
		return _bfefc
	}
	if _ebabe.AttrNameLst != nil {
		if _abac := _ebabe.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _abac != nil {
			return _abac
		}
	}
	return nil
}
func (_edbdc ST_WebScreenSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edbdc.String(), start)
}
func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_gaafb := &CT_TLAnimVariantStringVal{}
	return _gaafb
}
func (_bacg *CT_PrintProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _badab := range start.Attr {
		if _badab.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_bacg.PrnWhatAttr.UnmarshalXMLAttr(_badab)
			continue
		}
		if _badab.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_bacg.ClrModeAttr.UnmarshalXMLAttr(_badab)
			continue
		}
		if _badab.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_fega, _cdegb := _e.ParseBool(_badab.Value)
			if _cdegb != nil {
				return _cdegb
			}
			_bacg.HiddenSlidesAttr = &_fega
			continue
		}
		if _badab.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_dceb, _cbbd := _e.ParseBool(_badab.Value)
			if _cbbd != nil {
				return _cbbd
			}
			_bacg.ScaleToFitPaperAttr = &_dceb
			continue
		}
		if _badab.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_eeddb, _fadg := _e.ParseBool(_badab.Value)
			if _fadg != nil {
				return _fadg
			}
			_bacg.FrameSlidesAttr = &_eeddb
			continue
		}
	}
_gdda:
	for {
		_cgfac, _bcbd := d.Token()
		if _bcbd != nil {
			return _bcbd
		}
		switch _ccag := _cgfac.(type) {
		case _b.StartElement:
			switch _ccag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bacg.ExtLst = NewCT_ExtensionList()
				if _efagb := d.DecodeElement(_bacg.ExtLst, &_ccag); _efagb != nil {
					return _efagb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ccag.Name)
				if _bbacc := d.Skip(); _bbacc != nil {
					return _bbacc
				}
			}
		case _b.EndElement:
			break _gdda
		case _b.CharData:
		}
	}
	return nil
}
func (_adegf *CT_Slide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adegf.CSld = NewCT_CommonSlideData()
	for _, _fggca := range start.Attr {
		if _fggca.Name.Local == "\u0073\u0068\u006f\u0077" {
			_cbacg, _dcgfc := _e.ParseBool(_fggca.Value)
			if _dcgfc != nil {
				return _dcgfc
			}
			_adegf.ShowAttr = &_cbacg
			continue
		}
		if _fggca.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gbdf, _fafc := _e.ParseBool(_fggca.Value)
			if _fafc != nil {
				return _fafc
			}
			_adegf.ShowMasterSpAttr = &_gbdf
			continue
		}
		if _fggca.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_abddd, _adead := _e.ParseBool(_fggca.Value)
			if _adead != nil {
				return _adead
			}
			_adegf.ShowMasterPhAnimAttr = &_abddd
			continue
		}
	}
_fbeba:
	for {
		_bcbc, _ceac := d.Token()
		if _ceac != nil {
			return _ceac
		}
		switch _fbgb := _bcbc.(type) {
		case _b.StartElement:
			switch _fbgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _edfde := d.DecodeElement(_adegf.CSld, &_fbgb); _edfde != nil {
					return _edfde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_adegf.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _ceag := d.DecodeElement(_adegf.ClrMapOvr, &_fbgb); _ceag != nil {
					return _ceag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_adegf.Transition = NewCT_SlideTransition()
				if _ageea := d.DecodeElement(_adegf.Transition, &_fbgb); _ageea != nil {
					return _ageea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_adegf.Timing = NewCT_SlideTiming()
				if _ecab := d.DecodeElement(_adegf.Timing, &_fbgb); _ecab != nil {
					return _ecab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adegf.ExtLst = NewCT_ExtensionListModify()
				if _cdda := d.DecodeElement(_adegf.ExtLst, &_fbgb); _cdda != nil {
					return _cdda
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _fbgb.Name)
				if _abda := d.Skip(); _abda != nil {
					return _abda
				}
			}
		case _b.EndElement:
			break _fbeba
		case _b.CharData:
		}
	}
	return nil
}
func (_adaeb *CT_NotesMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfbaa := range start.Attr {
		if _cfbaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfbaa.Name.Local == "\u0069\u0064" || _cfbaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfbaa.Name.Local == "\u0069\u0064" {
			_ccgg := _cfbaa.Value
			_adaeb.IdAttr = _ccgg
			continue
		}
	}
_ggga:
	for {
		_gafa, _cdea := d.Token()
		if _cdea != nil {
			return _cdea
		}
		switch _fffa := _gafa.(type) {
		case _b.StartElement:
			switch _fffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adaeb.ExtLst = NewCT_ExtensionList()
				if _cgbg := d.DecodeElement(_adaeb.ExtLst, &_fffa); _cgbg != nil {
					return _cgbg
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _fffa.Name)
				if _gfcg := d.Skip(); _gfcg != nil {
					return _gfcg
				}
			}
		case _b.EndElement:
			break _ggga
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TransitionSoundActionChoice and its children
func (_cagdf *CT_TransitionSoundActionChoice) Validate() error {
	return _cagdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u006f\u0075\u006e\u0064A\u0063\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_gadgb := &CT_TLTextTargetElement{}
	return _gadgb
}

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_fgb *CT_CustomerData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLAnimateBehavior and its children
func (_eaeac *CT_TLAnimateBehavior) Validate() error {
	return _eaeac.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_fdgba ST_TLPreviousActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdgba.String(), start)
}

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}

func (_fgbd *CT_IndexRange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _c.Sprintf("\u0025\u0076", _fgbd.StAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0076", _fgbd.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_PrintColorMode byte

func (_eacgg *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eacgg = 0
	case "\u006c":
		*_eacgg = 1
	case "\u0075":
		*_eacgg = 2
	case "\u0072":
		*_eacgg = 3
	case "\u0064":
		*_eacgg = 4
	}
	return nil
}
func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_gegf := &CT_TLTriggerTimeNodeID{}
	return _gegf
}
func (_ggbde *CT_SlideRelationshipList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bcdb:
	for {
		_gbdgg, _caec := d.Token()
		if _caec != nil {
			return _caec
		}
		switch _gefgd := _gbdgg.(type) {
		case _b.StartElement:
			switch _gefgd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_fdecd := NewCT_SlideRelationshipListEntry()
				if _ebgf := d.DecodeElement(_fdecd, &_gefgd); _ebgf != nil {
					return _ebgf
				}
				_ggbde.Sld = append(_ggbde.Sld, _fdecd)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _gefgd.Name)
				if _gafbaa := d.Skip(); _gafbaa != nil {
					return _gafbaa
				}
			}
		case _b.EndElement:
			break _bcdb
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

func (_bebdc ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _bebdc {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bebdc))
	}
	return nil
}
func (_bgabc *CT_SlideMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgabc.PreserveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bgabc.PreserveAttr))})
	}
	e.EncodeToken(start)
	_eged := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_bgabc.CSld, _eged)
	_bacb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_bgabc.ClrMap, _bacb)
	if _bgabc.SldLayoutIdLst != nil {
		_decb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_bgabc.SldLayoutIdLst, _decb)
	}
	if _bgabc.Transition != nil {
		_beef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_bgabc.Transition, _beef)
	}
	if _bgabc.Timing != nil {
		_ggcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_bgabc.Timing, _ggcc)
	}
	if _bgabc.Hf != nil {
		_eccgce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_bgabc.Hf, _eccgce)
	}
	if _bgabc.TxStyles != nil {
		_cbdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_bgabc.TxStyles, _cbdc)
	}
	if _bgabc.ExtLst != nil {
		_ddgdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgabc.ExtLst, _ddgdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

func (_abab *CT_SlideTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abab.SpdAttr != ST_TransitionSpeedUnset {
		_gfae, _gefab := _abab.SpdAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0070\u0064"})
		if _gefab != nil {
			return _gefab
		}
		start.Attr = append(start.Attr, _gfae)
	}
	if _abab.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_abab.AdvClickAttr))})
	}
	if _abab.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_abab.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _abab.SlideTransitionChoice != nil {
		_abab.SlideTransitionChoice.MarshalXML(e, _b.StartElement{})
	}
	if _abab.SndAc != nil {
		_bege := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_abab.SndAc, _bege)
	}
	if _abab.ExtLst != nil {
		_dacdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abab.ExtLst, _dacdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Background and its children
func (_ceb *CT_Background) Validate() error {
	return _ceb.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_dce *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _dce.NotesMasterId != nil {
		if _bbde := _dce.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _bbde != nil {
			return _bbde
		}
	}
	return nil
}
func (_gcge *CT_SlideMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gcge.SldMasterId != nil {
		_ffdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _dcga := range _gcge.SldMasterId {
			e.EncodeElement(_dcga, _ffdc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeNodeFillType byte

func (_edfc *CT_OleObjectChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bagf := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
		_edfc.Embed = NewCT_OleObjectEmbed()
		if _dcag := d.DecodeElement(_edfc.Embed, &_bagf); _dcag != nil {
			return _dcag
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
		_edfc.Link = NewCT_OleObjectLink()
		if _ffgga := d.DecodeElement(_edfc.Link, &_bagf); _ffgga != nil {
			return _ffgga
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bagf.Name)
		if _edbde := d.Skip(); _edbde != nil {
			return _edbde
		}
	}
	return nil
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_afabea ST_OleObjectFollowColorScheme) Validate() error { return _afabea.ValidateWithPath("") }
func NewCT_CustomShowId() *CT_CustomShowId                    { _ceba := &CT_CustomShowId{}; return _ceba }

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_dgfec *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _acdb := _dgfec.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _acdb != nil {
		return _acdb
	}
	if _dgfec.DelayAttr != nil {
		if _eddfc := _dgfec.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _eddfc != nil {
			return _eddfc
		}
	}
	if _dgfec.TLTimeConditionChoice != nil {
		if _eafc := _dgfec.TLTimeConditionChoice.ValidateWithPath(path + "\u002f\u0054\u004c\u0054im\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069c\u0065"); _eafc != nil {
			return _eafc
		}
	}
	return nil
}
func (_aebc *EG_BackgroundChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfadb := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
		_aebc.BgPr = NewCT_BackgroundProperties()
		if _cggcg := d.DecodeElement(_aebc.BgPr, &_bfadb); _cggcg != nil {
			return _cggcg
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
		_aebc.BgRef = _d.NewCT_StyleMatrixReference()
		if _eacace := d.DecodeElement(_aebc.BgRef, &_bfadb); _eacace != nil {
			return _eacace
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006fun\u0064\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bfadb.Name)
		if _abegca := d.Skip(); _abegca != nil {
			return _abegca
		}
	}
	return nil
}

// Validate validates the SldMaster and its children
func (_deaa *SldMaster) Validate() error {
	return _deaa.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}
func (_adaea *CT_SlideRelationshipListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _adaea.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func (_fedab ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _fedab {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}
func (_ecdfgb *CT_TagsData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edfb := range start.Attr {
		if _edfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edfb.Name.Local == "\u0069\u0064" || _edfb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _edfb.Name.Local == "\u0069\u0064" {
			_eeafb := _edfb.Value
			_ecdfgb.IdAttr = _eeafb
			continue
		}
	}
	for {
		_cfcgca, _dfab := d.Token()
		if _dfab != nil {
			return _c.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _dfab)
		}
		if _deagg, _ccgee := _cfcgca.(_b.EndElement); _ccgee && _deagg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fffdc *ST_PrintColorMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fffdc = 0
	case "\u0062\u0077":
		*_fffdc = 1
	case "\u0067\u0072\u0061\u0079":
		*_fffdc = 2
	case "\u0063\u006c\u0072":
		*_fffdc = 3
	}
	return nil
}

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}

func (_gccg *EG_ChildSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gccg.ClrMapOvr != nil {
		_gdgbfa := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_gccg.ClrMapOvr, _gdgbfa)
	}
	return nil
}
func (_efgcc *CT_TLByRgbColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _c.Sprintf("\u0025\u0076", _efgcc.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067"}, Value: _c.Sprintf("\u0025\u0076", _efgcc.GAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _c.Sprintf("\u0025\u0076", _efgcc.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Picture() *CT_Picture {
	_afgfe := &CT_Picture{}
	_afgfe.NvPicPr = NewCT_PictureNonVisual()
	_afgfe.BlipFill = _d.NewCT_BlipFillProperties()
	_afgfe.SpPr = _d.NewCT_ShapeProperties()
	return _afgfe
}

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_edeg *CT_OutlineViewSlideEntry) Validate() error {
	return _edeg.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_eacdb *CT_TLByAnimateColorTransform) Validate() error {
	return _eacdb.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}
func (_dbeb *CT_TLTemplate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbeb.TnLst = NewCT_TimeNodeList()
	for _, _egbac := range start.Attr {
		if _egbac.Name.Local == "\u006c\u0076\u006c" {
			_eecgf, _deece := _e.ParseUint(_egbac.Value, 10, 32)
			if _deece != nil {
				return _deece
			}
			_ccgac := uint32(_eecgf)
			_dbeb.LvlAttr = &_ccgac
			continue
		}
	}
_beefe:
	for {
		_ddgg, _afedb := d.Token()
		if _afedb != nil {
			return _afedb
		}
		switch _facdd := _ddgg.(type) {
		case _b.StartElement:
			switch _facdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _dabb := d.DecodeElement(_dbeb.TnLst, &_facdd); _dabb != nil {
					return _dabb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _facdd.Name)
				if _dgbgc := d.Skip(); _dgbgc != nil {
					return _dgbgc
				}
			}
		case _b.EndElement:
			break _beefe
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideLayout and its children
func (_dbegc *CT_SlideLayout) Validate() error {
	return _dbegc.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}
func (_ggace *ST_IterateType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abaad, _gfgdd := d.Token()
	if _gfgdd != nil {
		return _gfgdd
	}
	if _efebd, _gegee := _abaad.(_b.EndElement); _gegee && _efebd.Name == start.Name {
		*_ggace = 1
		return nil
	}
	if _gbdebd, _deeeg := _abaad.(_b.CharData); !_deeeg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abaad)
	} else {
		switch string(_gbdebd) {
		case "":
			*_ggace = 0
		case "\u0065\u006c":
			*_ggace = 1
		case "\u0077\u0064":
			*_ggace = 2
		case "\u006c\u0074":
			*_ggace = 3
		}
	}
	_abaad, _gfgdd = d.Token()
	if _gfgdd != nil {
		return _gfgdd
	}
	if _gdcfa, _face := _abaad.(_b.EndElement); _face && _gdcfa.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abaad)
}
func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_effag := &CT_TLAnimVariantFloatVal{}
	return _effag
}

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

func (_agbg ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _agbg {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agbg))
	}
	return nil
}
func (_ebcccf ST_TLDiagramBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ebcccf.String(), start)
}
func (_cdgfa *CT_TLTimeAnimateValueList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dbbb:
	for {
		_dgafd, _cbge := d.Token()
		if _cbge != nil {
			return _cbge
		}
		switch _dffea := _dgafd.(type) {
		case _b.StartElement:
			switch _dffea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_eggbe := NewCT_TLTimeAnimateValue()
				if _aacgd := d.DecodeElement(_eggbe, &_dffea); _aacgd != nil {
					return _aacgd
				}
				_cdgfa.Tav = append(_cdgfa.Tav, _eggbe)
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _dffea.Name)
				if _fbdfa := d.Skip(); _fbdfa != nil {
					return _fbdfa
				}
			}
		case _b.EndElement:
			break _dbbb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_dedab := &CT_SlideRelationshipList{}
	return _dedab
}
func (_cbfad ST_TransitionInOutDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cadfc := _b.Attr{}
	_cadfc.Name = name
	switch _cbfad {
	case ST_TransitionInOutDirectionTypeUnset:
		_cadfc.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_cadfc.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_cadfc.Value = "\u0069\u006e"
	}
	return _cadfc, nil
}
func (_fdcbe ST_TLTriggerRuntimeNode) String() string {
	switch _fdcbe {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}
func NewCT_TLShapeTargetElementChoice() *CT_TLShapeTargetElementChoice {
	_gcggb := &CT_TLShapeTargetElementChoice{}
	return _gcggb
}

// Validate validates the CT_CommentList and its children
func (_gage *CT_CommentList) Validate() error {
	return _gage.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}
func (_aaaf *CT_NotesViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_becaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_aaaf.CSldViewPr, _becaf)
	if _aaaf.ExtLst != nil {
		_fegb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aaaf.ExtLst, _fegb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbbfb *CT_SlideRelationshipList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bbbfb.Sld != nil {
		_geea := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _cffbd := range _bbbfb.Sld {
			e.EncodeElement(_cffbd, _geea)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_beaeg *CT_SlideSize) ValidateWithPath(path string) error {
	if _beaeg.CxAttr < 914400 {
		return _c.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _beaeg.CxAttr)
	}
	if _beaeg.CxAttr > 51206400 {
		return _c.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beaeg.CxAttr)
	}
	if _beaeg.CxAttr < 0 {
		return _c.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beaeg.CxAttr)
	}
	if _beaeg.CyAttr < 914400 {
		return _c.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _beaeg.CyAttr)
	}
	if _beaeg.CyAttr > 51206400 {
		return _c.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beaeg.CyAttr)
	}
	if _beaeg.CyAttr < 0 {
		return _c.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _beaeg.CyAttr)
	}
	if _cafa := _beaeg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cafa != nil {
		return _cafa
	}
	return nil
}

type ST_WebScreenSize byte

// Validate validates the CT_OleObjectLink and its children
func (_abeg *CT_OleObjectLink) Validate() error {
	return _abeg.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_ac.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_d.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

func (_babbe ST_TLBehaviorAccumulateType) Validate() error { return _babbe.ValidateWithPath("") }
func (_edgac *CT_SlideMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cecag := range start.Attr {
		if _cecag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cecag.Name.Local == "\u0069\u0064" || _cecag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cecag.Name.Local == "\u0069\u0064" {
			_bdgfa := _cecag.Value
			_edgac.RIdAttr = _bdgfa
			continue
		}
		if _cecag.Name.Local == "\u0069\u0064" {
			_ggaa, _geacg := _e.ParseUint(_cecag.Value, 10, 32)
			if _geacg != nil {
				return _geacg
			}
			_cdegf := uint32(_ggaa)
			_edgac.IdAttr = &_cdegf
			continue
		}
	}
_cgfb:
	for {
		_gbce, _gdbb := d.Token()
		if _gdbb != nil {
			return _gdbb
		}
		switch _ggcb := _gbce.(type) {
		case _b.StartElement:
			switch _ggcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edgac.ExtLst = NewCT_ExtensionList()
				if _egfbf := d.DecodeElement(_edgac.ExtLst, &_ggcb); _egfbf != nil {
					return _egfbf
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _ggcb.Name)
				if _cgcb := d.Skip(); _cgcb != nil {
					return _cgcb
				}
			}
		case _b.EndElement:
			break _cgfb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func (_ffcg *ST_TLCommandType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgdddb, _gfcea := d.Token()
	if _gfcea != nil {
		return _gfcea
	}
	if _gffaf, _eadfe := _cgdddb.(_b.EndElement); _eadfe && _gffaf.Name == start.Name {
		*_ffcg = 1
		return nil
	}
	if _acgd, _eface := _cgdddb.(_b.CharData); !_eface {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgdddb)
	} else {
		switch string(_acgd) {
		case "":
			*_ffcg = 0
		case "\u0065\u0076\u0074":
			*_ffcg = 1
		case "\u0063\u0061\u006c\u006c":
			*_ffcg = 2
		case "\u0076\u0065\u0072\u0062":
			*_ffcg = 3
		}
	}
	_cgdddb, _gfcea = d.Token()
	if _gfcea != nil {
		return _gfcea
	}
	if _bgaab, _acdge := _cgdddb.(_b.EndElement); _acdge && _bgaab.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgdddb)
}
func (_fgeg *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acfec := range start.Attr {
		if _acfec.Name.Local == "\u0076\u0061\u006c" {
			_fcfae, _efeg := _e.ParseBool(_acfec.Value)
			if _efeg != nil {
				return _efeg
			}
			_fgeg.ValAttr = _fcfae
			continue
		}
	}
	for {
		_eecd, _ddfbf := d.Token()
		if _ddfbf != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _ddfbf)
		}
		if _bdcabg, _dbcgb := _eecd.(_b.EndElement); _dbcgb && _bdcabg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecga *CT_OutlineViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecga.CViewPr = NewCT_CommonViewProperties()
_aadfe:
	for {
		_adcb, _ecbf := d.Token()
		if _ecbf != nil {
			return _ecbf
		}
		switch _fdddg := _adcb.(type) {
		case _b.StartElement:
			switch _fdddg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _aabb := d.DecodeElement(_ecga.CViewPr, &_fdddg); _aabb != nil {
					return _aabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_ecga.SldLst = NewCT_OutlineViewSlideList()
				if _agef := d.DecodeElement(_ecga.SldLst, &_fdddg); _agef != nil {
					return _agef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecga.ExtLst = NewCT_ExtensionList()
				if _dgbb := d.DecodeElement(_ecga.ExtLst, &_fdddg); _dgbb != nil {
					return _dgbb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _fdddg.Name)
				if _ddde := d.Skip(); _ddde != nil {
					return _ddde
				}
			}
		case _b.EndElement:
			break _aadfe
		case _b.CharData:
		}
	}
	return nil
}
func (_ecfd *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ecfd = 0
	case "\u006f\u0075\u0074":
		*_ecfd = 1
	case "\u0069\u006e":
		*_ecfd = 2
	}
	return nil
}

// Validate validates the EG_ChildSlide and its children
func (_cbgeg *EG_ChildSlide) Validate() error {
	return _cbgeg.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_beage *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _ccaa := _beage.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ccaa != nil {
		return _ccaa
	}
	if _eaag := _beage.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _eaag != nil {
		return _eaag
	}
	if _aeed := _beage.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _aeed != nil {
		return _aeed
	}
	return nil
}
func (_abfd *CT_ModifyVerifier) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abfd.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.AlgorithmNameAttr)})
	}
	if _abfd.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.HashValueAttr)})
	}
	if _abfd.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.SaltValueAttr)})
	}
	if _abfd.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.SpinValueAttr)})
	}
	if _abfd.CryptProviderTypeAttr != _db.ST_CryptProvUnset {
		_gdfd, _bfec := _abfd.CryptProviderTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _bfec != nil {
			return _bfec
		}
		start.Attr = append(start.Attr, _gdfd)
	}
	if _abfd.CryptAlgorithmClassAttr != _db.ST_AlgClassUnset {
		_bcdc, _cfbg := _abfd.CryptAlgorithmClassAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _cfbg != nil {
			return _cfbg
		}
		start.Attr = append(start.Attr, _bcdc)
	}
	if _abfd.CryptAlgorithmTypeAttr != _db.ST_AlgTypeUnset {
		_cbef, _accb := _abfd.CryptAlgorithmTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _accb != nil {
			return _accb
		}
		start.Attr = append(start.Attr, _cbef)
	}
	if _abfd.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.CryptAlgorithmSidAttr)})
	}
	if _abfd.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.SpinCountAttr)})
	}
	if _abfd.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.SaltDataAttr)})
	}
	if _abfd.HashDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.HashDataAttr)})
	}
	if _abfd.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.CryptProviderAttr)})
	}
	if _abfd.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.AlgIdExtAttr)})
	}
	if _abfd.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.AlgIdExtSourceAttr)})
	}
	if _abfd.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.CryptProviderTypeExtAttr)})
	}
	if _abfd.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_abfd.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bdac *EG_SlideListChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fffbe := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
		_bdac.SldAll = NewCT_Empty()
		if _edacc := d.DecodeElement(_bdac.SldAll, &_fffbe); _edacc != nil {
			return _edacc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
		_bdac.SldRg = NewCT_IndexRange()
		if _gcaaf := d.DecodeElement(_bdac.SldRg, &_fffbe); _gcaaf != nil {
			return _gcaaf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
		_bdac.CustShow = NewCT_CustomShowId()
		if _beegf := d.DecodeElement(_bdac.CustShow, &_fffbe); _beegf != nil {
			return _beegf
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _fffbe.Name)
		if _ddged := d.Skip(); _ddged != nil {
			return _ddged
		}
	}
	return nil
}
func NewCT_HandoutMaster() *CT_HandoutMaster {
	_aaf := &CT_HandoutMaster{}
	_aaf.CSld = NewCT_CommonSlideData()
	_aaf.ClrMap = _d.NewCT_ColorMapping()
	return _aaf
}
func (_dedc *ST_TLTriggerEvent) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fecac, _facda := d.Token()
	if _facda != nil {
		return _facda
	}
	if _bdggg, _aadg := _fecac.(_b.EndElement); _aadg && _bdggg.Name == start.Name {
		*_dedc = 1
		return nil
	}
	if _bgcg, _dcebg := _fecac.(_b.CharData); !_dcebg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fecac)
	} else {
		switch string(_bgcg) {
		case "":
			*_dedc = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_dedc = 1
		case "\u006f\u006e\u0045n\u0064":
			*_dedc = 2
		case "\u0062\u0065\u0067i\u006e":
			*_dedc = 3
		case "\u0065\u006e\u0064":
			*_dedc = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_dedc = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_dedc = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_dedc = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_dedc = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_dedc = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_dedc = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_dedc = 11
		}
	}
	_fecac, _facda = d.Token()
	if _facda != nil {
		return _facda
	}
	if _dadea, _bbcdb := _fecac.(_b.EndElement); _bbcdb && _dadea.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fecac)
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

func (_ccegf ST_SlideLayoutType) String() string {
	switch _ccegf {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_cgae *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _agde := _cgae.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _agde != nil {
		return _agde
	}
	if _gbbe := _cgae.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _gbbe != nil {
		return _gbbe
	}
	if _ccead := _cgae.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ccead != nil {
		return _ccead
	}
	return nil
}
func ParseUnionST_Percentage(s string) (_d.ST_Percentage, error) {
	return _d.ParseUnionST_Percentage(s)
}
func NewCT_PrintProperties() *CT_PrintProperties { _adeg := &CT_PrintProperties{}; return _adeg }
func (_dgdgaa *ST_IterateType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgdgaa = 0
	case "\u0065\u006c":
		*_dgdgaa = 1
	case "\u0077\u0064":
		*_dgdgaa = 2
	case "\u006c\u0074":
		*_dgdgaa = 3
	}
	return nil
}

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

// Validate validates the CT_ControlList and its children
func (_gcda *CT_ControlList) Validate() error {
	return _gcda.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}
func (_cdgge ST_SplitterBarState) String() string {
	switch _cdgge {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}
func (_cgf *CT_HandoutMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_cgf.CSld, _dfef)
	_accc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_cgf.ClrMap, _accc)
	if _cgf.Hf != nil {
		_cage := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_cgf.Hf, _cage)
	}
	if _cgf.ExtLst != nil {
		_gddd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cgf.ExtLst, _gddd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_fadgd *CT_TLTimeNodeExclusive) Validate() error {
	return _fadgd.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_cefff *CT_ShowProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cefff.LoopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cefff.LoopAttr))})
	}
	if _cefff.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cefff.ShowNarrationAttr))})
	}
	if _cefff.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cefff.ShowAnimationAttr))})
	}
	if _cefff.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cefff.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	_cefff.ShowTypeChoice.MarshalXML(e, _b.StartElement{})
	if _cefff.SldAll != nil {
		_dbce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_cefff.SldAll, _dbce)
	}
	if _cefff.SldRg != nil {
		_dffef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_cefff.SldRg, _dffef)
	}
	if _cefff.CustShow != nil {
		_efcfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_cefff.CustShow, _efcfc)
	}
	if _cefff.PenClr != nil {
		_cefbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_cefff.PenClr, _cefbd)
	}
	if _cefff.ExtLst != nil {
		_ddgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cefff.ExtLst, _ddgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Empty and its children
func (_bcgc *CT_Empty) Validate() error {
	return _bcgc.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}

// Validate validates the CT_TLTimeTargetElementChoice and its children
func (_eaagf *CT_TLTimeTargetElementChoice) Validate() error {
	return _eaagf.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0054\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074E\u006ce\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063\u0065")
}
func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }

type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_d.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_d.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_ffefd *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffefd = 0
	case "\u0073\u0074\u0072":
		*_ffefd = 1
	case "\u006e\u0075\u006d":
		*_ffefd = 2
	case "\u0063\u006c\u0072":
		*_ffefd = 3
	}
	return nil
}

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_cgefd *Presentation) ValidateWithPath(path string) error {
	if _gggfd := _cgefd.CT_Presentation.ValidateWithPath(path); _gggfd != nil {
		return _gggfd
	}
	return nil
}
func (_bfcf ST_Direction) String() string {
	switch _bfcf {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}

type CT_TransitionSoundAction struct {
	TransitionSoundActionChoice *CT_TransitionSoundActionChoice
}

func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_cbbed := &CT_TLTimeTargetElement{}
	_cbbed.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
	return _cbbed
}
func (_gbaa *CT_GroupShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cfge := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gbaa.NvGrpSpPr, _cfge)
	_dedf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_gbaa.GrpSpPr, _dedf)
	if _gbaa.GroupShapeChoice != nil {
		for _, _gebca := range _gbaa.GroupShapeChoice {
			_gebca.MarshalXML(e, _b.StartElement{})
		}
	}
	if _gbaa.ExtLst != nil {
		_eafa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbaa.ExtLst, _eafa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}
type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}
type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

func (_fagba *OleObj) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fagba.CT_OleObject = *NewCT_OleObject()
	for _, _geaec := range start.Attr {
		if _geaec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _geaec.Name.Local == "\u0069\u0064" {
			_acdee := _geaec.Value
			_fagba.IdAttr = &_acdee
			continue
		}
		if _geaec.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_agcfd := _geaec.Value
			_fagba.ProgIdAttr = &_agcfd
			continue
		}
		if _geaec.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dfbff := _geaec.Value
			_fagba.SpidAttr = &_dfbff
			continue
		}
		if _geaec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aeaff := _geaec.Value
			_fagba.NameAttr = &_aeaff
			continue
		}
		if _geaec.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_ffad, _adfaac := _e.ParseBool(_geaec.Value)
			if _adfaac != nil {
				return _adfaac
			}
			_fagba.ShowAsIconAttr = &_ffad
			continue
		}
		if _geaec.Name.Local == "\u0069\u006d\u0067\u0057" {
			_badff, _efeba := _e.ParseInt(_geaec.Value, 10, 32)
			if _efeba != nil {
				return _efeba
			}
			_gaecfc := int32(_badff)
			_fagba.ImgWAttr = &_gaecfc
			continue
		}
		if _geaec.Name.Local == "\u0069\u006d\u0067\u0048" {
			_ddcbd, _cfedd := _e.ParseInt(_geaec.Value, 10, 32)
			if _cfedd != nil {
				return _cfedd
			}
			_cbdac := int32(_ddcbd)
			_fagba.ImgHAttr = &_cbdac
			continue
		}
	}
_fdbdd:
	for {
		_cdged, _cfbbf := d.Token()
		if _cfbbf != nil {
			return _cfbbf
		}
		switch _fgagb := _cdged.(type) {
		case _b.StartElement:
			switch _fgagb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_fagba.OleObjectChoice = NewCT_OleObjectChoice()
				if _gdfdc := d.DecodeElement(&_fagba.OleObjectChoice.Embed, &_fgagb); _gdfdc != nil {
					return _gdfdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_fagba.OleObjectChoice = NewCT_OleObjectChoice()
				if _agbbg := d.DecodeElement(&_fagba.OleObjectChoice.Link, &_fgagb); _agbbg != nil {
					return _agbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fagba.Pic = NewCT_Picture()
				if _edgca := d.DecodeElement(_fagba.Pic, &_fgagb); _edgca != nil {
					return _edgca
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _fgagb.Name)
				if _ebdag := d.Skip(); _ebdag != nil {
					return _ebdag
				}
			}
		case _b.EndElement:
			break _fdbdd
		case _b.CharData:
		}
	}
	return nil
}
func (_afgg *CT_CustomerDataList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_agd:
	for {
		_fcgfb, _daae := d.Token()
		if _daae != nil {
			return _daae
		}
		switch _ffed := _fcgfb.(type) {
		case _b.StartElement:
			switch _ffed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_eca := NewCT_CustomerData()
				if _cbeag := d.DecodeElement(_eca, &_ffed); _cbeag != nil {
					return _cbeag
				}
				_afgg.CustData = append(_afgg.CustData, _eca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_afgg.Tags = NewCT_TagsData()
				if _egb := d.DecodeElement(_afgg.Tags, &_ffed); _egb != nil {
					return _egb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ffed.Name)
				if _gdfc := d.Skip(); _gdfc != nil {
					return _gdfc
				}
			}
		case _b.EndElement:
			break _agd
		case _b.CharData:
		}
	}
	return nil
}
func (_fccg *CT_TLByHslColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbff := range start.Attr {
		if _fbff.Name.Local == "\u0068" {
			_ddbge, _egee := _e.ParseInt(_fbff.Value, 10, 32)
			if _egee != nil {
				return _egee
			}
			_fccg.HAttr = int32(_ddbge)
			continue
		}
		if _fbff.Name.Local == "\u0073" {
			_fagfbg, _bcfae := ParseUnionST_FixedPercentage(_fbff.Value)
			if _bcfae != nil {
				return _bcfae
			}
			_fccg.SAttr = _fagfbg
			continue
		}
		if _fbff.Name.Local == "\u006c" {
			_febfe, _adag := ParseUnionST_FixedPercentage(_fbff.Value)
			if _adag != nil {
				return _adag
			}
			_fccg.LAttr = _febfe
			continue
		}
	}
	for {
		_gbcf, _becg := d.Token()
		if _becg != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _becg)
		}
		if _geaaa, _fabed := _gbcf.(_b.EndElement); _fabed && _geaaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dccba *ST_Direction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aegeg, _agaf := d.Token()
	if _agaf != nil {
		return _agaf
	}
	if _ggca, _adffe := _aegeg.(_b.EndElement); _adffe && _ggca.Name == start.Name {
		*_dccba = 1
		return nil
	}
	if _beebgc, _dfcc := _aegeg.(_b.CharData); !_dfcc {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aegeg)
	} else {
		switch string(_beebgc) {
		case "":
			*_dccba = 0
		case "\u0068\u006f\u0072\u007a":
			*_dccba = 1
		case "\u0076\u0065\u0072\u0074":
			*_dccba = 2
		}
	}
	_aegeg, _agaf = d.Token()
	if _agaf != nil {
		return _agaf
	}
	if _bdeeb, _gfcced := _aegeg.(_b.EndElement); _gfcced && _bdeeb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aegeg)
}
func (_cffbf *CT_SlideIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbdba:
	for {
		_feead, _aebef := d.Token()
		if _aebef != nil {
			return _aebef
		}
		switch _cafbc := _feead.(type) {
		case _b.StartElement:
			switch _cafbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_affe := NewCT_SlideIdListEntry()
				if _bdbea := d.DecodeElement(_affe, &_cafbc); _bdbea != nil {
					return _bdbea
				}
				_cffbf.SldId = append(_cffbf.SldId, _affe)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _cafbc.Name)
				if _fgee := d.Skip(); _fgee != nil {
					return _fgee
				}
			}
		case _b.EndElement:
			break _cbdba
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_OrientationTransition() *CT_OrientationTransition {
	_bgba := &CT_OrientationTransition{}
	return _bgba
}
func (_feee *CT_OleObjectEmbed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _feee.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_feda, _gbacg := _feee.FollowColorSchemeAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _gbacg != nil {
			return _gbacg
		}
		start.Attr = append(start.Attr, _feda)
	}
	e.EncodeToken(start)
	if _feee.ExtLst != nil {
		_afge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feee.ExtLst, _afge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_d.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_geead := &CT_TLAnimateColorBehavior{}
	_geead.CBhvr = NewCT_TLCommonBehaviorData()
	return _geead
}
func NewCT_Extension() *CT_Extension {
	_bfc := &CT_Extension{}
	return _bfc
}
func NewCT_TLAnimVariantChoice() *CT_TLAnimVariantChoice {
	_baae := &CT_TLAnimVariantChoice{}
	return _baae
}
func (_cggae *ST_TLTimeNodeSyncType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dddg, _dabgd := d.Token()
	if _dabgd != nil {
		return _dabgd
	}
	if _ccffe, _adbea := _dddg.(_b.EndElement); _adbea && _ccffe.Name == start.Name {
		*_cggae = 1
		return nil
	}
	if _gcbbe, _eeddba := _dddg.(_b.CharData); !_eeddba {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddg)
	} else {
		switch string(_gcbbe) {
		case "":
			*_cggae = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_cggae = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_cggae = 2
		}
	}
	_dddg, _dabgd = d.Token()
	if _dabgd != nil {
		return _dabgd
	}
	if _fegbf, _bgfaa := _dddg.(_b.EndElement); _bgfaa && _fegbf.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddg)
}
func (_deagf ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _deagf {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deagf))
	}
	return nil
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

func (_bafb *ST_TLTime) ValidateWithPath(path string) error {
	_ceee := []string{}
	if _bafb.Uint32 != nil {
		_ceee = append(_ceee, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _bafb.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_ceee = append(_ceee, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_ceee) > 1 {
		return _c.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ceee)
	}
	return nil
}
func (_cfaf *CT_WebProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfaf.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.ShowAnimationAttr))})
	}
	if _cfaf.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.ResizeGraphicsAttr))})
	}
	if _cfaf.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.AllowPngAttr))})
	}
	if _cfaf.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.RelyOnVmlAttr))})
	}
	if _cfaf.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.OrganizeInFoldersAttr))})
	}
	if _cfaf.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cfaf.UseLongFilenamesAttr))})
	}
	if _cfaf.ImgSzAttr != ST_WebScreenSizeUnset {
		_fbcdb, _edcg := _cfaf.ImgSzAttr.MarshalXMLAttr(_b.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _edcg != nil {
			return _edcg
		}
		start.Attr = append(start.Attr, _fbcdb)
	}
	if _cfaf.EncodingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0076", *_cfaf.EncodingAttr)})
	}
	if _cfaf.ClrAttr != ST_WebColorTypeUnset {
		_adedb, _bcfgf := _cfaf.ClrAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u006c\u0072"})
		if _bcfgf != nil {
			return _bcfgf
		}
		start.Attr = append(start.Attr, _adedb)
	}
	e.EncodeToken(start)
	if _cfaf.ExtLst != nil {
		_cbfgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfaf.ExtLst, _cbfgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aecc *CT_OutlineViewSlideEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecdfg := range start.Attr {
		if _ecdfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecdfg.Name.Local == "\u0069\u0064" || _ecdfg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ecdfg.Name.Local == "\u0069\u0064" {
			_dbgg := _ecdfg.Value
			_aecc.IdAttr = _dbgg
			continue
		}
		if _ecdfg.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_eddf, _abdb := _e.ParseBool(_ecdfg.Value)
			if _abdb != nil {
				return _abdb
			}
			_aecc.CollapseAttr = &_eddf
			continue
		}
	}
	for {
		_aeaa, _aada := d.Token()
		if _aada != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _aada)
		}
		if _efabcf, _cdeab := _aeaa.(_b.EndElement); _cdeab && _efabcf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edeed *CT_Rel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _edeed.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccab *CT_TLIterateData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccab.TypeAttr != ST_IterateTypeUnset {
		_cdbgd, _dcdc := _ccab.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dcdc != nil {
			return _dcdc
		}
		start.Attr = append(start.Attr, _cdbgd)
	}
	if _ccab.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ccab.BackwardsAttr))})
	}
	e.EncodeToken(start)
	_ccab.TLIterateDataChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_fcfa *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _eabdf, _dfceb := range _fcfa.SldLayoutId {
		if _bdcgb := _dfceb.ValidateWithPath(_c.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _eabdf)); _bdcgb != nil {
			return _bdcgb
		}
	}
	return nil
}
func (_caaced ST_PlaceholderSize) Validate() error { return _caaced.ValidateWithPath("") }

type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

func (_gdgc *CT_TLBuildParagraph) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faec := range start.Attr {
		if _faec.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_gdgc.BuildAttr.UnmarshalXMLAttr(_faec)
			continue
		}
		if _faec.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_cfac, _gaaea := _e.ParseUint(_faec.Value, 10, 32)
			if _gaaea != nil {
				return _gaaea
			}
			_febgd := uint32(_cfac)
			_gdgc.BldLvlAttr = &_febgd
			continue
		}
		if _faec.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_gbef, _dcacc := _e.ParseBool(_faec.Value)
			if _dcacc != nil {
				return _dcacc
			}
			_gdgc.AnimBgAttr = &_gbef
			continue
		}
		if _faec.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_ebbad, _badbe := _e.ParseBool(_faec.Value)
			if _badbe != nil {
				return _badbe
			}
			_gdgc.AutoUpdateAnimBgAttr = &_ebbad
			continue
		}
		if _faec.Name.Local == "\u0072\u0065\u0076" {
			_bgff, _gecc := _e.ParseBool(_faec.Value)
			if _gecc != nil {
				return _gecc
			}
			_gdgc.RevAttr = &_bgff
			continue
		}
		if _faec.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_ebae, _adecb := ParseUnionST_TLTime(_faec.Value)
			if _adecb != nil {
				return _adecb
			}
			_gdgc.AdvAutoAttr = &_ebae
			continue
		}
		if _faec.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bggg, _fdfce := _e.ParseUint(_faec.Value, 10, 32)
			if _fdfce != nil {
				return _fdfce
			}
			_gdgc.SpidAttr = uint32(_bggg)
			continue
		}
		if _faec.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_daagg, _abeb := _e.ParseUint(_faec.Value, 10, 32)
			if _abeb != nil {
				return _abeb
			}
			_gdgc.GrpIdAttr = uint32(_daagg)
			continue
		}
		if _faec.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_badf, _egbee := _e.ParseBool(_faec.Value)
			if _egbee != nil {
				return _egbee
			}
			_gdgc.UiExpandAttr = &_badf
			continue
		}
	}
_dbef:
	for {
		_bgeaag, _bddbd := d.Token()
		if _bddbd != nil {
			return _bddbd
		}
		switch _bgdbb := _bgeaag.(type) {
		case _b.StartElement:
			switch _bgdbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_gdgc.TmplLst = NewCT_TLTemplateList()
				if _becad := d.DecodeElement(_gdgc.TmplLst, &_bgdbb); _becad != nil {
					return _becad
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _bgdbb.Name)
				if _gfed := d.Skip(); _gfed != nil {
					return _gfed
				}
			}
		case _b.EndElement:
			break _dbef
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CustomShowList() *CT_CustomShowList { _aff := &CT_CustomShowList{}; return _aff }
func (_gfabbb ST_IterateType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgdde := _b.Attr{}
	_cgdde.Name = name
	switch _gfabbb {
	case ST_IterateTypeUnset:
		_cgdde.Value = ""
	case ST_IterateTypeEl:
		_cgdde.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_cgdde.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_cgdde.Value = "\u006c\u0074"
	}
	return _cgdde, nil
}
func (_fffe *CT_TLAnimVariantStringVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _fffe.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eggga ST_TLTimeIndefinite) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbbddd := _b.Attr{}
	_fbbddd.Name = name
	switch _eggga {
	case ST_TLTimeIndefiniteUnset:
		_fbbddd.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_fbbddd.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _fbbddd, nil
}
func (_ecefge *CT_TLTemplateList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ecefge.Tmpl != nil {
		_adeab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _fbbe := range _ecefge.Tmpl {
			e.EncodeElement(_fbbe, _adeab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_beeef ST_TransitionSpeed) String() string {
	switch _beeef {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}
func (_bfda *CT_ShowInfoKiosk) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfda.RestartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_bfda.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_ga *AG_ChildSlide) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_aeeg *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _fdd := _aeeg.FillPropertiesChoice.ValidateWithPath(path + "/\u0046\u0069\u006c\u006cPr\u006fp\u0065\u0072\u0074\u0069\u0065s\u0043\u0068\u006f\u0069\u0063\u0065"); _fdd != nil {
		return _fdd
	}
	if _bec := _aeeg.EFillPropertiesChoice.ValidateWithPath(path + "\u002f\u0045\u0046\u0069ll\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069c\u0065"); _bec != nil {
		return _bec
	}
	if _bbe := _aeeg.EffectPropertiesChoice.ValidateWithPath(path + "\u002f\u0045\u0066fe\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065"); _bbe != nil {
		return _bbe
	}
	if _aeeg.ExtLst != nil {
		if _gbdb := _aeeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbdb != nil {
			return _gbdb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_bdgee *CT_SlideMaster) ValidateWithPath(path string) error {
	if _fdgc := _bdgee.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _fdgc != nil {
		return _fdgc
	}
	if _cddd := _bdgee.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _cddd != nil {
		return _cddd
	}
	if _bdgee.SldLayoutIdLst != nil {
		if _faacg := _bdgee.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _faacg != nil {
			return _faacg
		}
	}
	if _bdgee.Transition != nil {
		if _fabb := _bdgee.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _fabb != nil {
			return _fabb
		}
	}
	if _bdgee.Timing != nil {
		if _addg := _bdgee.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _addg != nil {
			return _addg
		}
	}
	if _bdgee.Hf != nil {
		if _ccgd := _bdgee.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _ccgd != nil {
			return _ccgd
		}
	}
	if _bdgee.TxStyles != nil {
		if _badb := _bdgee.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _badb != nil {
			return _badb
		}
	}
	if _bdgee.ExtLst != nil {
		if _fdgg := _bdgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdgg != nil {
			return _fdgg
		}
	}
	return nil
}
func (_dcfeb ST_TLTimeNodeMasterRelation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcfeb.String(), start)
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_aeccf *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _fgad := _aeccf.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _fgad != nil {
		return _fgad
	}
	if _aeccf.By != nil {
		if _abgfc := _aeccf.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _abgfc != nil {
			return _abgfc
		}
	}
	if _aeccf.From != nil {
		if _bdgca := _aeccf.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _bdgca != nil {
			return _bdgca
		}
	}
	if _aeccf.To != nil {
		if _cdgf := _aeccf.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _cdgf != nil {
			return _cdgf
		}
	}
	return nil
}
func (_dcffa *CT_TLTextTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dcffa.TLTextTargetElementChoice != nil {
		_dcffa.TLTextTargetElementChoice.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLCommandBehavior and its children
func (_bfga *CT_TLCommandBehavior) Validate() error {
	return _bfga.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_cebde ST_TLNextActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cebde.String(), start)
}

type CT_CustomerData struct{ IdAttr string }
type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList { _bfgg := &CT_SlideLayoutIdList{}; return _bfgg }

// Validate validates the EG_TopLevelSlide and its children
func (_bdgg *EG_TopLevelSlide) Validate() error {
	return _bdgg.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}
func (_dbcbc ST_TLTimeNodeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dbcbc.String(), start)
}
func (_gdfbc *CT_TLIterateData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdfbc.TLIterateDataChoice = NewCT_TLIterateDataChoice()
	for _, _cgfd := range start.Attr {
		if _cgfd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gdfbc.TypeAttr.UnmarshalXMLAttr(_cgfd)
			continue
		}
		if _cgfd.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_fdacb, _gdbaf := _e.ParseBool(_cgfd.Value)
			if _gdbaf != nil {
				return _gdbaf
			}
			_gdfbc.BackwardsAttr = &_fdacb
			continue
		}
	}
_bccb:
	for {
		_aagbg, _ddabg := d.Token()
		if _ddabg != nil {
			return _ddabg
		}
		switch _gbcg := _aagbg.(type) {
		case _b.StartElement:
			switch _gbcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_gdfbc.TLIterateDataChoice = NewCT_TLIterateDataChoice()
				if _gcbba := d.DecodeElement(&_gdfbc.TLIterateDataChoice.TmAbs, &_gbcg); _gcbba != nil {
					return _gcbba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_gdfbc.TLIterateDataChoice = NewCT_TLIterateDataChoice()
				if _defgb := d.DecodeElement(&_gdfbc.TLIterateDataChoice.TmPct, &_gbcg); _defgb != nil {
					return _defgb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _gbcg.Name)
				if _eefb := d.Skip(); _eefb != nil {
					return _eefb
				}
			}
		case _b.EndElement:
			break _bccb
		case _b.CharData:
		}
	}
	return nil
}

type ST_TransitionCornerDirectionType byte

func NewCT_ModifyVerifier() *CT_ModifyVerifier { _dggf := &CT_ModifyVerifier{}; return _dggf }
func (_ebaa *CT_TLAnimVariantChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdegb := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
		_ebaa.BoolVal = NewCT_TLAnimVariantBooleanVal()
		if _dacg := d.DecodeElement(_ebaa.BoolVal, &_gdegb); _dacg != nil {
			return _dacg
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
		_ebaa.IntVal = NewCT_TLAnimVariantIntegerVal()
		if _bacfc := d.DecodeElement(_ebaa.IntVal, &_gdegb); _bacfc != nil {
			return _bacfc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
		_ebaa.FltVal = NewCT_TLAnimVariantFloatVal()
		if _dcgbag := d.DecodeElement(_ebaa.FltVal, &_gdegb); _dcgbag != nil {
			return _dcgbag
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
		_ebaa.StrVal = NewCT_TLAnimVariantStringVal()
		if _cgcc := d.DecodeElement(_ebaa.StrVal, &_gdegb); _cgcc != nil {
			return _cgcc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
		_ebaa.ClrVal = _d.NewCT_Color()
		if _bbded := d.DecodeElement(_ebaa.ClrVal, &_gdegb); _bbded != nil {
			return _bbded
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0041\u006ei\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gdegb.Name)
		if _cdge := d.Skip(); _cdge != nil {
			return _cdge
		}
	}
	return nil
}
func (_cegbg *ST_TransitionSideDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfdgeg, _dcgebb := d.Token()
	if _dcgebb != nil {
		return _dcgebb
	}
	if _efafg, _aebfgg := _dfdgeg.(_b.EndElement); _aebfgg && _efafg.Name == start.Name {
		*_cegbg = 1
		return nil
	}
	if _feaac, _bdag := _dfdgeg.(_b.CharData); !_bdag {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfdgeg)
	} else {
		switch string(_feaac) {
		case "":
			*_cegbg = 0
		case "\u006c":
			*_cegbg = 1
		case "\u0075":
			*_cegbg = 2
		case "\u0072":
			*_cegbg = 3
		case "\u0064":
			*_cegbg = 4
		}
	}
	_dfdgeg, _dcgebb = d.Token()
	if _dcgebb != nil {
		return _dcgebb
	}
	if _dgfea, _eebd := _dfdgeg.(_b.EndElement); _eebd && _dgfea.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfdgeg)
}

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_bcfad *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _ddaec, _fegg := range _bcfad.Sld {
		if _eafgg := _fegg.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _ddaec)); _eafgg != nil {
			return _eafgg
		}
	}
	return nil
}
func (_eagab *CT_SlideViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_eagab.CSldViewPr, _dfbc)
	if _eagab.ExtLst != nil {
		_aafda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eagab.ExtLst, _aafda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcagc ST_TLNextActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cccaf := _b.Attr{}
	_cccaf.Name = name
	switch _dcagc {
	case ST_TLNextActionTypeUnset:
		_cccaf.Value = ""
	case ST_TLNextActionTypeNone:
		_cccaf.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_cccaf.Value = "\u0073\u0065\u0065\u006b"
	}
	return _cccaf, nil
}
func (_cfbgf *CT_TransitionSoundAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfbgf.TransitionSoundActionChoice = NewCT_TransitionSoundActionChoice()
_dcgeb:
	for {
		_fbdaf, _dacea := d.Token()
		if _dacea != nil {
			return _dacea
		}
		switch _fgdg := _fbdaf.(type) {
		case _b.StartElement:
			switch _fgdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_cfbgf.TransitionSoundActionChoice = NewCT_TransitionSoundActionChoice()
				if _bfaca := d.DecodeElement(&_cfbgf.TransitionSoundActionChoice.StSnd, &_fgdg); _bfaca != nil {
					return _bfaca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_cfbgf.TransitionSoundActionChoice = NewCT_TransitionSoundActionChoice()
				if _bdged := d.DecodeElement(&_cfbgf.TransitionSoundActionChoice.EndSnd, &_fgdg); _bdged != nil {
					return _bdged
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _fgdg.Name)
				if _fdcde := d.Skip(); _fdcde != nil {
					return _fdcde
				}
			}
		case _b.EndElement:
			break _dcgeb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideIdList and its children
func (_fcgfc *CT_SlideIdList) Validate() error {
	return _fcgfc.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}
func (_gfce *CT_TLBehaviorAttributeNameList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aefd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _dcadb := range _gfce.AttrName {
		e.EncodeElement(_dcadb, _aefd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cca *CT_CornerDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cca.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_fbfgg, _gbf := _cca.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _gbf != nil {
			return _gbf
		}
		start.Attr = append(start.Attr, _fbfgg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeCondition() *CT_TLTimeCondition { _fbcgff := &CT_TLTimeCondition{}; return _fbcgff }
func (_eadca ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _eadca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eadca))
	}
	return nil
}
func (_gfag *CT_Presentation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfag.NotesSz = _d.NewCT_PositiveSize2D()
	for _, _bdde := range start.Attr {
		if _bdde.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_gbea, _dcfb := ParseUnionST_Percentage(_bdde.Value)
			if _dcfb != nil {
				return _dcfb
			}
			_gfag.ServerZoomAttr = &_gbea
			continue
		}
		if _bdde.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_cefb, _gcad := _e.ParseInt(_bdde.Value, 10, 32)
			if _gcad != nil {
				return _gcad
			}
			_gcbb := int32(_cefb)
			_gfag.FirstSlideNumAttr = &_gcbb
			continue
		}
		if _bdde.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_fbbf, _dbdg := _e.ParseBool(_bdde.Value)
			if _dbdg != nil {
				return _dbdg
			}
			_gfag.ShowSpecialPlsOnTitleSldAttr = &_fbbf
			continue
		}
		if _bdde.Name.Local == "\u0072\u0074\u006c" {
			_gffag, _fdef := _e.ParseBool(_bdde.Value)
			if _fdef != nil {
				return _fdef
			}
			_gfag.RtlAttr = &_gffag
			continue
		}
		if _bdde.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_dcaf, _bdda := _e.ParseBool(_bdde.Value)
			if _bdda != nil {
				return _bdda
			}
			_gfag.RemovePersonalInfoOnSaveAttr = &_dcaf
			continue
		}
		if _bdde.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_bddac, _cgcf := _e.ParseBool(_bdde.Value)
			if _cgcf != nil {
				return _cgcf
			}
			_gfag.CompatModeAttr = &_bddac
			continue
		}
		if _bdde.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_ggced, _dbgf := _e.ParseBool(_bdde.Value)
			if _dbgf != nil {
				return _dbgf
			}
			_gfag.StrictFirstAndLastCharsAttr = &_ggced
			continue
		}
		if _bdde.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_gbdg, _feea := _e.ParseBool(_bdde.Value)
			if _feea != nil {
				return _feea
			}
			_gfag.EmbedTrueTypeFontsAttr = &_gbdg
			continue
		}
		if _bdde.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_dbeg, _fagfb := _e.ParseBool(_bdde.Value)
			if _fagfb != nil {
				return _fagfb
			}
			_gfag.SaveSubsetFontsAttr = &_dbeg
			continue
		}
		if _bdde.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_deda, _cgede := _e.ParseBool(_bdde.Value)
			if _cgede != nil {
				return _cgede
			}
			_gfag.AutoCompressPicturesAttr = &_deda
			continue
		}
		if _bdde.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_gaca, _cacd := _e.ParseUint(_bdde.Value, 10, 32)
			if _cacd != nil {
				return _cacd
			}
			_gadg := uint32(_gaca)
			_gfag.BookmarkIdSeedAttr = &_gadg
			continue
		}
		if _bdde.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_gfag.ConformanceAttr.UnmarshalXMLAttr(_bdde)
			continue
		}
	}
_gbdba:
	for {
		_abaf, _adff := d.Token()
		if _adff != nil {
			return _adff
		}
		switch _adba := _abaf.(type) {
		case _b.StartElement:
			switch _adba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_gfag.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _ccbfe := d.DecodeElement(_gfag.SldMasterIdLst, &_adba); _ccbfe != nil {
					return _ccbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_gfag.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _gaagf := d.DecodeElement(_gfag.NotesMasterIdLst, &_adba); _gaagf != nil {
					return _gaagf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_gfag.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _cace := d.DecodeElement(_gfag.HandoutMasterIdLst, &_adba); _cace != nil {
					return _cace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_gfag.SldIdLst = NewCT_SlideIdList()
				if _ffda := d.DecodeElement(_gfag.SldIdLst, &_adba); _ffda != nil {
					return _ffda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_gfag.SldSz = NewCT_SlideSize()
				if _dgfd := d.DecodeElement(_gfag.SldSz, &_adba); _dgfd != nil {
					return _dgfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _dgac := d.DecodeElement(_gfag.NotesSz, &_adba); _dgac != nil {
					return _dgac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_gfag.SmartTags = NewCT_SmartTags()
				if _gabf := d.DecodeElement(_gfag.SmartTags, &_adba); _gabf != nil {
					return _gabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_gfag.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _daea := d.DecodeElement(_gfag.EmbeddedFontLst, &_adba); _daea != nil {
					return _daea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_gfag.CustShowLst = NewCT_CustomShowList()
				if _fead := d.DecodeElement(_gfag.CustShowLst, &_adba); _fead != nil {
					return _fead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_gfag.PhotoAlbum = NewCT_PhotoAlbum()
				if _fagad := d.DecodeElement(_gfag.PhotoAlbum, &_adba); _fagad != nil {
					return _fagad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_gfag.CustDataLst = NewCT_CustomerDataList()
				if _fadb := d.DecodeElement(_gfag.CustDataLst, &_adba); _fadb != nil {
					return _fadb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_gfag.Kinsoku = NewCT_Kinsoku()
				if _gfbb := d.DecodeElement(_gfag.Kinsoku, &_adba); _gfbb != nil {
					return _gfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_gfag.DefaultTextStyle = _d.NewCT_TextListStyle()
				if _ddbefc := d.DecodeElement(_gfag.DefaultTextStyle, &_adba); _ddbefc != nil {
					return _ddbefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_gfag.ModifyVerifier = NewCT_ModifyVerifier()
				if _cccb := d.DecodeElement(_gfag.ModifyVerifier, &_adba); _cccb != nil {
					return _cccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfag.ExtLst = NewCT_ExtensionList()
				if _ebcga := d.DecodeElement(_gfag.ExtLst, &_adba); _ebcga != nil {
					return _ebcga
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _adba.Name)
				if _fggc := d.Skip(); _fggc != nil {
					return _fggc
				}
			}
		case _b.EndElement:
			break _gbdba
		case _b.CharData:
		}
	}
	return nil
}
func (_dccec *EG_ShowTypeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acadee := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
		_dccec.Present = NewCT_Empty()
		if _faagd := d.DecodeElement(_dccec.Present, &_acadee); _faagd != nil {
			return _faagd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
		_dccec.Browse = NewCT_ShowInfoBrowse()
		if _dggdf := d.DecodeElement(_dccec.Browse, &_acadee); _dggdf != nil {
			return _dggdf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
		_dccec.Kiosk = NewCT_ShowInfoKiosk()
		if _bcaa := d.DecodeElement(_dccec.Kiosk, &_acadee); _bcaa != nil {
			return _bcaa
		}
	default:
		_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _acadee.Name)
		if _dgfeg := d.Skip(); _dgfeg != nil {
			return _dgfeg
		}
	}
	return nil
}

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_fdagb *CT_EmbeddedFontListEntry) Validate() error {
	return _fdagb.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_d.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_d.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_gaafc ST_TLPreviousActionType) Validate() error { return _gaafc.ValidateWithPath("") }
func (_befe *CT_Presentation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _befe.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_befe.ServerZoomAttr)})
	}
	if _befe.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_befe.FirstSlideNumAttr)})
	}
	if _befe.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _befe.RtlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0074\u006c"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.RtlAttr))})
	}
	if _befe.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.RemovePersonalInfoOnSaveAttr))})
	}
	if _befe.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.CompatModeAttr))})
	}
	if _befe.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.StrictFirstAndLastCharsAttr))})
	}
	if _befe.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.EmbedTrueTypeFontsAttr))})
	}
	if _befe.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.SaveSubsetFontsAttr))})
	}
	if _befe.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_befe.AutoCompressPicturesAttr))})
	}
	if _befe.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_befe.BookmarkIdSeedAttr)})
	}
	if _befe.ConformanceAttr != _db.ST_ConformanceClassUnset {
		_cacc, _gfad := _befe.ConformanceAttr.MarshalXMLAttr(_b.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _gfad != nil {
			return _gfad
		}
		start.Attr = append(start.Attr, _cacc)
	}
	e.EncodeToken(start)
	if _befe.SldMasterIdLst != nil {
		_cceb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.SldMasterIdLst, _cceb)
	}
	if _befe.NotesMasterIdLst != nil {
		_dgdb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.NotesMasterIdLst, _dgdb)
	}
	if _befe.HandoutMasterIdLst != nil {
		_baff := _b.StartElement{Name: _b.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_befe.HandoutMasterIdLst, _baff)
	}
	if _befe.SldIdLst != nil {
		_ebba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.SldIdLst, _ebba)
	}
	if _befe.SldSz != nil {
		_dcef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_befe.SldSz, _dcef)
	}
	_cefa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_befe.NotesSz, _cefa)
	if _befe.SmartTags != nil {
		_bfff := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_befe.SmartTags, _bfff)
	}
	if _befe.EmbeddedFontLst != nil {
		_cabc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.EmbeddedFontLst, _cabc)
	}
	if _befe.CustShowLst != nil {
		_fgce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.CustShowLst, _fgce)
	}
	if _befe.PhotoAlbum != nil {
		_adbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_befe.PhotoAlbum, _adbc)
	}
	if _befe.CustDataLst != nil {
		_dacd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.CustDataLst, _dacd)
	}
	if _befe.Kinsoku != nil {
		_dedfe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_befe.Kinsoku, _dedfe)
	}
	if _befe.DefaultTextStyle != nil {
		_fdeag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_befe.DefaultTextStyle, _fdeag)
	}
	if _befe.ModifyVerifier != nil {
		_ceeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_befe.ModifyVerifier, _ceeg)
	}
	if _befe.ExtLst != nil {
		_bdca := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_befe.ExtLst, _bdca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_gfgc *CT_Slide) ValidateWithPath(path string) error {
	if _eabe := _gfgc.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _eabe != nil {
		return _eabe
	}
	if _gfgc.ClrMapOvr != nil {
		if _cagea := _gfgc.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _cagea != nil {
			return _cagea
		}
	}
	if _gfgc.Transition != nil {
		if _aded := _gfgc.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _aded != nil {
			return _aded
		}
	}
	if _gfgc.Timing != nil {
		if _eagf := _gfgc.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _eagf != nil {
			return _eagf
		}
	}
	if _gfgc.ExtLst != nil {
		if _abaa := _gfgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abaa != nil {
			return _abaa
		}
	}
	return nil
}

type ST_TLTimeNodePresetClassType byte
type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr      *string
	OleObjectChoice *CT_OleObjectChoice
	Pic             *CT_Picture
	SpidAttr        *string
	NameAttr        *string
	ShowAsIconAttr  *bool
	IdAttr          *string
	ImgWAttr        *int32
	ImgHAttr        *int32
}

// Validate validates the CT_Connector and its children
func (_cbg *CT_Connector) Validate() error {
	return _cbg.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}

// Validate validates the CT_TLByAnimateColorTransformChoice and its children
func (_deeba *CT_TLByAnimateColorTransformChoice) Validate() error {
	return _deeba.ValidateWithPath("\u0043\u0054\u005fTL\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0054r\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0043\u0068\u006f\u0069\u0063\u0065")
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

func (_fcagb *CT_TLAnimateRotationBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcagb.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _c.Sprintf("\u0025\u0076", *_fcagb.ByAttr)})
	}
	if _fcagb.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_fcagb.FromAttr)})
	}
	if _fcagb.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _c.Sprintf("\u0025\u0076", *_fcagb.ToAttr)})
	}
	e.EncodeToken(start)
	_bddf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fcagb.CBhvr, _bddf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_bebe *CT_TLAnimateMotionBehavior) Validate() error {
	return _bebe.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}
func NewCT_ViewProperties() *CT_ViewProperties {
	_aegba := &CT_ViewProperties{}
	return _aegba
}

type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_abega := &CT_TLByAnimateColorTransform{}
	_abega.TLByAnimateColorTransformChoice = NewCT_TLByAnimateColorTransformChoice()
	return _abega
}

// Validate validates the CT_Shape and its children
func (_ddadd *CT_Shape) Validate() error {
	return _ddadd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}
func (_egbeb ST_OleObjectFollowColorScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egbeb.String(), start)
}

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_adcfa *CmLst) ValidateWithPath(path string) error {
	if _cggg := _adcfa.CT_CommentList.ValidateWithPath(path); _cggg != nil {
		return _cggg
	}
	return nil
}

// Validate validates the CT_TLTimeAnimateValue and its children
func (_bdegg *CT_TLTimeAnimateValue) Validate() error {
	return _bdegg.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr       *bool
	FillPropertiesChoice   *_d.EG_FillPropertiesChoice
	EFillPropertiesChoice  *_d.EG_FillPropertiesChoice
	EffectPropertiesChoice *_d.EG_EffectPropertiesChoice
	ExtLst                 *CT_ExtensionList
}

// Validate validates the CT_HandoutMaster and its children
func (_aaa *CT_HandoutMaster) Validate() error {
	return _aaa.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_dbaca *ViewPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbaca.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _cebba := range start.Attr {
		if _cebba.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_dbaca.LastViewAttr.UnmarshalXMLAttr(_cebba)
			continue
		}
		if _cebba.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_daedd, _agfbf := _e.ParseBool(_cebba.Value)
			if _agfbf != nil {
				return _agfbf
			}
			_dbaca.ShowCommentsAttr = &_daedd
			continue
		}
	}
_gedg:
	for {
		_bfeef, _fbffb := d.Token()
		if _fbffb != nil {
			return _fbffb
		}
		switch _gdaeb := _bfeef.(type) {
		case _b.StartElement:
			switch _gdaeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.NormalViewPr = NewCT_NormalViewProperties()
				if _fbcec := d.DecodeElement(_dbaca.NormalViewPr, &_gdaeb); _fbcec != nil {
					return _fbcec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.SlideViewPr = NewCT_SlideViewProperties()
				if _febec := d.DecodeElement(_dbaca.SlideViewPr, &_gdaeb); _febec != nil {
					return _febec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.OutlineViewPr = NewCT_OutlineViewProperties()
				if _defdc := d.DecodeElement(_dbaca.OutlineViewPr, &_gdaeb); _defdc != nil {
					return _defdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _bggga := d.DecodeElement(_dbaca.NotesTextViewPr, &_gdaeb); _bggga != nil {
					return _bggga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _facgb := d.DecodeElement(_dbaca.SorterViewPr, &_gdaeb); _facgb != nil {
					return _facgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_dbaca.NotesViewPr = NewCT_NotesViewProperties()
				if _fbdb := d.DecodeElement(_dbaca.NotesViewPr, &_gdaeb); _fbdb != nil {
					return _fbdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_dbaca.GridSpacing = _d.NewCT_PositiveSize2D()
				if _ebbfe := d.DecodeElement(_dbaca.GridSpacing, &_gdaeb); _ebbfe != nil {
					return _ebbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbaca.ExtLst = NewCT_ExtensionList()
				if _gegcd := d.DecodeElement(_dbaca.ExtLst, &_gdaeb); _gegcd != nil {
					return _gegcd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _gdaeb.Name)
				if _dabbf := d.Skip(); _dabbf != nil {
					return _dabbf
				}
			}
		case _b.EndElement:
			break _gedg
		case _b.CharData:
		}
	}
	return nil
}
func (_efee ST_TLChartSubelementType) Validate() error { return _efee.ValidateWithPath("") }

type TagLst struct{ CT_TagList }

func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_aeabd := &CT_SlideSorterViewProperties{}
	_aeabd.CViewPr = NewCT_CommonViewProperties()
	return _aeabd
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_gbec *CT_OutlineViewSlideList) Validate() error {
	return _gbec.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_gbba *CT_SlideMasterTextStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gdgbf:
	for {
		_ebdge, _gabg := d.Token()
		if _gabg != nil {
			return _gabg
		}
		switch _edgg := _ebdge.(type) {
		case _b.StartElement:
			switch _edgg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gbba.TitleStyle = _d.NewCT_TextListStyle()
				if _bdbeb := d.DecodeElement(_gbba.TitleStyle, &_edgg); _bdbeb != nil {
					return _bdbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_gbba.BodyStyle = _d.NewCT_TextListStyle()
				if _cbcad := d.DecodeElement(_gbba.BodyStyle, &_edgg); _cbcad != nil {
					return _cbcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_gbba.OtherStyle = _d.NewCT_TextListStyle()
				if _adac := d.DecodeElement(_gbba.OtherStyle, &_edgg); _adac != nil {
					return _adac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbba.ExtLst = NewCT_ExtensionList()
				if _fdcd := d.DecodeElement(_gbba.ExtLst, &_edgg); _fdcd != nil {
					return _fdcd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _edgg.Name)
				if _eba := d.Skip(); _eba != nil {
					return _eba
				}
			}
		case _b.EndElement:
			break _gdgbf
		case _b.CharData:
		}
	}
	return nil
}
func (_fecaa *CT_SlideLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fecaa.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_fecaa.MatchingNameAttr)})
	}
	if _fecaa.TypeAttr != ST_SlideLayoutTypeUnset {
		_adgdf, _efae := _fecaa.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _efae != nil {
			return _efae
		}
		start.Attr = append(start.Attr, _adgdf)
	}
	if _fecaa.PreserveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fecaa.PreserveAttr))})
	}
	if _fecaa.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fecaa.UserDrawnAttr))})
	}
	if _fecaa.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fecaa.ShowMasterSpAttr))})
	}
	if _fecaa.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fecaa.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_cccfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_fecaa.CSld, _cccfd)
	if _fecaa.ClrMapOvr != nil {
		_feff := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_fecaa.ClrMapOvr, _feff)
	}
	if _fecaa.Transition != nil {
		_gbeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fecaa.Transition, _gbeb)
	}
	if _fecaa.Timing != nil {
		_aged := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_fecaa.Timing, _aged)
	}
	if _fecaa.Hf != nil {
		_ecbea := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_fecaa.Hf, _ecbea)
	}
	if _fecaa.ExtLst != nil {
		_gbbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fecaa.ExtLst, _gbbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgebab ST_TransitionSideDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgbe := _b.Attr{}
	_bgbe.Name = name
	switch _bgebab {
	case ST_TransitionSideDirectionTypeUnset:
		_bgbe.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_bgbe.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_bgbe.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_bgbe.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_bgbe.Value = "\u0064"
	}
	return _bgbe, nil
}

type CT_TLShapeTargetElementChoice struct {

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_d.CT_AnimationElementChoice
}

func (_gaeb *CT_Kinsoku) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agee := range start.Attr {
		if _agee.Name.Local == "\u006c\u0061\u006e\u0067" {
			_bbbb := _agee.Value
			_gaeb.LangAttr = &_bbbb
			continue
		}
		if _agee.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_gceb := _agee.Value
			_gaeb.InvalStCharsAttr = _gceb
			continue
		}
		if _agee.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_febg := _agee.Value
			_gaeb.InvalEndCharsAttr = _febg
			continue
		}
	}
	for {
		_bage, _bbc := d.Token()
		if _bbc != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _bbc)
		}
		if _afdd, _afda := _bage.(_b.EndElement); _afda && _afdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agcgd *ST_TLTimeNodeRestartType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eggbf, _ffgb := d.Token()
	if _ffgb != nil {
		return _ffgb
	}
	if _afbd, _bgca := _eggbf.(_b.EndElement); _bgca && _afbd.Name == start.Name {
		*_agcgd = 1
		return nil
	}
	if _cefab, _gagca := _eggbf.(_b.CharData); !_gagca {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggbf)
	} else {
		switch string(_cefab) {
		case "":
			*_agcgd = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_agcgd = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_agcgd = 2
		case "\u006e\u0065\u0076e\u0072":
			*_agcgd = 3
		}
	}
	_eggbf, _ffgb = d.Token()
	if _ffgb != nil {
		return _ffgb
	}
	if _egae, _ffaea := _eggbf.(_b.EndElement); _ffaea && _egae.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggbf)
}
func (_ebdd *CT_PhotoAlbum) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebdd.BwAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0077"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ebdd.BwAttr))})
	}
	if _ebdd.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ebdd.ShowCaptionsAttr))})
	}
	if _ebdd.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_dbcf, _acfd := _ebdd.LayoutAttr.MarshalXMLAttr(_b.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _acfd != nil {
			return _acfd
		}
		start.Attr = append(start.Attr, _dbcf)
	}
	if _ebdd.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_ggdd, _gffb := _ebdd.FrameAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _gffb != nil {
			return _gffb
		}
		start.Attr = append(start.Attr, _ggdd)
	}
	e.EncodeToken(start)
	if _ebdd.ExtLst != nil {
		_gaag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ebdd.ExtLst, _gaag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfaa *CT_HandoutMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdae:
	for {
		_agfc, _agae := d.Token()
		if _agae != nil {
			return _agae
		}
		switch _cebc := _agfc.(type) {
		case _b.StartElement:
			switch _cebc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_cfaa.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _fcdg := d.DecodeElement(_cfaa.HandoutMasterId, &_cebc); _fcdg != nil {
					return _fcdg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cebc.Name)
				if _bgef := d.Skip(); _bgef != nil {
					return _bgef
				}
			}
		case _b.EndElement:
			break _cdae
		case _b.CharData:
		}
	}
	return nil
}
func (_egeba ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _egeba {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egeba))
	}
	return nil
}
func (_ggcfa *CT_TLOleBuildChart) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggcfa.BldAttr != ST_TLOleChartBuildTypeUnset {
		_bbdff, _becdc := _ggcfa.BldAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0064"})
		if _becdc != nil {
			return _becdc
		}
		start.Attr = append(start.Attr, _bbdff)
	}
	if _ggcfa.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ggcfa.AnimBgAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _ggcfa.SpidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", _ggcfa.GrpIdAttr)})
	if _ggcfa.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ggcfa.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gccb *EG_Background) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_gccb.BackgroundChoice.MarshalXML(e, _b.StartElement{})
	return nil
}
func (_acfe *CT_TLAnimVariant) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
_bddag:
	for {
		_cadd, _gfagd := d.Token()
		if _gfagd != nil {
			return _gfagd
		}
		switch _fbbc := _cadd.(type) {
		case _b.StartElement:
			switch _fbbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
				if _gabgf := d.DecodeElement(&_acfe.TLAnimVariantChoice.BoolVal, &_fbbc); _gabgf != nil {
					return _gabgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
				if _cecdc := d.DecodeElement(&_acfe.TLAnimVariantChoice.IntVal, &_fbbc); _cecdc != nil {
					return _cecdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
				if _fabfb := d.DecodeElement(&_acfe.TLAnimVariantChoice.FltVal, &_fbbc); _fabfb != nil {
					return _fabfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
				if _dcggg := d.DecodeElement(&_acfe.TLAnimVariantChoice.StrVal, &_fbbc); _dcggg != nil {
					return _dcggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_acfe.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
				if _fbfcg := d.DecodeElement(&_acfe.TLAnimVariantChoice.ClrVal, &_fbbc); _fbfcg != nil {
					return _fbfcg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _fbbc.Name)
				if _ffde := d.Skip(); _ffde != nil {
					return _ffde
				}
			}
		case _b.EndElement:
			break _bddag
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}
type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}
type CT_GroupShapeChoice struct {
	Sp           *CT_Shape
	GrpSp        *CT_GroupShape
	GraphicFrame *CT_GraphicalObjectFrame
	CxnSp        *CT_Connector
	Pic          *CT_Picture
	ContentPart  *CT_Rel
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_ddgc *CT_ShowInfoBrowse) Validate() error {
	return _ddgc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_cdfc *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _cdfc.IdAttr != nil {
		if *_cdfc.IdAttr < 2147483648 {
			return _c.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cdfc.IdAttr)
		}
	}
	if _cdfc.ExtLst != nil {
		if _gcga := _cdfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcga != nil {
			return _gcga
		}
	}
	return nil
}
func (_febed ST_Direction) Validate() error { return _febed.ValidateWithPath("") }
func NewCT_GroupShape() *CT_GroupShape {
	_egbd := &CT_GroupShape{}
	_egbd.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_egbd.GrpSpPr = _d.NewCT_GroupShapeProperties()
	return _egbd
}
func NewCT_InOutTransition() *CT_InOutTransition { _baeg := &CT_InOutTransition{}; return _baeg }
func (_cdd *CT_CommonSlideViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdd.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cdd.SnapToGridAttr))})
	}
	if _cdd.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cdd.SnapToObjectsAttr))})
	}
	if _cdd.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cdd.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_eacb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cdd.CViewPr, _eacb)
	if _cdd.GuideLst != nil {
		_dcbg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_cdd.GuideLst, _dcbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLAnimateEffectTransition byte

func NewCT_Shape() *CT_Shape {
	_dffb := &CT_Shape{}
	_dffb.NvSpPr = NewCT_ShapeNonVisual()
	_dffb.SpPr = _d.NewCT_ShapeProperties()
	return _dffb
}
func (_dfgacb ST_WebColorType) ValidateWithPath(path string) error {
	switch _dfgacb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfgacb))
	}
	return nil
}

// Validate validates the CT_SlideSize and its children
func (_aadc *CT_SlideSize) Validate() error {
	return _aadc.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}
func (_fabfcb *ST_TLTimeNodeFillType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbadd, _ebfaa := d.Token()
	if _ebfaa != nil {
		return _ebfaa
	}
	if _agbc, _dabaf := _bbadd.(_b.EndElement); _dabaf && _agbc.Name == start.Name {
		*_fabfcb = 1
		return nil
	}
	if _beafb, _cfaacd := _bbadd.(_b.CharData); !_cfaacd {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbadd)
	} else {
		switch string(_beafb) {
		case "":
			*_fabfcb = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_fabfcb = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_fabfcb = 2
		case "\u0068\u006f\u006c\u0064":
			*_fabfcb = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_fabfcb = 4
		}
	}
	_bbadd, _ebfaa = d.Token()
	if _ebfaa != nil {
		return _ebfaa
	}
	if _adfgb, _adacc := _bbadd.(_b.EndElement); _adacc && _adfgb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbadd)
}
func (_beag *CT_EmbeddedFontList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _beag.EmbeddedFont != nil {
		_bgab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _eeb := range _beag.EmbeddedFont {
			e.EncodeElement(_eeb, _bgab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cegg *CT_SlideSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0078"}, Value: _c.Sprintf("\u0025\u0076", _cegg.CxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0079"}, Value: _c.Sprintf("\u0025\u0076", _cegg.CyAttr)})
	if _cegg.TypeAttr != ST_SlideSizeTypeUnset {
		_dfdgd, _bedb := _cegg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bedb != nil {
			return _bedb
		}
		start.Attr = append(start.Attr, _dfdgd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddgb *CT_CommentList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fcgf:
	for {
		_acg, _cbaf := d.Token()
		if _cbaf != nil {
			return _cbaf
		}
		switch _gdg := _acg.(type) {
		case _b.StartElement:
			switch _gdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_cgbeg := NewCT_Comment()
				if _agga := d.DecodeElement(_cgbeg, &_gdg); _agga != nil {
					return _agga
				}
				_ddgb.Cm = append(_ddgb.Cm, _cgbeg)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _gdg.Name)
				if _ggf := d.Skip(); _ggf != nil {
					return _ggf
				}
			}
		case _b.EndElement:
			break _fcgf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ShowProperties and its children
func (_agbeff *CT_ShowProperties) Validate() error {
	return _agbeff.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_ddgda *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ddgda = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_ddgda = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_ddgda = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_ddgda = 3
	}
	return nil
}

type SldMaster struct{ CT_SlideMaster }

func (_fgcb *CT_TLAnimateScaleBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgcb.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fgcb.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_fcbe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fgcb.CBhvr, _fcbe)
	if _fgcb.By != nil {
		_ebag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_fgcb.By, _ebag)
	}
	if _fgcb.From != nil {
		_bcead := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_fgcb.From, _bcead)
	}
	if _fgcb.To != nil {
		_bfedc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_fgcb.To, _bfedc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_fagfd := &CT_NotesTextViewProperties{}
	_fagfd.CViewPr = NewCT_CommonViewProperties()
	return _fagfd
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_da *AG_Ole) ValidateWithPath(path string) error {
	if _da.ImgWAttr != nil {
		if *_da.ImgWAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_da.ImgWAttr)
		}
	}
	if _da.ImgHAttr != nil {
		if *_da.ImgHAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_da.ImgHAttr)
		}
	}
	return nil
}
func (_acbdf *CT_TLTimeConditionChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cggbe := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
		_acbdf.TgtEl = NewCT_TLTimeTargetElement()
		if _egedbg := d.DecodeElement(_acbdf.TgtEl, &_cggbe); _egedbg != nil {
			return _egedbg
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
		_acbdf.Tn = NewCT_TLTriggerTimeNodeID()
		if _eeaa := d.DecodeElement(_acbdf.Tn, &_cggbe); _eeaa != nil {
			return _eeaa
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
		_acbdf.Rtn = NewCT_TLTriggerRuntimeNode()
		if _cfcgc := d.DecodeElement(_acbdf.Rtn, &_cggbe); _cfcgc != nil {
			return _cfcgc
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _cggbe.Name)
		if _cgcgb := d.Skip(); _cgcgb != nil {
			return _cgcgb
		}
	}
	return nil
}
func (_cbefe *CT_TLBuildDiagram) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _decbd := range start.Attr {
		if _decbd.Name.Local == "\u0062\u006c\u0064" {
			_cbefe.BldAttr.UnmarshalXMLAttr(_decbd)
			continue
		}
		if _decbd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bbcb, _gcfgg := _e.ParseUint(_decbd.Value, 10, 32)
			if _gcfgg != nil {
				return _gcfgg
			}
			_cbefe.SpidAttr = uint32(_bbcb)
			continue
		}
		if _decbd.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_ccfdf, _aaadb := _e.ParseUint(_decbd.Value, 10, 32)
			if _aaadb != nil {
				return _aaadb
			}
			_cbefe.GrpIdAttr = uint32(_ccfdf)
			continue
		}
		if _decbd.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_agfcg, _effe := _e.ParseBool(_decbd.Value)
			if _effe != nil {
				return _effe
			}
			_cbefe.UiExpandAttr = &_agfcg
			continue
		}
	}
	for {
		_fabg, _bcada := d.Token()
		if _bcada != nil {
			return _c.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _bcada)
		}
		if _gbece, _fgddb := _fabg.(_b.EndElement); _fgddb && _gbece.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_bacag *SldMaster) ValidateWithPath(path string) error {
	if _aeaed := _bacag.CT_SlideMaster.ValidateWithPath(path); _aeaed != nil {
		return _aeaed
	}
	return nil
}
func (_ceda *CT_CommonViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceda.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ceda.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_adfa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_ceda.Scale, _adfa)
	_fcag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_ceda.Origin, _fcag)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_gfcdd *CT_SlideIdList) ValidateWithPath(path string) error {
	for _gbage, _cefc := range _gfcdd.SldId {
		if _egbde := _cefc.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _gbage)); _egbde != nil {
			return _egbde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_gebfc *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }
func NewCT_TLOleBuildChart() *CT_TLOleBuildChart                              { _fcbeg := &CT_TLOleBuildChart{}; return _fcbeg }
func (_defb ST_TransitionSpeed) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfffbg := _b.Attr{}
	_bfffbg.Name = name
	switch _defb {
	case ST_TransitionSpeedUnset:
		_bfffbg.Value = ""
	case ST_TransitionSpeedSlow:
		_bfffbg.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_bfffbg.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_bfffbg.Value = "\u0066\u0061\u0073\u0074"
	}
	return _bfffbg, nil
}
func (_abbd *SldLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abbd.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _cdccf := range start.Attr {
		if _cdccf.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_afcba := _cdccf.Value
			_abbd.MatchingNameAttr = &_afcba
			continue
		}
		if _cdccf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_abbd.TypeAttr.UnmarshalXMLAttr(_cdccf)
			continue
		}
		if _cdccf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_edgd, _edega := _e.ParseBool(_cdccf.Value)
			if _edega != nil {
				return _edega
			}
			_abbd.PreserveAttr = &_edgd
			continue
		}
		if _cdccf.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gegc, _aegfc := _e.ParseBool(_cdccf.Value)
			if _aegfc != nil {
				return _aegfc
			}
			_abbd.UserDrawnAttr = &_gegc
			continue
		}
		if _cdccf.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_ecdgc, _afbea := _e.ParseBool(_cdccf.Value)
			if _afbea != nil {
				return _afbea
			}
			_abbd.ShowMasterSpAttr = &_ecdgc
			continue
		}
		if _cdccf.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_eafce, _cbff := _e.ParseBool(_cdccf.Value)
			if _cbff != nil {
				return _cbff
			}
			_abbd.ShowMasterPhAnimAttr = &_eafce
			continue
		}
	}
_debfe:
	for {
		_ffef, _fabc := d.Token()
		if _fabc != nil {
			return _fabc
		}
		switch _eedf := _ffef.(type) {
		case _b.StartElement:
			switch _eedf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _caace := d.DecodeElement(_abbd.CSld, &_eedf); _caace != nil {
					return _caace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_abbd.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _babcb := d.DecodeElement(_abbd.ClrMapOvr, &_eedf); _babcb != nil {
					return _babcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_abbd.Transition = NewCT_SlideTransition()
				if _afdc := d.DecodeElement(_abbd.Transition, &_eedf); _afdc != nil {
					return _afdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_abbd.Timing = NewCT_SlideTiming()
				if _ecbg := d.DecodeElement(_abbd.Timing, &_eedf); _ecbg != nil {
					return _ecbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_abbd.Hf = NewCT_HeaderFooter()
				if _dcab := d.DecodeElement(_abbd.Hf, &_eedf); _dcab != nil {
					return _dcab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abbd.ExtLst = NewCT_ExtensionListModify()
				if _ceefce := d.DecodeElement(_abbd.ExtLst, &_eedf); _ceefce != nil {
					return _ceefce
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _eedf.Name)
				if _ddcdd := d.Skip(); _ddcdd != nil {
					return _ddcdd
				}
			}
		case _b.EndElement:
			break _debfe
		case _b.CharData:
		}
	}
	return nil
}
func (_daaefe *ST_ViewType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_daaefe = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_daaefe = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_daaefe = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_daaefe = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_daaefe = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_daaefe = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_daaefe = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_daaefe = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_daaefe = 8
	}
	return nil
}
func (_eg *AG_TLBuild) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ad := range start.Attr {
		if _ad.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bgg, _fg := _e.ParseUint(_ad.Value, 10, 32)
			if _fg != nil {
				return _fg
			}
			_eg.SpidAttr = uint32(_bgg)
			continue
		}
		if _ad.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_cd, _aba := _e.ParseUint(_ad.Value, 10, 32)
			if _aba != nil {
				return _aba
			}
			_eg.GrpIdAttr = uint32(_cd)
			continue
		}
		if _ad.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_ffb, _fd := _e.ParseBool(_ad.Value)
			if _fd != nil {
				return _fd
			}
			_eg.UiExpandAttr = &_ffb
			continue
		}
	}
	for {
		_gef, _gea := d.Token()
		if _gea != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _gea)
		}
		if _gg, _aee := _gef.(_b.EndElement); _aee && _gg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_bdcab *CT_ShowProperties) ValidateWithPath(path string) error {
	if _dfga := _bdcab.ShowTypeChoice.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0054\u0079\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065"); _dfga != nil {
		return _dfga
	}
	if _bdcab.SldAll != nil {
		if _agbb := _bdcab.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _agbb != nil {
			return _agbb
		}
	}
	if _bdcab.SldRg != nil {
		if _fgec := _bdcab.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _fgec != nil {
			return _fgec
		}
	}
	if _bdcab.CustShow != nil {
		if _gbdbaa := _bdcab.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _gbdbaa != nil {
			return _gbdbaa
		}
	}
	if _bdcab.PenClr != nil {
		if _dbdgf := _bdcab.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _dbdgf != nil {
			return _dbdgf
		}
	}
	if _bdcab.ExtLst != nil {
		if _abag := _bdcab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abag != nil {
			return _abag
		}
	}
	return nil
}
func (_bace *CT_OleObjectEmbed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdabc := range start.Attr {
		if _bdabc.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_bace.FollowColorSchemeAttr.UnmarshalXMLAttr(_bdabc)
			continue
		}
	}
_fbef:
	for {
		_fcbcg, _gffe := d.Token()
		if _gffe != nil {
			return _gffe
		}
		switch _ggad := _fcbcg.(type) {
		case _b.StartElement:
			switch _ggad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bace.ExtLst = NewCT_ExtensionList()
				if _aedgg := d.DecodeElement(_bace.ExtLst, &_ggad); _aedgg != nil {
					return _aedgg
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _ggad.Name)
				if _acddf := d.Skip(); _acddf != nil {
					return _acddf
				}
			}
		case _b.EndElement:
			break _fbef
		case _b.CharData:
		}
	}
	return nil
}
func (_gagaa *CT_PhotoAlbum) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abcc := range start.Attr {
		if _abcc.Name.Local == "\u0062\u0077" {
			_gdgbb, _agdea := _e.ParseBool(_abcc.Value)
			if _agdea != nil {
				return _agdea
			}
			_gagaa.BwAttr = &_gdgbb
			continue
		}
		if _abcc.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_cddg, _dgde := _e.ParseBool(_abcc.Value)
			if _dgde != nil {
				return _dgde
			}
			_gagaa.ShowCaptionsAttr = &_cddg
			continue
		}
		if _abcc.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_gagaa.LayoutAttr.UnmarshalXMLAttr(_abcc)
			continue
		}
		if _abcc.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_gagaa.FrameAttr.UnmarshalXMLAttr(_abcc)
			continue
		}
	}
_ffegf:
	for {
		_bdbba, _fbfcd := d.Token()
		if _fbfcd != nil {
			return _fbfcd
		}
		switch _fdde := _bdbba.(type) {
		case _b.StartElement:
			switch _fdde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gagaa.ExtLst = NewCT_ExtensionList()
				if _fdafa := d.DecodeElement(_gagaa.ExtLst, &_fdde); _fdafa != nil {
					return _fdafa
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _fdde.Name)
				if _abge := d.Skip(); _abge != nil {
					return _abge
				}
			}
		case _b.EndElement:
			break _ffegf
		case _b.CharData:
		}
	}
	return nil
}
func NewCmAuthorLst() *CmAuthorLst {
	_fafcdg := &CmAuthorLst{}
	_fafcdg.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _fafcdg
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_eccegbd *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _aeaaa := _eccegbd.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _aeaaa != nil {
		return _aeaaa
	}
	if _fcdb := _eccegbd.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fcdb != nil {
		return _fcdb
	}
	if _gdaff := _eccegbd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _gdaff != nil {
		return _gdaff
	}
	if _eccegbd.By != nil {
		if _adfaf := _eccegbd.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _adfaf != nil {
			return _adfaf
		}
	}
	if _eccegbd.From != nil {
		if _fgfgb := _eccegbd.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _fgfgb != nil {
			return _fgfgb
		}
	}
	if _eccegbd.To != nil {
		if _bdaea := _eccegbd.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bdaea != nil {
			return _bdaea
		}
	}
	return nil
}
func (_deaeb ST_PhotoAlbumLayout) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgcgd := _b.Attr{}
	_dgcgd.Name = name
	switch _deaeb {
	case ST_PhotoAlbumLayoutUnset:
		_dgcgd.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_dgcgd.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_dgcgd.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_dgcgd.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_dgcgd.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_dgcgd.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_dgcgd.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_dgcgd.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _dgcgd, nil
}
func (_ddag *CT_SlideIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ddag.SldId != nil {
		_gbeaa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _dfeg := range _ddag.SldId {
			e.EncodeElement(_dfeg, _gbeaa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Background struct {

	// Black and White Mode
	BwModeAttr       _d.ST_BlackWhiteMode
	BackgroundChoice *EG_BackgroundChoice
}

func (_bccdg *CT_TLShapeTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afeg := range start.Attr {
		if _afeg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gdece, _bddg := _e.ParseUint(_afeg.Value, 10, 32)
			if _bddg != nil {
				return _bddg
			}
			_bccdg.SpidAttr = uint32(_gdece)
			continue
		}
	}
_fafga:
	for {
		_eadg, _fcgba := d.Token()
		if _fcgba != nil {
			return _fcgba
		}
		switch _dcdb := _eadg.(type) {
		case _b.StartElement:
			switch _dcdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_bccdg.TLShapeTargetElementChoice = NewCT_TLShapeTargetElementChoice()
				if _egad := d.DecodeElement(&_bccdg.TLShapeTargetElementChoice.Bg, &_dcdb); _egad != nil {
					return _egad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_bccdg.TLShapeTargetElementChoice = NewCT_TLShapeTargetElementChoice()
				if _efce := d.DecodeElement(&_bccdg.TLShapeTargetElementChoice.SubSp, &_dcdb); _efce != nil {
					return _efce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_bccdg.TLShapeTargetElementChoice = NewCT_TLShapeTargetElementChoice()
				if _dace := d.DecodeElement(&_bccdg.TLShapeTargetElementChoice.OleChartEl, &_dcdb); _dace != nil {
					return _dace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_bccdg.TLShapeTargetElementChoice = NewCT_TLShapeTargetElementChoice()
				if _gfdg := d.DecodeElement(&_bccdg.TLShapeTargetElementChoice.TxEl, &_dcdb); _gfdg != nil {
					return _gfdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_bccdg.TLShapeTargetElementChoice = NewCT_TLShapeTargetElementChoice()
				if _adcbf := d.DecodeElement(&_bccdg.TLShapeTargetElementChoice.GraphicEl, &_dcdb); _adcbf != nil {
					return _adcbf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _dcdb.Name)
				if _fedf := d.Skip(); _fedf != nil {
					return _fedf
				}
			}
		case _b.EndElement:
			break _fafga
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_aeadf *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _cgffg := _aeadf.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _cgffg != nil {
		return _cgffg
	}
	if _eeegbb := _aeadf.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _eeegbb != nil {
		return _eeegbb
	}
	if _aeadf.Progress != nil {
		if _cecbf := _aeadf.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _cecbf != nil {
			return _cecbf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_abfg *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _abfg.ExtLst != nil {
		if _aegd := _abfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aegd != nil {
			return _aegd
		}
	}
	return nil
}
func (_babg ST_TLTimeNodeMasterRelation) String() string {
	switch _babg {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}
func (_cgge *CT_ShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_edce := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_cgge.CNvPr, _edce)
	_gggb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_cgge.CNvSpPr, _gggb)
	_cacb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_cgge.NvPr, _cacb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantChoice and its children, prefixing error messages with path
func (_dggdg *CT_TLAnimVariantChoice) ValidateWithPath(path string) error {
	if _dggdg.BoolVal != nil {
		if _eaaba := _dggdg.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _eaaba != nil {
			return _eaaba
		}
	}
	if _dggdg.IntVal != nil {
		if _bbaccb := _dggdg.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _bbaccb != nil {
			return _bbaccb
		}
	}
	if _dggdg.FltVal != nil {
		if _aafeb := _dggdg.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _aafeb != nil {
			return _aafeb
		}
	}
	if _dggdg.StrVal != nil {
		if _caag := _dggdg.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _caag != nil {
			return _caag
		}
	}
	if _dggdg.ClrVal != nil {
		if _bbgee := _dggdg.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _bbgee != nil {
			return _bbgee
		}
	}
	return nil
}
func NewCT_TLIterateData() *CT_TLIterateData {
	_ebaf := &CT_TLIterateData{}
	_ebaf.TLIterateDataChoice = NewCT_TLIterateDataChoice()
	return _ebaf
}

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_afbf *CT_IndexRange) ValidateWithPath(path string) error { return nil }
func (_gbfbd ST_TLAnimateEffectTransition) Validate() error     { return _gbfbd.ValidateWithPath("") }
func NewCT_SlideMaster() *CT_SlideMaster {
	_egdd := &CT_SlideMaster{}
	_egdd.CSld = NewCT_CommonSlideData()
	_egdd.ClrMap = _d.NewCT_ColorMapping()
	return _egdd
}
func (_bfcc *CT_TLPoint) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _c.Sprintf("\u0025\u0076", _bfcc.XAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079"}, Value: _c.Sprintf("\u0025\u0076", _bfcc.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OleObject and its children
func (_cdef *CT_OleObject) Validate() error {
	return _cdef.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_eeaf *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _eagae := _eeaf.TLGraphicalObjectBuildChoice.ValidateWithPath(path + "\u002f\u0054L\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0043\u0068oi\u0063\u0065"); _eagae != nil {
		return _eagae
	}
	return nil
}
func (_cdaee *CT_TLTimeTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdaee.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
_babd:
	for {
		_aebbd, _gecf := d.Token()
		if _gecf != nil {
			return _gecf
		}
		switch _fcbbce := _aebbd.(type) {
		case _b.StartElement:
			switch _fcbbce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_cdaee.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
				if _edddg := d.DecodeElement(&_cdaee.TLTimeTargetElementChoice.SldTgt, &_fcbbce); _edddg != nil {
					return _edddg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_cdaee.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
				if _cbfae := d.DecodeElement(&_cdaee.TLTimeTargetElementChoice.SndTgt, &_fcbbce); _cbfae != nil {
					return _cbfae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_cdaee.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
				if _fbgc := d.DecodeElement(&_cdaee.TLTimeTargetElementChoice.SpTgt, &_fcbbce); _fbgc != nil {
					return _fbgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_cdaee.TLTimeTargetElementChoice = NewCT_TLTimeTargetElementChoice()
				if _dafba := d.DecodeElement(&_cdaee.TLTimeTargetElementChoice.InkTgt, &_fcbbce); _dafba != nil {
					return _dafba
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _fcbbce.Name)
				if _gaabd := d.Skip(); _gaabd != nil {
					return _gaabd
				}
			}
		case _b.EndElement:
			break _babd
		case _b.CharData:
		}
	}
	return nil
}

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}

func (_aegcf *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbgag, _edbfd := d.Token()
	if _edbfd != nil {
		return _edbfd
	}
	if _gecaf, _dccbcb := _cbgag.(_b.EndElement); _dccbcb && _gecaf.Name == start.Name {
		*_aegcf = 1
		return nil
	}
	if _aedc, _febef := _cbgag.(_b.CharData); !_febef {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbgag)
	} else {
		switch string(_aedc) {
		case "":
			*_aegcf = 0
		case "\u0065\u006e\u0074\u0072":
			*_aegcf = 1
		case "\u0065\u0078\u0069\u0074":
			*_aegcf = 2
		case "\u0065\u006d\u0070\u0068":
			*_aegcf = 3
		case "\u0070\u0061\u0074\u0068":
			*_aegcf = 4
		case "\u0076\u0065\u0072\u0062":
			*_aegcf = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_aegcf = 6
		}
	}
	_cbgag, _edbfd = d.Token()
	if _edbfd != nil {
		return _edbfd
	}
	if _cfdfg, _baacg := _cbgag.(_b.EndElement); _baacg && _cfdfg.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbgag)
}
func (_fafe *CT_Control) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edea := range start.Attr {
		if _edea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _edea.Name.Local == "\u0069\u0064" {
			_cgaa := _edea.Value
			_fafe.IdAttr = &_cgaa
			continue
		}
		if _edea.Name.Local == "\u0073\u0070\u0069\u0064" {
			_geef := _edea.Value
			_fafe.SpidAttr = &_geef
			continue
		}
		if _edea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebgc := _edea.Value
			_fafe.NameAttr = &_ebgc
			continue
		}
		if _edea.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_dfd, _fdag := _e.ParseBool(_edea.Value)
			if _fdag != nil {
				return _fdag
			}
			_fafe.ShowAsIconAttr = &_dfd
			continue
		}
		if _edea.Name.Local == "\u0069\u006d\u0067\u0057" {
			_ggab, _gaaf := _e.ParseInt(_edea.Value, 10, 32)
			if _gaaf != nil {
				return _gaaf
			}
			_gfg := int32(_ggab)
			_fafe.ImgWAttr = &_gfg
			continue
		}
		if _edea.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bebf, _ebe := _e.ParseInt(_edea.Value, 10, 32)
			if _ebe != nil {
				return _ebe
			}
			_gefd := int32(_bebf)
			_fafe.ImgHAttr = &_gefd
			continue
		}
	}
_caac:
	for {
		_dgf, _eaf := d.Token()
		if _eaf != nil {
			return _eaf
		}
		switch _efc := _dgf.(type) {
		case _b.StartElement:
			switch _efc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fafe.ExtLst = NewCT_ExtensionList()
				if _ffe := d.DecodeElement(_fafe.ExtLst, &_efc); _ffe != nil {
					return _ffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_fafe.Pic = NewCT_Picture()
				if _aea := d.DecodeElement(_fafe.Pic, &_efc); _aea != nil {
					return _aea
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _efc.Name)
				if _acde := d.Skip(); _acde != nil {
					return _acde
				}
			}
		case _b.EndElement:
			break _caac
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     uint32
	GrpIdAttr    uint32
	UiExpandAttr *bool
}

func (_ddbg *CT_ControlList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_efde:
	for {
		_beae, _dbcg := d.Token()
		if _dbcg != nil {
			return _dbcg
		}
		switch _fdc := _beae.(type) {
		case _b.StartElement:
			switch _fdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_gaed := NewCT_Control()
				if _daef := d.DecodeElement(_gaed, &_fdc); _daef != nil {
					return _daef
				}
				_ddbg.Control = append(_ddbg.Control, _gaed)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _fdc.Name)
				if _gfb := d.Skip(); _gfb != nil {
					return _gfb
				}
			}
		case _b.EndElement:
			break _efde
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_fcdbad *SldSyncPr) ValidateWithPath(path string) error {
	if _dbdce := _fcdbad.CT_SlideSyncProperties.ValidateWithPath(path); _dbdce != nil {
		return _dbdce
	}
	return nil
}
func (_gdac *CT_CustomerData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _gdac.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

func (_cgac *CT_TLGraphicalObjectBuildChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cgac.BldAsOne != nil {
		_afde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_cgac.BldAsOne, _afde)
	} else if _cgac.BldSub != nil {
		_ccgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_cgac.BldSub, _ccgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggfbd *ST_TLTimeAnimateValueTime) Validate() error { return _ggfbd.ValidateWithPath("") }

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_bcbce *CT_ViewProperties) ValidateWithPath(path string) error {
	if _dbaad := _bcbce.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _dbaad != nil {
		return _dbaad
	}
	if _bcbce.NormalViewPr != nil {
		if _gebgb := _bcbce.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _gebgb != nil {
			return _gebgb
		}
	}
	if _bcbce.SlideViewPr != nil {
		if _efabb := _bcbce.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _efabb != nil {
			return _efabb
		}
	}
	if _bcbce.OutlineViewPr != nil {
		if _agcf := _bcbce.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _agcf != nil {
			return _agcf
		}
	}
	if _bcbce.NotesTextViewPr != nil {
		if _defec := _bcbce.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _defec != nil {
			return _defec
		}
	}
	if _bcbce.SorterViewPr != nil {
		if _bgeeg := _bcbce.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _bgeeg != nil {
			return _bgeeg
		}
	}
	if _bcbce.NotesViewPr != nil {
		if _beebgb := _bcbce.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _beebgb != nil {
			return _beebgb
		}
	}
	if _bcbce.GridSpacing != nil {
		if _bacd := _bcbce.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _bacd != nil {
			return _bacd
		}
	}
	if _bcbce.ExtLst != nil {
		if _cbfgb := _bcbce.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbfgb != nil {
			return _cbfgb
		}
	}
	return nil
}

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_fbgcb *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _aaec := _fbgcb.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _aaec != nil {
		return _aaec
	}
	return nil
}
func (_cgacd ST_TLTimeNodeMasterRelation) Validate() error { return _cgacd.ValidateWithPath("") }

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_fcfba *CT_CommentList) ValidateWithPath(path string) error {
	for _bdgd, _bbdd := range _fcfba.Cm {
		if _ebd := _bbdd.ValidateWithPath(_c.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _bdgd)); _ebd != nil {
			return _ebd
		}
	}
	return nil
}
func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_bbge := &CT_OptionalBlackTransition{}
	return _bbge
}
func (_aebdg *CT_TLTimeAnimateValue) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffgf := range start.Attr {
		if _ffgf.Name.Local == "\u0074\u006d" {
			_cgfgc, _feae := ParseUnionST_TLTimeAnimateValueTime(_ffgf.Value)
			if _feae != nil {
				return _feae
			}
			_aebdg.TmAttr = &_cgfgc
			continue
		}
		if _ffgf.Name.Local == "\u0066\u006d\u006c\u0061" {
			_faca := _ffgf.Value
			_aebdg.FmlaAttr = &_faca
			continue
		}
	}
_cadc:
	for {
		_geedb, _fdecc := d.Token()
		if _fdecc != nil {
			return _fdecc
		}
		switch _bddga := _geedb.(type) {
		case _b.StartElement:
			switch _bddga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_aebdg.Val = NewCT_TLAnimVariant()
				if _aafa := d.DecodeElement(_aebdg.Val, &_bddga); _aafa != nil {
					return _aafa
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _bddga.Name)
				if _gffba := d.Skip(); _gffba != nil {
					return _gffba
				}
			}
		case _b.EndElement:
			break _cadc
		case _b.CharData:
		}
	}
	return nil
}

type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_d.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func NewCT_TagList() *CT_TagList { _beaee := &CT_TagList{}; return _beaee }
func (_ccegg *CT_NotesViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccegg.CSldViewPr = NewCT_CommonSlideViewProperties()
_dbae:
	for {
		_gdbec, _dffa := d.Token()
		if _dffa != nil {
			return _dffa
		}
		switch _fae := _gdbec.(type) {
		case _b.StartElement:
			switch _fae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _gdbeca := d.DecodeElement(_ccegg.CSldViewPr, &_fae); _gdbeca != nil {
					return _gdbeca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccegg.ExtLst = NewCT_ExtensionList()
				if _eecee := d.DecodeElement(_ccegg.ExtLst, &_fae); _eecee != nil {
					return _eecee
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fae.Name)
				if _aagf := d.Skip(); _aagf != nil {
					return _aagf
				}
			}
		case _b.EndElement:
			break _dbae
		case _b.CharData:
		}
	}
	return nil
}
func (_aefc *CT_NotesTextViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ddac := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_aefc.CViewPr, _ddac)
	if _aefc.ExtLst != nil {
		_egcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aefc.ExtLst, _egcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_afffa *CT_TLByRgbColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eadbb := range start.Attr {
		if _eadbb.Name.Local == "\u0072" {
			_gfac, _ebab := ParseUnionST_FixedPercentage(_eadbb.Value)
			if _ebab != nil {
				return _ebab
			}
			_afffa.RAttr = _gfac
			continue
		}
		if _eadbb.Name.Local == "\u0067" {
			_fbdff, _fdeg := ParseUnionST_FixedPercentage(_eadbb.Value)
			if _fdeg != nil {
				return _fdeg
			}
			_afffa.GAttr = _fbdff
			continue
		}
		if _eadbb.Name.Local == "\u0062" {
			_eadee, _ggffe := ParseUnionST_FixedPercentage(_eadbb.Value)
			if _ggffe != nil {
				return _ggffe
			}
			_afffa.BAttr = _eadee
			continue
		}
	}
	for {
		_cedb, _eecec := d.Token()
		if _eecec != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _eecec)
		}
		if _daebc, _abdg := _cedb.(_b.EndElement); _abdg && _daebc.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

func (_bedd *CT_TLOleBuildChart) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cggb := range start.Attr {
		if _cggb.Name.Local == "\u0062\u006c\u0064" {
			_bedd.BldAttr.UnmarshalXMLAttr(_cggb)
			continue
		}
		if _cggb.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_bgeab, _bdfge := _e.ParseBool(_cggb.Value)
			if _bdfge != nil {
				return _bdfge
			}
			_bedd.AnimBgAttr = &_bgeab
			continue
		}
		if _cggb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fcbfe, _beba := _e.ParseUint(_cggb.Value, 10, 32)
			if _beba != nil {
				return _beba
			}
			_bedd.SpidAttr = uint32(_fcbfe)
			continue
		}
		if _cggb.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_bafe, _dfdcf := _e.ParseUint(_cggb.Value, 10, 32)
			if _dfdcf != nil {
				return _dfdcf
			}
			_bedd.GrpIdAttr = uint32(_bafe)
			continue
		}
		if _cggb.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cfga, _bgdag := _e.ParseBool(_cggb.Value)
			if _bgdag != nil {
				return _bgdag
			}
			_bedd.UiExpandAttr = &_cfga
			continue
		}
	}
	for {
		_bfedf, _bbda := d.Token()
		if _bbda != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _bbda)
		}
		if _ccde, _fgda := _bfedf.(_b.EndElement); _fgda && _ccde.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)
const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_afcc *CT_SlideLayoutIdListEntry) Validate() error {
	return _afcc.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func NewEG_BackgroundChoice() *EG_BackgroundChoice {
	_efcb := &EG_BackgroundChoice{}
	return _efcb
}
func (_gcgd ST_TLTimeNodeRestartType) Validate() error { return _gcgd.ValidateWithPath("") }
func (_eaac *CT_Slide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaac.ShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_eaac.ShowAttr))})
	}
	if _eaac.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_eaac.ShowMasterSpAttr))})
	}
	if _eaac.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_eaac.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_adfff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_eaac.CSld, _adfff)
	if _eaac.ClrMapOvr != nil {
		_bgabg := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_eaac.ClrMapOvr, _bgabg)
	}
	if _eaac.Transition != nil {
		_eecb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_eaac.Transition, _eecb)
	}
	if _eaac.Timing != nil {
		_dcgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_eaac.Timing, _dcgc)
	}
	if _eaac.ExtLst != nil {
		_eefcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaac.ExtLst, _eefcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_befgd *CT_IndexRange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebce := range start.Attr {
		if _ebce.Name.Local == "\u0073\u0074" {
			_cegf, _efda := _e.ParseUint(_ebce.Value, 10, 32)
			if _efda != nil {
				return _efda
			}
			_befgd.StAttr = uint32(_cegf)
			continue
		}
		if _ebce.Name.Local == "\u0065\u006e\u0064" {
			_deec, _dcfge := _e.ParseUint(_ebce.Value, 10, 32)
			if _dcfge != nil {
				return _dcfge
			}
			_befgd.EndAttr = uint32(_deec)
			continue
		}
	}
	for {
		_febb, _aead := d.Token()
		if _aead != nil {
			return _c.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _aead)
		}
		if _ffba, _fdbe := _febb.(_b.EndElement); _fdbe && _ffba.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_afdf *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _afdf.ExtLst != nil {
		if _gdgeg := _afdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdgeg != nil {
			return _gdgeg
		}
	}
	return nil
}
func ParseUnionST_FixedPercentage(s string) (_d.ST_FixedPercentage, error) {
	return _d.ParseUnionST_FixedPercentage(s)
}
func (_dbdacd ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fagca := _b.Attr{}
	_fagca.Name = name
	switch _dbdacd {
	case ST_TLBehaviorAdditiveTypeUnset:
		_fagca.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_fagca.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_fagca.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_fagca.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_fagca.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_fagca.Value = "\u006e\u006f\u006e\u0065"
	}
	return _fagca, nil
}
func (_dfcfb ST_IterateType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfcfb.String(), start)
}
func NewCT_PhotoAlbum() *CT_PhotoAlbum { _eefc := &CT_PhotoAlbum{}; return _eefc }
func NewCT_SlideTransition() *CT_SlideTransition {
	_abba := &CT_SlideTransition{}
	return _abba
}
func NewCT_TLBuildDiagram() *CT_TLBuildDiagram { _cddfa := &CT_TLBuildDiagram{}; return _cddfa }
func (_afeaad ST_PrintColorMode) String() string {
	switch _afeaad {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}
func NewCT_Guide() *CT_Guide { _ebgcg := &CT_Guide{}; return _ebgcg }
func (_ba *CT_BuildListChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ba.BldP != nil {
		_gdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		e.EncodeElement(_ba.BldP, _gdf)
	} else if _ba.BldDgm != nil {
		_faga := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_ba.BldDgm, _faga)
	} else if _ba.BldOleChart != nil {
		_geba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_ba.BldOleChart, _geba)
	} else if _ba.BldGraphic != nil {
		_edg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		e.EncodeElement(_ba.BldGraphic, _edg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_befc *CT_InOutTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agdba := range start.Attr {
		if _agdba.Name.Local == "\u0064\u0069\u0072" {
			_befc.DirAttr.UnmarshalXMLAttr(_agdba)
			continue
		}
	}
	for {
		_gbcc, _ffd := d.Token()
		if _ffd != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _ffd)
		}
		if _ffeeb, _efabc := _gbcc.(_b.EndElement); _efabc && _ffeeb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLShapeTargetElementChoice and its children
func (_eedda *CT_TLShapeTargetElementChoice) Validate() error {
	return _eedda.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u0068oi\u0063\u0065")
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

// Validate validates the CT_Placeholder and its children
func (_cebb *CT_Placeholder) Validate() error {
	return _cebb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_egabg *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _egabg.TitleStyle != nil {
		if _dfgef := _egabg.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _dfgef != nil {
			return _dfgef
		}
	}
	if _egabg.BodyStyle != nil {
		if _eacd := _egabg.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _eacd != nil {
			return _eacd
		}
	}
	if _egabg.OtherStyle != nil {
		if _gfbge := _egabg.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _gfbge != nil {
			return _gfbge
		}
	}
	if _egabg.ExtLst != nil {
		if _cbaeb := _egabg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbaeb != nil {
			return _cbaeb
		}
	}
	return nil
}
func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_ddea := &CT_TLIterateIntervalPercentage{}
	return _ddea
}
func (_bcbb *CT_SmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcfcf := range start.Attr {
		if _bcfcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bcfcf.Name.Local == "\u0069\u0064" || _bcfcf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bcfcf.Name.Local == "\u0069\u0064" {
			_fedbf := _bcfcf.Value
			_bcbb.IdAttr = _fedbf
			continue
		}
	}
	for {
		_ddbgd, _egegg := d.Token()
		if _egegg != nil {
			return _c.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _egegg)
		}
		if _efbf, _acge := _ddbgd.(_b.EndElement); _acge && _efbf.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLBehaviorAccumulateType byte

func (_bgead *CT_EmbeddedFontDataId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _bgead.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcdbg ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _gcdbg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcdbg))
	}
	return nil
}
func (_debe *CT_NormalViewPortion) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffgg := range start.Attr {
		if _ffgg.Name.Local == "\u0073\u007a" {
			_dbg, _cdac := ParseUnionST_PositiveFixedPercentage(_ffgg.Value)
			if _cdac != nil {
				return _cdac
			}
			_debe.SzAttr = _dbg
			continue
		}
		if _ffgg.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_eedaf, _gdcf := _e.ParseBool(_ffgg.Value)
			if _gdcf != nil {
				return _gdcf
			}
			_debe.AutoAdjustAttr = &_eedaf
			continue
		}
	}
	for {
		_eccf, _cfef := d.Token()
		if _cfef != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _cfef)
		}
		if _beaf, _daf := _eccf.(_b.EndElement); _daf && _beaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agacb ST_ViewType) ValidateWithPath(path string) error {
	switch _agacb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agacb))
	}
	return nil
}

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_dfdf *SldLayout) ValidateWithPath(path string) error {
	if _cdeb := _dfdf.CT_SlideLayout.ValidateWithPath(path); _cdeb != nil {
		return _cdeb
	}
	return nil
}
func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_dgbbb := &CT_PictureNonVisual{}
	_dgbbb.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_dgbbb.CNvPicPr = _d.NewCT_NonVisualPictureProperties()
	_dgbbb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _dgbbb
}

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_dfdd *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _dfdd.ExtLst != nil {
		if _cfee := _dfdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfee != nil {
			return _cfee
		}
	}
	return nil
}

type CT_BuildList struct {
	BuildListChoice []*CT_BuildListChoice
}

func (_ecf *CT_Background) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecf.BwModeAttr != _d.ST_BlackWhiteModeUnset {
		_aed, _eccg := _ecf.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _eccg != nil {
			return _eccg
		}
		start.Attr = append(start.Attr, _aed)
	}
	e.EncodeToken(start)
	_ecf.BackgroundChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cacdd ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cacdd.String(), start)
}

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_d.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_d.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}
type CT_SlideRelationshipListEntry struct{ IdAttr string }

func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_afcg := &CT_NotesViewProperties{}
	_afcg.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _afcg
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_ggae *CT_CustomShow) ValidateWithPath(path string) error {
	if _ade := _ggae.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _ade != nil {
		return _ade
	}
	if _ggae.ExtLst != nil {
		if _bcfb := _ggae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcfb != nil {
			return _bcfb
		}
	}
	return nil
}
func NewCT_SlideLayout() *CT_SlideLayout {
	_ebcc := &CT_SlideLayout{}
	_ebcc.CSld = NewCT_CommonSlideData()
	return _ebcc
}
func (_dfegd *CT_TimeNodeList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gcff:
	for {
		_bbgdg, _feeadg := d.Token()
		if _feeadg != nil {
			return _feeadg
		}
		switch _dcgbc := _bbgdg.(type) {
		case _b.StartElement:
			switch _dcgbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_cbceb := NewCT_TimeNodeListChoice()
				if _gfbee := d.DecodeElement(&_cbceb.Par, &_dcgbc); _gfbee != nil {
					return _gfbee
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _cbceb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_ccdd := NewCT_TimeNodeListChoice()
				if _eafbb := d.DecodeElement(&_ccdd.Seq, &_dcgbc); _eafbb != nil {
					return _eafbb
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _ccdd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_eeca := NewCT_TimeNodeListChoice()
				if _edbbb := d.DecodeElement(&_eeca.Excl, &_dcgbc); _edbbb != nil {
					return _edbbb
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _eeca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_adfd := NewCT_TimeNodeListChoice()
				if _ddada := d.DecodeElement(&_adfd.Anim, &_dcgbc); _ddada != nil {
					return _ddada
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _adfd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_gfbgd := NewCT_TimeNodeListChoice()
				if _ddba := d.DecodeElement(&_gfbgd.AnimClr, &_dcgbc); _ddba != nil {
					return _ddba
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _gfbgd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_ggaae := NewCT_TimeNodeListChoice()
				if _bdeed := d.DecodeElement(&_ggaae.AnimEffect, &_dcgbc); _bdeed != nil {
					return _bdeed
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _ggaae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_bfecd := NewCT_TimeNodeListChoice()
				if _aeef := d.DecodeElement(&_bfecd.AnimMotion, &_dcgbc); _aeef != nil {
					return _aeef
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _bfecd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_egbfb := NewCT_TimeNodeListChoice()
				if _gbga := d.DecodeElement(&_egbfb.AnimRot, &_dcgbc); _gbga != nil {
					return _gbga
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _egbfb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_agebg := NewCT_TimeNodeListChoice()
				if _fgffd := d.DecodeElement(&_agebg.AnimScale, &_dcgbc); _fgffd != nil {
					return _fgffd
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _agebg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_gacbf := NewCT_TimeNodeListChoice()
				if _cfabc := d.DecodeElement(&_gacbf.Cmd, &_dcgbc); _cfabc != nil {
					return _cfabc
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _gacbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_acdac := NewCT_TimeNodeListChoice()
				if _dfface := d.DecodeElement(&_acdac.Set, &_dcgbc); _dfface != nil {
					return _dfface
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _acdac)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_bdfce := NewCT_TimeNodeListChoice()
				if _afacb := d.DecodeElement(&_bdfce.Audio, &_dcgbc); _afacb != nil {
					return _afacb
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _bdfce)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_gcac := NewCT_TimeNodeListChoice()
				if _bagbb := d.DecodeElement(&_gcac.Video, &_dcgbc); _bagbb != nil {
					return _bagbb
				}
				_dfegd.TimeNodeListChoice = append(_dfegd.TimeNodeListChoice, _gcac)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dcgbc.Name)
				if _gfggg := d.Skip(); _gfggg != nil {
					return _gfggg
				}
			}
		case _b.EndElement:
			break _gcff
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SlideSize() *CT_SlideSize {
	_facgf := &CT_SlideSize{}
	_facgf.CxAttr = 914400
	_facgf.CyAttr = 914400
	return _facgf
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)
const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)

type ST_TLTriggerEvent byte

func (_cgea *CT_TimeNodeList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	for _, _aefbf := range _cgea.TimeNodeListChoice {
		_aefbf.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PresentationProperties and its children
func (_bcab *CT_PresentationProperties) Validate() error {
	return _bcab.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_bddfe *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _daebd := _bddfe.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _daebd != nil {
		return _daebd
	}
	return nil
}

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     uint32
	GrpIdAttr    uint32
	UiExpandAttr *bool
}

func (_eafga ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _eafga {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eafga))
	}
	return nil
}
func (_gdcbg ST_PhotoAlbumFrameShape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdcbg.String(), start)
}

type EG_ShowType struct{ ShowTypeChoice *EG_ShowTypeChoice }

// Validate validates the CT_SlideTransitionChoice and its children
func (_eeegc *CT_SlideTransitionChoice) Validate() error {
	return _eeegc.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_gbfcf *ST_TLPreviousActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceaaf, _eeba := d.Token()
	if _eeba != nil {
		return _eeba
	}
	if _ddfa, _fgace := _ceaaf.(_b.EndElement); _fgace && _ddfa.Name == start.Name {
		*_gbfcf = 1
		return nil
	}
	if _cbadg, _ebggb := _ceaaf.(_b.CharData); !_ebggb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceaaf)
	} else {
		switch string(_cbadg) {
		case "":
			*_gbfcf = 0
		case "\u006e\u006f\u006e\u0065":
			*_gbfcf = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_gbfcf = 2
		}
	}
	_ceaaf, _eeba = d.Token()
	if _eeba != nil {
		return _eeba
	}
	if _eefdc, _dbbg := _ceaaf.(_b.EndElement); _dbbg && _eefdc.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceaaf)
}
func (_bgfa *CT_Kinsoku) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgfa.LangAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0076", *_bgfa.LangAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _c.Sprintf("\u0025\u0076", _bgfa.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _c.Sprintf("\u0025\u0076", _bgfa.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbcfa *ST_TLChartSubelementType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dccef, _cfdcc := d.Token()
	if _cfdcc != nil {
		return _cfdcc
	}
	if _daab, _fdeb := _dccef.(_b.EndElement); _fdeb && _daab.Name == start.Name {
		*_dbcfa = 1
		return nil
	}
	if _cbcf, _bceab := _dccef.(_b.CharData); !_bceab {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dccef)
	} else {
		switch string(_cbcf) {
		case "":
			*_dbcfa = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_dbcfa = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_dbcfa = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dbcfa = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_dbcfa = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dbcfa = 5
		}
	}
	_dccef, _cfdcc = d.Token()
	if _cfdcc != nil {
		return _cfdcc
	}
	if _beced, _bcag := _dccef.(_b.EndElement); _bcag && _beced.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dccef)
}
func (_agbe *CT_CommentAuthor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fac := range start.Attr {
		if _fac.Name.Local == "\u0069\u0064" {
			_abef, _eed := _e.ParseUint(_fac.Value, 10, 32)
			if _eed != nil {
				return _eed
			}
			_agbe.IdAttr = uint32(_abef)
			continue
		}
		if _fac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eaga := _fac.Value
			_agbe.NameAttr = _eaga
			continue
		}
		if _fac.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_gec := _fac.Value
			_agbe.InitialsAttr = _gec
			continue
		}
		if _fac.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_bdb, _dfg := _e.ParseUint(_fac.Value, 10, 32)
			if _dfg != nil {
				return _dfg
			}
			_agbe.LastIdxAttr = uint32(_bdb)
			continue
		}
		if _fac.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_cedd, _gdeb := _e.ParseUint(_fac.Value, 10, 32)
			if _gdeb != nil {
				return _gdeb
			}
			_agbe.ClrIdxAttr = uint32(_cedd)
			continue
		}
	}
_agg:
	for {
		_cgg, _bcg := d.Token()
		if _bcg != nil {
			return _bcg
		}
		switch _fbad := _cgg.(type) {
		case _b.StartElement:
			switch _fbad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agbe.ExtLst = NewCT_ExtensionList()
				if _fgg := d.DecodeElement(_agbe.ExtLst, &_fbad); _fgg != nil {
					return _fgg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _fbad.Name)
				if _dgd := d.Skip(); _dgd != nil {
					return _dgd
				}
			}
		case _b.EndElement:
			break _agg
		case _b.CharData:
		}
	}
	return nil
}

type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}

func (_dgccb *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_cfeb := []string{}
	if _dgccb.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_cfeb = append(_cfeb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _dgccb.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_cfeb = append(_cfeb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_cfeb) > 1 {
		return _c.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cfeb)
	}
	return nil
}

// Validate validates the Presentation and its children
func (_bffgb *Presentation) Validate() error {
	return _bffgb.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_Picture and its children
func (_affc *CT_Picture) Validate() error {
	return _affc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _d.ST_Percentage

	// Y coordinate
	YAttr _d.ST_Percentage
}

func (_beebfa ST_TransitionCornerDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_beebfa.String(), start)
}

// Validate validates the CT_TLTimeNodeSequence and its children
func (_aceba *CT_TLTimeNodeSequence) Validate() error {
	return _aceba.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}
func (_begabb ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfcd := _b.Attr{}
	_dfcd.Name = name
	switch _begabb {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_dfcd.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_dfcd.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_dfcd.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_dfcd.Value = "\u0063\u006c\u0072"
	}
	return _dfcd, nil
}

// Validate validates the CT_NotesMasterIdList and its children
func (_fdce *CT_NotesMasterIdList) Validate() error {
	return _fdce.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_gccd *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _fefbg := _gccd.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _fefbg != nil {
		return _fefbg
	}
	return nil
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _d.ST_FixedPercentage

	// Green
	GAttr _d.ST_FixedPercentage

	// Blue
	BAttr _d.ST_FixedPercentage
}
type CT_Empty struct{}

func (_gggca *CT_SlideSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gggca.CxAttr = 914400
	_gggca.CyAttr = 914400
	for _, _cgddd := range start.Attr {
		if _cgddd.Name.Local == "\u0063\u0078" {
			_cbdg, _bbfdc := _e.ParseInt(_cgddd.Value, 10, 32)
			if _bbfdc != nil {
				return _bbfdc
			}
			_gggca.CxAttr = int32(_cbdg)
			continue
		}
		if _cgddd.Name.Local == "\u0063\u0079" {
			_ggda, _fbcgg := _e.ParseInt(_cgddd.Value, 10, 32)
			if _fbcgg != nil {
				return _fbcgg
			}
			_gggca.CyAttr = int32(_ggda)
			continue
		}
		if _cgddd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gggca.TypeAttr.UnmarshalXMLAttr(_cgddd)
			continue
		}
	}
	for {
		_becc, _cbeaa := d.Token()
		if _cbeaa != nil {
			return _c.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _cbeaa)
		}
		if _dgbba, _dfbg := _becc.(_b.EndElement); _dfbg && _dgbba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dac *CT_BackgroundProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dac.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_dac.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	_dac.FillPropertiesChoice.MarshalXML(e, _b.StartElement{})
	_dac.EFillPropertiesChoice.MarshalXML(e, _b.StartElement{})
	_dac.EffectPropertiesChoice.MarshalXML(e, _b.StartElement{})
	if _dac.ExtLst != nil {
		_fdge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dac.ExtLst, _fdge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dfc *CT_CommentAuthorList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aebb:
	for {
		_bef, _cf := d.Token()
		if _cf != nil {
			return _cf
		}
		switch _aac := _bef.(type) {
		case _b.StartElement:
			switch _aac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_fbe := NewCT_CommentAuthor()
				if _fbg := d.DecodeElement(_fbe, &_aac); _fbg != nil {
					return _fbg
				}
				_dfc.CmAuthor = append(_dfc.CmAuthor, _fbe)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aac.Name)
				if _aeg := d.Skip(); _aeg != nil {
					return _aeg
				}
			}
		case _b.EndElement:
			break _aebb
		case _b.CharData:
		}
	}
	return nil
}
func (_cfce *ST_PrintWhat) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfce = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_cfce = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_cfce = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_cfce = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_cfce = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_cfce = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_cfce = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_cfce = 7
	case "\u006e\u006f\u0074e\u0073":
		*_cfce = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_cfce = 9
	}
	return nil
}
func (_bfece ST_SplitterBarState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bfece.String(), start)
}
func (_deebb *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egeag := range start.Attr {
		if _egeag.Name.Local == "\u0076\u0061\u006c" {
			_dcffe, _dbdac := _e.ParseUint(_egeag.Value, 10, 32)
			if _dbdac != nil {
				return _dbdac
			}
			_deebb.ValAttr = uint32(_dcffe)
			continue
		}
	}
	for {
		_bdcbe, _bfeff := d.Token()
		if _bfeff != nil {
			return _c.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _bfeff)
		}
		if _baded, _eedef := _bdcbe.(_b.EndElement); _eedef && _baded.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aaef *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaef = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_aaef = 1
	case "\u0066\u0069\u0078e\u0064":
		*_aaef = 2
	}
	return nil
}

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_adcbd *CT_TLIterateIntervalPercentage) Validate() error {
	return _adcbd.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_bgdb *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _dcea := _bgdb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _dcea != nil {
		return _dcea
	}
	if _bgdb.ExtLst != nil {
		if _cdgcg := _bgdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdgcg != nil {
			return _cdgcg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_gcb *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }
func (_bbeg ST_TLTimeNodeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bbccg := _b.Attr{}
	_bbccg.Name = name
	switch _bbeg {
	case ST_TLTimeNodeTypeUnset:
		_bbccg.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_bbccg.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_bbccg.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_bbccg.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_bbccg.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_bbccg.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_bbccg.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_bbccg.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_bbccg.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_bbccg.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _bbccg, nil
}
func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_ccaad := &CT_TLShapeTargetElement{}
	return _ccaad
}
func (_ebge *CT_TLCommandBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebge.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bffg := range start.Attr {
		if _bffg.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ebge.TypeAttr.UnmarshalXMLAttr(_bffg)
			continue
		}
		if _bffg.Name.Local == "\u0063\u006d\u0064" {
			_dagce := _bffg.Value
			_ebge.CmdAttr = &_dagce
			continue
		}
	}
_faagg:
	for {
		_befea, _bfeb := d.Token()
		if _bfeb != nil {
			return _bfeb
		}
		switch _ebfg := _befea.(type) {
		case _b.StartElement:
			switch _ebfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _ffacf := d.DecodeElement(_ebge.CBhvr, &_ebfg); _ffacf != nil {
					return _ffacf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _ebfg.Name)
				if _edde := d.Skip(); _edde != nil {
					return _edde
				}
			}
		case _b.EndElement:
			break _faagg
		case _b.CharData:
		}
	}
	return nil
}
func (_bagg *CT_HandoutMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bagg.HandoutMasterId != nil {
		_ddc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_bagg.HandoutMasterId, _ddc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgaf *CT_TLOleChartTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_egecd, _adca := _fgaf.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _adca != nil {
		return _adca
	}
	start.Attr = append(start.Attr, _egecd)
	if _fgaf.LvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0076\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_fgaf.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deebd ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _deebd {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deebd))
	}
	return nil
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

func (_bdfbg *CT_TransitionSoundActionChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfabge := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
		_bdfbg.StSnd = NewCT_TransitionStartSoundAction()
		if _cecad := d.DecodeElement(_bdfbg.StSnd, &_gfabge); _cecad != nil {
			return _cecad
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
		_bdfbg.EndSnd = NewCT_Empty()
		if _ebaaa := d.DecodeElement(_bdfbg.EndSnd, &_gfabge); _ebaaa != nil {
			return _ebaaa
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076", _gfabge.Name)
		if _gaaac := d.Skip(); _gaaac != nil {
			return _gaaac
		}
	}
	return nil
}
func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}
func (_eaca *CT_SideDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aaae := range start.Attr {
		if _aaae.Name.Local == "\u0064\u0069\u0072" {
			_eaca.DirAttr.UnmarshalXMLAttr(_aaae)
			continue
		}
	}
	for {
		_daeg, _egfdb := d.Token()
		if _egfdb != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _egfdb)
		}
		if _degaa, _gdcc := _daeg.(_b.EndElement); _gdcc && _degaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebccc *CT_TLMediaNodeAudio) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebccc.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ebccc.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_ebefb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_ebccc.CMediaNode, _ebefb)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cadgb ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbeece := _b.Attr{}
	_cbeece.Name = name
	switch _cadgb {
	case ST_TLTimeNodePresetClassTypeUnset:
		_cbeece.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_cbeece.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_cbeece.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_cbeece.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_cbeece.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_cbeece.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_cbeece.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _cbeece, nil
}

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_TLIterateIntervalTime and its children
func (_egedbd *CT_TLIterateIntervalTime) Validate() error {
	return _egedbd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}

type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_d.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_d.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_d.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_d.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _db.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_d.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_d.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_TLTimeNodeParallel and its children
func (_agcc *CT_TLTimeNodeParallel) Validate() error {
	return _agcc.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}
func (_bfcca ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _bfcca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfcca))
	}
	return nil
}
func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_bccgb := &CT_SlideRelationshipListEntry{}
	return _bccgb
}
func (_bebg *SldMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bebg.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _egabb := range start.Attr {
		if _egabb.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_acdcc, _fbbdd := _e.ParseBool(_egabb.Value)
			if _fbbdd != nil {
				return _fbbdd
			}
			_bebg.PreserveAttr = &_acdcc
			continue
		}
	}
_dbbbf:
	for {
		_bcgfa, _baede := d.Token()
		if _baede != nil {
			return _baede
		}
		switch _faba := _bcgfa.(type) {
		case _b.StartElement:
			switch _faba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ccdee := d.DecodeElement(_bebg.CSld, &_faba); _ccdee != nil {
					return _ccdee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _bfbdf := d.DecodeElement(_bebg.ClrMap, &_faba); _bfbdf != nil {
					return _bfbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_bebg.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _fcggb := d.DecodeElement(_bebg.SldLayoutIdLst, &_faba); _fcggb != nil {
					return _fcggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_bebg.Transition = NewCT_SlideTransition()
				if _edeae := d.DecodeElement(_bebg.Transition, &_faba); _edeae != nil {
					return _edeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_bebg.Timing = NewCT_SlideTiming()
				if _ebdf := d.DecodeElement(_bebg.Timing, &_faba); _ebdf != nil {
					return _ebdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bebg.Hf = NewCT_HeaderFooter()
				if _aage := d.DecodeElement(_bebg.Hf, &_faba); _aage != nil {
					return _aage
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_bebg.TxStyles = NewCT_SlideMasterTextStyles()
				if _bbcgb := d.DecodeElement(_bebg.TxStyles, &_faba); _bbcgb != nil {
					return _bbcgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bebg.ExtLst = NewCT_ExtensionListModify()
				if _dcdaf := d.DecodeElement(_bebg.ExtLst, &_faba); _dcdaf != nil {
					return _dcdaf
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _faba.Name)
				if _afcd := d.Skip(); _afcd != nil {
					return _afcd
				}
			}
		case _b.EndElement:
			break _dbbbf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObjectChoice and its children
func (_gcfe *CT_OleObjectChoice) Validate() error {
	return _gcfe.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func (_cfcd *CT_TLByAnimateColorTransform) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfcd.TLByAnimateColorTransformChoice = NewCT_TLByAnimateColorTransformChoice()
_cgcfc:
	for {
		_cggcb, _egedb := d.Token()
		if _egedb != nil {
			return _egedb
		}
		switch _eeea := _cggcb.(type) {
		case _b.StartElement:
			switch _eeea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_cfcd.TLByAnimateColorTransformChoice = NewCT_TLByAnimateColorTransformChoice()
				if _fcga := d.DecodeElement(&_cfcd.TLByAnimateColorTransformChoice.Rgb, &_eeea); _fcga != nil {
					return _fcga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_cfcd.TLByAnimateColorTransformChoice = NewCT_TLByAnimateColorTransformChoice()
				if _ccfa := d.DecodeElement(&_cfcd.TLByAnimateColorTransformChoice.Hsl, &_eeea); _ccfa != nil {
					return _ccfa
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _eeea.Name)
				if _cagdg := d.Skip(); _cagdg != nil {
					return _cagdg
				}
			}
		case _b.EndElement:
			break _cgcfc
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLByAnimateColorTransform struct {
	TLByAnimateColorTransformChoice *CT_TLByAnimateColorTransformChoice
}

func (_bfgbe *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfgbe = 0
	case "\u006e\u006f\u006e\u0065":
		*_bfgbe = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_bfgbe = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_fcdgd *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _eega := _fcdgd.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _eega != nil {
		return _eega
	}
	return nil
}
func (_cggdf *CT_TLAnimVariant) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cggdf.TLAnimVariantChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

type Sld struct{ CT_Slide }

// ValidateWithPath validates the CT_TLTimeTargetElementChoice and its children, prefixing error messages with path
func (_ebeef *CT_TLTimeTargetElementChoice) ValidateWithPath(path string) error {
	if _ebeef.SldTgt != nil {
		if _bbefg := _ebeef.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _bbefg != nil {
			return _bbefg
		}
	}
	if _ebeef.SndTgt != nil {
		if _gagf := _ebeef.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _gagf != nil {
			return _gagf
		}
	}
	if _ebeef.SpTgt != nil {
		if _bfaa := _ebeef.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _bfaa != nil {
			return _bfaa
		}
	}
	if _ebeef.InkTgt != nil {
		if _bdbd := _ebeef.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _bdbd != nil {
			return _bdbd
		}
	}
	return nil
}
func (_agfe *Notes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _agfe.CT_NotesSlide.MarshalXML(e, start)
}

type CT_Rel struct{ IdAttr string }

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_fagb *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _acbf := _fagb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _acbf != nil {
		return _acbf
	}
	if _edgf := _fagb.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _edgf != nil {
		return _edgf
	}
	return nil
}
func (_cfgaa ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _cfgaa {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfgaa))
	}
	return nil
}
func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_cfdc := &CT_TLOleChartTargetElement{}
	_cfdc.TypeAttr = ST_TLChartSubelementType(1)
	return _cfdc
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_cabbc *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _cabbc.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _c.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cccg := _cabbc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cccg != nil {
		return _cccg
	}
	return nil
}

// Validate validates the CT_SlideRelationshipList and its children
func (_fecg *CT_SlideRelationshipList) Validate() error {
	return _fecg.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}
func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_abfe := &CT_CommonViewProperties{}
	_abfe.Scale = _d.NewCT_Scale2D()
	_abfe.Origin = _d.NewCT_Point2D()
	return _abfe
}

const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}
type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_eead := &CT_TLAnimateMotionBehavior{}
	_eead.CBhvr = NewCT_TLCommonBehaviorData()
	return _eead
}
func _gbgd(_defga bool) uint8 {
	if _defga {
		return 1
	}
	return 0
}

// Validate validates the CT_CommentAuthor and its children
func (_afg *CT_CommentAuthor) Validate() error {
	return _afg.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_babbad *CT_TagList) ValidateWithPath(path string) error {
	for _dbab, _eaeda := range _babbad.Tag {
		if _bebad := _eaeda.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _dbab)); _bebad != nil {
			return _bebad
		}
	}
	return nil
}
func (_gbace *CT_NotesTextViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbace.CViewPr = NewCT_CommonViewProperties()
_fbfc:
	for {
		_cdcba, _ecfg := d.Token()
		if _ecfg != nil {
			return _ecfg
		}
		switch _acbe := _cdcba.(type) {
		case _b.StartElement:
			switch _acbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dcfgd := d.DecodeElement(_gbace.CViewPr, &_acbe); _dcfgd != nil {
					return _dcfgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbace.ExtLst = NewCT_ExtensionList()
				if _eaef := d.DecodeElement(_gbace.ExtLst, &_acbe); _eaef != nil {
					return _eaef
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _acbe.Name)
				if _ecdf := d.Skip(); _ecdf != nil {
					return _ecdf
				}
			}
		case _b.EndElement:
			break _fbfc
		case _b.CharData:
		}
	}
	return nil
}
func (_abad *CT_OptionalBlackTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abad.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_abad.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddddcd *ST_TLAnimateEffectTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dedcc, _baaf := d.Token()
	if _baaf != nil {
		return _baaf
	}
	if _cgabd, _edcag := _dedcc.(_b.EndElement); _edcag && _cgabd.Name == start.Name {
		*_ddddcd = 1
		return nil
	}
	if _bebcg, _ebgba := _dedcc.(_b.CharData); !_ebgba {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dedcc)
	} else {
		switch string(_bebcg) {
		case "":
			*_ddddcd = 0
		case "\u0069\u006e":
			*_ddddcd = 1
		case "\u006f\u0075\u0074":
			*_ddddcd = 2
		case "\u006e\u006f\u006e\u0065":
			*_ddddcd = 3
		}
	}
	_dedcc, _baaf = d.Token()
	if _baaf != nil {
		return _baaf
	}
	if _gfga, _dbefa := _dedcc.(_b.EndElement); _dbefa && _gfga.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dedcc)
}

type ST_TLBehaviorAdditiveType byte

// ValidateWithPath validates the CT_BuildListChoice and its children, prefixing error messages with path
func (_fcfb *CT_BuildListChoice) ValidateWithPath(path string) error {
	if _fcfb.BldP != nil {
		if _fde := _fcfb.BldP.ValidateWithPath(path + "\u002f\u0042\u006cd\u0050"); _fde != nil {
			return _fde
		}
	}
	if _fcfb.BldDgm != nil {
		if _fdf := _fcfb.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _fdf != nil {
			return _fdf
		}
	}
	if _fcfb.BldOleChart != nil {
		if _cee := _fcfb.BldOleChart.ValidateWithPath(path + "\u002f\u0042\u006cd\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"); _cee != nil {
			return _cee
		}
	}
	if _fcfb.BldGraphic != nil {
		if _cde := _fcfb.BldGraphic.ValidateWithPath(path + "/\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _cde != nil {
			return _cde
		}
	}
	return nil
}
func (_fdfac ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _fdfac {
	case 0, 1, 2, 3, 4:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdfac))
	}
	return nil
}
func (_fgbgaa *CT_OrientationTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgbgaa.DirAttr != ST_DirectionUnset {
		_dccf, _bbfb := _fgbgaa.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _bbfb != nil {
			return _bbfb
		}
		start.Attr = append(start.Attr, _dccf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_SlideMasterIdList() *CT_SlideMasterIdList {
	_bgbba := &CT_SlideMasterIdList{}
	return _bgbba
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_bea *CT_Background) ValidateWithPath(path string) error {
	if _abb := _bea.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _abb != nil {
		return _abb
	}
	if _ege := _bea.BackgroundChoice.ValidateWithPath(path + "\u002f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0043h\u006f\u0069\u0063\u0065"); _ege != nil {
		return _ege
	}
	return nil
}
func (_gfggd ST_IterateType) String() string {
	switch _gfggd {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}

// Validate validates the NotesMaster and its children
func (_ababg *NotesMaster) Validate() error {
	return _ababg.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_gcbec *CT_TLTimeNodeExclusive) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gcbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_gcbec.CTn, _gcbf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbcda *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbcda = 0
	case "\u006e\u006f\u006e\u0065":
		*_fbcda = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_fbcda = 2
	}
	return nil
}
func (_dcfd *CT_TLSetBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcfd.CBhvr = NewCT_TLCommonBehaviorData()
_ebafc:
	for {
		_dgegb, _eeeee := d.Token()
		if _eeeee != nil {
			return _eeeee
		}
		switch _gcefe := _dgegb.(type) {
		case _b.StartElement:
			switch _gcefe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _aafcd := d.DecodeElement(_dcfd.CBhvr, &_gcefe); _aafcd != nil {
					return _aafcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dcfd.To = NewCT_TLAnimVariant()
				if _cabgd := d.DecodeElement(_dcfd.To, &_gcefe); _cabgd != nil {
					return _cabgd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _gcefe.Name)
				if _fbbb := d.Skip(); _fbbb != nil {
					return _fbbb
				}
			}
		case _b.EndElement:
			break _ebafc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_EmbeddedFontDataId and its children
func (_ebc *CT_EmbeddedFontDataId) Validate() error {
	return _ebc.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}
func (_cbcag ST_PrintColorMode) Validate() error { return _cbcag.ValidateWithPath("") }
func (_eafec *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eafec = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_eafec = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_eafec = 2
	case "\u0068\u006f\u006c\u0064":
		*_eafec = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_eafec = 4
	}
	return nil
}
func (_dgga *CT_CustomShowId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _dgga.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_ebabd := &CT_TLTimeAnimateValueList{}
	return _ebabd
}
func (_fbdba ST_PhotoAlbumLayout) Validate() error { return _fbdba.ValidateWithPath("") }
func (_agdb *CT_InOutTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agdb.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_dfag, _aaad := _agdb.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _aaad != nil {
			return _aaad
		}
		start.Attr = append(start.Attr, _dfag)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_WheelTransition() *CT_WheelTransition { _acecf := &CT_WheelTransition{}; return _acecf }

type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_ggcf *CT_HandoutMasterIdList) Validate() error {
	return _ggcf.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}
func (_cb *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cb.MediaChoice = _d.NewEG_MediaChoice()
	for _, _aad := range start.Attr {
		if _aad.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_bb, _cga := _e.ParseBool(_aad.Value)
			if _cga != nil {
				return _cga
			}
			_cb.IsPhotoAttr = &_bb
			continue
		}
		if _aad.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_abf, _dae := _e.ParseBool(_aad.Value)
			if _dae != nil {
				return _dae
			}
			_cb.UserDrawnAttr = &_abf
			continue
		}
	}
_fcf:
	for {
		_fdg, _cccc := d.Token()
		if _cccc != nil {
			return _cccc
		}
		switch _aab := _fdg.(type) {
		case _b.StartElement:
			switch _aab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_cb.Ph = NewCT_Placeholder()
				if _ddb := d.DecodeElement(_cb.Ph, &_aab); _ddb != nil {
					return _ddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_cb.MediaChoice = _d.NewEG_MediaChoice()
				if _ecc := d.DecodeElement(&_cb.MediaChoice.AudioCd, &_aab); _ecc != nil {
					return _ecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_cb.MediaChoice = _d.NewEG_MediaChoice()
				if _ece := d.DecodeElement(&_cb.MediaChoice.WavAudioFile, &_aab); _ece != nil {
					return _ece
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_cb.MediaChoice = _d.NewEG_MediaChoice()
				if _gee := d.DecodeElement(&_cb.MediaChoice.AudioFile, &_aab); _gee != nil {
					return _gee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_cb.MediaChoice = _d.NewEG_MediaChoice()
				if _gbb := d.DecodeElement(&_cb.MediaChoice.VideoFile, &_aab); _gbb != nil {
					return _gbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_cb.MediaChoice = _d.NewEG_MediaChoice()
				if _ggd := d.DecodeElement(&_cb.MediaChoice.QuickTimeFile, &_aab); _ggd != nil {
					return _ggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_cb.CustDataLst = NewCT_CustomerDataList()
				if _def := d.DecodeElement(_cb.CustDataLst, &_aab); _def != nil {
					return _def
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cb.ExtLst = NewCT_ExtensionList()
				if _gcd := d.DecodeElement(_cb.ExtLst, &_aab); _gcd != nil {
					return _gcd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _aab.Name)
				if _aadf := d.Skip(); _aadf != nil {
					return _aadf
				}
			}
		case _b.EndElement:
			break _fcf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BuildList and its children
func (_eag *CT_BuildList) Validate() error {
	return _eag.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}
func (_ddbad ST_TLBehaviorAdditiveType) Validate() error { return _ddbad.ValidateWithPath("") }
func (_eeddg ST_TLTimeIndefinite) String() string {
	switch _eeddg {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}

// Validate validates the CT_OptionalBlackTransition and its children
func (_ddacd *CT_OptionalBlackTransition) Validate() error {
	return _ddacd.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}
func (_ebbcac *CT_TLTimeTargetElementChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ebbcac.SldTgt != nil {
		_ebfcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_ebbcac.SldTgt, _ebfcd)
	} else if _ebbcac.SndTgt != nil {
		_cfcbc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_ebbcac.SndTgt, _cfcbc)
	} else if _ebbcac.SpTgt != nil {
		_affdg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_ebbcac.SpTgt, _affdg)
	} else if _ebbcac.InkTgt != nil {
		_egcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_ebbcac.InkTgt, _egcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfgff *CT_TLTimeNodeParallel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fabfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cfgff.CTn, _fabfc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLByAnimateColorTransformChoice struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}
type ST_TransitionSideDirectionType byte

// Validate validates the CT_ModifyVerifier and its children
func (_ebcg *CT_ModifyVerifier) Validate() error {
	return _ebcg.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _db.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _db.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _db.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

func (_gcdd *CT_TLGraphicalObjectBuild) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _gcdd.SpidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", _gcdd.GrpIdAttr)})
	if _gcdd.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gcdd.UiExpandAttr))})
	}
	e.EncodeToken(start)
	_gcdd.TLGraphicalObjectBuildChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TimeNodeListChoice and its children
func (_fbbed *CT_TimeNodeListChoice) Validate() error {
	return _fbbed.ValidateWithPath("C\u0054\u005f\u0054\u0069me\u004eo\u0064\u0065\u004c\u0069\u0073t\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_aggce ST_TLTimeNodeRestartType) String() string {
	switch _aggce {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}
func (_fccgc *PresentationPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fccgc.CT_PresentationProperties = *NewCT_PresentationProperties()
_cafbe:
	for {
		_ggdgdf, _aaab := d.Token()
		if _aaab != nil {
			return _aaab
		}
		switch _gcbbb := _ggdgdf.(type) {
		case _b.StartElement:
			switch _gcbbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_fccgc.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _adcea := d.DecodeElement(_fccgc.HtmlPubPr, &_gcbbb); _adcea != nil {
					return _adcea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_fccgc.WebPr = NewCT_WebProperties()
				if _bbab := d.DecodeElement(_fccgc.WebPr, &_gcbbb); _bbab != nil {
					return _bbab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_fccgc.PrnPr = NewCT_PrintProperties()
				if _gdecec := d.DecodeElement(_fccgc.PrnPr, &_gcbbb); _gdecec != nil {
					return _gdecec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_fccgc.ShowPr = NewCT_ShowProperties()
				if _eecce := d.DecodeElement(_fccgc.ShowPr, &_gcbbb); _eecce != nil {
					return _eecce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_fccgc.ClrMru = _d.NewCT_ColorMRU()
				if _afcb := d.DecodeElement(_fccgc.ClrMru, &_gcbbb); _afcb != nil {
					return _afcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fccgc.ExtLst = NewCT_ExtensionList()
				if _ffbac := d.DecodeElement(_fccgc.ExtLst, &_gcbbb); _ffbac != nil {
					return _ffbac
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _gcbbb.Name)
				if _eafbe := d.Skip(); _eafbe != nil {
					return _eafbe
				}
			}
		case _b.EndElement:
			break _cafbe
		case _b.CharData:
		}
	}
	return nil
}
func (_ebbf *CT_TLTemplateList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgefc:
	for {
		_afaa, _cdddc := d.Token()
		if _cdddc != nil {
			return _cdddc
		}
		switch _ebdbf := _afaa.(type) {
		case _b.StartElement:
			switch _ebdbf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_acaa := NewCT_TLTemplate()
				if _ffcad := d.DecodeElement(_acaa, &_ebdbf); _ffcad != nil {
					return _ffcad
				}
				_ebbf.Tmpl = append(_ebbf.Tmpl, _acaa)
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ebdbf.Name)
				if _eggdfa := d.Skip(); _eggdfa != nil {
					return _eggdfa
				}
			}
		case _b.EndElement:
			break _cgefc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_cbfb *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _beac := _cbfb.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _beac != nil {
		return _beac
	}
	return nil
}

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_d.CT_ShapeProperties

	// Connector Shape Style
	Style  *_d.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_ddabe *CT_TLAnimateColorBehavior) Validate() error {
	return _ddabe.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_ggfgd *CT_StringTag) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcef := range start.Attr {
		if _bcef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfbdbf := _bcef.Value
			_ggfgd.NameAttr = _bfbdbf
			continue
		}
		if _bcef.Name.Local == "\u0076\u0061\u006c" {
			_dagdc := _bcef.Value
			_ggfgd.ValAttr = _dagdc
			continue
		}
	}
	for {
		_dbga, _aae := d.Token()
		if _aae != nil {
			return _c.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _aae)
		}
		if _cbfg, _cgab := _dbga.(_b.EndElement); _cgab && _cbfg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}

func (_gae *CT_Background) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gae.BackgroundChoice = NewEG_BackgroundChoice()
	for _, _cgbe := range start.Attr {
		if _cgbe.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_gae.BwModeAttr.UnmarshalXMLAttr(_cgbe)
			continue
		}
	}
_beg:
	for {
		_bdd, _ecee := d.Token()
		if _ecee != nil {
			return _ecee
		}
		switch _bdf := _bdd.(type) {
		case _b.StartElement:
			switch _bdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_gae.BackgroundChoice = NewEG_BackgroundChoice()
				if _cag := d.DecodeElement(&_gae.BackgroundChoice.BgPr, &_bdf); _cag != nil {
					return _cag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_gae.BackgroundChoice = NewEG_BackgroundChoice()
				if _cbca := d.DecodeElement(&_gae.BackgroundChoice.BgRef, &_bdf); _cbca != nil {
					return _cbca
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _bdf.Name)
				if _bedf := d.Skip(); _bedf != nil {
					return _bedf
				}
			}
		case _b.EndElement:
			break _beg
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

// Validate validates the CT_BackgroundProperties and its children
func (_abe *CT_BackgroundProperties) Validate() error {
	return _abe.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_GuideList and its children
func (_cceg *CT_GuideList) Validate() error {
	return _cceg.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_dbgcc *ST_PlaceholderSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdeea, _decce := d.Token()
	if _decce != nil {
		return _decce
	}
	if _gddb, _ccged := _cdeea.(_b.EndElement); _ccged && _gddb.Name == start.Name {
		*_dbgcc = 1
		return nil
	}
	if _eefefd, _ffecd := _cdeea.(_b.CharData); !_ffecd {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdeea)
	} else {
		switch string(_eefefd) {
		case "":
			*_dbgcc = 0
		case "\u0066\u0075\u006c\u006c":
			*_dbgcc = 1
		case "\u0068\u0061\u006c\u0066":
			*_dbgcc = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_dbgcc = 3
		}
	}
	_cdeea, _decce = d.Token()
	if _decce != nil {
		return _decce
	}
	if _gabeba, _cgbdd := _cdeea.(_b.EndElement); _cgbdd && _gabeba.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdeea)
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

// ValidateWithPath validates the CT_TLShapeTargetElementChoice and its children, prefixing error messages with path
func (_begce *CT_TLShapeTargetElementChoice) ValidateWithPath(path string) error {
	if _begce.Bg != nil {
		if _fccfa := _begce.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _fccfa != nil {
			return _fccfa
		}
	}
	if _begce.SubSp != nil {
		if _ccfg := _begce.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _ccfg != nil {
			return _ccfg
		}
	}
	if _begce.OleChartEl != nil {
		if _adefe := _begce.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _adefe != nil {
			return _adefe
		}
	}
	if _begce.TxEl != nil {
		if _cfgf := _begce.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _cfgf != nil {
			return _cfgf
		}
	}
	if _begce.GraphicEl != nil {
		if _gdbd := _begce.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _gdbd != nil {
			return _gdbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_eccea *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _afba := _eccea.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _afba != nil {
		return _afba
	}
	return nil
}
func NewOleObj() *OleObj {
	_fbegf := &OleObj{}
	_fbegf.CT_OleObject = *NewCT_OleObject()
	return _fbegf
}
func (_eaad *CT_SlideLayoutIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaad.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_eaad.IdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _eaad.RIdAttr)})
	e.EncodeToken(start)
	if _eaad.ExtLst != nil {
		_aedd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaad.ExtLst, _aedd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcecb ST_PrintWhat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcecb.String(), start)
}

type HandoutMaster struct{ CT_HandoutMaster }

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

func (_eedfd ST_WebColorType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eedfd.String(), start)
}

// Validate validates the CT_ExtensionList and its children
func (_fbcg *CT_ExtensionList) Validate() error {
	return _fbcg.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func NewCT_TagsData() *CT_TagsData { _acee := &CT_TagsData{}; return _acee }
func (_eebb *CT_SlideSorterViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eebb.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_eebb.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_bafg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_eebb.CViewPr, _bafg)
	if _eebb.ExtLst != nil {
		_gebge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eebb.ExtLst, _gebge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_aa *AG_TLBuild) ValidateWithPath(path string) error { return nil }
func (_dcdfb ST_TLAnimateColorDirection) String() string {
	switch _dcdfb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_d.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

func (_acdc *CT_TLShapeTargetElementChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acdc.Bg != nil {
		_fccda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_acdc.Bg, _fccda)
	} else if _acdc.SubSp != nil {
		_bbca := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_acdc.SubSp, _bbca)
	} else if _acdc.OleChartEl != nil {
		_ffggg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_acdc.OleChartEl, _ffggg)
	} else if _acdc.TxEl != nil {
		_eecdd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_acdc.TxEl, _eecdd)
	} else if _acdc.GraphicEl != nil {
		_fegf := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_acdc.GraphicEl, _fegf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}

func (_efgc *CT_PictureNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gddf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_efgc.CNvPr, _gddf)
	_ggfc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_efgc.CNvPicPr, _ggfc)
	_aegdg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_efgc.NvPr, _aegdg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggce *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggce.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_ggce.CNvGraphicFramePr = _d.NewCT_NonVisualGraphicFrameProperties()
	_ggce.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_dfb:
	for {
		_gdd, _dbd := d.Token()
		if _dbd != nil {
			return _dbd
		}
		switch _cgec := _gdd.(type) {
		case _b.StartElement:
			switch _cgec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _beab := d.DecodeElement(_ggce.CNvPr, &_cgec); _beab != nil {
					return _beab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _eagc := d.DecodeElement(_ggce.CNvGraphicFramePr, &_cgec); _eagc != nil {
					return _eagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _fefc := d.DecodeElement(_ggce.NvPr, &_cgec); _fefc != nil {
					return _fefc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _cgec.Name)
				if _cgee := d.Skip(); _cgee != nil {
					return _cgee
				}
			}
		case _b.EndElement:
			break _dfb
		case _b.CharData:
		}
	}
	return nil
}
func (_bgdgc *ST_TLTime) Validate() error { return _bgdgc.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_cedfb *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }
func NewCT_Kinsoku() *CT_Kinsoku                                                  { _gcef := &CT_Kinsoku{}; return _gcef }

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

func (_efafc ST_PrintWhat) String() string {
	switch _efafc {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}
func (_fagf *CT_BackgroundProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
	_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
	_fagf.EffectPropertiesChoice = _d.NewEG_EffectPropertiesChoice()
	for _, _eced := range start.Attr {
		if _eced.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_cbd, _ddg := _e.ParseBool(_eced.Value)
			if _ddg != nil {
				return _ddg
			}
			_fagf.ShadeToTitleAttr = &_cbd
			continue
		}
	}
_fcb:
	for {
		_dcb, _dab := d.Token()
		if _dab != nil {
			return _dab
		}
		switch _ggg := _dcb.(type) {
		case _b.StartElement:
			switch _ggg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _faf := d.DecodeElement(&_fagf.FillPropertiesChoice.NoFill, &_ggg); _faf != nil {
					return _faf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _aef := d.DecodeElement(&_fagf.FillPropertiesChoice.SolidFill, &_ggg); _aef != nil {
					return _aef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _cda := d.DecodeElement(&_fagf.FillPropertiesChoice.GradFill, &_ggg); _cda != nil {
					return _cda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _eab := d.DecodeElement(&_fagf.FillPropertiesChoice.BlipFill, &_ggg); _eab != nil {
					return _eab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _ffa := d.DecodeElement(&_fagf.FillPropertiesChoice.PattFill, &_ggg); _ffa != nil {
					return _ffa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fagf.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _fab := d.DecodeElement(&_fagf.FillPropertiesChoice.GrpFill, &_ggg); _fab != nil {
					return _fab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _gac := d.DecodeElement(&_fagf.EFillPropertiesChoice.NoFill, &_ggg); _gac != nil {
					return _gac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _geb := d.DecodeElement(&_fagf.EFillPropertiesChoice.SolidFill, &_ggg); _geb != nil {
					return _geb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _daa := d.DecodeElement(&_fagf.EFillPropertiesChoice.GradFill, &_ggg); _daa != nil {
					return _daa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _bdg := d.DecodeElement(&_fagf.EFillPropertiesChoice.BlipFill, &_ggg); _bdg != nil {
					return _bdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _cce := d.DecodeElement(&_fagf.EFillPropertiesChoice.PattFill, &_ggg); _cce != nil {
					return _cce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fagf.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
				if _gbc := d.DecodeElement(&_fagf.EFillPropertiesChoice.GrpFill, &_ggg); _gbc != nil {
					return _gbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fagf.EffectPropertiesChoice = _d.NewEG_EffectPropertiesChoice()
				if _ed := d.DecodeElement(&_fagf.EffectPropertiesChoice.EffectLst, &_ggg); _ed != nil {
					return _ed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fagf.EffectPropertiesChoice = _d.NewEG_EffectPropertiesChoice()
				if _edc := d.DecodeElement(&_fagf.EffectPropertiesChoice.EffectDag, &_ggg); _edc != nil {
					return _edc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fagf.ExtLst = NewCT_ExtensionList()
				if _fgf := d.DecodeElement(_fagf.ExtLst, &_ggg); _fgf != nil {
					return _fgf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _ggg.Name)
				if _eac := d.Skip(); _eac != nil {
					return _eac
				}
			}
		case _b.EndElement:
			break _fcb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_degbb *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _bbcg := _degbb.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bbcg != nil {
		return _bbcg
	}
	return nil
}
func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_gfffb := &CT_TLMediaNodeAudio{}
	_gfffb.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _gfffb
}
func (_egbdd *CT_TLByHslColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _c.Sprintf("\u0025\u0076", _egbdd.HAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _c.Sprintf("\u0025\u0076", _egbdd.SAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _c.Sprintf("\u0025\u0076", _egbdd.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbbf *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbbf = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_cbbf = 1
	case "\u006c\u0069\u006e":
		*_cbbf = 2
	case "\u0066\u006d\u006c\u0061":
		*_cbbf = 3
	}
	return nil
}
func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_fcff := &CT_TLCommonMediaNodeData{}
	_fcff.CTn = NewCT_TLCommonTimeNodeData()
	_fcff.TgtEl = NewCT_TLTimeTargetElement()
	return _fcff
}
func NewCT_TLIterateDataChoice() *CT_TLIterateDataChoice {
	_abbbd := &CT_TLIterateDataChoice{}
	return _abbbd
}
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_cec := &CT_ConnectorNonVisual{}
	_cec.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_cec.CNvCxnSpPr = _d.NewCT_NonVisualConnectorProperties()
	_cec.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _cec
}
func (_bcbcc ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _bcbcc {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcbcc))
	}
	return nil
}
func (_bbcad *CT_TLShapeTargetElementChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfbd := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
		_bbcad.Bg = NewCT_Empty()
		if _defd := d.DecodeElement(_bbcad.Bg, &_gfbd); _defd != nil {
			return _defd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
		_bbcad.SubSp = NewCT_TLSubShapeId()
		if _dbfcd := d.DecodeElement(_bbcad.SubSp, &_gfbd); _dbfcd != nil {
			return _dbfcd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
		_bbcad.OleChartEl = NewCT_TLOleChartTargetElement()
		if _cbdfg := d.DecodeElement(_bbcad.OleChartEl, &_gfbd); _cbdfg != nil {
			return _cbdfg
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
		_bbcad.TxEl = NewCT_TLTextTargetElement()
		if _ebaea := d.DecodeElement(_bbcad.TxEl, &_gfbd); _ebaea != nil {
			return _ebaea
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
		_bbcad.GraphicEl = _d.NewCT_AnimationElementChoice()
		if _cedbc := d.DecodeElement(_bbcad.GraphicEl, &_gfbd); _cedbc != nil {
			return _cedbc
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065t\u0045\u006c\u0065\u006d\u0065\u006et\u0043\u0068o\u0069\u0063e\u0020%\u0076", _gfbd.Name)
		if _gggbc := d.Skip(); _gggbc != nil {
			return _gggbc
		}
	}
	return nil
}
func (_dgbbbb *CT_ShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgbbbb.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_dgbbbb.CNvSpPr = _d.NewCT_NonVisualDrawingShapeProps()
	_dgbbbb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_gfcf:
	for {
		_ddda, _dffc := d.Token()
		if _dffc != nil {
			return _dffc
		}
		switch _gcbee := _ddda.(type) {
		case _b.StartElement:
			switch _gcbee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gbaf := d.DecodeElement(_dgbbbb.CNvPr, &_gcbee); _gbaf != nil {
					return _gbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _gegbe := d.DecodeElement(_dgbbbb.CNvSpPr, &_gcbee); _gegbe != nil {
					return _gegbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _dbaec := d.DecodeElement(_dgbbbb.NvPr, &_gcbee); _dbaec != nil {
					return _dbaec
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gcbee.Name)
				if _cdee := d.Skip(); _cdee != nil {
					return _cdee
				}
			}
		case _b.EndElement:
			break _gfcf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_efcf *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _gbe, _fbca := range _efcf.EmbeddedFont {
		if _cdg := _fbca.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _gbe)); _cdg != nil {
			return _cdg
		}
	}
	return nil
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_bgbge *CT_SlideSorterViewProperties) Validate() error {
	return _bgbge.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_fdga *CT_TLAnimVariantIntegerVal) Validate() error {
	return _fdga.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}
func (_cgacc *CT_TLTimeNodeExclusive) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgacc.CTn = NewCT_TLCommonTimeNodeData()
_ggfbb:
	for {
		_fdab, _cdbge := d.Token()
		if _cdbge != nil {
			return _cdbge
		}
		switch _ffdb := _fdab.(type) {
		case _b.StartElement:
			switch _ffdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _dabbg := d.DecodeElement(_cgacc.CTn, &_ffdb); _dabbg != nil {
					return _dabbg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _ffdb.Name)
				if _ebbadg := d.Skip(); _ebbadg != nil {
					return _ebbadg
				}
			}
		case _b.EndElement:
			break _ggfbb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_feacd := &CT_TLTimeNodeExclusive{}
	_feacd.CTn = NewCT_TLCommonTimeNodeData()
	return _feacd
}
func (_dcdgc *CT_TagList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dcdgc.Tag != nil {
		_fcgag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _acec := range _dcdgc.Tag {
			e.EncodeElement(_acec, _fcgag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_efcggf *CT_TLTimeAnimateValueList) Validate() error {
	return _efcggf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}
func (_dffbe *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dffbe.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bfdcf := range start.Attr {
		if _bfdcf.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_dffbe.OriginAttr.UnmarshalXMLAttr(_bfdcf)
			continue
		}
		if _bfdcf.Name.Local == "\u0070\u0061\u0074\u0068" {
			_efeb := _bfdcf.Value
			_dffbe.PathAttr = &_efeb
			continue
		}
		if _bfdcf.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_dffbe.PathEditModeAttr.UnmarshalXMLAttr(_bfdcf)
			continue
		}
		if _bfdcf.Name.Local == "\u0072\u0041\u006e\u0067" {
			_dbfeb, _cadeb := _e.ParseInt(_bfdcf.Value, 10, 32)
			if _cadeb != nil {
				return _cadeb
			}
			_bcabd := int32(_dbfeb)
			_dffbe.RAngAttr = &_bcabd
			continue
		}
		if _bfdcf.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_cbcb := _bfdcf.Value
			_dffbe.PtsTypesAttr = &_cbcb
			continue
		}
	}
_bfaff:
	for {
		_dddbg, _dfafa := d.Token()
		if _dfafa != nil {
			return _dfafa
		}
		switch _dfdbe := _dddbg.(type) {
		case _b.StartElement:
			switch _dfdbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _edbda := d.DecodeElement(_dffbe.CBhvr, &_dfdbe); _edbda != nil {
					return _edbda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_dffbe.By = NewCT_TLPoint()
				if _adaec := d.DecodeElement(_dffbe.By, &_dfdbe); _adaec != nil {
					return _adaec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_dffbe.From = NewCT_TLPoint()
				if _cgdb := d.DecodeElement(_dffbe.From, &_dfdbe); _cgdb != nil {
					return _cgdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dffbe.To = NewCT_TLPoint()
				if _fbdf := d.DecodeElement(_dffbe.To, &_dfdbe); _fbdf != nil {
					return _fbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_dffbe.RCtr = NewCT_TLPoint()
				if _bgcef := d.DecodeElement(_dffbe.RCtr, &_dfdbe); _bgcef != nil {
					return _bgcef
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _dfdbe.Name)
				if _agcbf := d.Skip(); _agcbf != nil {
					return _agcbf
				}
			}
		case _b.EndElement:
			break _bfaff
		case _b.CharData:
		}
	}
	return nil
}
func (_dedabf *CT_TLTextTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bfaea:
	for {
		_gdbgb, _ebbca := d.Token()
		if _ebbca != nil {
			return _ebbca
		}
		switch _cded := _gdbgb.(type) {
		case _b.StartElement:
			switch _cded.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_dedabf.TLTextTargetElementChoice = NewCT_TLTextTargetElementChoice()
				if _fbcee := d.DecodeElement(&_dedabf.TLTextTargetElementChoice.CharRg, &_cded); _fbcee != nil {
					return _fbcee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_dedabf.TLTextTargetElementChoice = NewCT_TLTextTargetElementChoice()
				if _efebe := d.DecodeElement(&_dedabf.TLTextTargetElementChoice.PRg, &_cded); _efebe != nil {
					return _efebe
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _cded.Name)
				if _dfgde := d.Skip(); _dfgde != nil {
					return _dfgde
				}
			}
		case _b.EndElement:
			break _bfaea
		case _b.CharData:
		}
	}
	return nil
}
func (_ggddd *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bced, _gdegbb := d.Token()
	if _gdegbb != nil {
		return _gdegbb
	}
	if _acdag, _ggebcf := _bced.(_b.EndElement); _ggebcf && _acdag.Name == start.Name {
		*_ggddd = 1
		return nil
	}
	if _bfffbe, _beafae := _bced.(_b.CharData); !_beafae {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bced)
	} else {
		switch string(_bfffbe) {
		case "":
			*_ggddd = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_ggddd = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_ggddd = 2
		}
	}
	_bced, _gdegbb = d.Token()
	if _gdegbb != nil {
		return _gdegbb
	}
	if _adgf, _fceb := _bced.(_b.EndElement); _fceb && _adgf.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bced)
}

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)
const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

func (_fbdffd ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _fbdffd {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbdffd))
	}
	return nil
}
func (_gccc ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_becag := _b.Attr{}
	_becag.Name = name
	switch _gccc {
	case ST_TLTriggerRuntimeNodeUnset:
		_becag.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_becag.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_becag.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_becag.Value = "\u0061\u006c\u006c"
	}
	return _becag, nil
}

// Validate validates the CT_Presentation and its children
func (_dfdge *CT_Presentation) Validate() error {
	return _dfdge.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_cdfbb *HandoutMaster) ValidateWithPath(path string) error {
	if _gcdgc := _cdfbb.CT_HandoutMaster.ValidateWithPath(path); _gcdgc != nil {
		return _gcdgc
	}
	return nil
}
func (_badc ST_TLBehaviorTransformType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_badc.String(), start)
}
func NewPresentation() *Presentation {
	_ffeb := &Presentation{}
	_ffeb.CT_Presentation = *NewCT_Presentation()
	return _ffeb
}
func (_dcadg ST_Direction) ValidateWithPath(path string) error {
	switch _dcadg {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcadg))
	}
	return nil
}

// Validate validates the CT_NotesViewProperties and its children
func (_gffgd *CT_NotesViewProperties) Validate() error {
	return _gffgd.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_PhotoAlbum and its children
func (_gfbcg *CT_PhotoAlbum) Validate() error {
	return _gfbcg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}
func (_gdec *CT_HtmlPublishProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdaa := range start.Attr {
		if _cdaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cdaa.Name.Local == "\u0069\u0064" || _cdaa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cdaa.Name.Local == "\u0069\u0064" {
			_beca := _cdaa.Value
			_gdec.IdAttr = _beca
			continue
		}
		if _cdaa.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_eafgf, _gagef := _e.ParseBool(_cdaa.Value)
			if _gagef != nil {
				return _gagef
			}
			_gdec.ShowSpeakerNotesAttr = &_eafgf
			continue
		}
		if _cdaa.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_dcfg := _cdaa.Value
			_gdec.TargetAttr = &_dcfg
			continue
		}
		if _cdaa.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_cbdb := _cdaa.Value
			_gdec.TitleAttr = &_cbdb
			continue
		}
	}
_dage:
	for {
		_cgedd, _dgcg := d.Token()
		if _dgcg != nil {
			return _dgcg
		}
		switch _gdbe := _cgedd.(type) {
		case _b.StartElement:
			switch _gdbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gdec.SldAll = NewCT_Empty()
				if _cfcb := d.DecodeElement(_gdec.SldAll, &_gdbe); _cfcb != nil {
					return _cfcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gdec.SldRg = NewCT_IndexRange()
				if _bbbe := d.DecodeElement(_gdec.SldRg, &_gdbe); _bbbe != nil {
					return _bbbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gdec.CustShow = NewCT_CustomShowId()
				if _ccff := d.DecodeElement(_gdec.CustShow, &_gdbe); _ccff != nil {
					return _ccff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdec.ExtLst = NewCT_ExtensionList()
				if _bgde := d.DecodeElement(_gdec.ExtLst, &_gdbe); _bgde != nil {
					return _bgde
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _gdbe.Name)
				if _deee := d.Skip(); _deee != nil {
					return _deee
				}
			}
		case _b.EndElement:
			break _dage
		case _b.CharData:
		}
	}
	return nil
}
func NewSldSyncPr() *SldSyncPr {
	_dcdbc := &SldSyncPr{}
	_dcdbc.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _dcdbc
}
func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _ggbbd := &CT_TLBuildParagraph{}; return _ggbbd }
func (_fafdd ST_TLAnimateColorSpace) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fafdd.String(), start)
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_bbbc *CT_Shape) ValidateWithPath(path string) error {
	if _acddc := _bbbc.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _acddc != nil {
		return _acddc
	}
	if _dfdb := _bbbc.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dfdb != nil {
		return _dfdb
	}
	if _bbbc.Style != nil {
		if _becf := _bbbc.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _becf != nil {
			return _becf
		}
	}
	if _bbbc.TxBody != nil {
		if _geagg := _bbbc.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _geagg != nil {
			return _geagg
		}
	}
	if _bbbc.ExtLst != nil {
		if _dbded := _bbbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbded != nil {
			return _dbded
		}
	}
	return nil
}
func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_dda := &CT_ApplicationNonVisualDrawingProps{}
	_dda.MediaChoice = _d.NewEG_MediaChoice()
	return _dda
}
func (_geebf *CT_TLAnimVariantIntegerVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _geebf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_facf *CT_CornerDirectionTransition) Validate() error {
	return _facf.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}
func (_aedgb ST_TLAnimateBehaviorCalcMode) Validate() error { return _aedgb.ValidateWithPath("") }
func (_ggea ST_TLPreviousActionType) String() string {
	switch _ggea {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}
func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_fbaab := &CT_SlideLayoutIdListEntry{}
	return _fbaab
}
func (_fbdeg ST_TransitionInOutDirectionType) Validate() error { return _fbdeg.ValidateWithPath("") }

type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_gege *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _dgda, _gbaaf := range _gege.TimeNodeListChoice {
		if _gfgdb := _gbaaf.ValidateWithPath(_c.Sprintf("\u0025s\u002f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004ci\u0073t\u0043h\u006f\u0069\u0063\u0065\u005b\u0025\u0064]", path, _dgda)); _gfgdb != nil {
			return _gfgdb
		}
	}
	return nil
}
func (_fdfdd ST_TLCommandType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fdfdd.String(), start)
}
func (_bgdcb ST_TLBehaviorOverrideType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgfec := _b.Attr{}
	_cgfec.Name = name
	switch _bgdcb {
	case ST_TLBehaviorOverrideTypeUnset:
		_cgfec.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_cgfec.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_cgfec.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _cgfec, nil
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _d.ST_FixedPercentage

	// Lightness
	LAttr _d.ST_FixedPercentage
}

func NewCT_NormalViewPortion() *CT_NormalViewPortion {
	_dabdc := &CT_NormalViewPortion{}
	return _dabdc
}
func (_cdbf *CT_Placeholder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdbf.TypeAttr != ST_PlaceholderTypeUnset {
		_cafg, _eccegb := _cdbf.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _eccegb != nil {
			return _eccegb
		}
		start.Attr = append(start.Attr, _cafg)
	}
	if _cdbf.OrientAttr != ST_DirectionUnset {
		_bega, _bfbbf := _cdbf.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _bfbbf != nil {
			return _bfbbf
		}
		start.Attr = append(start.Attr, _bega)
	}
	if _cdbf.SzAttr != ST_PlaceholderSizeUnset {
		_fcbbc, _gcdbb := _cdbf.SzAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u007a"})
		if _gcdbb != nil {
			return _gcdbb
		}
		start.Attr = append(start.Attr, _fcbbc)
	}
	if _cdbf.IdxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _c.Sprintf("\u0025\u0076", *_cdbf.IdxAttr)})
	}
	if _cdbf.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cdbf.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _cdbf.ExtLst != nil {
		_ebgb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdbf.ExtLst, _ebgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_dfgeg *CT_TLBehaviorAttributeNameList) Validate() error {
	return _dfgeg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the CmAuthorLst and its children
func (_gacgf *CmAuthorLst) Validate() error {
	return _gacgf.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}
func (_bfbd *CT_CommentList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bfbd.Cm != nil {
		_bge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _gaad := range _bfbd.Cm {
			e.EncodeElement(_gaad, _bge)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fecad *CT_TLTimeAnimateValueList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fecad.Tav != nil {
		_dcce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _gbdc := range _fecad.Tav {
			e.EncodeElement(_gbdc, _dcce)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_adea *CT_GuideList) ValidateWithPath(path string) error {
	for _bcfc, _bdge := range _adea.Guide {
		if _cead := _bdge.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _bcfc)); _cead != nil {
			return _cead
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_afcga *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _decff := _afcga.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _decff != nil {
		return _decff
	}
	if _afcga.AdvAutoAttr != nil {
		if _fcbd := _afcga.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _fcbd != nil {
			return _fcbd
		}
	}
	if _afcga.TmplLst != nil {
		if _bfdb := _afcga.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _bfdb != nil {
			return _bfdb
		}
	}
	return nil
}
func (_gcg *CT_BuildList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_beda:
	for {
		_cba, _bgd := d.Token()
		if _bgd != nil {
			return _bgd
		}
		switch _ccb := _cba.(type) {
		case _b.StartElement:
			switch _ccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_fcg := NewCT_BuildListChoice()
				if _ecb := d.DecodeElement(&_fcg.BldP, &_ccb); _ecb != nil {
					return _ecb
				}
				_gcg.BuildListChoice = append(_gcg.BuildListChoice, _fcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_fgc := NewCT_BuildListChoice()
				if _cdf := d.DecodeElement(&_fgc.BldDgm, &_ccb); _cdf != nil {
					return _cdf
				}
				_gcg.BuildListChoice = append(_gcg.BuildListChoice, _fgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_dcbc := NewCT_BuildListChoice()
				if _ccg := d.DecodeElement(&_dcbc.BldOleChart, &_ccb); _ccg != nil {
					return _ccg
				}
				_gcg.BuildListChoice = append(_gcg.BuildListChoice, _dcbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_gdc := NewCT_BuildListChoice()
				if _adb := d.DecodeElement(&_gdc.BldGraphic, &_ccb); _adb != nil {
					return _adb
				}
				_gcg.BuildListChoice = append(_gcg.BuildListChoice, _gdc)
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ccb.Name)
				if _cgc := d.Skip(); _cgc != nil {
					return _cgc
				}
			}
		case _b.EndElement:
			break _beda
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLAnimateColorDirection byte
type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_d.CT_Color

	// To
	To *_d.CT_Color
}

// Validate validates the CT_TLTextTargetElementChoice and its children
func (_ffbee *CT_TLTextTargetElementChoice) Validate() error {
	return _ffbee.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0054\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074E\u006ce\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063\u0065")
}
func (_gfdgg ST_TLAnimateColorSpace) Validate() error { return _gfdgg.ValidateWithPath("") }
func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_gdff := &CT_TLAnimateEffectBehavior{}
	_gdff.CBhvr = NewCT_TLCommonBehaviorData()
	return _gdff
}
func (_baec *Presentation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _baec.CT_Presentation.MarshalXML(e, start)
}

type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}

func (_dggg *CT_TLAnimVariantChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dggg.BoolVal != nil {
		_babca := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_dggg.BoolVal, _babca)
	} else if _dggg.IntVal != nil {
		_dabg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_dggg.IntVal, _dabg)
	} else if _dggg.FltVal != nil {
		_dffd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_dggg.FltVal, _dffd)
	} else if _dggg.StrVal != nil {
		_gadd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_dggg.StrVal, _gadd)
	} else if _dggg.ClrVal != nil {
		_gddfa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_dggg.ClrVal, _gddfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr             *ST_TLTime
	TLTimeConditionChoice *CT_TLTimeConditionChoice
}

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_ca *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _ca.Ph != nil {
		if _dde := _ca.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _dde != nil {
			return _dde
		}
	}
	if _fed := _ca.MediaChoice.ValidateWithPath(path + "\u002f\u004d\u0065d\u0069\u0061\u0043\u0068\u006f\u0069\u0063\u0065"); _fed != nil {
		return _fed
	}
	if _ca.CustDataLst != nil {
		if _cgb := _ca.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _cgb != nil {
			return _cgb
		}
	}
	if _ca.ExtLst != nil {
		if _ee := _ca.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ee != nil {
			return _ee
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_geae *CT_BuildList) ValidateWithPath(path string) error {
	for _geac, _bca := range _geae.BuildListChoice {
		if _fad := _bca.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0042ui\u006c\u0064\u004c\u0069\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025d\u005d", path, _geac)); _fad != nil {
			return _fad
		}
	}
	return nil
}

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _d.ST_PositivePercentage
}

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_aagg *CT_SlideMasterIdListEntry) Validate() error {
	return _aagg.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuildChoice and its children, prefixing error messages with path
func (_abafe *CT_TLGraphicalObjectBuildChoice) ValidateWithPath(path string) error {
	if _abafe.BldAsOne != nil {
		if _cdbe := _abafe.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _cdbe != nil {
			return _cdbe
		}
	}
	if _abafe.BldSub != nil {
		if _fdbgb := _abafe.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _fdbgb != nil {
			return _fdbgb
		}
	}
	return nil
}

// Validate validates the CT_TLIterateData and its children
func (_bcae *CT_TLIterateData) Validate() error {
	return _bcae.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}
func NewCT_CommonSlideData() *CT_CommonSlideData {
	_cdc := &CT_CommonSlideData{}
	_cdc.SpTree = NewCT_GroupShape()
	return _cdc
}

type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_d.CT_BlipFillProperties
	SpPr     *_d.CT_ShapeProperties
	Style    *_d.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

func (_faef *CT_SlideMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _faef.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_faef.IdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _faef.RIdAttr)})
	e.EncodeToken(start)
	if _faef.ExtLst != nil {
		_fdged := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faef.ExtLst, _fdged)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_ggbce *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _dggaa, _dcdd := range _ggbce.Tav {
		if _dbfge := _dcdd.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _dggaa)); _dbfge != nil {
			return _dbfge
		}
	}
	return nil
}
func (_ccgcc ST_TLAnimateColorSpace) String() string {
	switch _ccgcc {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}

// Validate validates the CT_SideDirectionTransition and its children
func (_bgdg *CT_SideDirectionTransition) Validate() error {
	return _bgdg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}
func (_gcfc *CT_TLTriggerRuntimeNode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_bceaf, _abgda := _gcfc.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _abgda != nil {
		return _abgda
	}
	start.Attr = append(start.Attr, _bceaf)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aadfc *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aadfc = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_aadfc = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_aadfc = 2
	}
	return nil
}
func NewCT_TLTextTargetElementChoice() *CT_TLTextTargetElementChoice {
	_cdff := &CT_TLTextTargetElementChoice{}
	return _cdff
}

// Validate validates the Sld and its children
func (_gbddb *Sld) Validate() error { return _gbddb.ValidateWithPath("\u0053\u006c\u0064") }
func (_dgcac *EG_BackgroundChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dgcac.BgPr != nil {
		_dbfcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_dgcac.BgPr, _dbfcc)
	} else if _dgcac.BgRef != nil {
		_bfebf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_dgcac.BgRef, _bfebf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TLChartSubelementType byte

func (_bacca *CT_SlideTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _beadd := range start.Attr {
		if _beadd.Name.Local == "\u0073\u0070\u0064" {
			_bacca.SpdAttr.UnmarshalXMLAttr(_beadd)
			continue
		}
		if _beadd.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_edca, _ggggd := _e.ParseBool(_beadd.Value)
			if _ggggd != nil {
				return _ggggd
			}
			_bacca.AdvClickAttr = &_edca
			continue
		}
		if _beadd.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_dbdb, _baef := _e.ParseUint(_beadd.Value, 10, 32)
			if _baef != nil {
				return _baef
			}
			_ebec := uint32(_dbdb)
			_bacca.AdvTmAttr = &_ebec
			continue
		}
	}
_ccgb:
	for {
		_dafg, _edcc := d.Token()
		if _edcc != nil {
			return _edcc
		}
		switch _fbdee := _dafg.(type) {
		case _b.StartElement:
			switch _fbdee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _edgc := d.DecodeElement(&_bacca.SlideTransitionChoice.Blinds, &_fbdee); _edgc != nil {
					return _edgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _efdgb := d.DecodeElement(&_bacca.SlideTransitionChoice.Checker, &_fbdee); _efdgb != nil {
					return _efdgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _egdb := d.DecodeElement(&_bacca.SlideTransitionChoice.Circle, &_fbdee); _egdb != nil {
					return _egdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _bdef := d.DecodeElement(&_bacca.SlideTransitionChoice.Dissolve, &_fbdee); _bdef != nil {
					return _bdef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _cbcd := d.DecodeElement(&_bacca.SlideTransitionChoice.Comb, &_fbdee); _cbcd != nil {
					return _cbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _gbge := d.DecodeElement(&_bacca.SlideTransitionChoice.Cover, &_fbdee); _gbge != nil {
					return _gbge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _eafggg := d.DecodeElement(&_bacca.SlideTransitionChoice.Cut, &_fbdee); _eafggg != nil {
					return _eafggg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _aeada := d.DecodeElement(&_bacca.SlideTransitionChoice.Diamond, &_fbdee); _aeada != nil {
					return _aeada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _edgag := d.DecodeElement(&_bacca.SlideTransitionChoice.Fade, &_fbdee); _edgag != nil {
					return _edgag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _fcaag := d.DecodeElement(&_bacca.SlideTransitionChoice.Newsflash, &_fbdee); _fcaag != nil {
					return _fcaag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _gdde := d.DecodeElement(&_bacca.SlideTransitionChoice.Plus, &_fbdee); _gdde != nil {
					return _gdde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _egda := d.DecodeElement(&_bacca.SlideTransitionChoice.Pull, &_fbdee); _egda != nil {
					return _egda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _bcddf := d.DecodeElement(&_bacca.SlideTransitionChoice.Push, &_fbdee); _bcddf != nil {
					return _bcddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _gbcd := d.DecodeElement(&_bacca.SlideTransitionChoice.Random, &_fbdee); _gbcd != nil {
					return _gbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _gcdc := d.DecodeElement(&_bacca.SlideTransitionChoice.RandomBar, &_fbdee); _gcdc != nil {
					return _gcdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _cfgc := d.DecodeElement(&_bacca.SlideTransitionChoice.Split, &_fbdee); _cfgc != nil {
					return _cfgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _ddcb := d.DecodeElement(&_bacca.SlideTransitionChoice.Strips, &_fbdee); _ddcb != nil {
					return _ddcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _bcad := d.DecodeElement(&_bacca.SlideTransitionChoice.Wedge, &_fbdee); _bcad != nil {
					return _bcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _gcebb := d.DecodeElement(&_bacca.SlideTransitionChoice.Wheel, &_fbdee); _gcebb != nil {
					return _gcebb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _ageef := d.DecodeElement(&_bacca.SlideTransitionChoice.Wipe, &_fbdee); _ageef != nil {
					return _ageef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_bacca.SlideTransitionChoice = NewCT_SlideTransitionChoice()
				if _aafc := d.DecodeElement(&_bacca.SlideTransitionChoice.Zoom, &_fbdee); _aafc != nil {
					return _aafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_bacca.SndAc = NewCT_TransitionSoundAction()
				if _acda := d.DecodeElement(_bacca.SndAc, &_fbdee); _acda != nil {
					return _acda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bacca.ExtLst = NewCT_ExtensionListModify()
				if _fbac := d.DecodeElement(_bacca.ExtLst, &_fbdee); _fbac != nil {
					return _fbac
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _fbdee.Name)
				if _cgecb := d.Skip(); _cgecb != nil {
					return _cgecb
				}
			}
		case _b.EndElement:
			break _ccgb
		case _b.CharData:
		}
	}
	return nil
}
func (_bccbe *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bccbe = 0
	case "\u0066\u0069\u0072s\u0074":
		*_bccbe = 1
	case "\u006c\u0061\u0073\u0074":
		*_bccbe = 2
	case "\u0061\u006c\u006c":
		*_bccbe = 3
	}
	return nil
}
func NewCT_ShowProperties() *CT_ShowProperties {
	_ccedf := &CT_ShowProperties{}
	_ccedf.ShowTypeChoice = NewEG_ShowTypeChoice()
	return _ccedf
}

type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_d.CT_ColorMRU
	ExtLst *CT_ExtensionList
}

func NewCT_TLAnimVariant() *CT_TLAnimVariant {
	_gggfg := &CT_TLAnimVariant{}
	_gggfg.TLAnimVariantChoice = NewCT_TLAnimVariantChoice()
	return _gggfg
}

// Validate validates the EG_ShowTypeChoice and its children
func (_cgcgbg *EG_ShowTypeChoice) Validate() error {
	return _cgcgbg.ValidateWithPath("\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0043h\u006f\u0069\u0063\u0065")
}
func (_bdgdf ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _bdgdf {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdgdf))
	}
	return nil
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_ecgec *CT_Presentation) ValidateWithPath(path string) error {
	if _ecgec.ServerZoomAttr != nil {
		if _aadb := _ecgec.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _aadb != nil {
			return _aadb
		}
	}
	if _ecgec.BookmarkIdSeedAttr != nil {
		if *_ecgec.BookmarkIdSeedAttr < 1 {
			return _c.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ecgec.BookmarkIdSeedAttr)
		}
		if *_ecgec.BookmarkIdSeedAttr >= 2147483648 {
			return _c.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ecgec.BookmarkIdSeedAttr)
		}
	}
	if _dgbff := _ecgec.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _dgbff != nil {
		return _dgbff
	}
	if _ecgec.SldMasterIdLst != nil {
		if _gcfg := _ecgec.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _gcfg != nil {
			return _gcfg
		}
	}
	if _ecgec.NotesMasterIdLst != nil {
		if _ccdf := _ecgec.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _ccdf != nil {
			return _ccdf
		}
	}
	if _ecgec.HandoutMasterIdLst != nil {
		if _dcbgg := _ecgec.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _dcbgg != nil {
			return _dcbgg
		}
	}
	if _ecgec.SldIdLst != nil {
		if _bfbdb := _ecgec.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _bfbdb != nil {
			return _bfbdb
		}
	}
	if _ecgec.SldSz != nil {
		if _dcd := _ecgec.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _dcd != nil {
			return _dcd
		}
	}
	if _befa := _ecgec.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _befa != nil {
		return _befa
	}
	if _ecgec.SmartTags != nil {
		if _becd := _ecgec.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _becd != nil {
			return _becd
		}
	}
	if _ecgec.EmbeddedFontLst != nil {
		if _cgaae := _ecgec.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _cgaae != nil {
			return _cgaae
		}
	}
	if _ecgec.CustShowLst != nil {
		if _gged := _ecgec.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _gged != nil {
			return _gged
		}
	}
	if _ecgec.PhotoAlbum != nil {
		if _adfe := _ecgec.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _adfe != nil {
			return _adfe
		}
	}
	if _ecgec.CustDataLst != nil {
		if _dada := _ecgec.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _dada != nil {
			return _dada
		}
	}
	if _ecgec.Kinsoku != nil {
		if _gdecf := _ecgec.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _gdecf != nil {
			return _gdecf
		}
	}
	if _ecgec.DefaultTextStyle != nil {
		if _gbbdg := _ecgec.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _gbbdg != nil {
			return _gbbdg
		}
	}
	if _ecgec.ModifyVerifier != nil {
		if _fgge := _ecgec.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _fgge != nil {
			return _fgge
		}
	}
	if _ecgec.ExtLst != nil {
		if _cffca := _ecgec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cffca != nil {
			return _cffca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_caa *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _ceef, _cbce := range _caa.CmAuthor {
		if _gdag := _cbce.ValidateWithPath(_c.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _ceef)); _gdag != nil {
			return _gdag
		}
	}
	return nil
}
func (_dbfdc ST_TransitionInOutDirectionType) String() string {
	switch _dbfdc {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}
func (_bbef *CT_TLTimeConditionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfba:
	for {
		_fcca, _adafd := d.Token()
		if _adafd != nil {
			return _adafd
		}
		switch _cagb := _fcca.(type) {
		case _b.StartElement:
			switch _cagb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_beegc := NewCT_TLTimeCondition()
				if _feed := d.DecodeElement(_beegc, &_cagb); _feed != nil {
					return _feed
				}
				_bbef.Cond = append(_bbef.Cond, _beegc)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cagb.Name)
				if _fgeb := d.Skip(); _fgeb != nil {
					return _fgeb
				}
			}
		case _b.EndElement:
			break _gfba
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_ddce *EG_Background) ValidateWithPath(path string) error {
	if _gefea := _ddce.BackgroundChoice.ValidateWithPath(path + "\u002f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0043h\u006f\u0069\u0063\u0065"); _gefea != nil {
		return _gefea
	}
	return nil
}

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}

// Validate validates the CT_GroupShapeChoice and its children
func (_fggg *CT_GroupShapeChoice) Validate() error {
	return _fggg.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}

// Validate validates the AG_Ole and its children
func (_dd *AG_Ole) Validate() error {
	return _dd.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}

type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_dceg := &CT_TLTriggerRuntimeNode{}
	_dceg.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _dceg
}
func (_edceed *ST_SplitterBarState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdbf, _dgbbbe := d.Token()
	if _dgbbbe != nil {
		return _dgbbbe
	}
	if _febcgd, _dccfe := _gdbf.(_b.EndElement); _dccfe && _febcgd.Name == start.Name {
		*_edceed = 1
		return nil
	}
	if _bfdcb, _dadb := _gdbf.(_b.CharData); !_dadb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdbf)
	} else {
		switch string(_bfdcb) {
		case "":
			*_edceed = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_edceed = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_edceed = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_edceed = 3
		}
	}
	_gdbf, _dgbbbe = d.Token()
	if _dgbbbe != nil {
		return _dgbbbe
	}
	if _ccfc, _aafdb := _gdbf.(_b.EndElement); _aafdb && _ccfc.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdbf)
}
func (_agbef *CT_GuideList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _agbef.Guide != nil {
		_befg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _efga := range _agbef.Guide {
			e.EncodeElement(_efga, _befg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TagsData struct{ IdAttr string }

func (_cddc *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cddc.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _gedb := range start.Attr {
		if _gedb.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_cddc.TransitionAttr.UnmarshalXMLAttr(_gedb)
			continue
		}
		if _gedb.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_dcdf := _gedb.Value
			_cddc.FilterAttr = &_dcdf
			continue
		}
		if _gedb.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_addc := _gedb.Value
			_cddc.PrLstAttr = &_addc
			continue
		}
	}
_bbeag:
	for {
		_adfg, _fadf := d.Token()
		if _fadf != nil {
			return _fadf
		}
		switch _cccab := _adfg.(type) {
		case _b.StartElement:
			switch _cccab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _begea := d.DecodeElement(_cddc.CBhvr, &_cccab); _begea != nil {
					return _begea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_cddc.Progress = NewCT_TLAnimVariant()
				if _dge := d.DecodeElement(_cddc.Progress, &_cccab); _dge != nil {
					return _dge
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _cccab.Name)
				if _gecee := d.Skip(); _gecee != nil {
					return _gecee
				}
			}
		case _b.EndElement:
			break _bbeag
		case _b.CharData:
		}
	}
	return nil
}
func (_cbaab *ST_PlaceholderSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbaab = 0
	case "\u0066\u0075\u006c\u006c":
		*_cbaab = 1
	case "\u0068\u0061\u006c\u0066":
		*_cbaab = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_cbaab = 3
	}
	return nil
}
func (_dba *CT_GroupShapeNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dba.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_dba.CNvGrpSpPr = _d.NewCT_NonVisualGroupDrawingShapeProps()
	_dba.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_bgfg:
	for {
		_ddge, _geeb := d.Token()
		if _geeb != nil {
			return _geeb
		}
		switch _gdeg := _ddge.(type) {
		case _b.StartElement:
			switch _gdeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gaga := d.DecodeElement(_dba.CNvPr, &_gdeg); _gaga != nil {
					return _gaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _fga := d.DecodeElement(_dba.CNvGrpSpPr, &_gdeg); _fga != nil {
					return _fga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _gfc := d.DecodeElement(_dba.NvPr, &_gdeg); _gfc != nil {
					return _gfc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _gdeg.Name)
				if _abfb := d.Skip(); _abfb != nil {
					return _abfb
				}
			}
		case _b.EndElement:
			break _bgfg
		case _b.CharData:
		}
	}
	return nil
}
func (_cdbff *ST_TLParaBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdbff = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cdbff = 1
	case "\u0070":
		*_cdbff = 2
	case "\u0063\u0075\u0073\u0074":
		*_cdbff = 3
	case "\u0077\u0068\u006fl\u0065":
		*_cdbff = 4
	}
	return nil
}
func (_cggcga *ST_TransitionCornerDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcgfa, _fbccg := d.Token()
	if _fbccg != nil {
		return _fbccg
	}
	if _efaed, _aadeb := _fcgfa.(_b.EndElement); _aadeb && _efaed.Name == start.Name {
		*_cggcga = 1
		return nil
	}
	if _gbaae, _babf := _fcgfa.(_b.CharData); !_babf {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcgfa)
	} else {
		switch string(_gbaae) {
		case "":
			*_cggcga = 0
		case "\u006c\u0075":
			*_cggcga = 1
		case "\u0072\u0075":
			*_cggcga = 2
		case "\u006c\u0064":
			*_cggcga = 3
		case "\u0072\u0064":
			*_cggcga = 4
		}
	}
	_fcgfa, _fbccg = d.Token()
	if _fbccg != nil {
		return _fbccg
	}
	if _feffc, _bfeg := _fcgfa.(_b.EndElement); _bfeg && _feffc.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcgfa)
}
func (_gdfcb ST_TLAnimateEffectTransition) String() string {
	switch _gdfcb {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_ebee *CT_HeaderFooter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbbd := range start.Attr {
		if _dbbd.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_cfca, _dbfbe := _e.ParseBool(_dbbd.Value)
			if _dbfbe != nil {
				return _dbfbe
			}
			_ebee.SldNumAttr = &_cfca
			continue
		}
		if _dbbd.Name.Local == "\u0068\u0064\u0072" {
			_ageb, _cccf := _e.ParseBool(_dbbd.Value)
			if _cccf != nil {
				return _cccf
			}
			_ebee.HdrAttr = &_ageb
			continue
		}
		if _dbbd.Name.Local == "\u0066\u0074\u0072" {
			_fcee, _gdcg := _e.ParseBool(_dbbd.Value)
			if _gdcg != nil {
				return _gdcg
			}
			_ebee.FtrAttr = &_fcee
			continue
		}
		if _dbbd.Name.Local == "\u0064\u0074" {
			_gdef, _aeab := _e.ParseBool(_dbbd.Value)
			if _aeab != nil {
				return _aeab
			}
			_ebee.DtAttr = &_gdef
			continue
		}
	}
_gdbc:
	for {
		_geag, _feca := d.Token()
		if _feca != nil {
			return _feca
		}
		switch _bdab := _geag.(type) {
		case _b.StartElement:
			switch _bdab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebee.ExtLst = NewCT_ExtensionListModify()
				if _fcbc := d.DecodeElement(_ebee.ExtLst, &_bdab); _fcbc != nil {
					return _fcbc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _bdab.Name)
				if _caeb := d.Skip(); _caeb != nil {
					return _caeb
				}
			}
		case _b.EndElement:
			break _gdbc
		case _b.CharData:
		}
	}
	return nil
}
func (_bed *AG_TLBuild) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _bed.SpidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", _bed.GrpIdAttr)})
	if _bed.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bed.UiExpandAttr))})
	}
	return nil
}
func (_bbdca *CT_TLAnimVariantFloatVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _bbdca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edec ST_PrintWhat) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdaab := _b.Attr{}
	_bdaab.Name = name
	switch _edec {
	case ST_PrintWhatUnset:
		_bdaab.Value = ""
	case ST_PrintWhatSlides:
		_bdaab.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_bdaab.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_bdaab.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_bdaab.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _bdaab, nil
}
func (_deggd *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_deggd = 0
	case "\u006e\u006f\u006e\u0065":
		*_deggd = 1
	case "\u0066\u0075\u006c\u006c":
		*_deggd = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_deggd = 3
	}
	return nil
}
func (_fdbeg *CT_TLAnimVariantStringVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgbb := range start.Attr {
		if _fcgbb.Name.Local == "\u0076\u0061\u006c" {
			_daaf := _fcgbb.Value
			_fdbeg.ValAttr = _daaf
			continue
		}
	}
	for {
		_feaf, _afbb := d.Token()
		if _afbb != nil {
			return _c.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _afbb)
		}
		if _adeb, _bbed := _feaf.(_b.EndElement); _bbed && _adeb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_gca *CT_Empty) ValidateWithPath(path string) error { return nil }

type ST_TLParaBuildType byte
type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

func (_adcfg *ST_TransitionSpeed) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adcfg = 0
	case "\u0073\u006c\u006f\u0077":
		*_adcfg = 1
	case "\u006d\u0065\u0064":
		*_adcfg = 2
	case "\u0066\u0061\u0073\u0074":
		*_adcfg = 3
	}
	return nil
}
func (_gacc ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _gacc {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gacc))
	}
	return nil
}
func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _dbed := &CT_ShowInfoKiosk{}; return _dbed }

// Validate validates the CT_TLBuildDiagram and its children
func (_ecaf *CT_TLBuildDiagram) Validate() error {
	return _ecaf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}
func (_eggb *CT_SlideLayoutIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eggb.SldLayoutId != nil {
		_ecfef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _eefde := range _eggb.SldLayoutId {
			e.EncodeElement(_eefde, _ecfef)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TagList and its children
func (_eddgb *CT_TagList) Validate() error {
	return _eddgb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_bfdea := &CT_ShapeNonVisual{}
	_bfdea.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_bfdea.CNvSpPr = _d.NewCT_NonVisualDrawingShapeProps()
	_bfdea.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _bfdea
}

// Validate validates the CT_TLAnimVariant and its children
func (_cfdf *CT_TLAnimVariant) Validate() error {
	return _cfdf.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}
func (_cfcaa *CT_TransitionSoundActionChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfcaa.StSnd != nil {
		_gebe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_cfcaa.StSnd, _gebe)
	} else if _cfcaa.EndSnd != nil {
		_debd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_cfcaa.EndSnd, _debd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_cdbbd *CT_TLCommonTimeNodeData) Validate() error {
	return _cdbbd.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func (_cadb *CT_SlideSorterViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cadb.CViewPr = NewCT_CommonViewProperties()
	for _, _gfca := range start.Attr {
		if _gfca.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_ceagg, _ddff := _e.ParseBool(_gfca.Value)
			if _ddff != nil {
				return _ddff
			}
			_cadb.ShowFormattingAttr = &_ceagg
			continue
		}
	}
_bccd:
	for {
		_cbfc, _cbba := d.Token()
		if _cbba != nil {
			return _cbba
		}
		switch _eedc := _cbfc.(type) {
		case _b.StartElement:
			switch _eedc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _fgba := d.DecodeElement(_cadb.CViewPr, &_eedc); _fgba != nil {
					return _fgba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cadb.ExtLst = NewCT_ExtensionList()
				if _ecbeb := d.DecodeElement(_cadb.ExtLst, &_eedc); _ecbeb != nil {
					return _ecbeb
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _eedc.Name)
				if _adcf := d.Skip(); _adcf != nil {
					return _adcf
				}
			}
		case _b.EndElement:
			break _bccd
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Presentation() *CT_Presentation {
	_cdefa := &CT_Presentation{}
	_cdefa.NotesSz = _d.NewCT_PositiveSize2D()
	return _cdefa
}
func (_bfafg *CT_StringTag) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", _bfafg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _bfafg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbfa *SldSyncPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbfa.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _fbacd := range start.Attr {
		if _fbacd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_fdgb := _fbacd.Value
			_fbfa.ServerSldIdAttr = _fdgb
			continue
		}
		if _fbacd.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_edaf, _bfada := ParseStdlibTime(_fbacd.Value)
			if _bfada != nil {
				return _bfada
			}
			_fbfa.ServerSldModifiedTimeAttr = _edaf
			continue
		}
		if _fbacd.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_fccgf, _gedbf := ParseStdlibTime(_fbacd.Value)
			if _gedbf != nil {
				return _gedbf
			}
			_fbfa.ClientInsertedTimeAttr = _fccgf
			continue
		}
	}
_bfgb:
	for {
		_cgabb, _eefac := d.Token()
		if _eefac != nil {
			return _eefac
		}
		switch _ggdfd := _cgabb.(type) {
		case _b.StartElement:
			switch _ggdfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbfa.ExtLst = NewCT_ExtensionList()
				if _cgffbd := d.DecodeElement(_fbfa.ExtLst, &_ggdfd); _cgffbd != nil {
					return _cgffbd
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _ggdfd.Name)
				if _ccegeg := d.Skip(); _ccegeg != nil {
					return _ccegeg
				}
			}
		case _b.EndElement:
			break _bfgb
		case _b.CharData:
		}
	}
	return nil
}
func (_dbcb *CT_ConnectorNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbcb.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_dbcb.CNvCxnSpPr = _d.NewCT_NonVisualConnectorProperties()
	_dbcb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_cdb:
	for {
		_cgcg, _aggad := d.Token()
		if _aggad != nil {
			return _aggad
		}
		switch _edd := _cgcg.(type) {
		case _b.StartElement:
			switch _edd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _fbde := d.DecodeElement(_dbcb.CNvPr, &_edd); _fbde != nil {
					return _fbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _ebg := d.DecodeElement(_dbcb.CNvCxnSpPr, &_edd); _ebg != nil {
					return _ebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _ggfb := d.DecodeElement(_dbcb.NvPr, &_edd); _ggfb != nil {
					return _ggfb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _edd.Name)
				if _ecef := d.Skip(); _ecef != nil {
					return _ecef
				}
			}
		case _b.EndElement:
			break _cdb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLShapeTargetElement and its children
func (_adegg *CT_TLShapeTargetElement) Validate() error {
	return _adegg.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_eefe *CmAuthorLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eefe.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_gceec:
	for {
		_afce, _efagc := d.Token()
		if _efagc != nil {
			return _efagc
		}
		switch _aggcae := _afce.(type) {
		case _b.StartElement:
			switch _aggcae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_gbdad := NewCT_CommentAuthor()
				if _ggedb := d.DecodeElement(_gbdad, &_aggcae); _ggedb != nil {
					return _ggedb
				}
				_eefe.CmAuthor = append(_eefe.CmAuthor, _gbdad)
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _aggcae.Name)
				if _eefg := d.Skip(); _eefg != nil {
					return _eefg
				}
			}
		case _b.EndElement:
			break _gceec
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLAnimateMotionPathEditMode byte

func (_bbbcd *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbbcd.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _abgdaa := range start.Attr {
		if _abgdaa.Name.Local == "\u0076\u0061\u006c" {
			_bbbcd.ValAttr.UnmarshalXMLAttr(_abgdaa)
			continue
		}
	}
	for {
		_beabbf, _gcgc := d.Token()
		if _gcgc != nil {
			return _c.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _gcgc)
		}
		if _egcfb, _fdgfb := _beabbf.(_b.EndElement); _fdgfb && _egcfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eage ST_TLParaBuildType) String() string {
	switch _eage {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}
func (_gabfd ST_TransitionSpeed) Validate() error { return _gabfd.ValidateWithPath("") }
func (_bccbc ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _bccbc {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bccbc))
	}
	return nil
}
func (_ffcbf *ST_TLAnimateColorSpace) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cafgd, _ecgab := d.Token()
	if _ecgab != nil {
		return _ecgab
	}
	if _bbfdb, _cfgd := _cafgd.(_b.EndElement); _cfgd && _bbfdb.Name == start.Name {
		*_ffcbf = 1
		return nil
	}
	if _gedcc, _fcdc := _cafgd.(_b.CharData); !_fcdc {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cafgd)
	} else {
		switch string(_gedcc) {
		case "":
			*_ffcbf = 0
		case "\u0072\u0067\u0062":
			*_ffcbf = 1
		case "\u0068\u0073\u006c":
			*_ffcbf = 2
		}
	}
	_cafgd, _ecgab = d.Token()
	if _ecgab != nil {
		return _ecgab
	}
	if _fdecb, _baece := _cafgd.(_b.EndElement); _baece && _fdecb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cafgd)
}
func NewCT_SlideTiming() *CT_SlideTiming { _ecfc := &CT_SlideTiming{}; return _ecfc }
func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_cedda := &CT_TLSetBehavior{}
	_cedda.CBhvr = NewCT_TLCommonBehaviorData()
	return _cedda
}

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_dbde *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _bdfg := _dbde.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _bdfg != nil {
		return _bdfg
	}
	if _eccgg := _dbde.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _eccgg != nil {
		return _eccgg
	}
	if _cbad := _dbde.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _cbad != nil {
		return _cbad
	}
	if _bgc := _dbde.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _bgc != nil {
		return _bgc
	}
	if _dbde.ExtLst != nil {
		if _gdce := _dbde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdce != nil {
			return _gdce
		}
	}
	return nil
}
func NewCT_Comment() *CT_Comment { _bdc := &CT_Comment{}; _bdc.Pos = _d.NewCT_Point2D(); return _bdc }

// Validate validates the CT_SlideTransition and its children
func (_egdc *CT_SlideTransition) Validate() error {
	return _egdc.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}
type ST_ViewType byte

func (_fgdd *CT_NotesMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _fgdd.IdAttr)})
	e.EncodeToken(start)
	if _fgdd.ExtLst != nil {
		_afgcd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgdd.ExtLst, _afgcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_fddba *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }
func NewCT_SlideIdList() *CT_SlideIdList                           { _abgb := &CT_SlideIdList{}; return _abgb }

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_bbdbf *EG_ShowType) ValidateWithPath(path string) error {
	if _gbega := _bbdbf.ShowTypeChoice.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0054\u0079\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065"); _gbega != nil {
		return _gbega
	}
	return nil
}
func (_dfdbg ST_PlaceholderType) String() string {
	switch _dfdbg {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}
func (_efbc *TagLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _efbc.CT_TagList.MarshalXML(e, start)
}

// Validate validates the CT_TLTimeConditionChoice and its children
func (_ccda *CT_TLTimeConditionChoice) Validate() error {
	return _ccda.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_debdb ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _debdb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_debdb))
	}
	return nil
}

// Validate validates the CT_OrientationTransition and its children
func (_bggf *CT_OrientationTransition) Validate() error {
	return _bggf.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_eccbf *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _bbfg, _fdfa := range _eccbf.Cond {
		if _ddaeb := _fdfa.ValidateWithPath(_c.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _bbfg)); _ddaeb != nil {
			return _ddaeb
		}
	}
	return nil
}
func (_cdded *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_beed, _egagd := d.Token()
	if _egagd != nil {
		return _egagd
	}
	if _bfge, _baebf := _beed.(_b.EndElement); _baebf && _bfge.Name == start.Name {
		*_cdded = 1
		return nil
	}
	if _aeefb, _gacfe := _beed.(_b.CharData); !_gacfe {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beed)
	} else {
		switch string(_aeefb) {
		case "":
			*_cdded = 0
		case "\u006e\u006f\u006e\u0065":
			*_cdded = 1
		case "\u0066\u0075\u006c\u006c":
			*_cdded = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_cdded = 3
		}
	}
	_beed, _egagd = d.Token()
	if _egagd != nil {
		return _egagd
	}
	if _deccd, _bebgc := _beed.(_b.EndElement); _bebgc && _deccd.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beed)
}
func NewCT_Placeholder() *CT_Placeholder { _accbe := &CT_Placeholder{}; return _accbe }

// Validate validates the CT_TLOleBuildChart and its children
func (_begaa *CT_TLOleBuildChart) Validate() error {
	return _begaa.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

// Validate validates the CT_TLTemplate and its children
func (_gfabg *CT_TLTemplate) Validate() error {
	return _gfabg.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_dcega *EG_ExtensionList) ValidateWithPath(path string) error {
	for _gbff, _dffg := range _dcega.Ext {
		if _baadd := _dffg.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gbff)); _baadd != nil {
			return _baadd
		}
	}
	return nil
}

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_gcdeb *ViewPr) ValidateWithPath(path string) error {
	if _gaebg := _gcdeb.CT_ViewProperties.ValidateWithPath(path); _gaebg != nil {
		return _gaebg
	}
	return nil
}
func (_ageeg *CT_WebProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cece := range start.Attr {
		if _cece.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_bgaf, _agcg := _e.ParseBool(_cece.Value)
			if _agcg != nil {
				return _agcg
			}
			_ageeg.ShowAnimationAttr = &_bgaf
			continue
		}
		if _cece.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_efaa, _fegff := _e.ParseBool(_cece.Value)
			if _fegff != nil {
				return _fegff
			}
			_ageeg.ResizeGraphicsAttr = &_efaa
			continue
		}
		if _cece.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_dbebf, _eggbc := _e.ParseBool(_cece.Value)
			if _eggbc != nil {
				return _eggbc
			}
			_ageeg.AllowPngAttr = &_dbebf
			continue
		}
		if _cece.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_dgca, _bedde := _e.ParseBool(_cece.Value)
			if _bedde != nil {
				return _bedde
			}
			_ageeg.RelyOnVmlAttr = &_dgca
			continue
		}
		if _cece.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_abdc, _eegf := _e.ParseBool(_cece.Value)
			if _eegf != nil {
				return _eegf
			}
			_ageeg.OrganizeInFoldersAttr = &_abdc
			continue
		}
		if _cece.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_edcb, _bedbd := _e.ParseBool(_cece.Value)
			if _bedbd != nil {
				return _bedbd
			}
			_ageeg.UseLongFilenamesAttr = &_edcb
			continue
		}
		if _cece.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_ageeg.ImgSzAttr.UnmarshalXMLAttr(_cece)
			continue
		}
		if _cece.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_dbgdb := _cece.Value
			_ageeg.EncodingAttr = &_dbgdb
			continue
		}
		if _cece.Name.Local == "\u0063\u006c\u0072" {
			_ageeg.ClrAttr.UnmarshalXMLAttr(_cece)
			continue
		}
	}
_agaa:
	for {
		_cagcf, _acddb := d.Token()
		if _acddb != nil {
			return _acddb
		}
		switch _bgga := _cagcf.(type) {
		case _b.StartElement:
			switch _bgga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ageeg.ExtLst = NewCT_ExtensionList()
				if _dbcc := d.DecodeElement(_ageeg.ExtLst, &_bgga); _dbcc != nil {
					return _dbcc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _bgga.Name)
				if _cgaff := d.Skip(); _cgaff != nil {
					return _cgaff
				}
			}
		case _b.EndElement:
			break _agaa
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLNextActionType byte

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_aagd *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _aagd.Blinds != nil {
		if _caefd := _aagd.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _caefd != nil {
			return _caefd
		}
	}
	if _aagd.Checker != nil {
		if _cddf := _aagd.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _cddf != nil {
			return _cddf
		}
	}
	if _aagd.Circle != nil {
		if _bcdg := _aagd.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _bcdg != nil {
			return _bcdg
		}
	}
	if _aagd.Dissolve != nil {
		if _dfdc := _aagd.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _dfdc != nil {
			return _dfdc
		}
	}
	if _aagd.Comb != nil {
		if _gaff := _aagd.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _gaff != nil {
			return _gaff
		}
	}
	if _aagd.Cover != nil {
		if _fcfbe := _aagd.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _fcfbe != nil {
			return _fcfbe
		}
	}
	if _aagd.Cut != nil {
		if _ecec := _aagd.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _ecec != nil {
			return _ecec
		}
	}
	if _aagd.Diamond != nil {
		if _feege := _aagd.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _feege != nil {
			return _feege
		}
	}
	if _aagd.Fade != nil {
		if _bbee := _aagd.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _bbee != nil {
			return _bbee
		}
	}
	if _aagd.Newsflash != nil {
		if _egdec := _aagd.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _egdec != nil {
			return _egdec
		}
	}
	if _aagd.Plus != nil {
		if _fdaef := _aagd.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _fdaef != nil {
			return _fdaef
		}
	}
	if _aagd.Pull != nil {
		if _bdgc := _aagd.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _bdgc != nil {
			return _bdgc
		}
	}
	if _aagd.Push != nil {
		if _cbadf := _aagd.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _cbadf != nil {
			return _cbadf
		}
	}
	if _aagd.Random != nil {
		if _bbfde := _aagd.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _bbfde != nil {
			return _bbfde
		}
	}
	if _aagd.RandomBar != nil {
		if _bedcb := _aagd.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _bedcb != nil {
			return _bedcb
		}
	}
	if _aagd.Split != nil {
		if _eecgb := _aagd.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _eecgb != nil {
			return _eecgb
		}
	}
	if _aagd.Strips != nil {
		if _ffacg := _aagd.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _ffacg != nil {
			return _ffacg
		}
	}
	if _aagd.Wedge != nil {
		if _afed := _aagd.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _afed != nil {
			return _afed
		}
	}
	if _aagd.Wheel != nil {
		if _gaec := _aagd.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _gaec != nil {
			return _gaec
		}
	}
	if _aagd.Wipe != nil {
		if _faaff := _aagd.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _faaff != nil {
			return _faaff
		}
	}
	if _aagd.Zoom != nil {
		if _bgce := _aagd.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _bgce != nil {
			return _bgce
		}
	}
	return nil
}

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_cecdg *OleObj) ValidateWithPath(path string) error {
	if _bgeba := _cecdg.CT_OleObject.ValidateWithPath(path); _bgeba != nil {
		return _bgeba
	}
	return nil
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     uint32
	GrpIdAttr    uint32
	UiExpandAttr *bool
}
type CT_TransitionSoundActionChoice struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}
type CT_TLTextTargetElement struct{ TLTextTargetElementChoice *CT_TLTextTargetElementChoice }

func (_gccag *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gccag = 0
	case "\u0072\u0067\u0062":
		*_gccag = 1
	case "\u0068\u0073\u006c":
		*_gccag = 2
	}
	return nil
}
func (_affbg ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _affbg {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_affbg))
	}
	return nil
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_abcd *CT_ControlList) ValidateWithPath(path string) error {
	for _aeea, _fcbb := range _abcd.Control {
		if _abgf := _fcbb.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _aeea)); _abgf != nil {
			return _abgf
		}
	}
	return nil
}
func NewCT_GuideList() *CT_GuideList { _dbfg := &CT_GuideList{}; return _dbfg }
func (_dfca *CT_ViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfca.LastViewAttr != ST_ViewTypeUnset {
		_cgadb, _edead := _dfca.LastViewAttr.MarshalXMLAttr(_b.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _edead != nil {
			return _edead
		}
		start.Attr = append(start.Attr, _cgadb)
	}
	if _dfca.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_dfca.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _dfca.NormalViewPr != nil {
		_acfae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.NormalViewPr, _acfae)
	}
	if _dfca.SlideViewPr != nil {
		_ffbf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.SlideViewPr, _ffbf)
	}
	if _dfca.OutlineViewPr != nil {
		_gaac := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.OutlineViewPr, _gaac)
	}
	if _dfca.NotesTextViewPr != nil {
		_gacf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.NotesTextViewPr, _gacf)
	}
	if _dfca.SorterViewPr != nil {
		_cbgaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.SorterViewPr, _cbgaf)
	}
	if _dfca.NotesViewPr != nil {
		_caae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_dfca.NotesViewPr, _caae)
	}
	if _dfca.GridSpacing != nil {
		_efacdc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_dfca.GridSpacing, _efacdc)
	}
	if _dfca.ExtLst != nil {
		_efbe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfca.ExtLst, _efbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_fddbf := &CT_TLAnimateBehavior{}
	_fddbf.CBhvr = NewCT_TLCommonBehaviorData()
	return _fddbf
}
func (_cbgb *CT_PictureNonVisual) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbgb.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_cbgb.CNvPicPr = _d.NewCT_NonVisualPictureProperties()
	_cbgb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_acgaa:
	for {
		_bbec, _dcead := d.Token()
		if _dcead != nil {
			return _dcead
		}
		switch _bcddd := _bbec.(type) {
		case _b.StartElement:
			switch _bcddd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _bbac := d.DecodeElement(_cbgb.CNvPr, &_bcddd); _bbac != nil {
					return _bbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _aega := d.DecodeElement(_cbgb.CNvPicPr, &_bcddd); _aega != nil {
					return _aega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _gecg := d.DecodeElement(_cbgb.NvPr, &_bcddd); _gecg != nil {
					return _gecg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bcddd.Name)
				if _beec := d.Skip(); _beec != nil {
					return _beec
				}
			}
		case _b.EndElement:
			break _acgaa
		case _b.CharData:
		}
	}
	return nil
}
func (_fgbdb ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dadd := _b.Attr{}
	_dadd.Name = name
	switch _fgbdb {
	case ST_TLAnimateMotionPathEditModeUnset:
		_dadd.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_dadd.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_dadd.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _dadd, nil
}
func (_agc *CT_Extension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _c.Sprintf("\u0025\u0076", _agc.UriAttr)})
	e.EncodeToken(start)
	if _agc.Any != nil {
		for _, _gece := range _agc.Any {
			_gece.MarshalXML(e, _b.StartElement{})
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dccdf *CT_TLTimeNodeParallel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dccdf.CTn = NewCT_TLCommonTimeNodeData()
_fbbgf:
	for {
		_deac, _geaga := d.Token()
		if _geaga != nil {
			return _geaga
		}
		switch _aggca := _deac.(type) {
		case _b.StartElement:
			switch _aggca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bbgg := d.DecodeElement(_dccdf.CTn, &_aggca); _bbgg != nil {
					return _bbgg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _aggca.Name)
				if _bdee := d.Skip(); _bdee != nil {
					return _bdee
				}
			}
		case _b.EndElement:
			break _fbbgf
		case _b.CharData:
		}
	}
	return nil
}
func NewCmLst() *CmLst {
	_ggfbbd := &CmLst{}
	_ggfbbd.CT_CommentList = *NewCT_CommentList()
	return _ggfbbd
}
func NewCT_IndexRange() *CT_IndexRange {
	_bcff := &CT_IndexRange{}
	return _bcff
}

type ST_TransitionInOutDirectionType byte

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_cdgea *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _cdgea.TmAttr != nil {
		if _afddfg := _cdgea.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _afddfg != nil {
			return _afddfg
		}
	}
	if _cdgea.Val != nil {
		if _accbc := _cdgea.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _accbc != nil {
			return _accbc
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShowTypeChoice and its children, prefixing error messages with path
func (_egag *EG_ShowTypeChoice) ValidateWithPath(path string) error {
	if _egag.Present != nil {
		if _agbeb := _egag.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _agbeb != nil {
			return _agbeb
		}
	}
	if _egag.Browse != nil {
		if _bafd := _egag.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _bafd != nil {
			return _bafd
		}
	}
	if _egag.Kiosk != nil {
		if _gddc := _egag.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _gddc != nil {
			return _gddc
		}
	}
	return nil
}
func (_edcbb ST_TLTimeNodePresetClassType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_edcbb.String(), start)
}
func NewCT_CustomShow() *CT_CustomShow {
	_fdae := &CT_CustomShow{}
	_fdae.SldLst = NewCT_SlideRelationshipList()
	return _fdae
}

type CT_TLGraphicalObjectBuildChoice struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub *_d.CT_AnimationGraphicalObjectBuildProperties
}

func (_fgcea ST_TLAnimateBehaviorValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgcea.String(), start)
}
func (_edfg *CT_SlideMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecabg:
	for {
		_gadb, _gebg := d.Token()
		if _gebg != nil {
			return _gebg
		}
		switch _eecfa := _gadb.(type) {
		case _b.StartElement:
			switch _eecfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_cbeg := NewCT_SlideMasterIdListEntry()
				if _gggbf := d.DecodeElement(_cbeg, &_eecfa); _gggbf != nil {
					return _gggbf
				}
				_edfg.SldMasterId = append(_edfg.SldMasterId, _cbeg)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _eecfa.Name)
				if _dccg := d.Skip(); _dccg != nil {
					return _dccg
				}
			}
		case _b.EndElement:
			break _ecabg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_cgcbe *CT_TLPoint) ValidateWithPath(path string) error {
	if _ccfdb := _cgcbe.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _ccfdb != nil {
		return _ccfdb
	}
	if _fefgd := _cgcbe.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _fefgd != nil {
		return _fefgd
	}
	return nil
}

type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

func NewCT_TLSubShapeId() *CT_TLSubShapeId { _aaeg := &CT_TLSubShapeId{}; return _aaeg }

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_egffd *CT_TLTriggerTimeNodeID) Validate() error {
	return _egffd.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}

// Validate validates the CT_TagsData and its children
func (_efca *CT_TagsData) Validate() error {
	return _efca.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}
func (_eegda *CT_ShowProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eegda.ShowTypeChoice = NewEG_ShowTypeChoice()
	for _, _gaba := range start.Attr {
		if _gaba.Name.Local == "\u006c\u006f\u006f\u0070" {
			_acgc, _eacbf := _e.ParseBool(_gaba.Value)
			if _eacbf != nil {
				return _eacbf
			}
			_eegda.LoopAttr = &_acgc
			continue
		}
		if _gaba.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_fafg, _gbggb := _e.ParseBool(_gaba.Value)
			if _gbggb != nil {
				return _gbggb
			}
			_eegda.ShowNarrationAttr = &_fafg
			continue
		}
		if _gaba.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_bffa, _ecac := _e.ParseBool(_gaba.Value)
			if _ecac != nil {
				return _ecac
			}
			_eegda.ShowAnimationAttr = &_bffa
			continue
		}
		if _gaba.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_bgeb, _dgcd := _e.ParseBool(_gaba.Value)
			if _dgcd != nil {
				return _dgcd
			}
			_eegda.UseTimingsAttr = &_bgeb
			continue
		}
	}
_acaba:
	for {
		_cdcc, _ebcgb := d.Token()
		if _ebcgb != nil {
			return _ebcgb
		}
		switch _dafb := _cdcc.(type) {
		case _b.StartElement:
			switch _dafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_eegda.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _afea := d.DecodeElement(&_eegda.ShowTypeChoice.Present, &_dafb); _afea != nil {
					return _afea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_eegda.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _efe := d.DecodeElement(&_eegda.ShowTypeChoice.Browse, &_dafb); _efe != nil {
					return _efe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_eegda.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _ggaga := d.DecodeElement(&_eegda.ShowTypeChoice.Kiosk, &_dafb); _ggaga != nil {
					return _ggaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_eegda.SldAll = NewCT_Empty()
				if _bgaaa := d.DecodeElement(_eegda.SldAll, &_dafb); _bgaaa != nil {
					return _bgaaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_eegda.SldRg = NewCT_IndexRange()
				if _gaea := d.DecodeElement(_eegda.SldRg, &_dafb); _gaea != nil {
					return _gaea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_eegda.CustShow = NewCT_CustomShowId()
				if _aeac := d.DecodeElement(_eegda.CustShow, &_dafb); _aeac != nil {
					return _aeac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_eegda.PenClr = _d.NewCT_Color()
				if _dccd := d.DecodeElement(_eegda.PenClr, &_dafb); _dccd != nil {
					return _dccd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eegda.ExtLst = NewCT_ExtensionList()
				if _faacb := d.DecodeElement(_eegda.ExtLst, &_dafb); _faacb != nil {
					return _faacb
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dafb.Name)
				if _cdefd := d.Skip(); _cdefd != nil {
					return _cdefd
				}
			}
		case _b.EndElement:
			break _acaba
		case _b.CharData:
		}
	}
	return nil
}
func (_efdf *CT_Empty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcbf *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcbf = 0
	case "\u006c\u0075":
		*_bcbf = 1
	case "\u0072\u0075":
		*_bcbf = 2
	case "\u006c\u0064":
		*_bcbf = 3
	case "\u0072\u0064":
		*_bcbf = 4
	}
	return nil
}
func (_agbae ST_TLAnimateColorDirection) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cafff := _b.Attr{}
	_cafff.Name = name
	switch _agbae {
	case ST_TLAnimateColorDirectionUnset:
		_cafff.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_cafff.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_cafff.Value = "\u0063\u0063\u0077"
	}
	return _cafff, nil
}
func (_ggcdc ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _ggcdc {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcdc))
	}
	return nil
}
func (_ddcdgd *EG_ShowType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddcdgd.ShowTypeChoice = NewEG_ShowTypeChoice()
_beffa:
	for {
		_gcdab, _bcfef := d.Token()
		if _bcfef != nil {
			return _bcfef
		}
		switch _cgfdc := _gcdab.(type) {
		case _b.StartElement:
			switch _cgfdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_ddcdgd.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _dgbfe := d.DecodeElement(&_ddcdgd.ShowTypeChoice.Present, &_cgfdc); _dgbfe != nil {
					return _dgbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_ddcdgd.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _cbcbc := d.DecodeElement(&_ddcdgd.ShowTypeChoice.Browse, &_cgfdc); _cbcbc != nil {
					return _cbcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_ddcdgd.ShowTypeChoice = NewEG_ShowTypeChoice()
				if _bedbe := d.DecodeElement(&_ddcdgd.ShowTypeChoice.Kiosk, &_cgfdc); _bedbe != nil {
					return _bedbe
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _cgfdc.Name)
				if _eafe := d.Skip(); _eafe != nil {
					return _eafe
				}
			}
		case _b.EndElement:
			break _beffa
		case _b.CharData:
		}
	}
	return nil
}
func (_gcbe *CT_OutlineViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_eecf := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_gcbe.CViewPr, _eecf)
	if _gcbe.SldLst != nil {
		_ceed := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gcbe.SldLst, _ceed)
	}
	if _gcbe.ExtLst != nil {
		_bbfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcbe.ExtLst, _bbfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_d.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_d.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}
type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr          *_d.CT_GroupShapeProperties
	GroupShapeChoice []*CT_GroupShapeChoice
	ExtLst           *CT_ExtensionListModify
}

func (_bcgeaa *CT_TLByAnimateColorTransform) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bcgeaa.TLByAnimateColorTransformChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebdaa *ST_SplitterBarState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebdaa = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_ebdaa = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_ebdaa = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_ebdaa = 3
	}
	return nil
}
func (_gdcbd *CT_WheelTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdced := range start.Attr {
		if _bdced.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_eded, _dbacd := _e.ParseUint(_bdced.Value, 10, 32)
			if _dbacd != nil {
				return _dbacd
			}
			_fgcfc := uint32(_eded)
			_gdcbd.SpokesAttr = &_fgcfc
			continue
		}
	}
	for {
		_dbaga, _caebc := d.Token()
		if _caebc != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _caebc)
		}
		if _fgbae, _baab := _dbaga.(_b.EndElement); _baab && _fgbae.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLTimeTargetElement and its children
func (_fgcbc *CT_TLTimeTargetElement) Validate() error {
	return _fgcbc.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_abfag *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _abfag.SldAll != nil {
		if _faade := _abfag.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _faade != nil {
			return _faade
		}
	}
	if _abfag.SldRg != nil {
		if _cadaf := _abfag.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _cadaf != nil {
			return _cadaf
		}
	}
	if _abfag.CustShow != nil {
		if _ebac := _abfag.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _ebac != nil {
			return _ebac
		}
	}
	return nil
}
func (_bddc *CT_TLCommonBehaviorData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bddc.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_ceaa, _cdfbc := _bddc.AdditiveAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _cdfbc != nil {
			return _cdfbc
		}
		start.Attr = append(start.Attr, _ceaa)
	}
	if _bddc.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_geffe, _fbegd := _bddc.AccumulateAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _fbegd != nil {
			return _fbegd
		}
		start.Attr = append(start.Attr, _geffe)
	}
	if _bddc.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_ecdcd, _dcda := _bddc.XfrmTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _dcda != nil {
			return _dcda
		}
		start.Attr = append(start.Attr, _ecdcd)
	}
	if _bddc.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_bddc.FromAttr)})
	}
	if _bddc.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _c.Sprintf("\u0025\u0076", *_bddc.ToAttr)})
	}
	if _bddc.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _c.Sprintf("\u0025\u0076", *_bddc.ByAttr)})
	}
	if _bddc.RctxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _c.Sprintf("\u0025\u0076", *_bddc.RctxAttr)})
	}
	if _bddc.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_aedfc, _adab := _bddc.OverrideAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _adab != nil {
			return _adab
		}
		start.Attr = append(start.Attr, _aedfc)
	}
	e.EncodeToken(start)
	_daegd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_bddc.CTn, _daegd)
	_caeg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_bddc.TgtEl, _caeg)
	if _bddc.AttrNameLst != nil {
		_gdfdb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_bddc.AttrNameLst, _gdfdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgfg *CT_SlideSyncProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdfe := range start.Attr {
		if _bdfe.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_gede := _bdfe.Value
			_cgfg.ServerSldIdAttr = _gede
			continue
		}
		if _bdfe.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_cdbce, _eegb := ParseStdlibTime(_bdfe.Value)
			if _eegb != nil {
				return _eegb
			}
			_cgfg.ServerSldModifiedTimeAttr = _cdbce
			continue
		}
		if _bdfe.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_bdaf, _bdcc := ParseStdlibTime(_bdfe.Value)
			if _bdcc != nil {
				return _bdcc
			}
			_cgfg.ClientInsertedTimeAttr = _bdaf
			continue
		}
	}
_dffeb:
	for {
		_abgec, _fgag := d.Token()
		if _fgag != nil {
			return _fgag
		}
		switch _dffac := _abgec.(type) {
		case _b.StartElement:
			switch _dffac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgfg.ExtLst = NewCT_ExtensionList()
				if _ggbe := d.DecodeElement(_cgfg.ExtLst, &_dffac); _ggbe != nil {
					return _ggbe
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dffac.Name)
				if _dcgg := d.Skip(); _dcgg != nil {
					return _dcgg
				}
			}
		case _b.EndElement:
			break _dffeb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_deaed *CT_SlideRelationshipListEntry) Validate() error {
	return _deaed.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}
func NewPresentationPr() *PresentationPr {
	_ggdbc := &PresentationPr{}
	_ggdbc.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _ggdbc
}
func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_eabd := &CT_ExtensionListModify{}
	return _eabd
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}

func (_cegde *CT_NormalViewPortion) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u007a"}, Value: _c.Sprintf("\u0025\u0076", _cegde.SzAttr)})
	if _cegde.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cegde.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eadd *CT_BuildListChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eaab := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
		_eadd.BldP = NewCT_TLBuildParagraph()
		if _agb := d.DecodeElement(_eadd.BldP, &_eaab); _agb != nil {
			return _agb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
		_eadd.BldDgm = NewCT_TLBuildDiagram()
		if _eaea := d.DecodeElement(_eadd.BldDgm, &_eaab); _eaea != nil {
			return _eaea
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
		_eadd.BldOleChart = NewCT_TLOleBuildChart()
		if _ddf := d.DecodeElement(_eadd.BldOleChart, &_eaab); _ddf != nil {
			return _ddf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
		_eadd.BldGraphic = NewCT_TLGraphicalObjectBuild()
		if _cgd := d.DecodeElement(_eadd.BldGraphic, &_eaab); _cgd != nil {
			return _cgd
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0075\u0069\u006c\u0064\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _eaab.Name)
		if _dfe := d.Skip(); _dfe != nil {
			return _dfe
		}
	}
	return nil
}
func (_abedec ST_TLTimeIndefinite) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abedec.String(), start)
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_effcf *CT_WebProperties) ValidateWithPath(path string) error {
	if _geccd := _effcf.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _geccd != nil {
		return _geccd
	}
	if _bcdgc := _effcf.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _bcdgc != nil {
		return _bcdgc
	}
	if _effcf.ExtLst != nil {
		if _bcfca := _effcf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcfca != nil {
			return _bcfca
		}
	}
	return nil
}
func (_addb *CT_CustomerData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gffg := range start.Attr {
		if _gffg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gffg.Name.Local == "\u0069\u0064" || _gffg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gffg.Name.Local == "\u0069\u0064" {
			_efab := _gffg.Value
			_addb.IdAttr = _efab
			continue
		}
	}
	for {
		_ffc, _cegd := d.Token()
		if _cegd != nil {
			return _c.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _cegd)
		}
		if _begb, _ggb := _ffc.(_b.EndElement); _ggb && _begb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ShowInfoKiosk and its children
func (_gfcd *CT_ShowInfoKiosk) Validate() error {
	return _gfcd.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}
func (_gddg ST_TransitionSideDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gddg.String(), start)
}
func (_fdfea *CT_EmbeddedFontList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebb:
	for {
		_fgcf, _dad := d.Token()
		if _dad != nil {
			return _dad
		}
		switch _efcd := _fgcf.(type) {
		case _b.StartElement:
			switch _efcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_edbd := NewCT_EmbeddedFontListEntry()
				if _febd := d.DecodeElement(_edbd, &_efcd); _febd != nil {
					return _febd
				}
				_fdfea.EmbeddedFont = append(_fdfea.EmbeddedFont, _edbd)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _efcd.Name)
				if _fgfg := d.Skip(); _fgfg != nil {
					return _fgfg
				}
			}
		case _b.EndElement:
			break _ebb
		case _b.CharData:
		}
	}
	return nil
}
func (_egcaa ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _egcaa {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcaa))
	}
	return nil
}
func (_bffb *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dgea:
	for {
		_cgfed, _gffc := d.Token()
		if _gffc != nil {
			return _gffc
		}
		switch _acaea := _cgfed.(type) {
		case _b.StartElement:
			switch _acaea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _gbbaa string
				if _degad := d.DecodeElement(&_gbbaa, &_acaea); _degad != nil {
					return _degad
				}
				_bffb.AttrName = append(_bffb.AttrName, _gbbaa)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _acaea.Name)
				if _ffea := d.Skip(); _ffea != nil {
					return _ffea
				}
			}
		case _b.EndElement:
			break _dgea
		case _b.CharData:
		}
	}
	return nil
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

func NewCT_CustomerDataList() *CT_CustomerDataList { _cbea := &CT_CustomerDataList{}; return _cbea }

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_cbfe *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _cbfe.Embed != nil {
		if _fagag := _cbfe.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _fagag != nil {
			return _fagag
		}
	}
	if _cbfe.Link != nil {
		if _aebfg := _cbfe.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _aebfg != nil {
			return _aebfg
		}
	}
	return nil
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_ccfbg := &CT_TLBehaviorAttributeNameList{}
	return _ccfbg
}

type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

func (_aade *OleObj) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _aade.CT_OleObject.MarshalXML(e, start)
}
func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_cgfc := &CT_HandoutMasterIdList{}
	return _cgfc
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_cfbga *CT_TagsData) ValidateWithPath(path string) error { return nil }

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}
type ST_TLAnimateBehaviorCalcMode byte

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_gdacd *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _gdacd.ExtLst != nil {
		if _bbdef := _gdacd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bbdef != nil {
			return _bbdef
		}
	}
	return nil
}
func (_bfba *CT_OutlineViewSlideEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _bfba.IdAttr)})
	if _bfba.CollapseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bfba.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_EmbeddedFontList() *CT_EmbeddedFontList { _fcfe := &CT_EmbeddedFontList{}; return _fcfe }
func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_gfda := &CT_HtmlPublishProperties{}
	return _gfda
}
func NewHandoutMaster() *HandoutMaster {
	_gcbdcf := &HandoutMaster{}
	_gcbdcf.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _gcbdcf
}

type Notes struct{ CT_NotesSlide }
type ST_TLCommandType byte

func (_gfd *CT_GroupShapeNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfdg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gfd.CNvPr, _dfdg)
	_agab := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gfd.CNvGrpSpPr, _agab)
	_beea := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_gfd.NvPr, _beea)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

// Validate validates the CT_Extension and its children
func (_ebgg *CT_Extension) Validate() error {
	return _ebgg.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}
func (_afbaa *CT_NotesSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afbaa.CSld = NewCT_CommonSlideData()
	for _, _befgde := range start.Attr {
		if _befgde.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gcbce, _ecae := _e.ParseBool(_befgde.Value)
			if _ecae != nil {
				return _ecae
			}
			_afbaa.ShowMasterSpAttr = &_gcbce
			continue
		}
		if _befgde.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_gcfa, _agaeg := _e.ParseBool(_befgde.Value)
			if _agaeg != nil {
				return _agaeg
			}
			_afbaa.ShowMasterPhAnimAttr = &_gcfa
			continue
		}
	}
_gfbg:
	for {
		_gbgc, _agfca := d.Token()
		if _agfca != nil {
			return _agfca
		}
		switch _faac := _gbgc.(type) {
		case _b.StartElement:
			switch _faac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cbbb := d.DecodeElement(_afbaa.CSld, &_faac); _cbbb != nil {
					return _cbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_afbaa.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _gceg := d.DecodeElement(_afbaa.ClrMapOvr, &_faac); _gceg != nil {
					return _gceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afbaa.ExtLst = NewCT_ExtensionListModify()
				if _dacf := d.DecodeElement(_afbaa.ExtLst, &_faac); _dacf != nil {
					return _dacf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _faac.Name)
				if _cab := d.Skip(); _cab != nil {
					return _cab
				}
			}
		case _b.EndElement:
			break _gfbg
		case _b.CharData:
		}
	}
	return nil
}
func (_edgfe *ST_TLOleChartBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcgcc, _ecad := d.Token()
	if _ecad != nil {
		return _ecad
	}
	if _dagag, _cdfea := _fcgcc.(_b.EndElement); _cdfea && _dagag.Name == start.Name {
		*_edgfe = 1
		return nil
	}
	if _fedc, _ebad := _fcgcc.(_b.CharData); !_ebad {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcgcc)
	} else {
		switch string(_fedc) {
		case "":
			*_edgfe = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_edgfe = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_edgfe = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_edgfe = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_edgfe = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_edgfe = 5
		}
	}
	_fcgcc, _ecad = d.Token()
	if _ecad != nil {
		return _ecad
	}
	if _fgca, _ccdgf := _fcgcc.(_b.EndElement); _ccdgf && _fgca.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcgcc)
}
func (_ged *CT_Guide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ged.OrientAttr != ST_DirectionUnset {
		_fdaeg, _ggeb := _ged.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _ggeb != nil {
			return _ggeb
		}
		start.Attr = append(start.Attr, _fdaeg)
	}
	if _ged.PosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073"}, Value: _c.Sprintf("\u0025\u0076", *_ged.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbgfb *CT_TLAnimateBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbgfb.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dabe := range start.Attr {
		if _dabe.Name.Local == "\u0062\u0079" {
			_ffeea := _dabe.Value
			_dbgfb.ByAttr = &_ffeea
			continue
		}
		if _dabe.Name.Local == "\u0066\u0072\u006f\u006d" {
			_aebea := _dabe.Value
			_dbgfb.FromAttr = &_aebea
			continue
		}
		if _dabe.Name.Local == "\u0074\u006f" {
			_ggaca := _dabe.Value
			_dbgfb.ToAttr = &_ggaca
			continue
		}
		if _dabe.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_dbgfb.CalcmodeAttr.UnmarshalXMLAttr(_dabe)
			continue
		}
		if _dabe.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_dbgfb.ValueTypeAttr.UnmarshalXMLAttr(_dabe)
			continue
		}
	}
_bdabb:
	for {
		_bcffg, _babbf := d.Token()
		if _babbf != nil {
			return _babbf
		}
		switch _dgaa := _bcffg.(type) {
		case _b.StartElement:
			switch _dgaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _dagb := d.DecodeElement(_dbgfb.CBhvr, &_dgaa); _dagb != nil {
					return _dagb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_dbgfb.TavLst = NewCT_TLTimeAnimateValueList()
				if _dggbad := d.DecodeElement(_dbgfb.TavLst, &_dgaa); _dggbad != nil {
					return _dggbad
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _dgaa.Name)
				if _feab := d.Skip(); _feab != nil {
					return _feab
				}
			}
		case _b.EndElement:
			break _bdabb
		case _b.CharData:
		}
	}
	return nil
}
func (_fffee *CT_TLMediaNodeVideo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fffee.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _gcdea := range start.Attr {
		if _gcdea.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_ebcfe, _ggagg := _e.ParseBool(_gcdea.Value)
			if _ggagg != nil {
				return _ggagg
			}
			_fffee.FullScrnAttr = &_ebcfe
			continue
		}
	}
_gedc:
	for {
		_gace, _cgeef := d.Token()
		if _cgeef != nil {
			return _cgeef
		}
		switch _gcfd := _gace.(type) {
		case _b.StartElement:
			switch _gcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _dbgd := d.DecodeElement(_fffee.CMediaNode, &_gcfd); _dbgd != nil {
					return _dbgd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _gcfd.Name)
				if _gcfb := d.Skip(); _gcfb != nil {
					return _gcfb
				}
			}
		case _b.EndElement:
			break _gedc
		case _b.CharData:
		}
	}
	return nil
}
func ParseUnionST_PositiveFixedPercentage(s string) (_d.ST_PositiveFixedPercentage, error) {
	return _d.ParseUnionST_PositiveFixedPercentage(s)
}

// Validate validates the CT_GroupShape and its children
func (_eeeg *CT_GroupShape) Validate() error {
	return _eeeg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_ceeaa *CT_TLIterateData) ValidateWithPath(path string) error {
	if _dfbf := _ceeaa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dfbf != nil {
		return _dfbf
	}
	if _cadbg := _ceeaa.TLIterateDataChoice.ValidateWithPath(path + "/\u0054L\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044a\u0074\u0061\u0043\u0068oi\u0063\u0065"); _cadbg != nil {
		return _cadbg
	}
	return nil
}

type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}

// Validate validates the CT_SlideSyncProperties and its children
func (_eedcc *CT_SlideSyncProperties) Validate() error {
	return _eedcc.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

type ST_SlideLayoutType byte

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_ccca *CT_Extension) ValidateWithPath(path string) error { return nil }

type ST_TLAnimateMotionBehaviorOrigin byte
type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_gcee *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _cdecg := _gcee.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cdecg != nil {
		return _cdecg
	}
	if _fafcd := _gcee.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _fafcd != nil {
		return _fafcd
	}
	if _gbgfg := _gcee.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _gbgfg != nil {
		return _gbgfg
	}
	if _gcee.TavLst != nil {
		if _efcda := _gcee.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _efcda != nil {
			return _efcda
		}
	}
	return nil
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_aefce *PresentationPr) ValidateWithPath(path string) error {
	if _fecb := _aefce.CT_PresentationProperties.ValidateWithPath(path); _fecb != nil {
		return _fecb
	}
	return nil
}
func (_ceggd *ST_SlideLayoutType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ceggd = 0
	case "\u0074\u0069\u0074l\u0065":
		*_ceggd = 1
	case "\u0074\u0078":
		*_ceggd = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_ceggd = 3
	case "\u0074\u0062\u006c":
		*_ceggd = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_ceggd = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_ceggd = 6
	case "\u0064\u0067\u006d":
		*_ceggd = 7
	case "\u0063\u0068\u0061r\u0074":
		*_ceggd = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_ceggd = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_ceggd = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_ceggd = 11
	case "\u0062\u006c\u0061n\u006b":
		*_ceggd = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_ceggd = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_ceggd = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_ceggd = 15
	case "\u006f\u0062\u006a":
		*_ceggd = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_ceggd = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_ceggd = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_ceggd = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_ceggd = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ceggd = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_ceggd = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_ceggd = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_ceggd = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_ceggd = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_ceggd = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_ceggd = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_ceggd = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_ceggd = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ceggd = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_ceggd = 31
	case "\u0063\u0075\u0073\u0074":
		*_ceggd = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_ceggd = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_ceggd = 34
	case "\u006f\u0062\u006aT\u0078":
		*_ceggd = 35
	case "\u0070\u0069\u0063T\u0078":
		*_ceggd = 36
	}
	return nil
}
func (_eedae *CT_WheelTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eedae.SpokesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0076", *_eedae.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_ccge *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }
func (_egffg ST_TLAnimateMotionPathEditMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egffg.String(), start)
}

// Validate validates the CT_WebProperties and its children
func (_cgda *CT_WebProperties) Validate() error {
	return _cgda.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_CommonViewProperties and its children
func (_baga *CT_CommonViewProperties) Validate() error {
	return _baga.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CmAuthorLst struct{ CT_CommentAuthorList }

// Validate validates the CT_WheelTransition and its children
func (_geeae *CT_WheelTransition) Validate() error {
	return _geeae.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func (_gffce ST_TLCommandType) Validate() error { return _gffce.ValidateWithPath("") }

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_aebefd *CT_TLTriggerRuntimeNode) Validate() error {
	return _aebefd.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}
func (_bdcb *CT_NormalViewProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bdcb.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bdcb.ShowOutlineIconsAttr))})
	}
	if _bdcb.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bdcb.SnapVertSplitterAttr))})
	}
	if _bdcb.VertBarStateAttr != ST_SplitterBarStateUnset {
		_bfcb, _cgdd := _bdcb.VertBarStateAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _cgdd != nil {
			return _cgdd
		}
		start.Attr = append(start.Attr, _bfcb)
	}
	if _bdcb.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_abed, _bfee := _bdcb.HorzBarStateAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _bfee != nil {
			return _bfee
		}
		start.Attr = append(start.Attr, _abed)
	}
	if _bdcb.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_bdcb.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_fagd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_bdcb.RestoredLeft, _fagd)
	_fbeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_bdcb.RestoredTop, _fbeb)
	if _bdcb.ExtLst != nil {
		_fdcf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bdcb.ExtLst, _fdcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_addbg ST_TLTimeNodeSyncType) String() string {
	switch _addbg {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}
func ParseUnionST_Coordinate32(s string) (_d.ST_Coordinate32, error) {
	return _d.ParseUnionST_Coordinate32(s)
}

// Validate validates the CT_PrintProperties and its children
func (_ddbb *CT_PrintProperties) Validate() error {
	return _ddbb.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_adef *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aaca := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_adef.CNvPr, _aaca)
	_egeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_adef.CNvGraphicFramePr, _egeg)
	_cff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_adef.NvPr, _cff)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_gfgde *Sld) ValidateWithPath(path string) error {
	if _fgafe := _gfgde.CT_Slide.ValidateWithPath(path); _fgafe != nil {
		return _fgafe
	}
	return nil
}

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_adbac *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }
func (_eade *CT_TLAnimateBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eade.ByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079"}, Value: _c.Sprintf("\u0025\u0076", *_eade.ByAttr)})
	}
	if _eade.FromAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_eade.FromAttr)})
	}
	if _eade.ToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f"}, Value: _c.Sprintf("\u0025\u0076", *_eade.ToAttr)})
	}
	if _eade.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_dbfc, _gfef := _eade.CalcmodeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _gfef != nil {
			return _gfef
		}
		start.Attr = append(start.Attr, _dbfc)
	}
	if _eade.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_gfaef, _eaefa := _eade.ValueTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _eaefa != nil {
			return _eaefa
		}
		start.Attr = append(start.Attr, _gfaef)
	}
	e.EncodeToken(start)
	_feac := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_eade.CBhvr, _feac)
	if _eade.TavLst != nil {
		_dacdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_eade.TavLst, _dacdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_ddfdf *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _ceeb := _ddfdf.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _ceeb != nil {
		return _ceeb
	}
	if _ddfdf.SldLst != nil {
		if _egafe := _ddfdf.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _egafe != nil {
			return _egafe
		}
	}
	if _ddfdf.ExtLst != nil {
		if _deff := _ddfdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deff != nil {
			return _deff
		}
	}
	return nil
}
func NewCT_BuildList() *CT_BuildList {
	_ced := &CT_BuildList{}
	return _ced
}

// Validate validates the CT_GraphicalObjectFrame and its children
func (_dfcf *CT_GraphicalObjectFrame) Validate() error {
	return _dfcf.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}
func (_aaffa ST_TLTimeNodeType) Validate() error { return _aaffa.ValidateWithPath("") }

type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}
type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_d.CT_ColorMappingOverride
}
type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}
type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_d.CT_Scale2D

	// View Origin
	Origin *_d.CT_Point2D
}

func (_ddfba ST_PhotoAlbumFrameShape) Validate() error { return _ddfba.ValidateWithPath("") }

type ST_PhotoAlbumFrameShape byte

func (_bbfgb *ST_TLTimeIndefinite) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bffga, _bcbde := d.Token()
	if _bcbde != nil {
		return _bcbde
	}
	if _egbag, _ffgd := _bffga.(_b.EndElement); _ffgd && _egbag.Name == start.Name {
		*_bbfgb = 1
		return nil
	}
	if _ffacd, _begaf := _bffga.(_b.CharData); !_begaf {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bffga)
	} else {
		switch string(_ffacd) {
		case "":
			*_bbfgb = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_bbfgb = 1
		}
	}
	_bffga, _bcbde = d.Token()
	if _bcbde != nil {
		return _bcbde
	}
	if _accbf, _aegg := _bffga.(_b.EndElement); _aegg && _accbf.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bffga)
}
func (_adbcf ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _adbcf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adbcf))
	}
	return nil
}
func (_bafcd ST_SlideLayoutType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bafcd.String(), start)
}
func (_dcgee ST_TLAnimateBehaviorValueType) Validate() error { return _dcgee.ValidateWithPath("") }
func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_dcff := &CT_TLCommandBehavior{}
	_dcff.CBhvr = NewCT_TLCommonBehaviorData()
	return _dcff
}

type ST_TLBehaviorOverrideType byte

func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_ddcc := &CT_NotesMasterIdListEntry{}
	return _ddcc
}

type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}

func (_ddaf *CT_OleObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddaf.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.ProgIdAttr)})
	}
	if _ddaf.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.SpidAttr)})
	}
	if _ddaf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.NameAttr)})
	}
	if _ddaf.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ddaf.ShowAsIconAttr))})
	}
	if _ddaf.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.IdAttr)})
	}
	if _ddaf.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.ImgWAttr)})
	}
	if _ddaf.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _c.Sprintf("\u0025\u0076", *_ddaf.ImgHAttr)})
	}
	e.EncodeToken(start)
	_ddaf.OleObjectChoice.MarshalXML(e, _b.StartElement{})
	if _ddaf.Pic != nil {
		_dfgf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_ddaf.Pic, _dfgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcdgcf ST_TLBehaviorTransformType) String() string {
	switch _dcdgcf {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}
func (_deg *CT_Empty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_geff, _eee := d.Token()
		if _eee != nil {
			return _c.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _eee)
		}
		if _daeb, _bfde := _geff.(_b.EndElement); _bfde && _daeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cegff ST_TLTimeNodeSyncType) Validate() error { return _cegff.ValidateWithPath("") }
func (_bab *CT_Extension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfc := range start.Attr {
		if _cfc.Name.Local == "\u0075\u0072\u0069" {
			_gdgg := _cfc.Value
			_bab.UriAttr = _gdgg
			continue
		}
	}
_eeda:
	for {
		_ffeg, _gfgg := d.Token()
		if _gfgg != nil {
			return _gfgg
		}
		switch _fgbc := _ffeg.(type) {
		case _b.StartElement:
			switch _fgbc.Name {
			default:
				if _gefee, _fabd := _f.CreateElement(_fgbc); _fabd != nil {
					return _fabd
				} else {
					if _dfce := d.DecodeElement(_gefee, &_fgbc); _dfce != nil {
						return _dfce
					}
					_bab.Any = append(_bab.Any, _gefee)
				}
			}
		case _b.EndElement:
			break _eeda
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TimeNodeList() *CT_TimeNodeList { _bcabb := &CT_TimeNodeList{}; return _bcabb }
func NewSldMaster() *SldMaster {
	_cdabff := &SldMaster{}
	_cdabff.CT_SlideMaster = *NewCT_SlideMaster()
	return _cdabff
}
func (_gag *AG_Ole) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gag.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_gag.SpidAttr)})
	}
	if _gag.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_gag.NameAttr)})
	}
	if _gag.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gag.ShowAsIconAttr))})
	}
	if _gag.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_gag.IdAttr)})
	}
	if _gag.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _c.Sprintf("\u0025\u0076", *_gag.ImgWAttr)})
	}
	if _gag.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _c.Sprintf("\u0025\u0076", *_gag.ImgHAttr)})
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_cbede *CT_SlideLayout) ValidateWithPath(path string) error {
	if _adedg := _cbede.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _adedg != nil {
		return _adedg
	}
	if _fbadd := _cbede.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _fbadd != nil {
		return _fbadd
	}
	if _cbede.ClrMapOvr != nil {
		if _eceea := _cbede.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _eceea != nil {
			return _eceea
		}
	}
	if _cbede.Transition != nil {
		if _fcbad := _cbede.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _fcbad != nil {
			return _fcbad
		}
	}
	if _cbede.Timing != nil {
		if _cbgf := _cbede.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _cbgf != nil {
			return _cbgf
		}
	}
	if _cbede.Hf != nil {
		if _bdgf := _cbede.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _bdgf != nil {
			return _bdgf
		}
	}
	if _cbede.ExtLst != nil {
		if _dfge := _cbede.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfge != nil {
			return _dfge
		}
	}
	return nil
}

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}

func (_eefeg ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _eefeg {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eefeg))
	}
	return nil
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}

func (_ebdg *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _babc := range start.Attr {
		if _babc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _babc.Name.Local == "\u0069\u0064" || _babc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _babc.Name.Local == "\u0069\u0064" {
			_gefa := _babc.Value
			_ebdg.RIdAttr = _gefa
			continue
		}
		if _babc.Name.Local == "\u0069\u0064" {
			_dddae, _egbaa := _e.ParseUint(_babc.Value, 10, 32)
			if _egbaa != nil {
				return _egbaa
			}
			_gabc := uint32(_dddae)
			_ebdg.IdAttr = &_gabc
			continue
		}
	}
_cbgae:
	for {
		_aegcb, _fcgc := d.Token()
		if _fcgc != nil {
			return _fcgc
		}
		switch _efgeb := _aegcb.(type) {
		case _b.StartElement:
			switch _efgeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebdg.ExtLst = NewCT_ExtensionList()
				if _abbf := d.DecodeElement(_ebdg.ExtLst, &_efgeb); _abbf != nil {
					return _abbf
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _efgeb.Name)
				if _fadbg := d.Skip(); _fadbg != nil {
					return _fadbg
				}
			}
		case _b.EndElement:
			break _cbgae
		case _b.CharData:
		}
	}
	return nil
}
func (_cfgffb ST_TLTriggerRuntimeNode) Validate() error { return _cfgffb.ValidateWithPath("") }

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_agcb *CT_GroupShape) ValidateWithPath(path string) error {
	if _ggbg := _agcb.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ggbg != nil {
		return _ggbg
	}
	if _fdfd := _agcb.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _fdfd != nil {
		return _fdfd
	}
	for _bgdad, _ddeg := range _agcb.GroupShapeChoice {
		if _fce := _ddeg.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _bgdad)); _fce != nil {
			return _fce
		}
	}
	if _agcb.ExtLst != nil {
		if _effb := _agcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _effb != nil {
			return _effb
		}
	}
	return nil
}
func (_cbadd ST_ViewType) Validate() error { return _cbadd.ValidateWithPath("") }

type ST_OleObjectFollowColorScheme byte

func (_acbfg ST_TLTimeNodeRestartType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acbfg.String(), start)
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

// Validate validates the EG_ShowType and its children
func (_ccecf *EG_ShowType) Validate() error {
	return _ccecf.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}
func NewCT_Connector() *CT_Connector {
	_gfa := &CT_Connector{}
	_gfa.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_gfa.SpPr = _d.NewCT_ShapeProperties()
	return _gfa
}

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_deffd *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _deffd.IdAttr < 256 {
		return _c.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _deffd.IdAttr)
	}
	if _deffd.IdAttr >= 2147483648 {
		return _c.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _deffd.IdAttr)
	}
	if _deffd.ExtLst != nil {
		if _ccdb := _deffd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccdb != nil {
			return _ccdb
		}
	}
	return nil
}
func (_ggcfc *CT_TLBuildDiagram) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggcfc.BldAttr != ST_TLDiagramBuildTypeUnset {
		_ecbdb, _egbe := _ggcfc.BldAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u006c\u0064"})
		if _egbe != nil {
			return _egbe
		}
		start.Attr = append(start.Attr, _ecbdb)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _ggcfc.SpidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", _ggcfc.GrpIdAttr)})
	if _ggcfc.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_ggcfc.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deadc ST_SlideSizeType) String() string {
	switch _deadc {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}
func (_acece *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_eefaa := []string{}
	if _acece.ST_PositiveFixedPercentage != nil {
		if _bgdgd := _acece.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _bgdgd != nil {
			return _bgdgd
		}
		_eefaa = append(_eefaa, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _acece.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_eefaa = append(_eefaa, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_eefaa) > 1 {
		return _c.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eefaa)
	}
	return nil
}
func (_eefcbe ST_TLBehaviorOverrideType) String() string {
	switch _eefcbe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}
func (_faee ST_TLChartSubelementType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_faee.String(), start)
}
func (_eeaff *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eeaff = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_eeaff = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_eeaff = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_eeaff = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_eeaff = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_eeaff = 5
	}
	return nil
}
func NewEG_Background() *EG_Background {
	_cfedg := &EG_Background{}
	_cfedg.BackgroundChoice = NewEG_BackgroundChoice()
	return _cfedg
}

// Validate validates the Notes and its children
func (_aefbfg *Notes) Validate() error { return _aefbfg.ValidateWithPath("\u004e\u006f\u0074e\u0073") }
func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_aefa := &CT_OutlineViewSlideEntry{}
	return _aefa
}

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}

func (_bbbd *CT_TLMediaNodeAudio) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbbd.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _cfgcfg := range start.Attr {
		if _cfgcfg.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_ccfac, _ebfa := _e.ParseBool(_cfgcfg.Value)
			if _ebfa != nil {
				return _ebfa
			}
			_bbbd.IsNarrationAttr = &_ccfac
			continue
		}
	}
_bafa:
	for {
		_afade, _fgfdbc := d.Token()
		if _fgfdbc != nil {
			return _fgfdbc
		}
		switch _cgbgf := _afade.(type) {
		case _b.StartElement:
			switch _cgbgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _cdba := d.DecodeElement(_bbbd.CMediaNode, &_cgbgf); _cdba != nil {
					return _cdba
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _cgbgf.Name)
				if _affed := d.Skip(); _affed != nil {
					return _affed
				}
			}
		case _b.EndElement:
			break _bafa
		case _b.CharData:
		}
	}
	return nil
}
func (_cdacg ST_TLOleChartBuildType) String() string {
	switch _cdacg {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

func (_dgfdb *CT_SplitTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcfg := range start.Attr {
		if _bcfg.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_dgfdb.OrientAttr.UnmarshalXMLAttr(_bcfg)
			continue
		}
		if _bcfg.Name.Local == "\u0064\u0069\u0072" {
			_dgfdb.DirAttr.UnmarshalXMLAttr(_bcfg)
			continue
		}
	}
	for {
		_dabc, _beecc := d.Token()
		if _beecc != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _beecc)
		}
		if _cggaa, _aggdg := _dabc.(_b.EndElement); _aggdg && _cggaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eegd *CT_ShowInfoBrowse) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eegd.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_eegd.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_fged *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _daga := _fged.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _daga != nil {
		return _daga
	}
	if _fged.ExtLst != nil {
		if _cbgdc := _fged.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbgdc != nil {
			return _cbgdc
		}
	}
	return nil
}
func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _baa := &CT_GroupShapeChoice{}; return _baa }
func (_daagd ST_SlideLayoutType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gfadb := _b.Attr{}
	_gfadb.Name = name
	switch _daagd {
	case ST_SlideLayoutTypeUnset:
		_gfadb.Value = ""
	case ST_SlideLayoutTypeTitle:
		_gfadb.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_gfadb.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_gfadb.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_gfadb.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_gfadb.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_gfadb.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_gfadb.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_gfadb.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_gfadb.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_gfadb.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_gfadb.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_gfadb.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_gfadb.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_gfadb.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_gfadb.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_gfadb.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_gfadb.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_gfadb.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_gfadb.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_gfadb.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_gfadb.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_gfadb.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_gfadb.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_gfadb.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_gfadb.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_gfadb.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_gfadb.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_gfadb.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_gfadb.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_gfadb.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_gfadb.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_gfadb.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_gfadb.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_gfadb.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_gfadb.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_gfadb.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _gfadb, nil
}
func (_egea *CT_SlideRelationshipListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aecf := range start.Attr {
		if _aecf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aecf.Name.Local == "\u0069\u0064" || _aecf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aecf.Name.Local == "\u0069\u0064" {
			_eeeb := _aecf.Value
			_egea.IdAttr = _eeeb
			continue
		}
	}
	for {
		_dgfaaa, _agdbe := d.Token()
		if _agdbe != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _agdbe)
		}
		if _fdbee, _gcgab := _dgfaaa.(_b.EndElement); _gcgab && _fdbee.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_acf *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _acf.ExtLst != nil {
		if _fgcc := _acf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgcc != nil {
			return _fgcc
		}
	}
	return nil
}
func NewCT_ControlList() *CT_ControlList {
	_dgdd := &CT_ControlList{}
	return _dgdd
}
func (_ccgga *CT_SmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _ccgga.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abfeb ST_TLAnimateColorSpace) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdcea := _b.Attr{}
	_fdcea.Name = name
	switch _abfeb {
	case ST_TLAnimateColorSpaceUnset:
		_fdcea.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_fdcea.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_fdcea.Value = "\u0068\u0073\u006c"
	}
	return _fdcea, nil
}
func (_decd *EG_ShowTypeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _decd.Present != nil {
		_gcddb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_decd.Present, _gcddb)
	} else if _decd.Browse != nil {
		_gfdde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_decd.Browse, _gfdde)
	} else if _decd.Kiosk != nil {
		_cbeea := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_decd.Kiosk, _cbeea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

// ValidateWithPath validates the EG_BackgroundChoice and its children, prefixing error messages with path
func (_cbdfb *EG_BackgroundChoice) ValidateWithPath(path string) error {
	if _cbdfb.BgPr != nil {
		if _fbgda := _cbdfb.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _fbgda != nil {
			return _fbgda
		}
	}
	if _cbdfb.BgRef != nil {
		if _ecfgb := _cbdfb.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _ecfgb != nil {
			return _ecfgb
		}
	}
	return nil
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_bgfc *CT_HandoutMasterIdListEntry) Validate() error {
	return _bgfc.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}
func (_dfgg ST_TLParaBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caee := _b.Attr{}
	_caee.Name = name
	switch _dfgg {
	case ST_TLParaBuildTypeUnset:
		_caee.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_caee.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_caee.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_caee.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_caee.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _caee, nil
}
func (_fbb *CT_GuideList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_debc:
	for {
		_abcg, _debb := d.Token()
		if _debb != nil {
			return _debb
		}
		switch _cdde := _abcg.(type) {
		case _b.StartElement:
			switch _cdde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_ebfe := NewCT_Guide()
				if _bfag := d.DecodeElement(_ebfe, &_cdde); _bfag != nil {
					return _bfag
				}
				_fbb.Guide = append(_fbb.Guide, _ebfe)
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cdde.Name)
				if _ceff := d.Skip(); _ceff != nil {
					return _ceff
				}
			}
		case _b.EndElement:
			break _debc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Rel() *CT_Rel { _gafb := &CT_Rel{}; return _gafb }
func NewCT_TransitionSoundActionChoice() *CT_TransitionSoundActionChoice {
	_acbfc := &CT_TransitionSoundActionChoice{}
	return _acbfc
}
func (_eafge *CT_SlideIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _eafge.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _eafge.RIdAttr)})
	e.EncodeToken(start)
	if _eafge.ExtLst != nil {
		_adbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eafge.ExtLst, _adbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_acbb *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _acfb := _acbb.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _acfb != nil {
		return _acfb
	}
	return nil
}
func (_ebeg ST_TransitionCornerDirectionType) String() string {
	switch _ebeg {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}
func (_defag ST_TLBehaviorAccumulateType) String() string {
	switch _defag {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_ecfcd *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _ecfcd.VolAttr != nil {
		if _deebga := _ecfcd.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _deebga != nil {
			return _deebga
		}
	}
	if _bfbbb := _ecfcd.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bfbbb != nil {
		return _bfbbb
	}
	if _cccae := _ecfcd.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _cccae != nil {
		return _cccae
	}
	return nil
}

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_acfee *EG_ChildSlide) ValidateWithPath(path string) error {
	if _acfee.ClrMapOvr != nil {
		if _dccbc := _acfee.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _dccbc != nil {
			return _dccbc
		}
	}
	return nil
}
func (_aceg *CmLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _aceg.CT_CommentList.MarshalXML(e, start)
}
func (_gdea ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _gdea {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdea))
	}
	return nil
}
func (_eagaf *CT_Guide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdb := range start.Attr {
		if _gdb.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_eagaf.OrientAttr.UnmarshalXMLAttr(_gdb)
			continue
		}
		if _gdb.Name.Local == "\u0070\u006f\u0073" {
			_dggec, _fedb := ParseUnionST_Coordinate32(_gdb.Value)
			if _fedb != nil {
				return _fedb
			}
			_eagaf.PosAttr = &_dggec
			continue
		}
	}
	for {
		_feeg, _ffee := d.Token()
		if _ffee != nil {
			return _c.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _ffee)
		}
		if _gdacf, _aeee := _feeg.(_b.EndElement); _aeee && _gdacf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfdac ST_TLTriggerEvent) Validate() error { return _bfdac.ValidateWithPath("") }
func (_bddgd ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ccdfc := _b.Attr{}
	_ccdfc.Name = name
	switch _bddgd {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_ccdfc.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_ccdfc.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_ccdfc.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _ccdfc, nil
}
func (_egadb ST_TLAnimateMotionPathEditMode) String() string {
	switch _egadb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}
func (_gcdb *CT_OptionalBlackTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgbd := range start.Attr {
		if _cgbd.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_edda, _gaadc := _e.ParseBool(_cgbd.Value)
			if _gaadc != nil {
				return _gaadc
			}
			_gcdb.ThruBlkAttr = &_edda
			continue
		}
	}
	for {
		_gefg, _eddc := d.Token()
		if _eddc != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _eddc)
		}
		if _fabe, _acade := _gefg.(_b.EndElement); _acade && _fabe.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (_d.ST_PositivePercentage, error) {
	return _d.ParseUnionST_PositivePercentage(s)
}

// Validate validates the CT_SlideViewProperties and its children
func (_aeeed *CT_SlideViewProperties) Validate() error {
	return _aeeed.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

type SldLayout struct{ CT_SlideLayout }

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_acfa *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _afaba := _acfa.TLByAnimateColorTransformChoice.ValidateWithPath(path + "\u002f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072T\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0043\u0068\u006f\u0069\u0063\u0065"); _afaba != nil {
		return _afaba
	}
	return nil
}
func (_fgefg *ST_TransitionInOutDirectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgcdg, _dacef := d.Token()
	if _dacef != nil {
		return _dacef
	}
	if _gebag, _bdea := _fgcdg.(_b.EndElement); _bdea && _gebag.Name == start.Name {
		*_fgefg = 1
		return nil
	}
	if _ddgf, _eddcb := _fgcdg.(_b.CharData); !_eddcb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgcdg)
	} else {
		switch string(_ddgf) {
		case "":
			*_fgefg = 0
		case "\u006f\u0075\u0074":
			*_fgefg = 1
		case "\u0069\u006e":
			*_fgefg = 2
		}
	}
	_fgcdg, _dacef = d.Token()
	if _dacef != nil {
		return _dacef
	}
	if _abcb, _eegfe := _fgcdg.(_b.EndElement); _eegfe && _abcb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgcdg)
}
func (_bdcf *CT_TransitionSoundAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_bdcf.TransitionSoundActionChoice.MarshalXML(e, _b.StartElement{})
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edcgb ST_TLTimeIndefinite) Validate() error { return _edcgb.ValidateWithPath("") }
func (_efbad *CT_TLSubShapeId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _efbad.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggfeg ST_TLTimeNodeFillType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggfeg.String(), start)
}
func (_bcefa ST_WebScreenSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_afdfdg := _b.Attr{}
	_afdfdg.Name = name
	switch _bcefa {
	case ST_WebScreenSizeUnset:
		_afdfdg.Value = ""
	case ST_WebScreenSize544x376:
		_afdfdg.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_afdfdg.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_afdfdg.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_afdfdg.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_afdfdg.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_afdfdg.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_afdfdg.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_afdfdg.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_afdfdg.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_afdfdg.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_afdfdg.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _afdfdg, nil
}

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_eef *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _bbb, _efcc := range _eef.CustData {
		if _aaga := _efcc.ValidateWithPath(_c.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _bbb)); _aaga != nil {
			return _aaga
		}
	}
	if _eef.Tags != nil {
		if _gaf := _eef.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _gaf != nil {
			return _gaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_acgbc *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _bceg := _acgbc.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _bceg != nil {
		return _bceg
	}
	if _ggdb := _acgbc.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _ggdb != nil {
		return _ggdb
	}
	if _acgbc.ExtLst != nil {
		if _gab := _acgbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gab != nil {
			return _gab
		}
	}
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList {
	_bfefg := &EG_ExtensionList{}
	return _bfefg
}
func (_cbdgd *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbdgd = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_cbdgd = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_cbdgd = 2
	}
	return nil
}
func (_gadfg *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gadfg = 0
	case "\u0062\u0061\u0073\u0065":
		*_gadfg = 1
	case "\u0073\u0075\u006d":
		*_gadfg = 2
	case "\u0072\u0065\u0070\u006c":
		*_gadfg = 3
	case "\u006d\u0075\u006c\u0074":
		*_gadfg = 4
	case "\u006e\u006f\u006e\u0065":
		*_gadfg = 5
	}
	return nil
}
func (_fecfb ST_PrintWhat) ValidateWithPath(path string) error {
	switch _fecfb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fecfb))
	}
	return nil
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_egdeb *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _egdeb.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _c.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cecbb := _egdeb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cecbb != nil {
		return _cecbb
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_gcgb *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _bdfb := _gcgb.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _bdfb != nil {
		return _bdfb
	}
	if _gcgb.GuideLst != nil {
		if _dddf := _gcgb.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _dddf != nil {
			return _dddf
		}
	}
	return nil
}

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool
	ShowTypeChoice *EG_ShowTypeChoice

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_d.CT_Color
	ExtLst *CT_ExtensionList
}

func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_effc := &CT_SlideSyncProperties{}
	return _effc
}
func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_efacb := &CT_OutlineViewProperties{}
	_efacb.CViewPr = NewCT_CommonViewProperties()
	return _efacb
}
func (_gaedb ST_IterateType) Validate() error { return _gaedb.ValidateWithPath("") }
func (_eaggf ST_TLBehaviorOverrideType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eaggf.String(), start)
}

// Validate validates the CT_TLTemplateList and its children
func (_fffec *CT_TLTemplateList) Validate() error {
	return _fffec.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}
func (_cebdb ST_PhotoAlbumLayout) String() string {
	switch _cebdb {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

func (_fbgg *CT_EightDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfge := range start.Attr {
		if _gfge.Name.Local == "\u0064\u0069\u0072" {
			_cced, _bfbc := ParseUnionST_TransitionEightDirectionType(_gfge.Value)
			if _bfbc != nil {
				return _bfbc
			}
			_fbgg.DirAttr = &_cced
			continue
		}
	}
	for {
		_bfd, _egac := d.Token()
		if _egac != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _egac)
		}
		if _eabf, _fddb := _bfd.(_b.EndElement); _fddb && _eabf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_babdd *Sld) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_babdd.CT_Slide = *NewCT_Slide()
	for _, _cacdc := range start.Attr {
		if _cacdc.Name.Local == "\u0073\u0068\u006f\u0077" {
			_degfc, _ffaf := _e.ParseBool(_cacdc.Value)
			if _ffaf != nil {
				return _ffaf
			}
			_babdd.ShowAttr = &_degfc
			continue
		}
		if _cacdc.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_dbdc, _agdc := _e.ParseBool(_cacdc.Value)
			if _agdc != nil {
				return _agdc
			}
			_babdd.ShowMasterSpAttr = &_dbdc
			continue
		}
		if _cacdc.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_acbdg, _fcdba := _e.ParseBool(_cacdc.Value)
			if _fcdba != nil {
				return _fcdba
			}
			_babdd.ShowMasterPhAnimAttr = &_acbdg
			continue
		}
	}
_cfec:
	for {
		_cbgbd, _fbge := d.Token()
		if _fbge != nil {
			return _fbge
		}
		switch _dabf := _cbgbd.(type) {
		case _b.StartElement:
			switch _dabf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gaagfb := d.DecodeElement(_babdd.CSld, &_dabf); _gaagfb != nil {
					return _gaagfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_babdd.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _dcege := d.DecodeElement(_babdd.ClrMapOvr, &_dabf); _dcege != nil {
					return _dcege
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_babdd.Transition = NewCT_SlideTransition()
				if _cfacf := d.DecodeElement(_babdd.Transition, &_dabf); _cfacf != nil {
					return _cfacf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_babdd.Timing = NewCT_SlideTiming()
				if _febcg := d.DecodeElement(_babdd.Timing, &_dabf); _febcg != nil {
					return _febcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_babdd.ExtLst = NewCT_ExtensionListModify()
				if _cgaad := d.DecodeElement(_babdd.ExtLst, &_dabf); _cgaad != nil {
					return _cgaad
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _dabf.Name)
				if _edded := d.Skip(); _edded != nil {
					return _edded
				}
			}
		case _b.EndElement:
			break _cfec
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_gfdf *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _egabe, _bdcec := range _gfdf.SldMasterId {
		if _bggc := _bdcec.ValidateWithPath(_c.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _egabe)); _bggc != nil {
			return _bggc
		}
	}
	return nil
}

// Validate validates the CT_SlideMasterTextStyles and its children
func (_cagf *CT_SlideMasterTextStyles) Validate() error {
	return _cagf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}
func (_bdgb ST_TLAnimateBehaviorValueType) String() string {
	switch _bdgb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

type CmLst struct{ CT_CommentList }

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_cbda *CT_SlideTransition) ValidateWithPath(path string) error {
	if _ebgdg := _cbda.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _ebgdg != nil {
		return _ebgdg
	}
	if _cbda.SlideTransitionChoice != nil {
		if _gbae := _cbda.SlideTransitionChoice.ValidateWithPath(path + "\u002f\u0053\u006c\u0069de\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069c\u0065"); _gbae != nil {
			return _gbae
		}
	}
	if _cbda.SndAc != nil {
		if _facba := _cbda.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _facba != nil {
			return _facba
		}
	}
	if _cbda.ExtLst != nil {
		if _eebg := _cbda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eebg != nil {
			return _eebg
		}
	}
	return nil
}

// Validate validates the ViewPr and its children
func (_agfcc *ViewPr) Validate() error {
	return _agfcc.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}

// Validate validates the CT_SlideMaster and its children
func (_adaf *CT_SlideMaster) Validate() error {
	return _adaf.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_acb := &CT_GroupShapeNonVisual{}
	_acb.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_acb.CNvGrpSpPr = _d.NewCT_NonVisualGroupDrawingShapeProps()
	_acb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _acb
}
func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_effde := &CT_TLByRgbColorTransform{}
	return _effde
}
func (_cadfd ST_TLBehaviorTransformType) Validate() error { return _cadfd.ValidateWithPath("") }
func (_abbb *CT_ShowInfoBrowse) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcac := range start.Attr {
		if _dcac.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_gfcc, _gdbeg := _e.ParseBool(_dcac.Value)
			if _gdbeg != nil {
				return _gdbeg
			}
			_abbb.ShowScrollbarAttr = &_gfcc
			continue
		}
	}
	for {
		_gafba, _cgbf := d.Token()
		if _cgbf != nil {
			return _c.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _cgbf)
		}
		if _cddge, _efba := _gafba.(_b.EndElement); _efba && _cddge.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_gdeff *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _cdabf := _gdeff.TLTimeTargetElementChoice.ValidateWithPath(path + "\u002f\u0054\u004c\u0054\u0069\u006d\u0065\u0054\u0061\u0072\u0067e\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u0068o\u0069\u0063\u0065"); _cdabf != nil {
		return _cdabf
	}
	return nil
}

// Validate validates the AG_ChildSlide and its children
func (_ff *AG_ChildSlide) Validate() error {
	return _ff.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

type ST_PhotoAlbumLayout byte

func (_ebbcd *ST_TLCommandType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebbcd = 0
	case "\u0065\u0076\u0074":
		*_ebbcd = 1
	case "\u0063\u0061\u006c\u006c":
		*_ebbcd = 2
	case "\u0076\u0065\u0072\u0062":
		*_ebbcd = 3
	}
	return nil
}

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_dgef *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _dgef.TLShapeTargetElementChoice != nil {
		if _gfgcf := _dgef.TLShapeTargetElementChoice.ValidateWithPath(path + "/\u0054\u004c\u0053\u0068\u0061\u0070e\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074C\u0068o\u0069\u0063\u0065"); _gfgcf != nil {
			return _gfgcf
		}
	}
	return nil
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

func (_ebfbg ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _ebfbg {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebfbg))
	}
	return nil
}
func (_gbbcb ST_TLTimeNodeFillType) String() string {
	switch _gbbcb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_baeb *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _dbaee := _baeb.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _dbaee != nil {
		return _dbaee
	}
	return nil
}
func (_ccc *AG_Ole) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecd := range start.Attr {
		if _ecd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecd.Name.Local == "\u0069\u0064" {
			_cg := _ecd.Value
			_ccc.IdAttr = &_cg
			continue
		}
		if _ecd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_eaa := _ecd.Value
			_ccc.SpidAttr = &_eaa
			continue
		}
		if _ecd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fc := _ecd.Value
			_ccc.NameAttr = &_fc
			continue
		}
		if _ecd.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_fe, _bd := _e.ParseBool(_ecd.Value)
			if _bd != nil {
				return _bd
			}
			_ccc.ShowAsIconAttr = &_fe
			continue
		}
		if _ecd.Name.Local == "\u0069\u006d\u0067\u0057" {
			_gd, _df := _e.ParseInt(_ecd.Value, 10, 32)
			if _df != nil {
				return _df
			}
			_bc := int32(_gd)
			_ccc.ImgWAttr = &_bc
			continue
		}
		if _ecd.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bgf, _ag := _e.ParseInt(_ecd.Value, 10, 32)
			if _ag != nil {
				return _ag
			}
			_fb := int32(_bgf)
			_ccc.ImgHAttr = &_fb
			continue
		}
	}
	for {
		_fbd, _eb := d.Token()
		if _eb != nil {
			return _c.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _eb)
		}
		if _ab, _gbd := _fbd.(_b.EndElement); _gbd && _ab.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseStdlibTime(s string) (_ac.Time, error) { return _db.ParseStdlibTime(s) }
func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_efdaf := &CT_SlideIdListEntry{}
	_efdaf.IdAttr = 256
	return _efdaf
}
func NewCT_Background() *CT_Background {
	_dc := &CT_Background{}
	_dc.BackgroundChoice = NewEG_BackgroundChoice()
	return _dc
}

type PresentationPr struct{ CT_PresentationProperties }
type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_CustomShow and its children
func (_gba *CT_CustomShow) Validate() error {
	return _gba.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}

// Validate validates the SldLayout and its children
func (_ebdaga *SldLayout) Validate() error {
	return _ebdaga.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}

type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

func (_ddcga ST_TLBehaviorTransformType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_daecf := _b.Attr{}
	_daecf.Name = name
	switch _ddcga {
	case ST_TLBehaviorTransformTypeUnset:
		_daecf.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_daecf.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_daecf.Value = "\u0069\u006d\u0067"
	}
	return _daecf, nil
}
func (_edcdb *ST_SlideSizeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bffce, _dbdef := d.Token()
	if _dbdef != nil {
		return _dbdef
	}
	if _eafcce, _cfbba := _bffce.(_b.EndElement); _cfbba && _eafcce.Name == start.Name {
		*_edcdb = 1
		return nil
	}
	if _geaed, _aeca := _bffce.(_b.CharData); !_aeca {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bffce)
	} else {
		switch string(_geaed) {
		case "":
			*_edcdb = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_edcdb = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_edcdb = 2
		case "\u0041\u0034":
			*_edcdb = 3
		case "\u0033\u0035\u006d\u006d":
			*_edcdb = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_edcdb = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_edcdb = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_edcdb = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_edcdb = 8
		case "\u0041\u0033":
			*_edcdb = 9
		case "\u0042\u0034\u0049S\u004f":
			*_edcdb = 10
		case "\u0042\u0035\u0049S\u004f":
			*_edcdb = 11
		case "\u0042\u0034\u004aI\u0053":
			*_edcdb = 12
		case "\u0042\u0035\u004aI\u0053":
			*_edcdb = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_edcdb = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_edcdb = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_edcdb = 16
		}
	}
	_bffce, _dbdef = d.Token()
	if _dbdef != nil {
		return _dbdef
	}
	if _eegc, _dfeca := _bffce.(_b.EndElement); _dfeca && _eegc.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bffce)
}

// Validate validates the CT_InOutTransition and its children
func (_agfb *CT_InOutTransition) Validate() error {
	return _agfb.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_cefce := &CT_SlideMasterTextStyles{}
	return _cefce
}
func (_fbbcc ST_TLCommandType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_baaea := _b.Attr{}
	_baaea.Name = name
	switch _fbbcc {
	case ST_TLCommandTypeUnset:
		_baaea.Value = ""
	case ST_TLCommandTypeEvt:
		_baaea.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_baaea.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_baaea.Value = "\u0076\u0065\u0072\u0062"
	}
	return _baaea, nil
}
func (_caada *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_caada = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_caada = 1
	case "\u0031\u0070\u0069\u0063":
		*_caada = 2
	case "\u0032\u0070\u0069\u0063":
		*_caada = 3
	case "\u0034\u0070\u0069\u0063":
		*_caada = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_caada = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_caada = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_caada = 7
	}
	return nil
}
func NewCT_OleObjectLink() *CT_OleObjectLink { _becaa := &CT_OleObjectLink{}; return _becaa }

type ST_IterateType byte

func (_eccb *CT_GraphicalObjectFrame) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eccb.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_eccb.Xfrm = _d.NewCT_Transform2D()
	_eccb.Graphic = _d.NewGraphic()
	for _, _dcae := range start.Attr {
		if _dcae.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_eccb.BwModeAttr.UnmarshalXMLAttr(_dcae)
			continue
		}
	}
_acgg:
	for {
		_dbff, _efcfg := d.Token()
		if _efcfg != nil {
			return _efcfg
		}
		switch _dec := _dbff.(type) {
		case _b.StartElement:
			switch _dec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _dbb := d.DecodeElement(_eccb.NvGraphicFramePr, &_dec); _dbb != nil {
					return _dbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _ebcf := d.DecodeElement(_eccb.Xfrm, &_dec); _ebcf != nil {
					return _ebcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _cecc := d.DecodeElement(_eccb.Graphic, &_dec); _cecc != nil {
					return _cecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eccb.ExtLst = NewCT_ExtensionListModify()
				if _gcc := d.DecodeElement(_eccb.ExtLst, &_dec); _gcc != nil {
					return _gcc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _dec.Name)
				if _feba := d.Skip(); _feba != nil {
					return _feba
				}
			}
		case _b.EndElement:
			break _acgg
		case _b.CharData:
		}
	}
	return nil
}
func (_cfafd *EG_SlideListChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfafd.SldAll != nil {
		_cgbge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_cfafd.SldAll, _cgbge)
	} else if _cfafd.SldRg != nil {
		_bgfgb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_cfafd.SldRg, _bgfgb)
	} else if _cfafd.CustShow != nil {
		_fdeadc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_cfafd.CustShow, _fdeadc)
	}
	return nil
}
func NewAG_TLBuild() *AG_TLBuild { _dg := &AG_TLBuild{}; return _dg }
func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_cdbb := &CT_TLCommonTimeNodeData{}
	return _cdbb
}
func (_bacfb ST_TransitionSpeed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bacfb.String(), start)
}
func (_babbb *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_babbb.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _adaed := range start.Attr {
		if _adaed.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_caecb, _cdfe := _e.ParseBool(_adaed.Value)
			if _cdfe != nil {
				return _cdfe
			}
			_babbb.ZoomContentsAttr = &_caecb
			continue
		}
	}
_abbbe:
	for {
		_efddb, _gabe := d.Token()
		if _gabe != nil {
			return _gabe
		}
		switch _cbabg := _efddb.(type) {
		case _b.StartElement:
			switch _cbabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fgdf := d.DecodeElement(_babbb.CBhvr, &_cbabg); _fgdf != nil {
					return _fgdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_babbb.By = NewCT_TLPoint()
				if _bafc := d.DecodeElement(_babbb.By, &_cbabg); _bafc != nil {
					return _bafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_babbb.From = NewCT_TLPoint()
				if _agdd := d.DecodeElement(_babbb.From, &_cbabg); _agdd != nil {
					return _agdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_babbb.To = NewCT_TLPoint()
				if _gbgcg := d.DecodeElement(_babbb.To, &_cbabg); _gbgcg != nil {
					return _gbgcg
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _cbabg.Name)
				if _fccb := d.Skip(); _fccb != nil {
					return _fccb
				}
			}
		case _b.EndElement:
			break _abbbe
		case _b.CharData:
		}
	}
	return nil
}
func (_ccege *CT_NormalViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccege.RestoredLeft = NewCT_NormalViewPortion()
	_ccege.RestoredTop = NewCT_NormalViewPortion()
	for _, _ddfb := range start.Attr {
		if _ddfb.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_gcdgf, _gdaba := _e.ParseBool(_ddfb.Value)
			if _gdaba != nil {
				return _gdaba
			}
			_ccege.ShowOutlineIconsAttr = &_gcdgf
			continue
		}
		if _ddfb.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_ddad, _gbda := _e.ParseBool(_ddfb.Value)
			if _gbda != nil {
				return _gbda
			}
			_ccege.SnapVertSplitterAttr = &_ddad
			continue
		}
		if _ddfb.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_ccege.VertBarStateAttr.UnmarshalXMLAttr(_ddfb)
			continue
		}
		if _ddfb.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_ccege.HorzBarStateAttr.UnmarshalXMLAttr(_ddfb)
			continue
		}
		if _ddfb.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_fgff, _ebdb := _e.ParseBool(_ddfb.Value)
			if _ebdb != nil {
				return _ebdb
			}
			_ccege.PreferSingleViewAttr = &_fgff
			continue
		}
	}
_dgff:
	for {
		_dfaf, _ffge := d.Token()
		if _ffge != nil {
			return _ffge
		}
		switch _debg := _dfaf.(type) {
		case _b.StartElement:
			switch _debg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _eabc := d.DecodeElement(_ccege.RestoredLeft, &_debg); _eabc != nil {
					return _eabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _adfaa := d.DecodeElement(_ccege.RestoredTop, &_debg); _adfaa != nil {
					return _adfaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccege.ExtLst = NewCT_ExtensionList()
				if _gbde := d.DecodeElement(_ccege.ExtLst, &_debg); _gbde != nil {
					return _gbde
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _debg.Name)
				if _acdf := d.Skip(); _acdf != nil {
					return _acdf
				}
			}
		case _b.EndElement:
			break _dgff
		case _b.CharData:
		}
	}
	return nil
}
func (_gcdg *CT_ControlList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gcdg.Control != nil {
		_adae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _bacc := range _gcdg.Control {
			e.EncodeElement(_bacc, _adae)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_dcee *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _dcee.HtmlPubPr != nil {
		if _cafdf := _dcee.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _cafdf != nil {
			return _cafdf
		}
	}
	if _dcee.WebPr != nil {
		if _gaaa := _dcee.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _gaaa != nil {
			return _gaaa
		}
	}
	if _dcee.PrnPr != nil {
		if _beagg := _dcee.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _beagg != nil {
			return _beagg
		}
	}
	if _dcee.ShowPr != nil {
		if _ddcg := _dcee.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _ddcg != nil {
			return _ddcg
		}
	}
	if _dcee.ClrMru != nil {
		if _fbddf := _dcee.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _fbddf != nil {
			return _fbddf
		}
	}
	if _dcee.ExtLst != nil {
		if _agea := _dcee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agea != nil {
			return _agea
		}
	}
	return nil
}

type ST_TLOleChartBuildType byte

func (_dabgg ST_WebScreenSize) String() string {
	switch _dabgg {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_gddef := &CT_TLAnimateScaleBehavior{}
	_gddef.CBhvr = NewCT_TLCommonBehaviorData()
	return _gddef
}
func (_gfcaf ST_TLTriggerEvent) String() string {
	switch _gfcaf {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_addd *CT_CustomShowId) ValidateWithPath(path string) error { return nil }

type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_gbdcd ST_TLTimeNodeSyncType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbdcd.String(), start)
}
func (_ceegc ST_TLTriggerRuntimeNode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ceegc.String(), start)
}
func NewCT_NotesMaster() *CT_NotesMaster {
	_adbe := &CT_NotesMaster{}
	_adbe.CSld = NewCT_CommonSlideData()
	_adbe.ClrMap = _d.NewCT_ColorMapping()
	return _adbe
}
func (_eagb *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efad, _bdeb := d.Token()
	if _bdeb != nil {
		return _bdeb
	}
	if _cafdfb, _cbdbd := _efad.(_b.EndElement); _cbdbd && _cafdfb.Name == start.Name {
		*_eagb = 1
		return nil
	}
	if _gddcc, _fbcgc := _efad.(_b.CharData); !_fbcgc {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efad)
	} else {
		switch string(_gddcc) {
		case "":
			*_eagb = 0
		case "\u0066\u0069\u0072s\u0074":
			*_eagb = 1
		case "\u006c\u0061\u0073\u0074":
			*_eagb = 2
		case "\u0061\u006c\u006c":
			*_eagb = 3
		}
	}
	_efad, _bdeb = d.Token()
	if _bdeb != nil {
		return _bdeb
	}
	if _efedd, _fabaf := _efad.(_b.EndElement); _fabaf && _efedd.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efad)
}

type CT_TLAnimVariantChoice struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_d.CT_Color
}

func (_cbbdg *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbbdg = 0
	case "\u0070\u0074":
		*_cbbdg = 1
	case "\u0069\u006d\u0067":
		*_cbbdg = 2
	}
	return nil
}
func NewCT_NotesSlide() *CT_NotesSlide {
	_eafag := &CT_NotesSlide{}
	_eafag.CSld = NewCT_CommonSlideData()
	return _eafag
}
func (_adgg *CT_CommentAuthorList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _adgg.CmAuthor != nil {
		_bac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _bdcg := range _adgg.CmAuthor {
			e.EncodeElement(_bdcg, _bac)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTemplateList() *CT_TLTemplateList { _bbfbg := &CT_TLTemplateList{}; return _bbfbg }
func (_fabdf *CT_ViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _debf := range start.Attr {
		if _debf.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_fabdf.LastViewAttr.UnmarshalXMLAttr(_debf)
			continue
		}
		if _debf.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_beee, _beafa := _e.ParseBool(_debf.Value)
			if _beafa != nil {
				return _beafa
			}
			_fabdf.ShowCommentsAttr = &_beee
			continue
		}
	}
_bbad:
	for {
		_ddddc, _cdbfb := d.Token()
		if _cdbfb != nil {
			return _cdbfb
		}
		switch _gced := _ddddc.(type) {
		case _b.StartElement:
			switch _gced.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.NormalViewPr = NewCT_NormalViewProperties()
				if _bdeggb := d.DecodeElement(_fabdf.NormalViewPr, &_gced); _bdeggb != nil {
					return _bdeggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.SlideViewPr = NewCT_SlideViewProperties()
				if _dagacc := d.DecodeElement(_fabdf.SlideViewPr, &_gced); _dagacc != nil {
					return _dagacc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.OutlineViewPr = NewCT_OutlineViewProperties()
				if _gebfg := d.DecodeElement(_fabdf.OutlineViewPr, &_gced); _gebfg != nil {
					return _gebfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _feafce := d.DecodeElement(_fabdf.NotesTextViewPr, &_gced); _feafce != nil {
					return _feafce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _ffbb := d.DecodeElement(_fabdf.SorterViewPr, &_gced); _ffbb != nil {
					return _ffbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_fabdf.NotesViewPr = NewCT_NotesViewProperties()
				if _begab := d.DecodeElement(_fabdf.NotesViewPr, &_gced); _begab != nil {
					return _begab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_fabdf.GridSpacing = _d.NewCT_PositiveSize2D()
				if _bbcag := d.DecodeElement(_fabdf.GridSpacing, &_gced); _bbcag != nil {
					return _bbcag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabdf.ExtLst = NewCT_ExtensionList()
				if _bdeda := d.DecodeElement(_fabdf.ExtLst, &_gced); _bdeda != nil {
					return _bdeda
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gced.Name)
				if _gacge := d.Skip(); _gacge != nil {
					return _gacge
				}
			}
		case _b.EndElement:
			break _bbad
		case _b.CharData:
		}
	}
	return nil
}
func (_cdddf *ST_TLNextActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdddf = 0
	case "\u006e\u006f\u006e\u0065":
		*_cdddf = 1
	case "\u0073\u0065\u0065\u006b":
		*_cdddf = 2
	}
	return nil
}

// ValidateWithPath validates the CT_TLTextTargetElementChoice and its children, prefixing error messages with path
func (_fefeb *CT_TLTextTargetElementChoice) ValidateWithPath(path string) error {
	if _fefeb.CharRg != nil {
		if _dabdd := _fefeb.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _dabdd != nil {
			return _dabdd
		}
	}
	if _fefeb.PRg != nil {
		if _eddgc := _fefeb.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _eddgc != nil {
			return _eddgc
		}
	}
	return nil
}
func (_bfaga *CT_SplitTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfaga.OrientAttr != ST_DirectionUnset {
		_ebgga, _gbaag := _bfaga.OrientAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _gbaag != nil {
			return _gbaag
		}
		start.Attr = append(start.Attr, _ebgga)
	}
	if _bfaga.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_efgeg, _egdg := _bfaga.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _egdg != nil {
			return _egdg
		}
		start.Attr = append(start.Attr, _efgeg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_gadbg *CT_SmartTags) ValidateWithPath(path string) error { return nil }
func (_bgadg ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _bgadg.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_gabeb *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _fccd := _gabeb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fccd != nil {
		return _fccd
	}
	return nil
}

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_acbee *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _egeb := _acbee.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _egeb != nil {
		return _egeb
	}
	return nil
}
func (_adbf ST_Direction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdeac := _b.Attr{}
	_gdeac.Name = name
	switch _adbf {
	case ST_DirectionUnset:
		_gdeac.Value = ""
	case ST_DirectionHorz:
		_gdeac.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_gdeac.Value = "\u0076\u0065\u0072\u0074"
	}
	return _gdeac, nil
}
func (_fcdde *CT_ModifyVerifier) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eefd := range start.Attr {
		if _eefd.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_aeffe := _eefd.Value
			_fcdde.AlgorithmNameAttr = &_aeffe
			continue
		}
		if _eefd.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_ebea := _eefd.Value
			_fcdde.HashValueAttr = &_ebea
			continue
		}
		if _eefd.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_aeag := _eefd.Value
			_fcdde.SaltValueAttr = &_aeag
			continue
		}
		if _eefd.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_agcba, _cdgb := _e.ParseUint(_eefd.Value, 10, 32)
			if _cdgb != nil {
				return _cdgb
			}
			_ggbgf := uint32(_agcba)
			_fcdde.SpinValueAttr = &_ggbgf
			continue
		}
		if _eefd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_fcdde.CryptProviderTypeAttr.UnmarshalXMLAttr(_eefd)
			continue
		}
		if _eefd.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_fcdde.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_eefd)
			continue
		}
		if _eefd.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_fcdde.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_eefd)
			continue
		}
		if _eefd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_bdbb, _edga := _e.ParseUint(_eefd.Value, 10, 32)
			if _edga != nil {
				return _edga
			}
			_gebf := uint32(_bdbb)
			_fcdde.CryptAlgorithmSidAttr = &_gebf
			continue
		}
		if _eefd.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_dcbf, _abgc := _e.ParseUint(_eefd.Value, 10, 32)
			if _abgc != nil {
				return _abgc
			}
			_eagg := uint32(_dcbf)
			_fcdde.SpinCountAttr = &_eagg
			continue
		}
		if _eefd.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_fced := _eefd.Value
			_fcdde.SaltDataAttr = &_fced
			continue
		}
		if _eefd.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_cbdbc := _eefd.Value
			_fcdde.HashDataAttr = &_cbdbc
			continue
		}
		if _eefd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_gcba := _eefd.Value
			_fcdde.CryptProviderAttr = &_gcba
			continue
		}
		if _eefd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_facb, _bdfc := _e.ParseUint(_eefd.Value, 10, 32)
			if _bdfc != nil {
				return _bdfc
			}
			_cacg := uint32(_facb)
			_fcdde.AlgIdExtAttr = &_cacg
			continue
		}
		if _eefd.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_ddfd := _eefd.Value
			_fcdde.AlgIdExtSourceAttr = &_ddfd
			continue
		}
		if _eefd.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_eddb, _gcaa := _e.ParseUint(_eefd.Value, 10, 32)
			if _gcaa != nil {
				return _gcaa
			}
			_ccafe := uint32(_eddb)
			_fcdde.CryptProviderTypeExtAttr = &_ccafe
			continue
		}
		if _eefd.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_fgbg := _eefd.Value
			_fcdde.CryptProviderTypeExtSourceAttr = &_fgbg
			continue
		}
	}
	for {
		_ecce, _abefd := d.Token()
		if _abefd != nil {
			return _c.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _abefd)
		}
		if _ecde, _ggac := _ecce.(_b.EndElement); _ggac && _ecde.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_ada := &CT_CommonSlideViewProperties{}
	_ada.CViewPr = NewCT_CommonViewProperties()
	return _ada
}
func (_adec *CT_CustomShowList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bccg:
	for {
		_gbgf, _dcad := d.Token()
		if _dcad != nil {
			return _dcad
		}
		switch _ecdg := _gbgf.(type) {
		case _b.StartElement:
			switch _ecdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bdcge := NewCT_CustomShow()
				if _bbfe := d.DecodeElement(_bdcge, &_ecdg); _bbfe != nil {
					return _bbfe
				}
				_adec.CustShow = append(_adec.CustShow, _bdcge)
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ecdg.Name)
				if _ccaf := d.Skip(); _ccaf != nil {
					return _ccaf
				}
			}
		case _b.EndElement:
			break _bccg
		case _b.CharData:
		}
	}
	return nil
}
func (_geab *CT_SlideTiming) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _geab.TnLst != nil {
		_ddbed := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_geab.TnLst, _ddbed)
	}
	if _geab.BldLst != nil {
		_dbec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_geab.BldLst, _dbec)
	}
	if _geab.ExtLst != nil {
		_ccbcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_geab.ExtLst, _ccbcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adcgc *CT_TLTimeCondition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcdg := range start.Attr {
		if _dcdg.Name.Local == "\u0065\u0076\u0074" {
			_adcgc.EvtAttr.UnmarshalXMLAttr(_dcdg)
			continue
		}
		if _dcdg.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_gcfec, _ddfcf := ParseUnionST_TLTime(_dcdg.Value)
			if _ddfcf != nil {
				return _ddfcf
			}
			_adcgc.DelayAttr = &_gcfec
			continue
		}
	}
_bbedc:
	for {
		_ababf, _dfbde := d.Token()
		if _dfbde != nil {
			return _dfbde
		}
		switch _fgfe := _ababf.(type) {
		case _b.StartElement:
			switch _fgfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_adcgc.TLTimeConditionChoice = NewCT_TLTimeConditionChoice()
				if _eadbc := d.DecodeElement(&_adcgc.TLTimeConditionChoice.TgtEl, &_fgfe); _eadbc != nil {
					return _eadbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_adcgc.TLTimeConditionChoice = NewCT_TLTimeConditionChoice()
				if _dadeb := d.DecodeElement(&_adcgc.TLTimeConditionChoice.Tn, &_fgfe); _dadeb != nil {
					return _dadeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_adcgc.TLTimeConditionChoice = NewCT_TLTimeConditionChoice()
				if _efddc := d.DecodeElement(&_adcgc.TLTimeConditionChoice.Rtn, &_fgfe); _efddc != nil {
					return _efddc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _fgfe.Name)
				if _dgfb := d.Skip(); _dgfb != nil {
					return _dgfb
				}
			}
		case _b.EndElement:
			break _bbedc
		case _b.CharData:
		}
	}
	return nil
}
func NewTagLst() *TagLst { _cfbbfc := &TagLst{}; _cfbbfc.CT_TagList = *NewCT_TagList(); return _cfbbfc }

// Validate validates the TagLst and its children
func (_fcffe *TagLst) Validate() error {
	return _fcffe.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}
func (_acbde ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _acbde {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acbde))
	}
	return nil
}
func NewCT_Control() *CT_Control { _beb := &CT_Control{}; return _beb }
func (_daeff ST_TLTriggerEvent) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_caff := _b.Attr{}
	_caff.Name = name
	switch _daeff {
	case ST_TLTriggerEventUnset:
		_caff.Value = ""
	case ST_TLTriggerEventOnBegin:
		_caff.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_caff.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_caff.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_caff.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_caff.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_caff.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_caff.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_caff.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_caff.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_caff.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_caff.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _caff, nil
}
func (_cbfcb *CT_TLCommonMediaNodeData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbfcb.VolAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006f\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_cbfcb.VolAttr)})
	}
	if _cbfcb.MuteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cbfcb.MuteAttr))})
	}
	if _cbfcb.NumSldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_cbfcb.NumSldAttr)})
	}
	if _cbfcb.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cbfcb.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_feacb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cbfcb.CTn, _feacb)
	_caafg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_cbfcb.TgtEl, _caafg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdag *CT_EmbeddedFontDataId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feaae := range start.Attr {
		if _feaae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _feaae.Name.Local == "\u0069\u0064" || _feaae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _feaae.Name.Local == "\u0069\u0064" {
			_egf := _feaae.Value
			_cdag.IdAttr = _egf
			continue
		}
	}
	for {
		_bead, _fdea := d.Token()
		if _fdea != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _fdea)
		}
		if _effd, _bcfa := _bead.(_b.EndElement); _bcfa && _effd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_fcgg *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _gdabaf := _fcgg.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _gdabaf != nil {
		return _gdabaf
	}
	if _fcgg.ExtLst != nil {
		if _abea := _fcgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abea != nil {
			return _abea
		}
	}
	return nil
}

// Validate validates the CT_ViewProperties and its children
func (_bbccc *CT_ViewProperties) Validate() error {
	return _bbccc.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_aggg *CT_TLIterateDataChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aegf := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
		_aggg.TmAbs = NewCT_TLIterateIntervalTime()
		if _ffcbd := d.DecodeElement(_aggg.TmAbs, &_aegf); _ffcbd != nil {
			return _ffcbd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
		_aggg.TmPct = NewCT_TLIterateIntervalPercentage()
		if _degb := d.DecodeElement(_aggg.TmPct, &_aegf); _degb != nil {
			return _degb
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0049\u0074e\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _aegf.Name)
		if _ffab := d.Skip(); _ffab != nil {
			return _ffab
		}
	}
	return nil
}
func (_becfa ST_TLAnimateEffectTransition) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbbfa := _b.Attr{}
	_cbbfa.Name = name
	switch _becfa {
	case ST_TLAnimateEffectTransitionUnset:
		_cbbfa.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_cbbfa.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_cbbfa.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_cbbfa.Value = "\u006e\u006f\u006e\u0065"
	}
	return _cbbfa, nil
}
func (_eacdba *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eacdba = 0
	case "\u0077\u0068\u006fl\u0065":
		*_eacdba = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_eacdba = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_eacdba = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_eacdba = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_eacdba = 5
	case "\u0063\u0077":
		*_eacdba = 6
	case "\u0063\u0077\u0049\u006e":
		*_eacdba = 7
	case "\u0063\u0077\u004fu\u0074":
		*_eacdba = 8
	case "\u0063\u0063\u0077":
		*_eacdba = 9
	case "\u0063\u0063\u0077I\u006e":
		*_eacdba = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_eacdba = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_eacdba = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_eacdba = 13
	case "\u0075\u0070":
		*_eacdba = 14
	case "\u0064\u006f\u0077\u006e":
		*_eacdba = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_eacdba = 16
	case "\u0063\u0075\u0073\u0074":
		*_eacdba = 17
	}
	return nil
}
func (_geec ST_PlaceholderSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_geec.String(), start)
}
func NewCT_ExtensionList() *CT_ExtensionList             { _acad := &CT_ExtensionList{}; return _acad }
func (_ggbed ST_TLBehaviorOverrideType) Validate() error { return _ggbed.ValidateWithPath("") }
func (_ccfdc *ST_Direction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ccfdc = 0
	case "\u0068\u006f\u0072\u007a":
		*_ccfdc = 1
	case "\u0076\u0065\u0072\u0074":
		*_ccfdc = 2
	}
	return nil
}

// Validate validates the CT_Control and its children
func (_fdee *CT_Control) Validate() error {
	return _fdee.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}
func (_debgd *CT_TLTimeConditionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_efcdb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _egbf := range _debgd.Cond {
		e.EncodeElement(_egbf, _efcdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deea *CT_TLGraphicalObjectBuildChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbfg := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
		_deea.BldAsOne = NewCT_Empty()
		if _bfbae := d.DecodeElement(_deea.BldAsOne, &_gbfg); _bfbae != nil {
			return _bfbae
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
		_deea.BldSub = _d.NewCT_AnimationGraphicalObjectBuildProperties()
		if _feeab := d.DecodeElement(_deea.BldSub, &_gbfg); _feeab != nil {
			return _feeab
		}
	default:
		_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004fb\u006a\u0065\u0063\u0074B\u0075\u0069\u006c\u0064\u0043h\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _gbfg.Name)
		if _dfda := d.Skip(); _dfda != nil {
			return _dfda
		}
	}
	return nil
}
func (_edad *CT_SlideIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edad.IdAttr = 256
	for _, _afad := range start.Attr {
		if _afad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afad.Name.Local == "\u0069\u0064" || _afad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afad.Name.Local == "\u0069\u0064" {
			_ageff := _afad.Value
			_edad.RIdAttr = _ageff
			continue
		}
		if _afad.Name.Local == "\u0069\u0064" {
			_dbfec, _dfgcd := _e.ParseUint(_afad.Value, 10, 32)
			if _dfgcd != nil {
				return _dfgcd
			}
			_edad.IdAttr = uint32(_dbfec)
			continue
		}
	}
_fegbg:
	for {
		_gaae, _ggaf := d.Token()
		if _ggaf != nil {
			return _ggaf
		}
		switch _eeegb := _gaae.(type) {
		case _b.StartElement:
			switch _eeegb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edad.ExtLst = NewCT_ExtensionList()
				if _cfdd := d.DecodeElement(_edad.ExtLst, &_eeegb); _cfdd != nil {
					return _cfdd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _eeegb.Name)
				if _efgg := d.Skip(); _efgg != nil {
					return _efgg
				}
			}
		case _b.EndElement:
			break _fegbg
		case _b.CharData:
		}
	}
	return nil
}
func (_ggbc *CT_Picture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_geaeb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_ggbc.NvPicPr, _geaeb)
	_fbcfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_ggbc.BlipFill, _fbcfe)
	_bbdfd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_ggbc.SpPr, _bbdfd)
	if _ggbc.Style != nil {
		_caggg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_ggbc.Style, _caggg)
	}
	if _ggbc.ExtLst != nil {
		_aggc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggbc.ExtLst, _aggc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfdd *CmLst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfdd.CT_CommentList = *NewCT_CommentList()
_adcad:
	for {
		_gdagf, _fgab := d.Token()
		if _fgab != nil {
			return _fgab
		}
		switch _deeced := _gdagf.(type) {
		case _b.StartElement:
			switch _deeced.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_gcbcb := NewCT_Comment()
				if _deed := d.DecodeElement(_gcbcb, &_deeced); _deed != nil {
					return _deed
				}
				_bfdd.Cm = append(_bfdd.Cm, _gcbcb)
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _deeced.Name)
				if _efdff := d.Skip(); _efdff != nil {
					return _efdff
				}
			}
		case _b.EndElement:
			break _adcad
		case _b.CharData:
		}
	}
	return nil
}
func (_gedea *SldMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gedea.CT_SlideMaster.MarshalXML(e, start)
}
func (_eaagg *CT_TLTimeCondition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaagg.EvtAttr != ST_TLTriggerEventUnset {
		_agaga, _afggd := _eaagg.EvtAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0076\u0074"})
		if _afggd != nil {
			return _afggd
		}
		start.Attr = append(start.Attr, _agaga)
	}
	if _eaagg.DelayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _c.Sprintf("\u0025\u0076", *_eaagg.DelayAttr)})
	}
	e.EncodeToken(start)
	if _eaagg.TLTimeConditionChoice != nil {
		_eaagg.TLTimeConditionChoice.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egdaa ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _egdaa {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egdaa))
	}
	return nil
}

type ST_SplitterBarState byte

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

func (_deag *CT_OrientationTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfdd := range start.Attr {
		if _gfdd.Name.Local == "\u0064\u0069\u0072" {
			_deag.DirAttr.UnmarshalXMLAttr(_gfdd)
			continue
		}
	}
	for {
		_cfbd, _gggc := d.Token()
		if _gggc != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _gggc)
		}
		if _gagdg, _dagd := _cfbd.(_b.EndElement); _dagd && _gagdg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLTimeNodeType byte

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_bbdc := &CT_GraphicalObjectFrameNonVisual{}
	_bbdc.CNvPr = _d.NewCT_NonVisualDrawingProps()
	_bbdc.CNvGraphicFramePr = _d.NewCT_NonVisualGraphicFrameProperties()
	_bbdc.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _bbdc
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_gcged *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _dfddf := _gcged.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _dfddf != nil {
		return _dfddf
	}
	if _ebca := _gcged.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _ebca != nil {
		return _ebca
	}
	return nil
}

type EG_BackgroundChoice struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_d.CT_StyleMatrixReference
}

func (_eefbf ST_SlideSizeType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efgab := _b.Attr{}
	_efgab.Name = name
	switch _eefbf {
	case ST_SlideSizeTypeUnset:
		_efgab.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_efgab.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_efgab.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_efgab.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_efgab.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_efgab.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_efgab.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_efgab.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_efgab.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_efgab.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_efgab.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_efgab.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_efgab.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_efgab.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_efgab.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_efgab.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_efgab.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _efgab, nil
}
func NewCT_SmartTags() *CT_SmartTags { _ffedd := &CT_SmartTags{}; return _ffedd }

// Validate validates the CT_SlideIdListEntry and its children
func (_bgdd *CT_SlideIdListEntry) Validate() error {
	return _bgdd.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}
func (_fgea *CT_TLCommandBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgea.TypeAttr != ST_TLCommandTypeUnset {
		_efdfd, _gceag := _fgea.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _gceag != nil {
			return _gceag
		}
		start.Attr = append(start.Attr, _efdfd)
	}
	if _fgea.CmdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006d\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_fgea.CmdAttr)})
	}
	e.EncodeToken(start)
	_deebg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fgea.CBhvr, _deebg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OutlineViewProperties and its children
func (_cdgg *CT_OutlineViewProperties) Validate() error {
	return _cdgg.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_ef *AG_ChildSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ge := range start.Attr {
		if _ge.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gb, _cc := _e.ParseBool(_ge.Value)
			if _cc != nil {
				return _cc
			}
			_ef.ShowMasterSpAttr = &_gb
			continue
		}
		if _ge.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_ec, _be := _e.ParseBool(_ge.Value)
			if _be != nil {
				return _be
			}
			_ef.ShowMasterPhAnimAttr = &_ec
			continue
		}
	}
	for {
		_af, _gc := d.Token()
		if _gc != nil {
			return _c.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _gc)
		}
		if _bga, _ead := _af.(_b.EndElement); _ead && _bga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the SldSyncPr and its children
func (_bdgdd *SldSyncPr) Validate() error {
	return _bdgdd.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}
func (_efddg ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _efddg {
	case 0, 1, 2, 3, 4:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efddg))
	}
	return nil
}

// Validate validates the CT_TimeNodeList and its children
func (_daafd *CT_TimeNodeList) Validate() error {
	return _daafd.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_gdgce ST_SplitterBarState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdddg := _b.Attr{}
	_cdddg.Name = name
	switch _gdgce {
	case ST_SplitterBarStateUnset:
		_cdddg.Value = ""
	case ST_SplitterBarStateMinimized:
		_cdddg.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_cdddg.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_cdddg.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _cdddg, nil
}
func (_afggb ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddbeg := _b.Attr{}
	_ddbeg.Name = name
	switch _afggb {
	case ST_OleObjectFollowColorSchemeUnset:
		_ddbeg.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_ddbeg.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_ddbeg.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_ddbeg.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _ddbeg, nil
}
func (_bdcadf *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aaedb, _gbbad := d.Token()
	if _gbbad != nil {
		return _gbbad
	}
	if _cebga, _bgefb := _aaedb.(_b.EndElement); _bgefb && _cebga.Name == start.Name {
		*_bdcadf = 1
		return nil
	}
	if _bdeaf, _eccfe := _aaedb.(_b.CharData); !_eccfe {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaedb)
	} else {
		switch string(_bdeaf) {
		case "":
			*_bdcadf = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_bdcadf = 1
		case "\u006c\u0069\u006e":
			*_bdcadf = 2
		case "\u0066\u006d\u006c\u0061":
			*_bdcadf = 3
		}
	}
	_aaedb, _gbbad = d.Token()
	if _gbbad != nil {
		return _gbbad
	}
	if _egfda, _cdgga := _aaedb.(_b.EndElement); _cdgga && _egfda.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaedb)
}
func (_efbd ST_PlaceholderSize) String() string {
	switch _efbd {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_adgb *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _daedf := _adgb.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _daedf != nil {
		return _daedf
	}
	if _adgb.ExtLst != nil {
		if _aeeea := _adgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeeea != nil {
			return _aeeea
		}
	}
	return nil
}
func (_cccdg *EG_Background) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cccdg.BackgroundChoice = NewEG_BackgroundChoice()
_cbgg:
	for {
		_acbc, _gbcbc := d.Token()
		if _gbcbc != nil {
			return _gbcbc
		}
		switch _cgeaa := _acbc.(type) {
		case _b.StartElement:
			switch _cgeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_cccdg.BackgroundChoice = NewEG_BackgroundChoice()
				if _bgdc := d.DecodeElement(&_cccdg.BackgroundChoice.BgPr, &_cgeaa); _bgdc != nil {
					return _bgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_cccdg.BackgroundChoice = NewEG_BackgroundChoice()
				if _aadfa := d.DecodeElement(&_cccdg.BackgroundChoice.BgRef, &_cgeaa); _aadfa != nil {
					return _aadfa
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _cgeaa.Name)
				if _fdcdf := d.Skip(); _fdcdf != nil {
					return _fdcdf
				}
			}
		case _b.EndElement:
			break _cbgg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CustomerData and its children
func (_bfad *CT_CustomerData) Validate() error {
	return _bfad.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}
func (_fdaf *CT_NotesMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdaf.CSld = NewCT_CommonSlideData()
	_fdaf.ClrMap = _d.NewCT_ColorMapping()
_egfb:
	for {
		_faag, _dbee := d.Token()
		if _dbee != nil {
			return _dbee
		}
		switch _dea := _faag.(type) {
		case _b.StartElement:
			switch _dea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cdcb := d.DecodeElement(_fdaf.CSld, &_dea); _cdcb != nil {
					return _cdcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _beeb := d.DecodeElement(_fdaf.ClrMap, &_dea); _beeb != nil {
					return _beeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fdaf.Hf = NewCT_HeaderFooter()
				if _ecgd := d.DecodeElement(_fdaf.Hf, &_dea); _ecgd != nil {
					return _ecgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_fdaf.NotesStyle = _d.NewCT_TextListStyle()
				if _cdgc := d.DecodeElement(_fdaf.NotesStyle, &_dea); _cdgc != nil {
					return _cdgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdaf.ExtLst = NewCT_ExtensionListModify()
				if _ccgc := d.DecodeElement(_fdaf.ExtLst, &_dea); _ccgc != nil {
					return _ccgc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _dea.Name)
				if _gefb := d.Skip(); _gefb != nil {
					return _gefb
				}
			}
		case _b.EndElement:
			break _egfb
		case _b.CharData:
		}
	}
	return nil
}
func (_ffggd ST_TLBehaviorAdditiveType) String() string {
	switch _ffggd {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_aaffc *ST_SlideSizeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaffc = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_aaffc = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_aaffc = 2
	case "\u0041\u0034":
		*_aaffc = 3
	case "\u0033\u0035\u006d\u006d":
		*_aaffc = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_aaffc = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_aaffc = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_aaffc = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_aaffc = 8
	case "\u0041\u0033":
		*_aaffc = 9
	case "\u0042\u0034\u0049S\u004f":
		*_aaffc = 10
	case "\u0042\u0035\u0049S\u004f":
		*_aaffc = 11
	case "\u0042\u0034\u004aI\u0053":
		*_aaffc = 12
	case "\u0042\u0035\u004aI\u0053":
		*_aaffc = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_aaffc = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_aaffc = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_aaffc = 16
	}
	return nil
}
func (_dddb *CT_ConnectorNonVisual) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_egg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_dddb.CNvPr, _egg)
	_dgge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dddb.CNvCxnSpPr, _dgge)
	_bcge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_dddb.NvPr, _bcge)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_bbbf *CT_NotesMaster) ValidateWithPath(path string) error {
	if _gcae := _bbbf.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _gcae != nil {
		return _gcae
	}
	if _cafd := _bbbf.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _cafd != nil {
		return _cafd
	}
	if _bbbf.Hf != nil {
		if _ecda := _bbbf.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _ecda != nil {
			return _ecda
		}
	}
	if _bbbf.NotesStyle != nil {
		if _dbgc := _bbbf.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _dbgc != nil {
			return _dbgc
		}
	}
	if _bbbf.ExtLst != nil {
		if _abfdg := _bbbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abfdg != nil {
			return _abfdg
		}
	}
	return nil
}

type CT_TLIterateDataChoice struct {

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

func (_bcfcg *NotesMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _bcfcg.CT_NotesMaster.MarshalXML(e, start)
}
func (_dabef ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egdgda := _b.Attr{}
	_egdgda.Name = name
	switch _dabef {
	case ST_PhotoAlbumFrameShapeUnset:
		_egdgda.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_egdgda.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _egdgda, nil
}
func (_cbe *CT_CornerDirectionTransition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aede := range start.Attr {
		if _aede.Name.Local == "\u0064\u0069\u0072" {
			_cbe.DirAttr.UnmarshalXMLAttr(_aede)
			continue
		}
	}
	for {
		_dca, _gff := d.Token()
		if _gff != nil {
			return _c.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _gff)
		}
		if _ddab, _bfac := _dca.(_b.EndElement); _bfac && _ddab.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cebed *CT_TLIterateIntervalTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _cebed.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeTargetElement struct{ TLTimeTargetElementChoice *CT_TLTimeTargetElementChoice }

func (_geca *CT_SlideTransitionChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aegdgf := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
		_geca.Blinds = NewCT_OrientationTransition()
		if _cbbdb := d.DecodeElement(_geca.Blinds, &_aegdgf); _cbbdb != nil {
			return _cbbdb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
		_geca.Checker = NewCT_OrientationTransition()
		if _ecbee := d.DecodeElement(_geca.Checker, &_aegdgf); _ecbee != nil {
			return _ecbee
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
		_geca.Circle = NewCT_Empty()
		if _ebbb := d.DecodeElement(_geca.Circle, &_aegdgf); _ebbb != nil {
			return _ebbb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
		_geca.Dissolve = NewCT_Empty()
		if _fegac := d.DecodeElement(_geca.Dissolve, &_aegdgf); _fegac != nil {
			return _fegac
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
		_geca.Comb = NewCT_OrientationTransition()
		if _ccagc := d.DecodeElement(_geca.Comb, &_aegdgf); _ccagc != nil {
			return _ccagc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
		_geca.Cover = NewCT_EightDirectionTransition()
		if _eaage := d.DecodeElement(_geca.Cover, &_aegdgf); _eaage != nil {
			return _eaage
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
		_geca.Cut = NewCT_OptionalBlackTransition()
		if _gcbd := d.DecodeElement(_geca.Cut, &_aegdgf); _gcbd != nil {
			return _gcbd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
		_geca.Diamond = NewCT_Empty()
		if _beabb := d.DecodeElement(_geca.Diamond, &_aegdgf); _beabb != nil {
			return _beabb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
		_geca.Fade = NewCT_OptionalBlackTransition()
		if _eadda := d.DecodeElement(_geca.Fade, &_aegdgf); _eadda != nil {
			return _eadda
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
		_geca.Newsflash = NewCT_Empty()
		if _afddc := d.DecodeElement(_geca.Newsflash, &_aegdgf); _afddc != nil {
			return _afddc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
		_geca.Plus = NewCT_Empty()
		if _cdaec := d.DecodeElement(_geca.Plus, &_aegdgf); _cdaec != nil {
			return _cdaec
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
		_geca.Pull = NewCT_EightDirectionTransition()
		if _beeba := d.DecodeElement(_geca.Pull, &_aegdgf); _beeba != nil {
			return _beeba
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
		_geca.Push = NewCT_SideDirectionTransition()
		if _gabfa := d.DecodeElement(_geca.Push, &_aegdgf); _gabfa != nil {
			return _gabfa
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
		_geca.Random = NewCT_Empty()
		if _aeaf := d.DecodeElement(_geca.Random, &_aegdgf); _aeaf != nil {
			return _aeaf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
		_geca.RandomBar = NewCT_OrientationTransition()
		if _abbgb := d.DecodeElement(_geca.RandomBar, &_aegdgf); _abbgb != nil {
			return _abbgb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
		_geca.Split = NewCT_SplitTransition()
		if _bbff := d.DecodeElement(_geca.Split, &_aegdgf); _bbff != nil {
			return _bbff
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
		_geca.Strips = NewCT_CornerDirectionTransition()
		if _acbd := d.DecodeElement(_geca.Strips, &_aegdgf); _acbd != nil {
			return _acbd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
		_geca.Wedge = NewCT_Empty()
		if _eedad := d.DecodeElement(_geca.Wedge, &_aegdgf); _eedad != nil {
			return _eedad
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
		_geca.Wheel = NewCT_WheelTransition()
		if _ecdff := d.DecodeElement(_geca.Wheel, &_aegdgf); _ecdff != nil {
			return _ecdff
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
		_geca.Wipe = NewCT_SideDirectionTransition()
		if _edbe := d.DecodeElement(_geca.Wipe, &_aegdgf); _edbe != nil {
			return _edbe
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
		_geca.Zoom = NewCT_InOutTransition()
		if _geed := d.DecodeElement(_geca.Zoom, &_aegdgf); _geed != nil {
			return _geed
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _aegdgf.Name)
		if _fdac := d.Skip(); _fdac != nil {
			return _fdac
		}
	}
	return nil
}

type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr       *bool
	TLIterateDataChoice *CT_TLIterateDataChoice
}

// Validate validates the CT_TLGraphicalObjectBuildChoice and its children
func (_caega *CT_TLGraphicalObjectBuildChoice) Validate() error {
	return _caega.ValidateWithPath("\u0043\u0054\u005fT\u004c\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0043\u0068\u006f\u0069\u0063\u0065")
}

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}

func (_adafe *EG_ShowType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_adafe.ShowTypeChoice.MarshalXML(e, _b.StartElement{})
	return nil
}
func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_cafgg := &CT_TLMediaNodeVideo{}
	_cafgg.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _cafgg
}
func NewSld() *Sld { _dedfef := &Sld{}; _dedfef.CT_Slide = *NewCT_Slide(); return _dedfef }

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_aeacf *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _fcbf := _aeacf.TLAnimVariantChoice.ValidateWithPath(path + "/\u0054L\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0043\u0068oi\u0063\u0065"); _fcbf != nil {
		return _fcbf
	}
	return nil
}
func (_eefcb *SldSyncPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _eefcb.CT_SlideSyncProperties.MarshalXML(e, start)
}
func (_gagac ST_ViewType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgecg := _b.Attr{}
	_cgecg.Name = name
	switch _gagac {
	case ST_ViewTypeUnset:
		_cgecg.Value = ""
	case ST_ViewTypeSldView:
		_cgecg.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_cgecg.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_cgecg.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_cgecg.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_cgecg.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_cgecg.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_cgecg.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_cgecg.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _cgecg, nil
}
func (_bbeaa ST_TLCommandType) String() string {
	switch _bbeaa {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}
func (_fcda *CT_TLTimeConditionChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fcda.TgtEl != nil {
		_gfcce := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_fcda.TgtEl, _gfcce)
	} else if _fcda.Tn != nil {
		_gbeg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_fcda.Tn, _gbeg)
	} else if _fcda.Rtn != nil {
		_bgfff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_fcda.Rtn, _bgfff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_agagaf ST_TLAnimateBehaviorCalcMode) String() string {
	switch _agagaf {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}

// Validate validates the CT_SlideTiming and its children
func (_ggbf *CT_SlideTiming) Validate() error {
	return _ggbf.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}
func (_bacfg *CT_SideDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bacfg.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_fefbf, _bbcd := _bacfg.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _bbcd != nil {
			return _bbcd
		}
		start.Attr = append(start.Attr, _fefbf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcfad ST_TransitionSideDirectionType) String() string {
	switch _gcfad {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}
func (_cggf *CT_HeaderFooter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cggf.SldNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cggf.SldNumAttr))})
	}
	if _cggf.HdrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0064\u0072"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cggf.HdrAttr))})
	}
	if _cggf.FtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0074\u0072"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cggf.FtrAttr))})
	}
	if _cggf.DtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cggf.DtAttr))})
	}
	e.EncodeToken(start)
	if _cggf.ExtLst != nil {
		_cgfe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cggf.ExtLst, _cgfe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccbag ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _ccbag {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccbag))
	}
	return nil
}

type CT_GraphicalObjectFrame struct {
	BwModeAttr _d.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_d.CT_Transform2D
	Graphic *_d.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

// Validate validates the HandoutMaster and its children
func (_efcdf *HandoutMaster) Validate() error {
	return _efcdf.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

func (_cggbag ST_PrintColorMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cggbag.String(), start)
}
func (_dfedb ST_TLDiagramBuildType) String() string {
	switch _dfedb {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}
func (_aeddb ST_ViewType) String() string {
	switch _aeddb {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}
func (_eddaf *CT_TLTimeTargetElementChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdeabb := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
		_eddaf.SldTgt = NewCT_Empty()
		if _dbag := d.DecodeElement(_eddaf.SldTgt, &_fdeabb); _dbag != nil {
			return _dbag
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
		_eddaf.SndTgt = _d.NewCT_EmbeddedWAVAudioFile()
		if _eeab := d.DecodeElement(_eddaf.SndTgt, &_fdeabb); _eeab != nil {
			return _eeab
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
		_eddaf.SpTgt = NewCT_TLShapeTargetElement()
		if _cacea := d.DecodeElement(_eddaf.SpTgt, &_fdeabb); _cacea != nil {
			return _cacea
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
		_eddaf.InkTgt = NewCT_TLSubShapeId()
		if _fgceg := d.DecodeElement(_eddaf.InkTgt, &_fdeabb); _fgceg != nil {
			return _fgceg
		}
	default:
		_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006ce\u006d\u0065nt\u0043\u0068\u006fi\u0063\u0065\u0020\u0025\u0076", _fdeabb.Name)
		if _cdedc := d.Skip(); _cdedc != nil {
			return _cdedc
		}
	}
	return nil
}
func (_badd ST_SlideSizeType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_badd.String(), start)
}
func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_baad := &CT_OutlineViewSlideList{}
	return _baad
}

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

func (_ebeca ST_TLNextActionType) String() string {
	switch _ebeca {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}
func (_gdca ST_TransitionEightDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gdca.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_b.CharData(_gdca.ST_TransitionSideDirectionType.String()))
	}
	if _gdca.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_b.CharData(_gdca.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_cgfga *CT_TLBuildParagraph) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgfga.BuildAttr != ST_TLParaBuildTypeUnset {
		_dged, _gcgge := _cgfga.BuildAttr.MarshalXMLAttr(_b.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _gcgge != nil {
			return _gcgge
		}
		start.Attr = append(start.Attr, _dged)
	}
	if _cgfga.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_cgfga.BldLvlAttr)})
	}
	if _cgfga.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cgfga.AnimBgAttr))})
	}
	if _cgfga.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cgfga.AutoUpdateAnimBgAttr))})
	}
	if _cgfga.RevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cgfga.RevAttr))})
	}
	if _cgfga.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _c.Sprintf("\u0025\u0076", *_cgfga.AdvAutoAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _cgfga.SpidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", _cgfga.GrpIdAttr)})
	if _cgfga.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_cgfga.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _cgfga.TmplLst != nil {
		_fcggc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_cgfga.TmplLst, _fcggc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

// ValidateWithPath validates the CT_TransitionSoundActionChoice and its children, prefixing error messages with path
func (_cfcge *CT_TransitionSoundActionChoice) ValidateWithPath(path string) error {
	if _cfcge.StSnd != nil {
		if _dcgcf := _cfcge.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _dcgcf != nil {
			return _dcgcf
		}
	}
	if _cfcge.EndSnd != nil {
		if _eegbf := _cfcge.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _eegbf != nil {
			return _eegbf
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_ffacc *CT_TLAnimVariantBooleanVal) Validate() error {
	return _ffacc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}

type CT_BuildListChoice struct {

	// Build Paragraph
	BldP *CT_TLBuildParagraph

	// Build Diagram
	BldDgm *CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart *CT_TLOleBuildChart

	// Build Graphics
	BldGraphic *CT_TLGraphicalObjectBuild
}

// ValidateWithPath validates the CT_TLTimeConditionChoice and its children, prefixing error messages with path
func (_fdbgd *CT_TLTimeConditionChoice) ValidateWithPath(path string) error {
	if _fdbgd.TgtEl != nil {
		if _dfeb := _fdbgd.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _dfeb != nil {
			return _dfeb
		}
	}
	if _fdbgd.Tn != nil {
		if _daggg := _fdbgd.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _daggg != nil {
			return _daggg
		}
	}
	if _fdbgd.Rtn != nil {
		if _fgcga := _fdbgd.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _fgcga != nil {
			return _fgcga
		}
	}
	return nil
}
func (_dedgc *ViewPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _dedgc.CT_ViewProperties.MarshalXML(e, start)
}
func (_caaed ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _caaed {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caaed))
	}
	return nil
}

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

func NewCT_CommentList() *CT_CommentList { _gacg := &CT_CommentList{}; return _gacg }

type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_d.CT_ColorMapping
}

func (_gbbf *CT_CommonSlideData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbbf.SpTree = NewCT_GroupShape()
	for _, _cae := range start.Attr {
		if _cae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdfb := _cae.Value
			_gbbf.NameAttr = &_gdfb
			continue
		}
	}
_bgge:
	for {
		_fdb, _ffac := d.Token()
		if _ffac != nil {
			return _ffac
		}
		switch _efd := _fdb.(type) {
		case _b.StartElement:
			switch _efd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_gbbf.Bg = NewCT_Background()
				if _bag := d.DecodeElement(_gbbf.Bg, &_efd); _bag != nil {
					return _bag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _deb := d.DecodeElement(_gbbf.SpTree, &_efd); _deb != nil {
					return _deb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_gbbf.CustDataLst = NewCT_CustomerDataList()
				if _eecg := d.DecodeElement(_gbbf.CustDataLst, &_efd); _eecg != nil {
					return _eecg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_gbbf.Controls = NewCT_ControlList()
				if _aegb := d.DecodeElement(_gbbf.Controls, &_efd); _aegb != nil {
					return _aegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbbf.ExtLst = NewCT_ExtensionList()
				if _acd := d.DecodeElement(_gbbf.ExtLst, &_efd); _acd != nil {
					return _acd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _efd.Name)
				if _adgd := d.Skip(); _adgd != nil {
					return _adgd
				}
			}
		case _b.EndElement:
			break _bgge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_adfb *CT_Guide) ValidateWithPath(path string) error {
	if _ecdb := _adfb.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _ecdb != nil {
		return _ecdb
	}
	if _adfb.PosAttr != nil {
		if _acgad := _adfb.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _acgad != nil {
			return _acgad
		}
	}
	return nil
}
func NewCT_TLByAnimateColorTransformChoice() *CT_TLByAnimateColorTransformChoice {
	_dfcge := &CT_TLByAnimateColorTransformChoice{}
	return _dfcge
}

// Validate validates the PresentationPr and its children
func (_cfbgfc *PresentationPr) Validate() error {
	return _cfbgfc.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_f.Any
}

func NewCT_TLGraphicalObjectBuildChoice() *CT_TLGraphicalObjectBuildChoice {
	_gaage := &CT_TLGraphicalObjectBuildChoice{}
	return _gaage
}
func (_gbfa *CmAuthorLst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _gbfa.CT_CommentAuthorList.MarshalXML(e, start)
}
func (_fcddf *ST_WebColorType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcddf = 0
	case "\u006e\u006f\u006e\u0065":
		*_fcddf = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_fcddf = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_fcddf = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_fcddf = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_fcddf = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_fcddf = 6
	}
	return nil
}
func (_aedce *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aedce = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_aedce = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_aedce = 2
	}
	return nil
}
func (_cebab ST_TransitionSideDirectionType) Validate() error { return _cebab.ValidateWithPath("") }
func (_adfbe ST_TLTimeNodeSyncType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dccede := _b.Attr{}
	_dccede.Name = name
	switch _adfbe {
	case ST_TLTimeNodeSyncTypeUnset:
		_dccede.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_dccede.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_dccede.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _dccede, nil
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_eedb *CT_SlideLayoutIdList) Validate() error {
	return _eedb.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_eaba *CT_TLAnimateScaleBehavior) Validate() error {
	return _eaba.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}

type ST_TLPreviousActionType byte

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_gfefa *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _gfec := _gfefa.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _gfec != nil {
		return _gfec
	}
	return nil
}

// Validate validates the EG_BackgroundChoice and its children
func (_ddbbb *EG_BackgroundChoice) Validate() error {
	return _ddbbb.ValidateWithPath("\u0045\u0047\u005f\u0042ac\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0043\u0068\u006f\u0069\u0063\u0065")
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func NewCT_OleObjectChoice() *CT_OleObjectChoice { _fcedc := &CT_OleObjectChoice{}; return _fcedc }

// Validate validates the CT_NormalViewProperties and its children
func (_ccad *CT_NormalViewProperties) Validate() error {
	return _ccad.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_fbcgf *CT_TLIterateIntervalPercentage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _fbcgf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLByRgbColorTransform and its children
func (_abage *CT_TLByRgbColorTransform) Validate() error {
	return _abage.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_abegc *CT_TLShapeTargetElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _abegc.SpidAttr)})
	e.EncodeToken(start)
	if _abegc.TLShapeTargetElementChoice != nil {
		_abegc.TLShapeTargetElementChoice.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbecf *CT_TLCommonTimeNodeData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afddf := range start.Attr {
		if _afddf.Name.Local == "\u0069\u0064" {
			_dedg, _ccdg := _e.ParseUint(_afddf.Value, 10, 32)
			if _ccdg != nil {
				return _ccdg
			}
			_gdcca := uint32(_dedg)
			_bbecf.IdAttr = &_gdcca
			continue
		}
		if _afddf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_gcggc, _cfdfb := _e.ParseInt(_afddf.Value, 10, 32)
			if _cfdfb != nil {
				return _cfdfb
			}
			_cgad := int32(_gcggc)
			_bbecf.PresetIDAttr = &_cgad
			continue
		}
		if _afddf.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_bbecf.PresetClassAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_accg, _fagg := _e.ParseInt(_afddf.Value, 10, 32)
			if _fagg != nil {
				return _fagg
			}
			_caccf := int32(_accg)
			_bbecf.PresetSubtypeAttr = &_caccf
			continue
		}
		if _afddf.Name.Local == "\u0064\u0075\u0072" {
			_eedacd, _bdcbg := ParseUnionST_TLTime(_afddf.Value)
			if _bdcbg != nil {
				return _bdcbg
			}
			_bbecf.DurAttr = &_eedacd
			continue
		}
		if _afddf.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_eagd, _dffcb := ParseUnionST_TLTime(_afddf.Value)
			if _dffcb != nil {
				return _dffcb
			}
			_bbecf.RepeatCountAttr = &_eagd
			continue
		}
		if _afddf.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_egbcc, _cggeg := ParseUnionST_TLTime(_afddf.Value)
			if _cggeg != nil {
				return _cggeg
			}
			_bbecf.RepeatDurAttr = &_egbcc
			continue
		}
		if _afddf.Name.Local == "\u0073\u0070\u0064" {
			_gfabb, _ffcfe := ParseUnionST_Percentage(_afddf.Value)
			if _ffcfe != nil {
				return _ffcfe
			}
			_bbecf.SpdAttr = &_gfabb
			continue
		}
		if _afddf.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_ccae, _dabcb := ParseUnionST_PositiveFixedPercentage(_afddf.Value)
			if _dabcb != nil {
				return _dabcb
			}
			_bbecf.AccelAttr = &_ccae
			continue
		}
		if _afddf.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_dagg, _bdfbc := ParseUnionST_PositiveFixedPercentage(_afddf.Value)
			if _bdfbc != nil {
				return _bdfbc
			}
			_bbecf.DecelAttr = &_dagg
			continue
		}
		if _afddf.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_aaeb, _abdad := _e.ParseBool(_afddf.Value)
			if _abdad != nil {
				return _abdad
			}
			_bbecf.AutoRevAttr = &_aaeb
			continue
		}
		if _afddf.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_bbecf.RestartAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u0066\u0069\u006c\u006c" {
			_bbecf.FillAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_bbecf.SyncBehaviorAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dgcc := _afddf.Value
			_bbecf.TmFilterAttr = &_dgcc
			continue
		}
		if _afddf.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_efea := _afddf.Value
			_bbecf.EvtFilterAttr = &_efea
			continue
		}
		if _afddf.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_badae, _fgcgc := _e.ParseBool(_afddf.Value)
			if _fgcgc != nil {
				return _fgcgc
			}
			_bbecf.DisplayAttr = &_badae
			continue
		}
		if _afddf.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_bbecf.MasterRelAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_dfddd, _dgdga := _e.ParseInt(_afddf.Value, 10, 32)
			if _dgdga != nil {
				return _dgdga
			}
			_geedc := int32(_dfddd)
			_bbecf.BldLvlAttr = &_geedc
			continue
		}
		if _afddf.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_badgf, _bdcad := _e.ParseUint(_afddf.Value, 10, 32)
			if _bdcad != nil {
				return _bdcad
			}
			_fdcc := uint32(_badgf)
			_bbecf.GrpIdAttr = &_fdcc
			continue
		}
		if _afddf.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_bfffa, _acgea := _e.ParseBool(_afddf.Value)
			if _acgea != nil {
				return _acgea
			}
			_bbecf.AfterEffectAttr = &_bfffa
			continue
		}
		if _afddf.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_bbecf.NodeTypeAttr.UnmarshalXMLAttr(_afddf)
			continue
		}
		if _afddf.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_addee, _gbccg := _e.ParseBool(_afddf.Value)
			if _gbccg != nil {
				return _gbccg
			}
			_bbecf.NodePhAttr = &_addee
			continue
		}
	}
_agbed:
	for {
		_gabac, _dccdd := d.Token()
		if _dccdd != nil {
			return _dccdd
		}
		switch _aaba := _gabac.(type) {
		case _b.StartElement:
			switch _aaba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_bbecf.StCondLst = NewCT_TLTimeConditionList()
				if _febebd := d.DecodeElement(_bbecf.StCondLst, &_aaba); _febebd != nil {
					return _febebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_bbecf.EndCondLst = NewCT_TLTimeConditionList()
				if _efcff := d.DecodeElement(_bbecf.EndCondLst, &_aaba); _efcff != nil {
					return _efcff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_bbecf.EndSync = NewCT_TLTimeCondition()
				if _fffb := d.DecodeElement(_bbecf.EndSync, &_aaba); _fffb != nil {
					return _fffb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_bbecf.Iterate = NewCT_TLIterateData()
				if _cabf := d.DecodeElement(_bbecf.Iterate, &_aaba); _cabf != nil {
					return _cabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_bbecf.ChildTnLst = NewCT_TimeNodeList()
				if _cfed := d.DecodeElement(_bbecf.ChildTnLst, &_aaba); _cfed != nil {
					return _cfed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_bbecf.SubTnLst = NewCT_TimeNodeList()
				if _ceecb := d.DecodeElement(_bbecf.SubTnLst, &_aaba); _ceecb != nil {
					return _ceecb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _aaba.Name)
				if _ddbca := d.Skip(); _ddbca != nil {
					return _ddbca
				}
			}
		case _b.EndElement:
			break _agbed
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_cged *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _cged.Bg != nil {
		if _dbf := _cged.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _dbf != nil {
			return _dbf
		}
	}
	if _cac := _cged.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _cac != nil {
		return _cac
	}
	if _cged.CustDataLst != nil {
		if _ddbc := _cged.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _ddbc != nil {
			return _ddbc
		}
	}
	if _cged.Controls != nil {
		if _age := _cged.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _age != nil {
			return _age
		}
	}
	if _cged.ExtLst != nil {
		if _fbdd := _cged.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbdd != nil {
			return _fbdd
		}
	}
	return nil
}
func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_baca := &CT_GraphicalObjectFrame{}
	_baca.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_baca.Xfrm = _d.NewCT_Transform2D()
	_baca.Graphic = _d.NewGraphic()
	return _baca
}

// Validate validates the CT_TLByHslColorTransform and its children
func (_dcbgf *CT_TLByHslColorTransform) Validate() error {
	return _dcbgf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_fcbee *NotesMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcbee.CT_NotesMaster = *NewCT_NotesMaster()
_fgbf:
	for {
		_dcgae, _caecc := d.Token()
		if _caecc != nil {
			return _caecc
		}
		switch _gfgegc := _dcgae.(type) {
		case _b.StartElement:
			switch _gfgegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cegb := d.DecodeElement(_fcbee.CSld, &_gfgegc); _cegb != nil {
					return _cegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gddfd := d.DecodeElement(_fcbee.ClrMap, &_gfgegc); _gddfd != nil {
					return _gddfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fcbee.Hf = NewCT_HeaderFooter()
				if _dfbb := d.DecodeElement(_fcbee.Hf, &_gfgegc); _dfbb != nil {
					return _dfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_fcbee.NotesStyle = _d.NewCT_TextListStyle()
				if _fdaga := d.DecodeElement(_fcbee.NotesStyle, &_gfgegc); _fdaga != nil {
					return _fdaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcbee.ExtLst = NewCT_ExtensionListModify()
				if _afbg := d.DecodeElement(_fcbee.ExtLst, &_gfgegc); _afbg != nil {
					return _afbg
				}
			default:
				_ea.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _gfgegc.Name)
				if _afdab := d.Skip(); _afdab != nil {
					return _afdab
				}
			}
		case _b.EndElement:
			break _fgbf
		case _b.CharData:
		}
	}
	return nil
}
func (_dabgb ST_TransitionEightDirectionType) String() string {
	if _dabgb.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _dabgb.ST_TransitionSideDirectionType.String()
	}
	if _dabgb.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _dabgb.ST_TransitionCornerDirectionType.String()
	}
	return ""
}
func (_fec *CT_CustomShowId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acc := range start.Attr {
		if _acc.Name.Local == "\u0069\u0064" {
			_efcg, _ebf := _e.ParseUint(_acc.Value, 10, 32)
			if _ebf != nil {
				return _ebf
			}
			_fec.IdAttr = uint32(_efcg)
			continue
		}
	}
	for {
		_fge, _add := d.Token()
		if _add != nil {
			return _c.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _add)
		}
		if _gacd, _eafg := _fge.(_b.EndElement); _eafg && _gacd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLBuildParagraph and its children
func (_aedf *CT_TLBuildParagraph) Validate() error {
	return _aedf.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}
func (_agabc ST_WebScreenSize) Validate() error { return _agabc.ValidateWithPath("") }
func (_fddf *CT_TransitionStartSoundAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fddf.Snd = _d.NewCT_EmbeddedWAVAudioFile()
	for _, _facdf := range start.Attr {
		if _facdf.Name.Local == "\u006c\u006f\u006f\u0070" {
			_abede, _eefa := _e.ParseBool(_facdf.Value)
			if _eefa != nil {
				return _eefa
			}
			_fddf.LoopAttr = &_abede
			continue
		}
	}
_gedca:
	for {
		_eaeff, _acbfd := d.Token()
		if _acbfd != nil {
			return _acbfd
		}
		switch _bafea := _eaeff.(type) {
		case _b.StartElement:
			switch _bafea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _ecbb := d.DecodeElement(_fddf.Snd, &_bafea); _ecbb != nil {
					return _ecbb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _bafea.Name)
				if _cbgbe := d.Skip(); _cbgbe != nil {
					return _cbgbe
				}
			}
		case _b.EndElement:
			break _gedca
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_cbdcd *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _aeec := _cbdcd.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _aeec != nil {
		return _aeec
	}
	if _cfaac := _cbdcd.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _cfaac != nil {
		return _cfaac
	}
	if _cffd := _cbdcd.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _cffd != nil {
		return _cffd
	}
	if _cbdcd.PrevCondLst != nil {
		if _bfab := _cbdcd.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _bfab != nil {
			return _bfab
		}
	}
	if _cbdcd.NextCondLst != nil {
		if _dfgefd := _cbdcd.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _dfgefd != nil {
			return _dfgefd
		}
	}
	return nil
}
func NewCT_TLPoint() *CT_TLPoint {
	_adgbd := &CT_TLPoint{}
	return _adgbd
}

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_gageg *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _gageg.ExtLst != nil {
		if _fgdc := _gageg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgdc != nil {
			return _fgdc
		}
	}
	return nil
}

// Validate validates the CT_Slide and its children
func (_dfec *CT_Slide) Validate() error {
	return _dfec.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}
func (_afdg *CT_Shape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afdg.NvSpPr = NewCT_ShapeNonVisual()
	_afdg.SpPr = _d.NewCT_ShapeProperties()
	for _, _acag := range start.Attr {
		if _acag.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_fggf, _gfbcc := _e.ParseBool(_acag.Value)
			if _gfbcc != nil {
				return _gfbcc
			}
			_afdg.UseBgFillAttr = &_fggf
			continue
		}
	}
_ggdg:
	for {
		_cfbdb, _gecbf := d.Token()
		if _gecbf != nil {
			return _gecbf
		}
		switch _cdgbd := _cfbdb.(type) {
		case _b.StartElement:
			switch _cdgbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _dggba := d.DecodeElement(_afdg.NvSpPr, &_cdgbd); _dggba != nil {
					return _dggba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fedg := d.DecodeElement(_afdg.SpPr, &_cdgbd); _fedg != nil {
					return _fedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_afdg.Style = _d.NewCT_ShapeStyle()
				if _cdab := d.DecodeElement(_afdg.Style, &_cdgbd); _cdab != nil {
					return _cdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_afdg.TxBody = _d.NewCT_TextBody()
				if _abeaf := d.DecodeElement(_afdg.TxBody, &_cdgbd); _abeaf != nil {
					return _abeaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afdg.ExtLst = NewCT_ExtensionListModify()
				if _ggbb := d.DecodeElement(_afdg.ExtLst, &_cdgbd); _ggbb != nil {
					return _ggbb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _cdgbd.Name)
				if _gbfc := d.Skip(); _gbfc != nil {
					return _gbfc
				}
			}
		case _b.EndElement:
			break _ggdg
		case _b.CharData:
		}
	}
	return nil
}
func (_gacgb ST_TLTimeNodeFillType) Validate() error { return _gacgb.ValidateWithPath("") }
func (_dffbf ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _dffbf {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dffbf))
	}
	return nil
}

type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

func (_cdecgb ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ggfca := _b.Attr{}
	_ggfca.Name = name
	switch _cdecgb {
	case ST_TLBehaviorAccumulateTypeUnset:
		_ggfca.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_ggfca.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_ggfca.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _ggfca, nil
}
func (_efaf *CT_TLTextTargetElementChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfeee := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
		_efaf.CharRg = NewCT_IndexRange()
		if _bccde := d.DecodeElement(_efaf.CharRg, &_cfeee); _bccde != nil {
			return _bccde
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
		_efaf.PRg = NewCT_IndexRange()
		if _efcgg := d.DecodeElement(_efaf.PRg, &_cfeee); _efcgg != nil {
			return _efcgg
		}
	default:
		_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0054\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006ce\u006d\u0065nt\u0043\u0068\u006fi\u0063\u0065\u0020\u0025\u0076", _cfeee.Name)
		if _fdgf := d.Skip(); _fdgf != nil {
			return _fdgf
		}
	}
	return nil
}

type ST_PlaceholderType byte

func (_eege *CT_TLTemplate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eege.LvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0076\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_eege.LvlAttr)})
	}
	e.EncodeToken(start)
	_aagaa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_eege.TnLst, _aagaa)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fagaa ST_PlaceholderType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fagaa.String(), start)
}

// ValidateWithPath validates the CT_TimeNodeListChoice and its children, prefixing error messages with path
func (_bffdf *CT_TimeNodeListChoice) ValidateWithPath(path string) error {
	if _bffdf.Par != nil {
		if _aeffb := _bffdf.Par.ValidateWithPath(path + "\u002f\u0050\u0061\u0072"); _aeffb != nil {
			return _aeffb
		}
	}
	if _bffdf.Seq != nil {
		if _faeca := _bffdf.Seq.ValidateWithPath(path + "\u002f\u0053\u0065\u0071"); _faeca != nil {
			return _faeca
		}
	}
	if _bffdf.Excl != nil {
		if _bfaead := _bffdf.Excl.ValidateWithPath(path + "\u002f\u0045\u0078c\u006c"); _bfaead != nil {
			return _bfaead
		}
	}
	if _bffdf.Anim != nil {
		if _cccabc := _bffdf.Anim.ValidateWithPath(path + "\u002f\u0041\u006ei\u006d"); _cccabc != nil {
			return _cccabc
		}
	}
	if _bffdf.AnimClr != nil {
		if _baccd := _bffdf.AnimClr.ValidateWithPath(path + "\u002f\u0041\u006e\u0069\u006d\u0043\u006c\u0072"); _baccd != nil {
			return _baccd
		}
	}
	if _bffdf.AnimEffect != nil {
		if _bacfgc := _bffdf.AnimEffect.ValidateWithPath(path + "/\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"); _bacfgc != nil {
			return _bacfgc
		}
	}
	if _bffdf.AnimMotion != nil {
		if _cdbac := _bffdf.AnimMotion.ValidateWithPath(path + "/\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"); _cdbac != nil {
			return _cdbac
		}
	}
	if _bffdf.AnimRot != nil {
		if _aaaee := _bffdf.AnimRot.ValidateWithPath(path + "\u002f\u0041\u006e\u0069\u006d\u0052\u006f\u0074"); _aaaee != nil {
			return _aaaee
		}
	}
	if _bffdf.AnimScale != nil {
		if _bgffd := _bffdf.AnimScale.ValidateWithPath(path + "\u002f\u0041\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"); _bgffd != nil {
			return _bgffd
		}
	}
	if _bffdf.Cmd != nil {
		if _cffa := _bffdf.Cmd.ValidateWithPath(path + "\u002f\u0043\u006d\u0064"); _cffa != nil {
			return _cffa
		}
	}
	if _bffdf.Set != nil {
		if _cdgca := _bffdf.Set.ValidateWithPath(path + "\u002f\u0053\u0065\u0074"); _cdgca != nil {
			return _cdgca
		}
	}
	if _bffdf.Audio != nil {
		if _gdaa := _bffdf.Audio.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f"); _gdaa != nil {
			return _gdaa
		}
	}
	if _bffdf.Video != nil {
		if _ebggfa := _bffdf.Video.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f"); _ebggfa != nil {
			return _ebggfa
		}
	}
	return nil
}

type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_d.CT_EmbeddedWAVAudioFile
}

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_dcbgfe *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _ccafd := _dcbgfe.TransitionSoundActionChoice.ValidateWithPath(path + "\u002f\u0054\u0072\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006ed\u0041c\u0074\u0069\u006f\u006e\u0043\u0068\u006fi\u0063\u0065"); _ccafd != nil {
		return _ccafd
	}
	return nil
}
func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_aaff := &CT_TLTimeNodeSequence{}
	_aaff.CTn = NewCT_TLCommonTimeNodeData()
	return _aaff
}

type ST_SlideSizeType byte

func (_eabbe *PresentationPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _eabbe.CT_PresentationProperties.MarshalXML(e, start)
}
func NewCT_StringTag() *CT_StringTag { _ffggc := &CT_StringTag{}; return _ffggc }
func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_becgd := &CT_TLGraphicalObjectBuild{}
	_becgd.TLGraphicalObjectBuildChoice = NewCT_TLGraphicalObjectBuildChoice()
	return _becgd
}
func (_bgbec *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daega, _abeaa := d.Token()
	if _abeaa != nil {
		return _abeaa
	}
	if _fcbfb, _fbbfa := _daega.(_b.EndElement); _fbbfa && _fcbfb.Name == start.Name {
		*_bgbec = 1
		return nil
	}
	if _eeadc, _daac := _daega.(_b.CharData); !_daac {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _daega)
	} else {
		switch string(_eeadc) {
		case "":
			*_bgbec = 0
		case "\u006e\u006f\u006e\u0065":
			*_bgbec = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_bgbec = 2
		}
	}
	_daega, _abeaa = d.Token()
	if _abeaa != nil {
		return _abeaa
	}
	if _baade, _abcdb := _daega.(_b.EndElement); _abcdb && _baade.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _daega)
}
func (_cgbc *CT_CustomShowList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cgbc.CustShow != nil {
		_gageb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _gfe := range _cgbc.CustShow {
			e.EncodeElement(_gfe, _gageb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efebf ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _efebf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efebf))
	}
	return nil
}
func (_cgdg *CT_SlideLayoutIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_febc:
	for {
		_gabfe, _bfbba := d.Token()
		if _bfbba != nil {
			return _bfbba
		}
		switch _ddddg := _gabfe.(type) {
		case _b.StartElement:
			switch _ddddg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_bbfa := NewCT_SlideLayoutIdListEntry()
				if _aafd := d.DecodeElement(_bbfa, &_ddddg); _aafd != nil {
					return _aafd
				}
				_cgdg.SldLayoutId = append(_cgdg.SldLayoutId, _bbfa)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ddddg.Name)
				if _gaee := d.Skip(); _gaee != nil {
					return _gaee
				}
			}
		case _b.EndElement:
			break _febc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_fegaa *CT_TLAnimVariantFloatVal) Validate() error {
	return _fegaa.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}
func (_debeg *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acae := range start.Attr {
		if _acae.Name.Local == "\u0076\u0061\u006c" {
			_gbagf, _acebg := _e.ParseInt(_acae.Value, 10, 32)
			if _acebg != nil {
				return _acebg
			}
			_debeg.ValAttr = int32(_gbagf)
			continue
		}
	}
	for {
		_fbba, _cabg := d.Token()
		if _cabg != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _cabg)
		}
		if _gaadca, _dagfg := _fbba.(_b.EndElement); _dagfg && _gaadca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gabgb *HandoutMaster) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gabgb.CT_HandoutMaster.MarshalXML(e, start)
}

type ViewPr struct{ CT_ViewProperties }

// Validate validates the CT_TLMediaNodeVideo and its children
func (_agdf *CT_TLMediaNodeVideo) Validate() error {
	return _agdf.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_d.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

func (_gfff *CT_NotesMasterIdList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebgce:
	for {
		_gbdeg, _ccd := d.Token()
		if _ccd != nil {
			return _ccd
		}
		switch _fcddd := _gbdeg.(type) {
		case _b.StartElement:
			switch _fcddd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_gfff.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _dggc := d.DecodeElement(_gfff.NotesMasterId, &_fcddd); _dggc != nil {
					return _dggc
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fcddd.Name)
				if _dgcgf := d.Skip(); _dgcgf != nil {
					return _dgcgf
				}
			}
		case _b.EndElement:
			break _ebgce
		case _b.CharData:
		}
	}
	return nil
}
func (_fgaga ST_TLBehaviorAdditiveType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgaga.String(), start)
}
func (_dedfg ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _dedfg {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dedfg))
	}
	return nil
}

type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_afe *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _dgb := _afe.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _dgb != nil {
		return _dgb
	}
	if _bgaa := _afe.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _bgaa != nil {
		return _bgaa
	}
	if _gffa := _afe.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _gffa != nil {
		return _gffa
	}
	return nil
}
func (_fffeeg ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _fffeeg {
	case 0, 1, 2, 3, 4:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fffeeg))
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_dcgf *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _badg, _aabe := range _dcgf.Sld {
		if _cfd := _aabe.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _badg)); _cfd != nil {
			return _cfd
		}
	}
	return nil
}
func (_eafb *CT_EmbeddedFontListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_eabbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_eafb.Font, _eabbb)
	if _eafb.Regular != nil {
		_fgd := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_eafb.Regular, _fgd)
	}
	if _eafb.Bold != nil {
		_dgae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_eafb.Bold, _dgae)
	}
	if _eafb.Italic != nil {
		_cfb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_eafb.Italic, _cfb)
	}
	if _eafb.BoldItalic != nil {
		_cdce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_eafb.BoldItalic, _cdce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cabba *CT_SlideSyncProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _c.Sprintf("\u0025\u0076", _cabba.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _db.FormatDateTime(_cabba.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _db.FormatDateTime(_cabba.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _cabba.ExtLst != nil {
		_bcffa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cabba.ExtLst, _bcffa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgga *SldLayout) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _fgga.CT_SlideLayout.MarshalXML(e, start)
}

// Validate validates the CT_Guide and its children
func (_dfcg *CT_Guide) Validate() error {
	return _dfcg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}
func (_gfgec ST_TLAnimateMotionPathEditMode) Validate() error { return _gfgec.ValidateWithPath("") }

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_dbggc *CT_StringTag) ValidateWithPath(path string) error { return nil }
func (_bcbfe ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gffab := _b.Attr{}
	_gffab.Name = name
	switch _bcbfe {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_gffab.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_gffab.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_gffab.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_gffab.Value = "\u0066\u006d\u006c\u0061"
	}
	return _gffab, nil
}

type Presentation struct{ CT_Presentation }

func NewCT_TLTemplate() *CT_TLTemplate {
	_accbd := &CT_TLTemplate{}
	_accbd.TnLst = NewCT_TimeNodeList()
	return _accbd
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)

func (_abbg *CT_Control) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abbg.SpidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_abbg.SpidAttr)})
	}
	if _abbg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_abbg.NameAttr)})
	}
	if _abbg.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_abbg.ShowAsIconAttr))})
	}
	if _abbg.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_abbg.IdAttr)})
	}
	if _abbg.ImgWAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _c.Sprintf("\u0025\u0076", *_abbg.ImgWAttr)})
	}
	if _abbg.ImgHAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _c.Sprintf("\u0025\u0076", *_abbg.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _abbg.ExtLst != nil {
		_begc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abbg.ExtLst, _begc)
	}
	if _abbg.Pic != nil {
		_bdff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_abbg.Pic, _bdff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_gfbe *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }
func (_fdad ST_TLTimeNodeFillType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdgeb := _b.Attr{}
	_bdgeb.Name = name
	switch _fdad {
	case ST_TLTimeNodeFillTypeUnset:
		_bdgeb.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_bdgeb.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_bdgeb.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_bdgeb.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_bdgeb.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _bdgeb, nil
}
func NewEG_SlideListChoice() *EG_SlideListChoice { _gdggf := &EG_SlideListChoice{}; return _gdggf }
func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_dbcec := &CT_SlideMasterIdListEntry{}
	return _dbcec
}

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_aggcg *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _cdfba := _aggcg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cdfba != nil {
		return _cdfba
	}
	return nil
}
func (_ceddf *CT_SlideTransitionChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceddf.Blinds != nil {
		_fege := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_ceddf.Blinds, _fege)
	} else if _ceddf.Checker != nil {
		_bbgb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_ceddf.Checker, _bbgb)
	} else if _ceddf.Circle != nil {
		_fgcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_ceddf.Circle, _fgcg)
	} else if _ceddf.Dissolve != nil {
		_cdgd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_ceddf.Dissolve, _cdgd)
	} else if _ceddf.Comb != nil {
		_decc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_ceddf.Comb, _decc)
	} else if _ceddf.Cover != nil {
		_gafcc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_ceddf.Cover, _gafcc)
	} else if _ceddf.Cut != nil {
		_dead := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_ceddf.Cut, _dead)
	} else if _ceddf.Diamond != nil {
		_defa := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_ceddf.Diamond, _defa)
	} else if _ceddf.Fade != nil {
		_ceada := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_ceddf.Fade, _ceada)
	} else if _ceddf.Newsflash != nil {
		_acdfc := _b.StartElement{Name: _b.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_ceddf.Newsflash, _acdfc)
	} else if _ceddf.Plus != nil {
		_eggdf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_ceddf.Plus, _eggdf)
	} else if _ceddf.Pull != nil {
		_fecc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_ceddf.Pull, _fecc)
	} else if _ceddf.Push != nil {
		_bbfeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_ceddf.Push, _bbfeb)
	} else if _ceddf.Random != nil {
		_ffcae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_ceddf.Random, _ffcae)
	} else if _ceddf.RandomBar != nil {
		_edcd := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_ceddf.RandomBar, _edcd)
	} else if _ceddf.Split != nil {
		_fgfdb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_ceddf.Split, _fgfdb)
	} else if _ceddf.Strips != nil {
		_ecgaa := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_ceddf.Strips, _ecgaa)
	} else if _ceddf.Wedge != nil {
		_cegc := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_ceddf.Wedge, _cegc)
	} else if _ceddf.Wheel != nil {
		_cgeb := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_ceddf.Wheel, _cgeb)
	} else if _ceddf.Wipe != nil {
		_dddaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_ceddf.Wipe, _dddaf)
	} else if _ceddf.Zoom != nil {
		_eaadd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_ceddf.Zoom, _eaadd)
	}
	return nil
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_fcbg *CT_CustomShowList) ValidateWithPath(path string) error {
	for _fbag, _aga := range _fcbg.CustShow {
		if _gaeg := _aga.ValidateWithPath(_c.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _fbag)); _gaeg != nil {
			return _gaeg
		}
	}
	return nil
}
func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}
func NewCT_BuildListChoice() *CT_BuildListChoice {
	_dgg := &CT_BuildListChoice{}
	return _dgg
}
func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_dgaeg := &CT_TransitionSoundAction{}
	_dgaeg.TransitionSoundActionChoice = NewCT_TransitionSoundActionChoice()
	return _dgaeg
}
func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse {
	_bfaf := &CT_ShowInfoBrowse{}
	return _bfaf
}
func (_baba ST_OleObjectFollowColorScheme) String() string {
	switch _baba {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}
func (_egff *CT_SlideTiming) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecgef:
	for {
		_beebf, _gcbeg := d.Token()
		if _gcbeg != nil {
			return _gcbeg
		}
		switch _fceee := _beebf.(type) {
		case _b.StartElement:
			switch _fceee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_egff.TnLst = NewCT_TimeNodeList()
				if _ggaee := d.DecodeElement(_egff.TnLst, &_fceee); _ggaee != nil {
					return _ggaee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_egff.BldLst = NewCT_BuildList()
				if _ebfc := d.DecodeElement(_egff.BldLst, &_fceee); _ebfc != nil {
					return _ebfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egff.ExtLst = NewCT_ExtensionListModify()
				if _abdf := d.DecodeElement(_egff.ExtLst, &_fceee); _abdf != nil {
					return _abdf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _fceee.Name)
				if _bacea := d.Skip(); _bacea != nil {
					return _bacea
				}
			}
		case _b.EndElement:
			break _ecgef
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_gdae *CT_WheelTransition) ValidateWithPath(path string) error { return nil }
func (_cgfde *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecced, _bdbbf := d.Token()
	if _bdbbf != nil {
		return _bdbbf
	}
	if _eeae, _afbbfc := _ecced.(_b.EndElement); _afbbfc && _eeae.Name == start.Name {
		*_cgfde = 1
		return nil
	}
	if _bdfgea, _bgfce := _ecced.(_b.CharData); !_bgfce {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecced)
	} else {
		switch string(_bdfgea) {
		case "":
			*_cgfde = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_cgfde = 1
		case "\u0066\u0069\u0078e\u0064":
			*_cgfde = 2
		}
	}
	_ecced, _bdbbf = d.Token()
	if _bdbbf != nil {
		return _bdbbf
	}
	if _eddda, _edacd := _ecced.(_b.EndElement); _edacd && _eddda.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecced)
}

type ST_Direction byte

func (_cdaf *CT_GroupShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdaf.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_cdaf.GrpSpPr = _d.NewCT_GroupShapeProperties()
_bgda:
	for {
		_cbed, _cdfb := d.Token()
		if _cdfb != nil {
			return _cdfb
		}
		switch _fgfa := _cbed.(type) {
		case _b.StartElement:
			switch _fgfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _effa := d.DecodeElement(_cdaf.NvGrpSpPr, &_fgfa); _effa != nil {
					return _effa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _gcaf := d.DecodeElement(_cdaf.GrpSpPr, &_fgfa); _gcaf != nil {
					return _gcaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_dega := NewCT_GroupShapeChoice()
				if _dcf := d.DecodeElement(&_dega.Sp, &_fgfa); _dcf != nil {
					return _dcf
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _dega)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_ecefc := NewCT_GroupShapeChoice()
				if _cada := d.DecodeElement(&_ecefc.GrpSp, &_fgfa); _cada != nil {
					return _cada
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _ecefc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_cbb := NewCT_GroupShapeChoice()
				if _efabd := d.DecodeElement(&_cbb.GraphicFrame, &_fgfa); _efabd != nil {
					return _efabd
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _cbb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_daca := NewCT_GroupShapeChoice()
				if _cbec := d.DecodeElement(&_daca.CxnSp, &_fgfa); _cbec != nil {
					return _cbec
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _daca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dabda := NewCT_GroupShapeChoice()
				if _cfba := d.DecodeElement(&_dabda.Pic, &_fgfa); _cfba != nil {
					return _cfba
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _dabda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_cdad := NewCT_GroupShapeChoice()
				if _aacd := d.DecodeElement(&_cdad.ContentPart, &_fgfa); _aacd != nil {
					return _aacd
				}
				_cdaf.GroupShapeChoice = append(_cdaf.GroupShapeChoice, _cdad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdaf.ExtLst = NewCT_ExtensionListModify()
				if _ccf := d.DecodeElement(_cdaf.ExtLst, &_fgfa); _ccf != nil {
					return _ccf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _fgfa.Name)
				if _adde := d.Skip(); _adde != nil {
					return _adde
				}
			}
		case _b.EndElement:
			break _bgda
		case _b.CharData:
		}
	}
	return nil
}

type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}
type CT_SmartTags struct{ IdAttr string }

func (_ecdgg ST_PrintWhat) Validate() error { return _ecdgg.ValidateWithPath("") }
func (_fecf *ST_TransitionSpeed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfdca, _gbdeb := d.Token()
	if _gbdeb != nil {
		return _gbdeb
	}
	if _cdegbe, _dccfd := _dfdca.(_b.EndElement); _dccfd && _cdegbe.Name == start.Name {
		*_fecf = 1
		return nil
	}
	if _ccafef, _dcbb := _dfdca.(_b.CharData); !_dcbb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfdca)
	} else {
		switch string(_ccafef) {
		case "":
			*_fecf = 0
		case "\u0073\u006c\u006f\u0077":
			*_fecf = 1
		case "\u006d\u0065\u0064":
			*_fecf = 2
		case "\u0066\u0061\u0073\u0074":
			*_fecf = 3
		}
	}
	_dfdca, _gbdeb = d.Token()
	if _gbdeb != nil {
		return _gbdeb
	}
	if _caecbe, _bacad := _dfdca.(_b.EndElement); _bacad && _caecbe.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfdca)
}
func (_fbfgd *CT_TLTimeNodeSequence) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbfgd.CTn = NewCT_TLCommonTimeNodeData()
	for _, _bccdb := range start.Attr {
		if _bccdb.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_ddedd, _dedb := _e.ParseBool(_bccdb.Value)
			if _dedb != nil {
				return _dedb
			}
			_fbfgd.ConcurrentAttr = &_ddedd
			continue
		}
		if _bccdb.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_fbfgd.PrevAcAttr.UnmarshalXMLAttr(_bccdb)
			continue
		}
		if _bccdb.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_fbfgd.NextAcAttr.UnmarshalXMLAttr(_bccdb)
			continue
		}
	}
_aecb:
	for {
		_ecdee, _ecabf := d.Token()
		if _ecabf != nil {
			return _ecabf
		}
		switch _afdfd := _ecdee.(type) {
		case _b.StartElement:
			switch _afdfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _fffd := d.DecodeElement(_fbfgd.CTn, &_afdfd); _fffd != nil {
					return _fffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_fbfgd.PrevCondLst = NewCT_TLTimeConditionList()
				if _bgfacf := d.DecodeElement(_fbfgd.PrevCondLst, &_afdfd); _bgfacf != nil {
					return _bgfacf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_fbfgd.NextCondLst = NewCT_TLTimeConditionList()
				if _ggge := d.DecodeElement(_fbfgd.NextCondLst, &_afdfd); _ggge != nil {
					return _ggge
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _afdfd.Name)
				if _dcec := d.Skip(); _dcec != nil {
					return _dcec
				}
			}
		case _b.EndElement:
			break _aecb
		case _b.CharData:
		}
	}
	return nil
}
func (_fgggg ST_TLParaBuildType) Validate() error { return _fgggg.ValidateWithPath("") }
func (_faacca *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_adeggc, _bebcf := d.Token()
	if _bebcf != nil {
		return _bebcf
	}
	if _agddg, _gaef := _adeggc.(_b.EndElement); _gaef && _agddg.Name == start.Name {
		*_faacca = 1
		return nil
	}
	if _ffccf, _cggba := _adeggc.(_b.CharData); !_cggba {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adeggc)
	} else {
		switch string(_ffccf) {
		case "":
			*_faacca = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_faacca = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_faacca = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_faacca = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_faacca = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_faacca = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_faacca = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_faacca = 7
		}
	}
	_adeggc, _bebcf = d.Token()
	if _bebcf != nil {
		return _bebcf
	}
	if _dedbe, _adgba := _adeggc.(_b.EndElement); _adgba && _dedbe.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adeggc)
}
func (_gbefe *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfbeg, _fbfdd := d.Token()
	if _fbfdd != nil {
		return _fbfdd
	}
	if _bbdee, _dgffb := _gfbeg.(_b.EndElement); _dgffb && _bbdee.Name == start.Name {
		*_gbefe = 1
		return nil
	}
	if _ceaf, _ecfab := _gfbeg.(_b.CharData); !_ecfab {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbeg)
	} else {
		switch string(_ceaf) {
		case "":
			*_gbefe = 0
		case "\u0073\u0074\u0072":
			*_gbefe = 1
		case "\u006e\u0075\u006d":
			*_gbefe = 2
		case "\u0063\u006c\u0072":
			*_gbefe = 3
		}
	}
	_gfbeg, _fbfdd = d.Token()
	if _fbfdd != nil {
		return _fbfdd
	}
	if _aecfb, _afdbd := _gfbeg.(_b.EndElement); _afdbd && _aecfb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbeg)
}
func NewEG_ShowTypeChoice() *EG_ShowTypeChoice {
	_fgegb := &EG_ShowTypeChoice{}
	return _fgegb
}

// Validate validates the EG_Background and its children
func (_faad *EG_Background) Validate() error {
	return _faad.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph          *CT_Placeholder
	MediaChoice *_d.EG_MediaChoice

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}

func (_abdba *CT_TLTimeNodeSequence) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abdba.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_abdba.ConcurrentAttr))})
	}
	if _abdba.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_fcbga, _fbae := _abdba.PrevAcAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _fbae != nil {
			return _fbae
		}
		start.Attr = append(start.Attr, _fcbga)
	}
	if _abdba.NextAcAttr != ST_TLNextActionTypeUnset {
		_ffdcc, _dbadc := _abdba.NextAcAttr.MarshalXMLAttr(_b.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _dbadc != nil {
			return _dbadc
		}
		start.Attr = append(start.Attr, _ffdcc)
	}
	e.EncodeToken(start)
	_eegg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_abdba.CTn, _eegg)
	if _abdba.PrevCondLst != nil {
		_dccda := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_abdba.PrevCondLst, _dccda)
	}
	if _abdba.NextCondLst != nil {
		_edddf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_abdba.NextCondLst, _edddf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcdbbf ST_TLAnimateColorDirection) Validate() error { return _gcdbbf.ValidateWithPath("") }
func (_eabff *CT_HandoutMasterIdListEntry) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _eabff.IdAttr)})
	e.EncodeToken(start)
	if _eabff.ExtLst != nil {
		_dege := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eabff.ExtLst, _dege)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_deef *CT_SplitTransition) ValidateWithPath(path string) error {
	if _dggd := _deef.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _dggd != nil {
		return _dggd
	}
	if _dagac := _deef.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dagac != nil {
		return _dagac
	}
	return nil
}

// Validate validates the CT_CustomShowList and its children
func (_bgfe *CT_CustomShowList) Validate() error {
	return _bgfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}
func NewNotesMaster() *NotesMaster {
	_gefcd := &NotesMaster{}
	_gefcd.CT_NotesMaster = *NewCT_NotesMaster()
	return _gefcd
}

type AG_TLBuild struct {
	SpidAttr     uint32
	GrpIdAttr    uint32
	UiExpandAttr *bool
}

func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _bcb := &CT_NotesMasterIdList{}; return _bcb }

type ST_TLAnimateColorSpace byte

func (_gfde *ST_TLAnimateColorDirection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eggde, _eddca := d.Token()
	if _eddca != nil {
		return _eddca
	}
	if _agcbab, _addbf := _eggde.(_b.EndElement); _addbf && _agcbab.Name == start.Name {
		*_gfde = 1
		return nil
	}
	if _egaad, _ddbeb := _eggde.(_b.CharData); !_ddbeb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggde)
	} else {
		switch string(_egaad) {
		case "":
			*_gfde = 0
		case "\u0063\u0077":
			*_gfde = 1
		case "\u0063\u0063\u0077":
			*_gfde = 2
		}
	}
	_eggde, _eddca = d.Token()
	if _eddca != nil {
		return _eddca
	}
	if _eeceec, _bffde := _eggde.(_b.EndElement); _bffde && _eeceec.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggde)
}
func (_egba *CT_SlideLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egba.CSld = NewCT_CommonSlideData()
	for _, _bfef := range start.Attr {
		if _bfef.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_acef := _bfef.Value
			_egba.MatchingNameAttr = &_acef
			continue
		}
		if _bfef.Name.Local == "\u0074\u0079\u0070\u0065" {
			_egba.TypeAttr.UnmarshalXMLAttr(_bfef)
			continue
		}
		if _bfef.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_gfbgc, _ccfb := _e.ParseBool(_bfef.Value)
			if _ccfb != nil {
				return _ccfb
			}
			_egba.PreserveAttr = &_gfbgc
			continue
		}
		if _bfef.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_ecefg, _bffaf := _e.ParseBool(_bfef.Value)
			if _bffaf != nil {
				return _bffaf
			}
			_egba.UserDrawnAttr = &_ecefg
			continue
		}
		if _bfef.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gfcfc, _ecgea := _e.ParseBool(_bfef.Value)
			if _ecgea != nil {
				return _ecgea
			}
			_egba.ShowMasterSpAttr = &_gfcfc
			continue
		}
		if _bfef.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_dgag, _eebf := _e.ParseBool(_bfef.Value)
			if _eebf != nil {
				return _eebf
			}
			_egba.ShowMasterPhAnimAttr = &_dgag
			continue
		}
	}
_ffcb:
	for {
		_cefg, _abde := d.Token()
		if _abde != nil {
			return _abde
		}
		switch _dgged := _cefg.(type) {
		case _b.StartElement:
			switch _dgged.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ggaeg := d.DecodeElement(_egba.CSld, &_dgged); _ggaeg != nil {
					return _ggaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_egba.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _cbae := d.DecodeElement(_egba.ClrMapOvr, &_dgged); _cbae != nil {
					return _cbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_egba.Transition = NewCT_SlideTransition()
				if _bbga := d.DecodeElement(_egba.Transition, &_dgged); _bbga != nil {
					return _bbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_egba.Timing = NewCT_SlideTiming()
				if _gaab := d.DecodeElement(_egba.Timing, &_dgged); _gaab != nil {
					return _gaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_egba.Hf = NewCT_HeaderFooter()
				if _agac := d.DecodeElement(_egba.Hf, &_dgged); _agac != nil {
					return _agac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egba.ExtLst = NewCT_ExtensionListModify()
				if _efaec := d.DecodeElement(_egba.ExtLst, &_dgged); _efaec != nil {
					return _efaec
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _dgged.Name)
				if _eacac := d.Skip(); _eacac != nil {
					return _eacac
				}
			}
		case _b.EndElement:
			break _ffcb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_ebbc := &CT_HandoutMasterIdListEntry{}
	return _ebbc
}
func (_fgbad *ST_TLTimeNodeType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gafd, _fgegbc := d.Token()
	if _fgegbc != nil {
		return _fgegbc
	}
	if _gfddf, _degeg := _gafd.(_b.EndElement); _degeg && _gfddf.Name == start.Name {
		*_fgbad = 1
		return nil
	}
	if _cfdff, _gecbbf := _gafd.(_b.CharData); !_gecbbf {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gafd)
	} else {
		switch string(_cfdff) {
		case "":
			*_fgbad = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_fgbad = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_fgbad = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_fgbad = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_fgbad = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_fgbad = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_fgbad = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_fgbad = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_fgbad = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_fgbad = 9
		}
	}
	_gafd, _fgegbc = d.Token()
	if _fgegbc != nil {
		return _fgegbc
	}
	if _bcgaf, _cecda := _gafd.(_b.EndElement); _cecda && _bcgaf.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gafd)
}
func (_fdfec *CT_TimeNodeListChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdcd := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
		_fdfec.Par = NewCT_TLTimeNodeParallel()
		if _dbffa := d.DecodeElement(_fdfec.Par, &_bdcd); _dbffa != nil {
			return _dbffa
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
		_fdfec.Seq = NewCT_TLTimeNodeSequence()
		if _ebddf := d.DecodeElement(_fdfec.Seq, &_bdcd); _ebddf != nil {
			return _ebddf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
		_fdfec.Excl = NewCT_TLTimeNodeExclusive()
		if _ddgea := d.DecodeElement(_fdfec.Excl, &_bdcd); _ddgea != nil {
			return _ddgea
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
		_fdfec.Anim = NewCT_TLAnimateBehavior()
		if _dcced := d.DecodeElement(_fdfec.Anim, &_bdcd); _dcced != nil {
			return _dcced
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
		_fdfec.AnimClr = NewCT_TLAnimateColorBehavior()
		if _bcdf := d.DecodeElement(_fdfec.AnimClr, &_bdcd); _bcdf != nil {
			return _bcdf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
		_fdfec.AnimEffect = NewCT_TLAnimateEffectBehavior()
		if _dfbcf := d.DecodeElement(_fdfec.AnimEffect, &_bdcd); _dfbcf != nil {
			return _dfbcf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
		_fdfec.AnimMotion = NewCT_TLAnimateMotionBehavior()
		if _fbefe := d.DecodeElement(_fdfec.AnimMotion, &_bdcd); _fbefe != nil {
			return _fbefe
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
		_fdfec.AnimRot = NewCT_TLAnimateRotationBehavior()
		if _eaagc := d.DecodeElement(_fdfec.AnimRot, &_bdcd); _eaagc != nil {
			return _eaagc
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
		_fdfec.AnimScale = NewCT_TLAnimateScaleBehavior()
		if _gdddf := d.DecodeElement(_fdfec.AnimScale, &_bdcd); _gdddf != nil {
			return _gdddf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
		_fdfec.Cmd = NewCT_TLCommandBehavior()
		if _gdbef := d.DecodeElement(_fdfec.Cmd, &_bdcd); _gdbef != nil {
			return _gdbef
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
		_fdfec.Set = NewCT_TLSetBehavior()
		if _afbad := d.DecodeElement(_fdfec.Set, &_bdcd); _afbad != nil {
			return _afbad
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
		_fdfec.Audio = NewCT_TLMediaNodeAudio()
		if _bgeff := d.DecodeElement(_fdfec.Audio, &_bdcd); _bgeff != nil {
			return _bgeff
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
		_fdfec.Video = NewCT_TLMediaNodeVideo()
		if _dfgac := d.DecodeElement(_fdfec.Video, &_bdcd); _dfgac != nil {
			return _dfgac
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bdcd.Name)
		if _addedc := d.Skip(); _addedc != nil {
			return _addedc
		}
	}
	return nil
}
func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_dbggg := &CT_SideDirectionTransition{}
	return _dbggg
}

// Validate validates the CT_TLIterateDataChoice and its children
func (_agead *CT_TLIterateDataChoice) Validate() error {
	return _agead.ValidateWithPath("\u0043\u0054\u005f\u0054LI\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0043\u0068\u006f\u0069c\u0065")
}

// Validate validates the CT_SplitTransition and its children
func (_eaaa *CT_SplitTransition) Validate() error {
	return _eaaa.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func (_gdcd ST_TransitionInOutDirectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdcd.String(), start)
}
func (_adf *CT_Comment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _c.Sprintf("\u0025\u0076", _adf.AuthorIdAttr)})
	if _adf.DtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074"}, Value: _db.FormatDateTime(*_adf.DtAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064\u0078"}, Value: _c.Sprintf("\u0025\u0076", _adf.IdxAttr)})
	e.EncodeToken(start)
	_edf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_adf.Pos, _edf)
	_ace := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_f.AddPreserveSpaceAttr(&_ace, _adf.Text)
	e.EncodeElement(_adf.Text, _ace)
	if _adf.ExtLst != nil {
		_eace := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_adf.ExtLst, _eace)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfabb ST_TLTimeNodeRestartType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_accfd := _b.Attr{}
	_accfd.Name = name
	switch _cfabb {
	case ST_TLTimeNodeRestartTypeUnset:
		_accfd.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_accfd.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_accfd.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_accfd.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _accfd, nil
}
func (_dabbb *ST_ViewType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dddgd, _faaaa := d.Token()
	if _faaaa != nil {
		return _faaaa
	}
	if _cggfc, _cgcbc := _dddgd.(_b.EndElement); _cgcbc && _cggfc.Name == start.Name {
		*_dabbb = 1
		return nil
	}
	if _abcbd, _efabe := _dddgd.(_b.CharData); !_efabe {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddgd)
	} else {
		switch string(_abcbd) {
		case "":
			*_dabbb = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_dabbb = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_dabbb = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_dabbb = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_dabbb = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_dabbb = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_dabbb = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_dabbb = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_dabbb = 8
		}
	}
	_dddgd, _faaaa = d.Token()
	if _faaaa != nil {
		return _faaaa
	}
	if _afafe, _gbdbab := _dddgd.(_b.EndElement); _gbdbab && _afafe.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddgd)
}
func (_gedf *ST_PlaceholderType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcab, _gabgc := d.Token()
	if _gabgc != nil {
		return _gabgc
	}
	if _ddced, _aeedd := _gcab.(_b.EndElement); _aeedd && _ddced.Name == start.Name {
		*_gedf = 1
		return nil
	}
	if _adeff, _cagdb := _gcab.(_b.CharData); !_cagdb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcab)
	} else {
		switch string(_adeff) {
		case "":
			*_gedf = 0
		case "\u0074\u0069\u0074l\u0065":
			*_gedf = 1
		case "\u0062\u006f\u0064\u0079":
			*_gedf = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_gedf = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_gedf = 4
		case "\u0064\u0074":
			*_gedf = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_gedf = 6
		case "\u0066\u0074\u0072":
			*_gedf = 7
		case "\u0068\u0064\u0072":
			*_gedf = 8
		case "\u006f\u0062\u006a":
			*_gedf = 9
		case "\u0063\u0068\u0061r\u0074":
			*_gedf = 10
		case "\u0074\u0062\u006c":
			*_gedf = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_gedf = 12
		case "\u0064\u0067\u006d":
			*_gedf = 13
		case "\u006d\u0065\u0064i\u0061":
			*_gedf = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_gedf = 15
		case "\u0070\u0069\u0063":
			*_gedf = 16
		}
	}
	_gcab, _gabgc = d.Token()
	if _gabgc != nil {
		return _gabgc
	}
	if _cbecb, _dgbc := _gcab.(_b.EndElement); _dgbc && _cbecb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcab)
}

// Validate validates the CT_NormalViewPortion and its children
func (_cbga *CT_NormalViewPortion) Validate() error {
	return _cbga.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}

// Validate validates the CT_TLOleChartTargetElement and its children
func (_egdff *CT_TLOleChartTargetElement) Validate() error {
	return _egdff.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}
func (_dcbe ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _dcbe {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcbe))
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_bde *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _cfg := _bde.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cfg != nil {
		return _cfg
	}
	if _geaa := _bde.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _geaa != nil {
		return _geaa
	}
	if _fee := _bde.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _fee != nil {
		return _fee
	}
	return nil
}

// Validate validates the CT_StringTag and its children
func (_ddcdg *CT_StringTag) Validate() error {
	return _ddcdg.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}
func NewCT_SplitTransition() *CT_SplitTransition { _ccef := &CT_SplitTransition{}; return _ccef }
func (_ggee *CT_TLAnimateColorBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggee.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_acea, _cdacb := _ggee.ClrSpcAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _cdacb != nil {
			return _cdacb
		}
		start.Attr = append(start.Attr, _acea)
	}
	if _ggee.DirAttr != ST_TLAnimateColorDirectionUnset {
		_eaeb, _bcea := _ggee.DirAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0069\u0072"})
		if _bcea != nil {
			return _bcea
		}
		start.Attr = append(start.Attr, _eaeb)
	}
	e.EncodeToken(start)
	_fgef := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ggee.CBhvr, _fgef)
	if _ggee.By != nil {
		_bfafc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_ggee.By, _bfafc)
	}
	if _ggee.From != nil {
		_febeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_ggee.From, _febeb)
	}
	if _ggee.To != nil {
		_dgagb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_ggee.To, _dgagb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgb *CT_CommentAuthor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", _bgb.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _c.Sprintf("\u0025\u0076", _bgb.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _c.Sprintf("\u0025\u0076", _bgb.InitialsAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _c.Sprintf("\u0025\u0076", _bgb.LastIdxAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _c.Sprintf("\u0025\u0076", _bgb.ClrIdxAttr)})
	e.EncodeToken(start)
	if _bgb.ExtLst != nil {
		_aadff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgb.ExtLst, _aadff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gebc *CT_ExtensionListModify) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gebc.ModAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u0064"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gebc.ModAttr))})
	}
	e.EncodeToken(start)
	if _gebc.Ext != nil {
		_fcdd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _dcc := range _gebc.Ext {
			e.EncodeElement(_dcc, _fcdd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbcbg ST_TLDiagramBuildType) Validate() error { return _dbcbg.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_gdebe *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TLTimeCondition and its children
func (_bbaa *CT_TLTimeCondition) Validate() error {
	return _bbaa.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_TLIterateDataChoice and its children, prefixing error messages with path
func (_decffc *CT_TLIterateDataChoice) ValidateWithPath(path string) error {
	if _decffc.TmAbs != nil {
		if _ffdad := _decffc.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _ffdad != nil {
			return _ffdad
		}
	}
	if _decffc.TmPct != nil {
		if _gabb := _decffc.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _gabb != nil {
			return _gabb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_fbga *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _cbee, _geeg := range _fbga.Ext {
		if _affd := _geeg.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cbee)); _affd != nil {
			return _affd
		}
	}
	return nil
}
func (_ggdf *CT_GraphicalObjectFrame) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggdf.BwModeAttr != _d.ST_BlackWhiteModeUnset {
		_cgga, _cdeg := _ggdf.BwModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u003a\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cdeg != nil {
			return _cdeg
		}
		start.Attr = append(start.Attr, _cgga)
	}
	e.EncodeToken(start)
	_adecg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_ggdf.NvGraphicFramePr, _adecg)
	_dgc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_ggdf.Xfrm, _dgc)
	_agec := _b.StartElement{Name: _b.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	_agec.Attr = append(_agec.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	e.EncodeElement(_ggdf.Graphic, _agec)
	if _ggdf.ExtLst != nil {
		_cecd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggdf.ExtLst, _cecd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLTextTargetElement and its children
func (_baggg *CT_TLTextTargetElement) Validate() error {
	return _baggg.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_dbfb *CT_GroupShapeNonVisual) Validate() error {
	return _dbfb.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}

// Validate validates the CmLst and its children
func (_gadde *CmLst) Validate() error { return _gadde.ValidateWithPath("\u0043\u006d\u004cs\u0074") }

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

func (_cfecb ST_TLOleChartBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfecb.String(), start)
}
func (_gbdag ST_PlaceholderSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfbf := _b.Attr{}
	_bfbf.Name = name
	switch _gbdag {
	case ST_PlaceholderSizeUnset:
		_bfbf.Value = ""
	case ST_PlaceholderSizeFull:
		_bfbf.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_bfbf.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_bfbf.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _bfbf, nil
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_fdagf *CT_Picture) ValidateWithPath(path string) error {
	if _fefaa := _fdagf.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _fefaa != nil {
		return _fefaa
	}
	if _deae := _fdagf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _deae != nil {
		return _deae
	}
	if _efacd := _fdagf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _efacd != nil {
		return _efacd
	}
	if _fdagf.Style != nil {
		if _cdceb := _fdagf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _cdceb != nil {
			return _cdceb
		}
	}
	if _fdagf.ExtLst != nil {
		if _dfaff := _fdagf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfaff != nil {
			return _dfaff
		}
	}
	return nil
}

type EG_Background struct {
	BackgroundChoice *EG_BackgroundChoice
}

func (_eadcb ST_TLChartSubelementType) String() string {
	switch _eadcb {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}
func NewCT_TLTimeConditionChoice() *CT_TLTimeConditionChoice {
	_dbdd := &CT_TLTimeConditionChoice{}
	return _dbdd
}

// Validate validates the CT_TLTimeConditionList and its children
func (_facbf *CT_TLTimeConditionList) Validate() error {
	return _facbf.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}
func (_cbafb *ST_PrintColorMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdccg, _beeda := d.Token()
	if _beeda != nil {
		return _beeda
	}
	if _ccaff, _dgfdd := _cdccg.(_b.EndElement); _dgfdd && _ccaff.Name == start.Name {
		*_cbafb = 1
		return nil
	}
	if _daaef, _cfcgg := _cdccg.(_b.CharData); !_cfcgg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdccg)
	} else {
		switch string(_daaef) {
		case "":
			*_cbafb = 0
		case "\u0062\u0077":
			*_cbafb = 1
		case "\u0067\u0072\u0061\u0079":
			*_cbafb = 2
		case "\u0063\u006c\u0072":
			*_cbafb = 3
		}
	}
	_cdccg, _beeda = d.Token()
	if _beeda != nil {
		return _beeda
	}
	if _dabff, _abagb := _cdccg.(_b.EndElement); _abagb && _dabff.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdccg)
}

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}

func (_cfeg *ST_TransitionEightDirectionType) Validate() error { return _cfeg.ValidateWithPath("") }

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_dfgd *CT_TLAnimateEffectBehavior) Validate() error {
	return _dfgd.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}
func NewCT_CustomerData() *CT_CustomerData {
	_cbf := &CT_CustomerData{}
	return _cbf
}
func (_febgc ST_TLOleChartBuildType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adefd := _b.Attr{}
	_adefd.Name = name
	switch _febgc {
	case ST_TLOleChartBuildTypeUnset:
		_adefd.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_adefd.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_adefd.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_adefd.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_adefd.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_adefd.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _adefd, nil
}
func (_fbcecf *ST_TLParaBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baeceb, _eabbeb := d.Token()
	if _eabbeb != nil {
		return _eabbeb
	}
	if _dgbbaa, _ggcde := _baeceb.(_b.EndElement); _ggcde && _dgbbaa.Name == start.Name {
		*_fbcecf = 1
		return nil
	}
	if _dfdda, _bgbbad := _baeceb.(_b.CharData); !_bgbbad {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baeceb)
	} else {
		switch string(_dfdda) {
		case "":
			*_fbcecf = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_fbcecf = 1
		case "\u0070":
			*_fbcecf = 2
		case "\u0063\u0075\u0073\u0074":
			*_fbcecf = 3
		case "\u0077\u0068\u006fl\u0065":
			*_fbcecf = 4
		}
	}
	_baeceb, _eabbeb = d.Token()
	if _eabbeb != nil {
		return _eabbeb
	}
	if _cbgaga, _bbegc := _baeceb.(_b.EndElement); _bbegc && _cbgaga.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baeceb)
}
func (_gaada *ST_TLBehaviorTransformType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcde, _bbaaa := d.Token()
	if _bbaaa != nil {
		return _bbaaa
	}
	if _gacbb, _ecdcf := _fcde.(_b.EndElement); _ecdcf && _gacbb.Name == start.Name {
		*_gaada = 1
		return nil
	}
	if _gade, _degd := _fcde.(_b.CharData); !_degd {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcde)
	} else {
		switch string(_gade) {
		case "":
			*_gaada = 0
		case "\u0070\u0074":
			*_gaada = 1
		case "\u0069\u006d\u0067":
			*_gaada = 2
		}
	}
	_fcde, _bbaaa = d.Token()
	if _bbaaa != nil {
		return _bbaaa
	}
	if _bdfbgb, _eggec := _fcde.(_b.EndElement); _eggec && _bdfbgb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcde)
}
func (_accd ST_TLPreviousActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aabece := _b.Attr{}
	_aabece.Name = name
	switch _accd {
	case ST_TLPreviousActionTypeUnset:
		_aabece.Value = ""
	case ST_TLPreviousActionTypeNone:
		_aabece.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_aabece.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _aabece, nil
}
func (_edab *CT_GroupShapeChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bddbc := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
		_edab.Sp = NewCT_Shape()
		if _bagb := d.DecodeElement(_edab.Sp, &_bddbc); _bagb != nil {
			return _bagb
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
		_edab.GrpSp = NewCT_GroupShape()
		if _facd := d.DecodeElement(_edab.GrpSp, &_bddbc); _facd != nil {
			return _facd
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
		_edab.GraphicFrame = NewCT_GraphicalObjectFrame()
		if _eeee := d.DecodeElement(_edab.GraphicFrame, &_bddbc); _eeee != nil {
			return _eeee
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
		_edab.CxnSp = NewCT_Connector()
		if _afae := d.DecodeElement(_edab.CxnSp, &_bddbc); _afae != nil {
			return _afae
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
		_edab.Pic = NewCT_Picture()
		if _bada := d.DecodeElement(_edab.Pic, &_bddbc); _bada != nil {
			return _bada
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
		_edab.ContentPart = NewCT_Rel()
		if _efdg := d.DecodeElement(_edab.ContentPart, &_bddbc); _efdg != nil {
			return _efdg
		}
	default:
		_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bddbc.Name)
		if _bgad := d.Skip(); _bgad != nil {
			return _bgad
		}
	}
	return nil
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

func (_bbea *CT_OleObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbea.OleObjectChoice = NewCT_OleObjectChoice()
	for _, _ccbf := range start.Attr {
		if _ccbf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ccbf.Name.Local == "\u0069\u0064" {
			_gbgg := _ccbf.Value
			_bbea.IdAttr = &_gbgg
			continue
		}
		if _ccbf.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_ffggf := _ccbf.Value
			_bbea.ProgIdAttr = &_ffggf
			continue
		}
		if _ccbf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gcgg := _ccbf.Value
			_bbea.SpidAttr = &_gcgg
			continue
		}
		if _ccbf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gdgbc := _ccbf.Value
			_bbea.NameAttr = &_gdgbc
			continue
		}
		if _ccbf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_cbeda, _edbae := _e.ParseBool(_ccbf.Value)
			if _edbae != nil {
				return _edbae
			}
			_bbea.ShowAsIconAttr = &_cbeda
			continue
		}
		if _ccbf.Name.Local == "\u0069\u006d\u0067\u0057" {
			_adfag, _fbfe := _e.ParseInt(_ccbf.Value, 10, 32)
			if _fbfe != nil {
				return _fbfe
			}
			_aege := int32(_adfag)
			_bbea.ImgWAttr = &_aege
			continue
		}
		if _ccbf.Name.Local == "\u0069\u006d\u0067\u0048" {
			_ffcc, _fgbga := _e.ParseInt(_ccbf.Value, 10, 32)
			if _fgbga != nil {
				return _fgbga
			}
			_abfa := int32(_ffcc)
			_bbea.ImgHAttr = &_abfa
			continue
		}
	}
_egfd:
	for {
		_fgfcd, _fceeb := d.Token()
		if _fceeb != nil {
			return _fceeb
		}
		switch _cddeb := _fgfcd.(type) {
		case _b.StartElement:
			switch _cddeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_bbea.OleObjectChoice = NewCT_OleObjectChoice()
				if _bgeae := d.DecodeElement(&_bbea.OleObjectChoice.Embed, &_cddeb); _bgeae != nil {
					return _bgeae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_bbea.OleObjectChoice = NewCT_OleObjectChoice()
				if _baed := d.DecodeElement(&_bbea.OleObjectChoice.Link, &_cddeb); _baed != nil {
					return _baed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bbea.Pic = NewCT_Picture()
				if _ecge := d.DecodeElement(_bbea.Pic, &_cddeb); _ecge != nil {
					return _ecge
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _cddeb.Name)
				if _gad := d.Skip(); _gad != nil {
					return _gad
				}
			}
		case _b.EndElement:
			break _egfd
		case _b.CharData:
		}
	}
	return nil
}

type ST_PrintWhat byte

func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId {
	_bbdf := &CT_EmbeddedFontDataId{}
	return _bbdf
}

// Validate validates the CT_CommonSlideData and its children
func (_agf *CT_CommonSlideData) Validate() error {
	return _agf.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}
func (_feage ST_SlideSizeType) Validate() error { return _feage.ValidateWithPath("") }
func (_fa *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fa.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fa.IsPhotoAttr))})
	}
	if _fa.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fa.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _fa.Ph != nil {
		_fba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_fa.Ph, _fba)
	}
	_fa.MediaChoice.MarshalXML(e, _b.StartElement{})
	if _fa.CustDataLst != nil {
		_de := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_fa.CustDataLst, _de)
	}
	if _fa.ExtLst != nil {
		_efb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fa.ExtLst, _efb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cggfd *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cggfd = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_cggfd = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_cggfd = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_cggfd = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_cggfd = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_cggfd = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_cggfd = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_cggfd = 7
	}
	return nil
}

// Validate validates the CT_PictureNonVisual and its children
func (_cfdb *CT_PictureNonVisual) Validate() error {
	return _cfdb.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

// Validate validates the CT_SlideMasterIdList and its children
func (_cedaf *CT_SlideMasterIdList) Validate() error {
	return _cedaf.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}
func (_ebggf *CT_TLByAnimateColorTransformChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agcd := start
	switch start.Name {
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
		_ebggf.Rgb = NewCT_TLByRgbColorTransform()
		if _eebgf := d.DecodeElement(_ebggf.Rgb, &_agcd); _eebgf != nil {
			return _eebgf
		}
	case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
		_ebggf.Hsl = NewCT_TLByHslColorTransform()
		if _ebcfg := d.DecodeElement(_ebggf.Hsl, &_agcd); _ebcfg != nil {
			return _ebcfg
		}
	default:
		_ea.Log.Debug("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006ei\u006d\u0061\u0074\u0065\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d\u0043\u0068\u006f\u0069\u0063\u0065\u0020%\u0076", _agcd.Name)
		if _gddec := d.Skip(); _gddec != nil {
			return _gddec
		}
	}
	return nil
}
func NewCT_TimeNodeListChoice() *CT_TimeNodeListChoice {
	_abbfc := &CT_TimeNodeListChoice{}
	return _abbfc
}

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

func (_egef *EG_TopLevelSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egef.ClrMap = _d.NewCT_ColorMapping()
_agdef:
	for {
		_cdfed, _dcbce := d.Token()
		if _dcbce != nil {
			return _dcbce
		}
		switch _ddffg := _cdfed.(type) {
		case _b.StartElement:
			switch _ddffg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _fgaa := d.DecodeElement(_egef.ClrMap, &_ddffg); _fgaa != nil {
					return _fgaa
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _ddffg.Name)
				if _gecbdb := d.Skip(); _gecbdb != nil {
					return _gecbdb
				}
			}
		case _b.EndElement:
			break _agdef
		case _b.CharData:
		}
	}
	return nil
}

type ST_WebColorType byte

func (_affb *CT_EightDirectionTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _affb.DirAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0072"}, Value: _c.Sprintf("\u0025\u0076", *_affb.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcbca *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agebc, _afffe := d.Token()
	if _afffe != nil {
		return _afffe
	}
	if _cecea, _afag := _agebc.(_b.EndElement); _afag && _cecea.Name == start.Name {
		*_gcbca = 1
		return nil
	}
	if _eccd, _eefef := _agebc.(_b.CharData); !_eefef {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agebc)
	} else {
		switch string(_eccd) {
		case "":
			*_gcbca = 0
		case "\u0062\u0061\u0073\u0065":
			*_gcbca = 1
		case "\u0073\u0075\u006d":
			*_gcbca = 2
		case "\u0072\u0065\u0070\u006c":
			*_gcbca = 3
		case "\u006d\u0075\u006c\u0074":
			*_gcbca = 4
		case "\u006e\u006f\u006e\u0065":
			*_gcbca = 5
		}
	}
	_agebc, _afffe = d.Token()
	if _afffe != nil {
		return _afffe
	}
	if _fbbfb, _ebegc := _agebc.(_b.EndElement); _ebegc && _fbbfb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agebc)
}

type ST_TLTimeNodeRestartType byte

func (_fbaga *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbaga = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_fbaga = 1
	case "\u006f\u006e\u0045n\u0064":
		*_fbaga = 2
	case "\u0062\u0065\u0067i\u006e":
		*_fbaga = 3
	case "\u0065\u006e\u0064":
		*_fbaga = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_fbaga = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_fbaga = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_fbaga = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_fbaga = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_fbaga = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_fbaga = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_fbaga = 11
	}
	return nil
}
func (_cebe *CT_SlideViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cebe.CSldViewPr = NewCT_CommonSlideViewProperties()
_afgda:
	for {
		_fede, _ceebf := d.Token()
		if _ceebf != nil {
			return _ceebf
		}
		switch _febe := _fede.(type) {
		case _b.StartElement:
			switch _febe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _ceefc := d.DecodeElement(_cebe.CSldViewPr, &_febe); _ceefc != nil {
					return _ceefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cebe.ExtLst = NewCT_ExtensionList()
				if _fdead := d.DecodeElement(_cebe.ExtLst, &_febe); _fdead != nil {
					return _fdead
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _febe.Name)
				if _babba := d.Skip(); _babba != nil {
					return _babba
				}
			}
		case _b.EndElement:
			break _afgda
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_egbdde *CT_TLGraphicalObjectBuild) Validate() error {
	return _egbdde.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}

type CT_TLTextTargetElementChoice struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_febgg *TagLst) ValidateWithPath(path string) error {
	if _bbdae := _febgg.CT_TagList.ValidateWithPath(path); _bbdae != nil {
		return _bbdae
	}
	return nil
}

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}

func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_eebba := &CT_TLByHslColorTransform{}
	return _eebba
}

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func (_feafc *CT_TLByAnimateColorTransformChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _feafc.Rgb != nil {
		_ageeb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_feafc.Rgb, _ageeb)
	} else if _feafc.Hsl != nil {
		_bbcc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_feafc.Hsl, _bbcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ececd ST_TLTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ececd.Uint32 != nil {
		e.EncodeToken(_b.CharData(_c.Sprintf("\u0025\u0064", *_ececd.Uint32)))
	}
	if _ececd.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_b.CharData(_ececd.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_b.EndElement{Name: start.Name})
}
func (_fefd *EG_ChildSlide) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ffbg:
	for {
		_cffab, _ecafb := d.Token()
		if _ecafb != nil {
			return _ecafb
		}
		switch _bcga := _cffab.(type) {
		case _b.StartElement:
			switch _bcga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_fefd.ClrMapOvr = _d.NewCT_ColorMappingOverride()
				if _ddedf := d.DecodeElement(_fefd.ClrMapOvr, &_bcga); _ddedf != nil {
					return _ddedf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _bcga.Name)
				if _fcgac := d.Skip(); _fcgac != nil {
					return _fcgac
				}
			}
		case _b.EndElement:
			break _ffbg
		case _b.CharData:
		}
	}
	return nil
}
func (_faebb *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccedfb, _aadea := d.Token()
	if _aadea != nil {
		return _aadea
	}
	if _fffef, _bfdg := _ccedfb.(_b.EndElement); _bfdg && _fffef.Name == start.Name {
		*_faebb = 1
		return nil
	}
	if _dccaf, _eadf := _ccedfb.(_b.CharData); !_eadf {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccedfb)
	} else {
		switch string(_dccaf) {
		case "":
			*_faebb = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_faebb = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_faebb = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_faebb = 3
		}
	}
	_ccedfb, _aadea = d.Token()
	if _aadea != nil {
		return _aadea
	}
	if _cafga, _bbfc := _ccedfb.(_b.EndElement); _bbfc && _cafga.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccedfb)
}
func (_deaad ST_TransitionCornerDirectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcdfd := _b.Attr{}
	_bcdfd.Name = name
	switch _deaad {
	case ST_TransitionCornerDirectionTypeUnset:
		_bcdfd.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_bcdfd.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_bcdfd.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_bcdfd.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_bcdfd.Value = "\u0072\u0064"
	}
	return _bcdfd, nil
}
func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_dacab := &CT_TransitionStartSoundAction{}
	_dacab.Snd = _d.NewCT_EmbeddedWAVAudioFile()
	return _dacab
}
func (_fgfdg *CT_TLAnimateColorBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgfdg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _feaaa := range start.Attr {
		if _feaaa.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_fgfdg.ClrSpcAttr.UnmarshalXMLAttr(_feaaa)
			continue
		}
		if _feaaa.Name.Local == "\u0064\u0069\u0072" {
			_fgfdg.DirAttr.UnmarshalXMLAttr(_feaaa)
			continue
		}
	}
_bfeee:
	for {
		_bafgf, _agede := d.Token()
		if _agede != nil {
			return _agede
		}
		switch _acbeg := _bafgf.(type) {
		case _b.StartElement:
			switch _acbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _bgcb := d.DecodeElement(_fgfdg.CBhvr, &_acbeg); _bgcb != nil {
					return _bgcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_fgfdg.By = NewCT_TLByAnimateColorTransform()
				if _gecbd := d.DecodeElement(_fgfdg.By, &_acbeg); _gecbd != nil {
					return _gecbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_fgfdg.From = _d.NewCT_Color()
				if _gbaff := d.DecodeElement(_fgfdg.From, &_acbeg); _gbaff != nil {
					return _gbaff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_fgfdg.To = _d.NewCT_Color()
				if _daff := d.DecodeElement(_fgfdg.To, &_acbeg); _daff != nil {
					return _daff
				}
			default:
				_ea.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _acbeg.Name)
				if _dafe := d.Skip(); _dafe != nil {
					return _dafe
				}
			}
		case _b.EndElement:
			break _bfeee
		case _b.CharData:
		}
	}
	return nil
}
func (_bddfa *CT_TLSubShapeId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfgeg := range start.Attr {
		if _gfgeg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_cccaef := _gfgeg.Value
			_bddfa.SpidAttr = _cccaef
			continue
		}
	}
	for {
		_fgedb, _fgfge := d.Token()
		if _fgfge != nil {
			return _c.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _fgfge)
		}
		if _cabd, _ccadg := _fgedb.(_b.EndElement); _ccadg && _cabd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_g *AG_ChildSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _g.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_g.ShowMasterSpAttr))})
	}
	if _g.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_g.ShowMasterPhAnimAttr))})
	}
	return nil
}
func (_cebca ST_TLChartSubelementType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ggbcf := _b.Attr{}
	_ggbcf.Name = name
	switch _cebca {
	case ST_TLChartSubelementTypeUnset:
		_ggbcf.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_ggbcf.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_ggbcf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_ggbcf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_ggbcf.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_ggbcf.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _ggbcf, nil
}
func (_aedg *CT_OleObjectChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aedg.Embed != nil {
		_aafe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_aedg.Embed, _aafe)
	} else if _aedg.Link != nil {
		_gfgge := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_aedg.Link, _gfgge)
	}
	return nil
}
func (_eegea *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eegea = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_eegea = 1
	}
	return nil
}
func (_dfged ST_Direction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfged.String(), start)
}

// Validate validates the CT_TLCommonBehaviorData and its children
func (_dbefg *CT_TLCommonBehaviorData) Validate() error {
	return _dbefg.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_caab *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _acabg := _caab.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _acabg != nil {
		return _acabg
	}
	return nil
}
func (_bgbbc ST_SlideLayoutType) Validate() error { return _bgbbc.ValidateWithPath("") }
func (_fbdfb *CT_TransitionStartSoundAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbdfb.LoopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fbdfb.LoopAttr))})
	}
	e.EncodeToken(start)
	_daafe := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_fbdfb.Snd, _daafe)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_caged ST_TLTimeNodePresetClassType) String() string {
	switch _caged {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}

type CT_EmbeddedFontDataId struct{ IdAttr string }

func (_ceea *CT_TLAnimVariantBooleanVal) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(_ceea.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}
type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_d.ST_Coordinate32
}
type SldSyncPr struct{ CT_SlideSyncProperties }

func (_fcggg *CT_TLTimeAnimateValue) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcggg.TmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006d"}, Value: _c.Sprintf("\u0025\u0076", *_fcggg.TmAttr)})
	}
	if _fcggg.FmlaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _c.Sprintf("\u0025\u0076", *_fcggg.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _fcggg.Val != nil {
		_ggebc := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_fcggg.Val, _ggebc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eafcc ST_TLTimeNodeType) String() string {
	switch _eafcc {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}

// Validate validates the CT_HeaderFooter and its children
func (_gcbc *CT_HeaderFooter) Validate() error {
	return _gcbc.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}
func (_eebbad ST_PrintColorMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdfca := _b.Attr{}
	_cdfca.Name = name
	switch _eebbad {
	case ST_PrintColorModeUnset:
		_cdfca.Value = ""
	case ST_PrintColorModeBw:
		_cdfca.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_cdfca.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_cdfca.Value = "\u0063\u006c\u0072"
	}
	return _cdfca, nil
}

// Validate validates the CT_OleObjectEmbed and its children
func (_dfgfc *CT_OleObjectEmbed) Validate() error {
	return _dfgfc.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_cffc *CT_OleObject) ValidateWithPath(path string) error {
	if _eeg := _cffc.OleObjectChoice.ValidateWithPath(path + "\u002f\u004fl\u0065\u004f\u0062j\u0065\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065"); _eeg != nil {
		return _eeg
	}
	if _cffc.Pic != nil {
		if _ddae := _cffc.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _ddae != nil {
			return _ddae
		}
	}
	if _cffc.ImgWAttr != nil {
		if *_cffc.ImgWAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cffc.ImgWAttr)
		}
	}
	if _cffc.ImgHAttr != nil {
		if *_cffc.ImgHAttr < 0 {
			return _c.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cffc.ImgHAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_geedg *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _feegc := _geedg.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _feegc != nil {
		return _feegc
	}
	if _geedg.ExtLst != nil {
		if _bffc := _geedg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bffc != nil {
			return _bffc
		}
	}
	return nil
}
func (_cafc *CT_Placeholder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eggd := range start.Attr {
		if _eggd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cafc.TypeAttr.UnmarshalXMLAttr(_eggd)
			continue
		}
		if _eggd.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_cafc.OrientAttr.UnmarshalXMLAttr(_eggd)
			continue
		}
		if _eggd.Name.Local == "\u0073\u007a" {
			_cafc.SzAttr.UnmarshalXMLAttr(_eggd)
			continue
		}
		if _eggd.Name.Local == "\u0069\u0064\u0078" {
			_babb, _ggag := _e.ParseUint(_eggd.Value, 10, 32)
			if _ggag != nil {
				return _ggag
			}
			_bgbb := uint32(_babb)
			_cafc.IdxAttr = &_bgbb
			continue
		}
		if _eggd.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_ddbef, _edge := _e.ParseBool(_eggd.Value)
			if _edge != nil {
				return _edge
			}
			_cafc.HasCustomPromptAttr = &_ddbef
			continue
		}
	}
_gcfef:
	for {
		_dcgba, _bdbgc := d.Token()
		if _bdbgc != nil {
			return _bdbgc
		}
		switch _eddba := _dcgba.(type) {
		case _b.StartElement:
			switch _eddba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cafc.ExtLst = NewCT_ExtensionListModify()
				if _fcgb := d.DecodeElement(_cafc.ExtLst, &_eddba); _fcgb != nil {
					return _fcgb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _eddba.Name)
				if _gacga := d.Skip(); _gacga != nil {
					return _gacga
				}
			}
		case _b.EndElement:
			break _gcfef
		case _b.CharData:
		}
	}
	return nil
}
func (_cdbcd *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adce := range start.Attr {
		if _adce.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _adce.Name.Local == "\u0069\u0064" || _adce.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _adce.Name.Local == "\u0069\u0064" {
			_fbbd := _adce.Value
			_cdbcd.IdAttr = _fbbd
			continue
		}
	}
_afbe:
	for {
		_eggg, _gbca := d.Token()
		if _gbca != nil {
			return _gbca
		}
		switch _agaef := _eggg.(type) {
		case _b.StartElement:
			switch _agaef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdbcd.ExtLst = NewCT_ExtensionList()
				if _gfcb := d.DecodeElement(_cdbcd.ExtLst, &_agaef); _gfcb != nil {
					return _gfcb
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _agaef.Name)
				if _facg := d.Skip(); _facg != nil {
					return _facg
				}
			}
		case _b.EndElement:
			break _afbe
		case _b.CharData:
		}
	}
	return nil
}

type ST_TLAnimateBehaviorValueType byte

func (_aeabag ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _aeabag {
	case 0, 1, 2, 3, 4:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aeabag))
	}
	return nil
}
func (_efed ST_TLTime) String() string {
	if _efed.Uint32 != nil {
		return _c.Sprintf("\u0025\u0076", *_efed.Uint32)
	}
	if _efed.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _efed.ST_TLTimeIndefinite.String()
	}
	return ""
}
func (_cecbfe *ST_PrintWhat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_effce, _fcfaed := d.Token()
	if _fcfaed != nil {
		return _fcfaed
	}
	if _bbcbf, _bfdcd := _effce.(_b.EndElement); _bfdcd && _bbcbf.Name == start.Name {
		*_cecbfe = 1
		return nil
	}
	if _gdddg, _cbdab := _effce.(_b.CharData); !_cbdab {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _effce)
	} else {
		switch string(_gdddg) {
		case "":
			*_cecbfe = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_cecbfe = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_cecbfe = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_cecbfe = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_cecbfe = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_cecbfe = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_cecbfe = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_cecbfe = 7
		case "\u006e\u006f\u0074e\u0073":
			*_cecbfe = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_cecbfe = 9
		}
	}
	_effce, _fcfaed = d.Token()
	if _fcfaed != nil {
		return _fcfaed
	}
	if _dggadg, _bfffe := _effce.(_b.EndElement); _bfffe && _dggadg.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _effce)
}
func (_cdggg ST_TLTimeAnimateValueTime) String() string {
	if _cdggg.ST_PositiveFixedPercentage != nil {
		return _cdggg.ST_PositiveFixedPercentage.String()
	}
	if _cdggg.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _cdggg.ST_TLTimeIndefinite.String()
	}
	return ""
}
func (_gbfb *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gbfb = 0
	case "\u0063\u0077":
		*_gbfb = 1
	case "\u0063\u0063\u0077":
		*_gbfb = 2
	}
	return nil
}
func (_bdcac *CT_TLCommonMediaNodeData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdcac.CTn = NewCT_TLCommonTimeNodeData()
	_bdcac.TgtEl = NewCT_TLTimeTargetElement()
	for _, _ccfda := range start.Attr {
		if _ccfda.Name.Local == "\u0076\u006f\u006c" {
			_afeaa, _egbcf := ParseUnionST_PositiveFixedPercentage(_ccfda.Value)
			if _egbcf != nil {
				return _egbcf
			}
			_bdcac.VolAttr = &_afeaa
			continue
		}
		if _ccfda.Name.Local == "\u006d\u0075\u0074\u0065" {
			_aagb, _adcge := _e.ParseBool(_ccfda.Value)
			if _adcge != nil {
				return _adcge
			}
			_bdcac.MuteAttr = &_aagb
			continue
		}
		if _ccfda.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_bfadd, _bgbbd := _e.ParseUint(_ccfda.Value, 10, 32)
			if _bgbbd != nil {
				return _bgbbd
			}
			_bbbced := uint32(_bfadd)
			_bdcac.NumSldAttr = &_bbbced
			continue
		}
		if _ccfda.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_bcfe, _ddafe := _e.ParseBool(_ccfda.Value)
			if _ddafe != nil {
				return _ddafe
			}
			_bdcac.ShowWhenStoppedAttr = &_bcfe
			continue
		}
	}
_gaecf:
	for {
		_ebfb, _eebga := d.Token()
		if _eebga != nil {
			return _eebga
		}
		switch _cbgfe := _ebfb.(type) {
		case _b.StartElement:
			switch _cbgfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _aggeg := d.DecodeElement(_bdcac.CTn, &_cbgfe); _aggeg != nil {
					return _aggeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _cebg := d.DecodeElement(_bdcac.TgtEl, &_cbgfe); _cebg != nil {
					return _cebg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _cbgfe.Name)
				if _cceff := d.Skip(); _cceff != nil {
					return _cceff
				}
			}
		case _b.EndElement:
			break _gaecf
		case _b.CharData:
		}
	}
	return nil
}
func (_ecgc ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _ecgc {
	case 0, 1, 2:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecgc))
	}
	return nil
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_dcfa *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _dcfa.SldAll != nil {
		if _fgfc := _dcfa.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _fgfc != nil {
			return _fgfc
		}
	}
	if _dcfa.SldRg != nil {
		if _dgfc := _dcfa.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _dgfc != nil {
			return _dgfc
		}
	}
	if _dcfa.CustShow != nil {
		if _agge := _dcfa.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _agge != nil {
			return _agge
		}
	}
	if _dcfa.ExtLst != nil {
		if _bfed := _dcfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfed != nil {
			return _bfed
		}
	}
	return nil
}

// Validate validates the OleObj and its children
func (_dcgga *OleObj) Validate() error {
	return _dcgga.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}

type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_gcaag *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _ebddc := _gcaag.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _ebddc != nil {
		return _ebddc
	}
	if _ffbe := _gcaag.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _ffbe != nil {
		return _ffbe
	}
	if _abga := _gcaag.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _abga != nil {
		return _abga
	}
	if _gcaag.By != nil {
		if _fdgd := _gcaag.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _fdgd != nil {
			return _fdgd
		}
	}
	if _gcaag.From != nil {
		if _eede := _gcaag.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _eede != nil {
			return _eede
		}
	}
	if _gcaag.To != nil {
		if _bfffb := _gcaag.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bfffb != nil {
			return _bfffb
		}
	}
	if _gcaag.RCtr != nil {
		if _dggef := _gcaag.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _dggef != nil {
			return _dggef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_fbaa *CT_PrintProperties) ValidateWithPath(path string) error {
	if _decf := _fbaa.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _decf != nil {
		return _decf
	}
	if _fbce := _fbaa.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _fbce != nil {
		return _fbce
	}
	if _fbaa.ExtLst != nil {
		if _caef := _fbaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _caef != nil {
			return _caef
		}
	}
	return nil
}
func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_efafe := &CT_TLTimeConditionList{}
	return _efafe
}
func (_gdcda *ST_WebScreenSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cefgg, _edcbd := d.Token()
	if _edcbd != nil {
		return _edcbd
	}
	if _bagfd, _gbgb := _cefgg.(_b.EndElement); _gbgb && _bagfd.Name == start.Name {
		*_gdcda = 1
		return nil
	}
	if _dbdbg, _ffdba := _cefgg.(_b.CharData); !_ffdba {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cefgg)
	} else {
		switch string(_dbdbg) {
		case "":
			*_gdcda = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_gdcda = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_gdcda = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_gdcda = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_gdcda = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_gdcda = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_gdcda = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_gdcda = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_gdcda = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_gdcda = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_gdcda = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_gdcda = 11
		}
	}
	_cefgg, _edcbd = d.Token()
	if _edcbd != nil {
		return _edcbd
	}
	if _egfe, _caefdb := _cefgg.(_b.EndElement); _caefdb && _egfe.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cefgg)
}
func (_fcaf ST_TLTriggerEvent) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcaf.String(), start)
}

type ST_TLTriggerRuntimeNode byte

func (_afbbf *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afbbf = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_afbbf = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_afbbf = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_afbbf = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_afbbf = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_afbbf = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_afbbf = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_afbbf = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_afbbf = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_afbbf = 9
	}
	return nil
}
func (_ggeeg *EG_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gcdec:
	for {
		_bbeac, _fabfg := d.Token()
		if _fabfg != nil {
			return _fabfg
		}
		switch _cfabg := _bbeac.(type) {
		case _b.StartElement:
			switch _cfabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_egegd := NewCT_Extension()
				if _baaba := d.DecodeElement(_egegd, &_cfabg); _baaba != nil {
					return _baaba
				}
				_ggeeg.Ext = append(_ggeeg.Ext, _egegd)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _cfabg.Name)
				if _fdbfd := d.Skip(); _fdbfd != nil {
					return _fdbfd
				}
			}
		case _b.EndElement:
			break _gcdec
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Comment and its children
func (_ecbe *CT_Comment) Validate() error {
	return _ecbe.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}
func (_fdbd *CT_Shape) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdbd.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_fdbd.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_gfcbd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fdbd.NvSpPr, _gfcbd)
	_edacb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fdbd.SpPr, _edacb)
	if _fdbd.Style != nil {
		_bdbe := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fdbd.Style, _bdbe)
	}
	if _fdbd.TxBody != nil {
		_gggg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_fdbd.TxBody, _gggg)
	}
	if _fdbd.ExtLst != nil {
		_ffca := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdbd.ExtLst, _ffca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

func (_baea *CT_ShowInfoKiosk) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aabec := range start.Attr {
		if _aabec.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_cgaf, _bdba := _e.ParseUint(_aabec.Value, 10, 32)
			if _bdba != nil {
				return _bdba
			}
			_ageg := uint32(_cgaf)
			_baea.RestartAttr = &_ageg
			continue
		}
	}
	for {
		_afff, _ffdaa := d.Token()
		if _ffdaa != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _ffdaa)
		}
		if _cadf, _ffae := _afff.(_b.EndElement); _ffae && _cadf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_cfde := &EG_TopLevelSlide{}
	_cfde.ClrMap = _d.NewCT_ColorMapping()
	return _cfde
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_efacdb *Notes) ValidateWithPath(path string) error {
	if _gefc := _efacdb.CT_NotesSlide.ValidateWithPath(path); _gefc != nil {
		return _gefc
	}
	return nil
}
func (_dedgf *ST_SlideLayoutType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcbfg, _cdacbd := d.Token()
	if _cdacbd != nil {
		return _cdacbd
	}
	if _ceeed, _eaaac := _gcbfg.(_b.EndElement); _eaaac && _ceeed.Name == start.Name {
		*_dedgf = 1
		return nil
	}
	if _ccbda, _bfffg := _gcbfg.(_b.CharData); !_bfffg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcbfg)
	} else {
		switch string(_ccbda) {
		case "":
			*_dedgf = 0
		case "\u0074\u0069\u0074l\u0065":
			*_dedgf = 1
		case "\u0074\u0078":
			*_dedgf = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_dedgf = 3
		case "\u0074\u0062\u006c":
			*_dedgf = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_dedgf = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_dedgf = 6
		case "\u0064\u0067\u006d":
			*_dedgf = 7
		case "\u0063\u0068\u0061r\u0074":
			*_dedgf = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_dedgf = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_dedgf = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_dedgf = 11
		case "\u0062\u006c\u0061n\u006b":
			*_dedgf = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_dedgf = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_dedgf = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_dedgf = 15
		case "\u006f\u0062\u006a":
			*_dedgf = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_dedgf = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_dedgf = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_dedgf = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_dedgf = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dedgf = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_dedgf = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_dedgf = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_dedgf = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_dedgf = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_dedgf = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_dedgf = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_dedgf = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_dedgf = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dedgf = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_dedgf = 31
		case "\u0063\u0075\u0073\u0074":
			*_dedgf = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_dedgf = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_dedgf = 34
		case "\u006f\u0062\u006aT\u0078":
			*_dedgf = 35
		case "\u0070\u0069\u0063T\u0078":
			*_dedgf = 36
		}
	}
	_gcbfg, _cdacbd = d.Token()
	if _cdacbd != nil {
		return _cdacbd
	}
	if _dcgd, _becge := _gcbfg.(_b.EndElement); _becge && _dcgd.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcbfg)
}
func (_cgabe *ST_TLDiagramBuildType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daegb, _ecffd := d.Token()
	if _ecffd != nil {
		return _ecffd
	}
	if _ebcag, _febbd := _daegb.(_b.EndElement); _febbd && _ebcag.Name == start.Name {
		*_cgabe = 1
		return nil
	}
	if _adfgc, _ccddf := _daegb.(_b.CharData); !_ccddf {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _daegb)
	} else {
		switch string(_adfgc) {
		case "":
			*_cgabe = 0
		case "\u0077\u0068\u006fl\u0065":
			*_cgabe = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_cgabe = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_cgabe = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_cgabe = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_cgabe = 5
		case "\u0063\u0077":
			*_cgabe = 6
		case "\u0063\u0077\u0049\u006e":
			*_cgabe = 7
		case "\u0063\u0077\u004fu\u0074":
			*_cgabe = 8
		case "\u0063\u0063\u0077":
			*_cgabe = 9
		case "\u0063\u0063\u0077I\u006e":
			*_cgabe = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_cgabe = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_cgabe = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_cgabe = 13
		case "\u0075\u0070":
			*_cgabe = 14
		case "\u0064\u006f\u0077\u006e":
			*_cgabe = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cgabe = 16
		case "\u0063\u0075\u0073\u0074":
			*_cgabe = 17
		}
	}
	_daegb, _ecffd = d.Token()
	if _ecffd != nil {
		return _ecffd
	}
	if _dgedb, _ecfefb := _daegb.(_b.EndElement); _ecfefb && _dgedb.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _daegb)
}
func (_ebaead ST_IterateType) ValidateWithPath(path string) error {
	switch _ebaead {
	case 0, 1, 2, 3:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebaead))
	}
	return nil
}

type ST_PlaceholderSize byte
type CT_TLGraphicalObjectBuild struct {
	TLGraphicalObjectBuildChoice *CT_TLGraphicalObjectBuildChoice
	SpidAttr                     uint32
	GrpIdAttr                    uint32
	UiExpandAttr                 *bool
}

func (_cafb *CT_OutlineViewSlideList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cafb.Sld != nil {
		_bba := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _ddbe := range _cafb.Sld {
			e.EncodeElement(_ddbe, _bba)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PictureNonVisual struct {
	CNvPr *_d.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_d.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

func (_aacda ST_SplitterBarState) Validate() error { return _aacda.ValidateWithPath("") }
func NewCT_OleObjectEmbed() *CT_OleObjectEmbed {
	_caad := &CT_OleObjectEmbed{}
	return _caad
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_adggd *CT_Connector) ValidateWithPath(path string) error {
	if _eda := _adggd.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _eda != nil {
		return _eda
	}
	if _feg := _adggd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _feg != nil {
		return _feg
	}
	if _adggd.Style != nil {
		if _ded := _adggd.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ded != nil {
			return _ded
		}
	}
	if _adggd.ExtLst != nil {
		if _afa := _adggd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afa != nil {
			return _afa
		}
	}
	return nil
}
func NewEG_ShowType() *EG_ShowType {
	_cgdf := &EG_ShowType{}
	_cgdf.ShowTypeChoice = NewEG_ShowTypeChoice()
	return _cgdf
}

type CT_TimeNodeList struct{ TimeNodeListChoice []*CT_TimeNodeListChoice }
type ST_TLTimeNodeMasterRelation byte

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_gddfad *CT_TLAnimateRotationBehavior) Validate() error {
	return _gddfad.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_efgd *CT_ConnectorNonVisual) Validate() error {
	return _efgd.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_gaa := &CT_BackgroundProperties{}
	_gaa.FillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
	_gaa.EFillPropertiesChoice = _d.NewEG_FillPropertiesChoice()
	_gaa.EffectPropertiesChoice = _d.NewEG_EffectPropertiesChoice()
	return _gaa
}
func (_bee *CT_EmbeddedFontListEntry) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bee.Font = _d.NewCT_TextFont()
_bedg:
	for {
		_ggff, _fabf := d.Token()
		if _fabf != nil {
			return _fabf
		}
		switch _ceca := _ggff.(type) {
		case _b.StartElement:
			switch _ceca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _gge := d.DecodeElement(_bee.Font, &_ceca); _gge != nil {
					return _gge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_bee.Regular = NewCT_EmbeddedFontDataId()
				if _dcge := d.DecodeElement(_bee.Regular, &_ceca); _dcge != nil {
					return _dcge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_bee.Bold = NewCT_EmbeddedFontDataId()
				if _aefb := d.DecodeElement(_bee.Bold, &_ceca); _aefb != nil {
					return _aefb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_bee.Italic = NewCT_EmbeddedFontDataId()
				if _abce := d.DecodeElement(_bee.Italic, &_ceca); _abce != nil {
					return _abce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_bee.BoldItalic = NewCT_EmbeddedFontDataId()
				if _eddd := d.DecodeElement(_bee.BoldItalic, &_ceca); _eddd != nil {
					return _eddd
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _ceca.Name)
				if _ggc := d.Skip(); _ggc != nil {
					return _ggc
				}
			}
		case _b.EndElement:
			break _bedg
		case _b.CharData:
		}
	}
	return nil
}
func (_gceeb *CT_TLCommonTimeNodeData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gceeb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.IdAttr)})
	}
	if _gceeb.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.PresetIDAttr)})
	}
	if _gceeb.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_cbacf, _degg := _gceeb.PresetClassAttr.MarshalXMLAttr(_b.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _degg != nil {
			return _degg
		}
		start.Attr = append(start.Attr, _cbacf)
	}
	if _gceeb.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.PresetSubtypeAttr)})
	}
	if _gceeb.DurAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0075\u0072"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.DurAttr)})
	}
	if _gceeb.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.RepeatCountAttr)})
	}
	if _gceeb.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.RepeatDurAttr)})
	}
	if _gceeb.SpdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.SpdAttr)})
	}
	if _gceeb.AccelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.AccelAttr)})
	}
	if _gceeb.DecelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.DecelAttr)})
	}
	if _gceeb.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gceeb.AutoRevAttr))})
	}
	if _gceeb.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_feaaef, _dcfc := _gceeb.RestartAttr.MarshalXMLAttr(_b.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _dcfc != nil {
			return _dcfc
		}
		start.Attr = append(start.Attr, _feaaef)
	}
	if _gceeb.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_egaa, _cbfeg := _gceeb.FillAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _cbfeg != nil {
			return _cbfeg
		}
		start.Attr = append(start.Attr, _egaa)
	}
	if _gceeb.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_abgee, _afdb := _gceeb.SyncBehaviorAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _afdb != nil {
			return _afdb
		}
		start.Attr = append(start.Attr, _abgee)
	}
	if _gceeb.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.TmFilterAttr)})
	}
	if _gceeb.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.EvtFilterAttr)})
	}
	if _gceeb.DisplayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gceeb.DisplayAttr))})
	}
	if _gceeb.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_fcac, _fggcc := _gceeb.MasterRelAttr.MarshalXMLAttr(_b.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _fggcc != nil {
			return _fggcc
		}
		start.Attr = append(start.Attr, _fcac)
	}
	if _gceeb.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.BldLvlAttr)})
	}
	if _gceeb.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _c.Sprintf("\u0025\u0076", *_gceeb.GrpIdAttr)})
	}
	if _gceeb.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gceeb.AfterEffectAttr))})
	}
	if _gceeb.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_cfab, _geagbe := _gceeb.NodeTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _geagbe != nil {
			return _geagbe
		}
		start.Attr = append(start.Attr, _cfab)
	}
	if _gceeb.NodePhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_gceeb.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _gceeb.StCondLst != nil {
		_fccf := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gceeb.StCondLst, _fccf)
	}
	if _gceeb.EndCondLst != nil {
		_acce := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_gceeb.EndCondLst, _acce)
	}
	if _gceeb.EndSync != nil {
		_agdeag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_gceeb.EndSync, _agdeag)
	}
	if _gceeb.Iterate != nil {
		_gbggbg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_gceeb.Iterate, _gbggbg)
	}
	if _gceeb.ChildTnLst != nil {
		_ageae := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_gceeb.ChildTnLst, _ageae)
	}
	if _gceeb.SubTnLst != nil {
		_ebfcg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_gceeb.SubTnLst, _ebfcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aggdgb *ST_TLBehaviorOverrideType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fagagce, _bbbfa := d.Token()
	if _bbbfa != nil {
		return _bbbfa
	}
	if _afcgf, _cegfd := _fagagce.(_b.EndElement); _cegfd && _afcgf.Name == start.Name {
		*_aggdgb = 1
		return nil
	}
	if _bcdde, _acdg := _fagagce.(_b.CharData); !_acdg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fagagce)
	} else {
		switch string(_bcdde) {
		case "":
			*_aggdgb = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_aggdgb = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_aggdgb = 2
		}
	}
	_fagagce, _bbbfa = d.Token()
	if _bbbfa != nil {
		return _bbbfa
	}
	if _ecdac, _abfaa := _fagagce.(_b.EndElement); _abfaa && _ecdac.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fagagce)
}

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_bcfd *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _bcfd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_bebd := &CT_TLAnimVariantBooleanVal{}
	return _bebd
}
func (_gafcb *CT_TLTextTargetElementChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gafcb.CharRg != nil {
		_ebff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_gafcb.CharRg, _ebff)
	} else if _gafcb.PRg != nil {
		_aeeaf := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_gafcb.PRg, _aeeaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcdea ST_TLAnimateEffectTransition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcdea.String(), start)
}

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_d.ST_Percentage

	// Acceleration
	AccelAttr *_d.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_d.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}

func (_beebg *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecbdc := range start.Attr {
		if _ecbdc.Name.Local == "\u0076\u0061\u006c" {
			_egecb, _dgeg := ParseUnionST_PositivePercentage(_ecbdc.Value)
			if _dgeg != nil {
				return _dgeg
			}
			_beebg.ValAttr = _egecb
			continue
		}
	}
	for {
		_gcde, _fagagc := d.Token()
		if _fagagc != nil {
			return _c.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _fagagc)
		}
		if _cbbe, _aeffa := _gcde.(_b.EndElement); _aeffa && _cbbe.Name == start.Name {
			break
		}
	}
	return nil
}
func NewViewPr() *ViewPr {
	_dggda := &ViewPr{}
	_dggda.CT_ViewProperties = *NewCT_ViewProperties()
	return _dggda
}
func (_cedcc ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_beddf := _b.Attr{}
	_beddf.Name = name
	switch _cedcc {
	case ST_TLTimeNodeMasterRelationUnset:
		_beddf.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_beddf.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_beddf.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_beddf.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _beddf, nil
}
func NewAG_ChildSlide() *AG_ChildSlide { _bg := &AG_ChildSlide{}; return _bg }
func (_dcdff *ST_WebColorType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aaegb, _cdaaae := d.Token()
	if _cdaaae != nil {
		return _cdaaae
	}
	if _agdbc, _gabfg := _aaegb.(_b.EndElement); _gabfg && _agdbc.Name == start.Name {
		*_dcdff = 1
		return nil
	}
	if _acfeef, _cccfg := _aaegb.(_b.CharData); !_cccfg {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aaegb)
	} else {
		switch string(_acfeef) {
		case "":
			*_dcdff = 0
		case "\u006e\u006f\u006e\u0065":
			*_dcdff = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_dcdff = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_dcdff = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_dcdff = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_dcdff = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_dcdff = 6
		}
	}
	_aaegb, _cdaaae = d.Token()
	if _cdaaae != nil {
		return _cdaaae
	}
	if _ggacd, _gggbd := _aaegb.(_b.EndElement); _gggbd && _ggacd.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aaegb)
}
func NewCT_TLTimeTargetElementChoice() *CT_TLTimeTargetElementChoice {
	_fbgd := &CT_TLTimeTargetElementChoice{}
	return _fbgd
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_afadeg *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _faacc := _afadeg.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _faacc != nil {
		return _faacc
	}
	if _afadeg.To != nil {
		if _adgef := _afadeg.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _adgef != nil {
			return _adgef
		}
	}
	return nil
}
func (_gadf *CT_TLTriggerTimeNodeID) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _c.Sprintf("\u0025\u0076", _gadf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfcgb *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfcgb = 0
	case "\u0069\u006e":
		*_gfcgb = 1
	case "\u006f\u0075\u0074":
		*_gfcgb = 2
	case "\u006e\u006f\u006e\u0065":
		*_gfcgb = 3
	}
	return nil
}

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_fffg *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }
func (_eaefe *CT_TimeNodeListChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eaefe.Par != nil {
		_egca := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		e.EncodeElement(_eaefe.Par, _egca)
	} else if _eaefe.Seq != nil {
		_ebde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		e.EncodeElement(_eaefe.Seq, _ebde)
	} else if _eaefe.Excl != nil {
		_defed := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		e.EncodeElement(_eaefe.Excl, _defed)
	} else if _eaefe.Anim != nil {
		_eeff := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		e.EncodeElement(_eaefe.Anim, _eeff)
	} else if _eaefe.AnimClr != nil {
		_gbagfg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		e.EncodeElement(_eaefe.AnimClr, _gbagfg)
	} else if _eaefe.AnimEffect != nil {
		_babbac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_eaefe.AnimEffect, _babbac)
	} else if _eaefe.AnimMotion != nil {
		_feaaag := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_eaefe.AnimMotion, _feaaag)
	} else if _eaefe.AnimRot != nil {
		_gcgeg := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		e.EncodeElement(_eaefe.AnimRot, _gcgeg)
	} else if _eaefe.AnimScale != nil {
		_caecd := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_eaefe.AnimScale, _caecd)
	} else if _eaefe.Cmd != nil {
		_ecfec := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		e.EncodeElement(_eaefe.Cmd, _ecfec)
	} else if _eaefe.Set != nil {
		_bfcbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		e.EncodeElement(_eaefe.Set, _bfcbb)
	} else if _eaefe.Audio != nil {
		_efeae := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		e.EncodeElement(_eaefe.Audio, _efeae)
	} else if _eaefe.Video != nil {
		_dggad := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		e.EncodeElement(_eaefe.Video, _dggad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeConditionChoice struct {

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

// Validate validates the CT_NotesTextViewProperties and its children
func (_dgbg *CT_NotesTextViewProperties) Validate() error {
	return _dgbg.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the AG_TLBuild and its children
func (_ce *AG_TLBuild) Validate() error {
	return _ce.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}
func (_cacbc *ST_PhotoAlbumLayout) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebga, _ggecc := d.Token()
	if _ggecc != nil {
		return _ggecc
	}
	if _afcee, _ebecad := _ebga.(_b.EndElement); _ebecad && _afcee.Name == start.Name {
		*_cacbc = 1
		return nil
	}
	if _aeefbd, _cddae := _ebga.(_b.CharData); !_cddae {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebga)
	} else {
		switch string(_aeefbd) {
		case "":
			*_cacbc = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_cacbc = 1
		case "\u0031\u0070\u0069\u0063":
			*_cacbc = 2
		case "\u0032\u0070\u0069\u0063":
			*_cacbc = 3
		case "\u0034\u0070\u0069\u0063":
			*_cacbc = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cacbc = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cacbc = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_cacbc = 7
		}
	}
	_ebga, _ggecc = d.Token()
	if _ggecc != nil {
		return _ggecc
	}
	if _gadc, _ddfcb := _ebga.(_b.EndElement); _ddfcb && _gadc.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebga)
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

func (_faeb *Presentation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faeb.CT_Presentation = *NewCT_Presentation()
	for _, _eaeef := range start.Attr {
		if _eaeef.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_aaegg, _faea := ParseUnionST_Percentage(_eaeef.Value)
			if _faea != nil {
				return _faea
			}
			_faeb.ServerZoomAttr = &_aaegg
			continue
		}
		if _eaeef.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_cdaaa, _fddbd := _e.ParseInt(_eaeef.Value, 10, 32)
			if _fddbd != nil {
				return _fddbd
			}
			_gfeb := int32(_cdaaa)
			_faeb.FirstSlideNumAttr = &_gfeb
			continue
		}
		if _eaeef.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_gffae, _ggggdg := _e.ParseBool(_eaeef.Value)
			if _ggggdg != nil {
				return _ggggdg
			}
			_faeb.ShowSpecialPlsOnTitleSldAttr = &_gffae
			continue
		}
		if _eaeef.Name.Local == "\u0072\u0074\u006c" {
			_aaed, _bbbbc := _e.ParseBool(_eaeef.Value)
			if _bbbbc != nil {
				return _bbbbc
			}
			_faeb.RtlAttr = &_aaed
			continue
		}
		if _eaeef.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_eceeg, _bfebfa := _e.ParseBool(_eaeef.Value)
			if _bfebfa != nil {
				return _bfebfa
			}
			_faeb.RemovePersonalInfoOnSaveAttr = &_eceeg
			continue
		}
		if _eaeef.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_bfefb, _eecgfc := _e.ParseBool(_eaeef.Value)
			if _eecgfc != nil {
				return _eecgfc
			}
			_faeb.CompatModeAttr = &_bfefb
			continue
		}
		if _eaeef.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_dgdde, _bcfce := _e.ParseBool(_eaeef.Value)
			if _bcfce != nil {
				return _bcfce
			}
			_faeb.StrictFirstAndLastCharsAttr = &_dgdde
			continue
		}
		if _eaeef.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_ggdgg, _aeba := _e.ParseBool(_eaeef.Value)
			if _aeba != nil {
				return _aeba
			}
			_faeb.EmbedTrueTypeFontsAttr = &_ggdgg
			continue
		}
		if _eaeef.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_cfeae, _ccgcfa := _e.ParseBool(_eaeef.Value)
			if _ccgcfa != nil {
				return _ccgcfa
			}
			_faeb.SaveSubsetFontsAttr = &_cfeae
			continue
		}
		if _eaeef.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_dbbe, _afbfg := _e.ParseBool(_eaeef.Value)
			if _afbfg != nil {
				return _afbfg
			}
			_faeb.AutoCompressPicturesAttr = &_dbbe
			continue
		}
		if _eaeef.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_gefff, _fgdee := _e.ParseUint(_eaeef.Value, 10, 32)
			if _fgdee != nil {
				return _fgdee
			}
			_fbbgfg := uint32(_gefff)
			_faeb.BookmarkIdSeedAttr = &_fbbgfg
			continue
		}
		if _eaeef.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_faeb.ConformanceAttr.UnmarshalXMLAttr(_eaeef)
			continue
		}
	}
_fdddc:
	for {
		_gecgg, _cfead := d.Token()
		if _cfead != nil {
			return _cfead
		}
		switch _feaff := _gecgg.(type) {
		case _b.StartElement:
			switch _feaff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_faeb.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _bggee := d.DecodeElement(_faeb.SldMasterIdLst, &_feaff); _bggee != nil {
					return _bggee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_faeb.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _eebgc := d.DecodeElement(_faeb.NotesMasterIdLst, &_feaff); _eebgc != nil {
					return _eebgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_faeb.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _deca := d.DecodeElement(_faeb.HandoutMasterIdLst, &_feaff); _deca != nil {
					return _deca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_faeb.SldIdLst = NewCT_SlideIdList()
				if _ccbbb := d.DecodeElement(_faeb.SldIdLst, &_feaff); _ccbbb != nil {
					return _ccbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_faeb.SldSz = NewCT_SlideSize()
				if _ccabd := d.DecodeElement(_faeb.SldSz, &_feaff); _ccabd != nil {
					return _ccabd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _cegdf := d.DecodeElement(_faeb.NotesSz, &_feaff); _cegdf != nil {
					return _cegdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_faeb.SmartTags = NewCT_SmartTags()
				if _ecbc := d.DecodeElement(_faeb.SmartTags, &_feaff); _ecbc != nil {
					return _ecbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_faeb.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _dgafc := d.DecodeElement(_faeb.EmbeddedFontLst, &_feaff); _dgafc != nil {
					return _dgafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_faeb.CustShowLst = NewCT_CustomShowList()
				if _adcc := d.DecodeElement(_faeb.CustShowLst, &_feaff); _adcc != nil {
					return _adcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_faeb.PhotoAlbum = NewCT_PhotoAlbum()
				if _eebbaf := d.DecodeElement(_faeb.PhotoAlbum, &_feaff); _eebbaf != nil {
					return _eebbaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_faeb.CustDataLst = NewCT_CustomerDataList()
				if _abdag := d.DecodeElement(_faeb.CustDataLst, &_feaff); _abdag != nil {
					return _abdag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_faeb.Kinsoku = NewCT_Kinsoku()
				if _efec := d.DecodeElement(_faeb.Kinsoku, &_feaff); _efec != nil {
					return _efec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_faeb.DefaultTextStyle = _d.NewCT_TextListStyle()
				if _aacc := d.DecodeElement(_faeb.DefaultTextStyle, &_feaff); _aacc != nil {
					return _aacc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_faeb.ModifyVerifier = NewCT_ModifyVerifier()
				if _abded := d.DecodeElement(_faeb.ModifyVerifier, &_feaff); _abded != nil {
					return _abded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faeb.ExtLst = NewCT_ExtensionList()
				if _dgcb := d.DecodeElement(_faeb.ExtLst, &_feaff); _dgcb != nil {
					return _dgcb
				}
			default:
				_ea.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _feaff.Name)
				if _aeecd := d.Skip(); _aeecd != nil {
					return _aeecd
				}
			}
		case _b.EndElement:
			break _fdddc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_afafd *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _afafd.TLTextTargetElementChoice != nil {
		if _eggbd := _afafd.TLTextTargetElementChoice.ValidateWithPath(path + "\u002f\u0054\u004c\u0054\u0065\u0078\u0074\u0054\u0061\u0072\u0067e\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u0068o\u0069\u0063\u0065"); _eggbd != nil {
			return _eggbd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_efcgc *CT_InOutTransition) ValidateWithPath(path string) error {
	if _eeef := _efcgc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _eeef != nil {
		return _eeef
	}
	return nil
}

// ValidateWithPath validates the CT_TLByAnimateColorTransformChoice and its children, prefixing error messages with path
func (_dceee *CT_TLByAnimateColorTransformChoice) ValidateWithPath(path string) error {
	if _dceee.Rgb != nil {
		if _daage := _dceee.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _daage != nil {
			return _daage
		}
	}
	if _dceee.Hsl != nil {
		if _fafa := _dceee.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _fafa != nil {
			return _fafa
		}
	}
	return nil
}
func NewCT_CommentAuthorList() *CT_CommentAuthorList { _gcf := &CT_CommentAuthorList{}; return _gcf }

// Validate validates the CT_TransitionStartSoundAction and its children
func (_dacag *CT_TransitionStartSoundAction) Validate() error {
	return _dacag.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}
func (_ffbaa *CT_TLAnimateMotionBehavior) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbaa.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_ddace, _dbceb := _ffbaa.OriginAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _dbceb != nil {
			return _dbceb
		}
		start.Attr = append(start.Attr, _ddace)
	}
	if _ffbaa.PathAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _c.Sprintf("\u0025\u0076", *_ffbaa.PathAttr)})
	}
	if _ffbaa.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_gcbdc, _acddcd := _ffbaa.PathEditModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _acddcd != nil {
			return _acddcd
		}
		start.Attr = append(start.Attr, _gcbdc)
	}
	if _ffbaa.RAngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _c.Sprintf("\u0025\u0076", *_ffbaa.RAngAttr)})
	}
	if _ffbaa.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _c.Sprintf("\u0025\u0076", *_ffbaa.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_fgac := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ffbaa.CBhvr, _fgac)
	if _ffbaa.By != nil {
		_fcfbef := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_ffbaa.By, _fcfbef)
	}
	if _ffbaa.From != nil {
		_bded := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_ffbaa.From, _bded)
	}
	if _ffbaa.To != nil {
		_ddfg := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_ffbaa.To, _ddfg)
	}
	if _ffbaa.RCtr != nil {
		_bdad := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_ffbaa.RCtr, _bdad)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aeaef ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeaef.String(), start)
}

// Validate validates the CT_TransitionSoundAction and its children
func (_feeaf *CT_TransitionSoundAction) Validate() error {
	return _feeaf.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}

func (_fbda *CT_GroupShapeChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbda.Sp != nil {
		_eece := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0073\u0070"}}
		e.EncodeElement(_fbda.Sp, _eece)
	} else if _fbda.GrpSp != nil {
		_fdec := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		e.EncodeElement(_fbda.GrpSp, _fdec)
	} else if _fbda.GraphicFrame != nil {
		_cfbb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		e.EncodeElement(_fbda.GraphicFrame, _cfbb)
	} else if _fbda.CxnSp != nil {
		_edag := _b.StartElement{Name: _b.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		e.EncodeElement(_fbda.CxnSp, _edag)
	} else if _fbda.Pic != nil {
		_fggb := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_fbda.Pic, _fggb)
	} else if _fbda.ContentPart != nil {
		_agbac := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		e.EncodeElement(_fbda.ContentPart, _agbac)
	}
	return nil
}
func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_cea := &CT_CornerDirectionTransition{}
	return _cea
}
func (_caed *CT_HandoutMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caed.CSld = NewCT_CommonSlideData()
	_caed.ClrMap = _d.NewCT_ColorMapping()
_caacg:
	for {
		_gdba, _acgb := d.Token()
		if _acgb != nil {
			return _acgb
		}
		switch _ddedb := _gdba.(type) {
		case _b.StartElement:
			switch _ddedb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gdfg := d.DecodeElement(_caed.CSld, &_ddedb); _gdfg != nil {
					return _gdfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gcca := d.DecodeElement(_caed.ClrMap, &_ddedb); _gcca != nil {
					return _gcca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_caed.Hf = NewCT_HeaderFooter()
				if _egc := d.DecodeElement(_caed.Hf, &_ddedb); _egc != nil {
					return _egc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caed.ExtLst = NewCT_ExtensionListModify()
				if _cfcf := d.DecodeElement(_caed.ExtLst, &_ddedb); _cfcf != nil {
					return _cfcf
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _ddedb.Name)
				if _fcage := d.Skip(); _fcage != nil {
					return _fcage
				}
			}
		case _b.EndElement:
			break _caacg
		case _b.CharData:
		}
	}
	return nil
}
func (_bfdfa *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfdfa.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dagc := range start.Attr {
		if _dagc.Name.Local == "\u0062\u0079" {
			_fgbag, _badgc := _e.ParseInt(_dagc.Value, 10, 32)
			if _badgc != nil {
				return _badgc
			}
			_bdbc := int32(_fgbag)
			_bfdfa.ByAttr = &_bdbc
			continue
		}
		if _dagc.Name.Local == "\u0066\u0072\u006f\u006d" {
			_fdfc, _ebdgf := _e.ParseInt(_dagc.Value, 10, 32)
			if _ebdgf != nil {
				return _ebdgf
			}
			_ceeae := int32(_fdfc)
			_bfdfa.FromAttr = &_ceeae
			continue
		}
		if _dagc.Name.Local == "\u0074\u006f" {
			_ecfa, _bbbce := _e.ParseInt(_dagc.Value, 10, 32)
			if _bbbce != nil {
				return _bbbce
			}
			_edcee := int32(_ecfa)
			_bfdfa.ToAttr = &_edcee
			continue
		}
	}
_bece:
	for {
		_fedgb, _aace := d.Token()
		if _aace != nil {
			return _aace
		}
		switch _dccb := _fedgb.(type) {
		case _b.StartElement:
			switch _dccb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _afec := d.DecodeElement(_bfdfa.CBhvr, &_dccb); _afec != nil {
					return _afec
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _dccb.Name)
				if _cafab := d.Skip(); _cafab != nil {
					return _cafab
				}
			}
		case _b.EndElement:
			break _bece
		case _b.CharData:
		}
	}
	return nil
}
func (_cbfd *ST_TLNextActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_daedc, _gbbca := d.Token()
	if _gbbca != nil {
		return _gbbca
	}
	if _fdgdf, _bcaf := _daedc.(_b.EndElement); _bcaf && _fdgdf.Name == start.Name {
		*_cbfd = 1
		return nil
	}
	if _efbfg, _dbadb := _daedc.(_b.CharData); !_dbadb {
		return _c.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _daedc)
	} else {
		switch string(_efbfg) {
		case "":
			*_cbfd = 0
		case "\u006e\u006f\u006e\u0065":
			*_cbfd = 1
		case "\u0073\u0065\u0065\u006b":
			*_cbfd = 2
		}
	}
	_daedc, _gbbca = d.Token()
	if _gbbca != nil {
		return _gbbca
	}
	if _bgaef, _gcdde := _daedc.(_b.EndElement); _gcdde && _bgaef.Name == start.Name {
		return nil
	}
	return _c.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _daedc)
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_d.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

// Validate validates the CT_CustomerDataList and its children
func (_dbe *CT_CustomerDataList) Validate() error {
	return _dbe.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}
func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_fefca := &CT_TLIterateIntervalTime{}
	return _fefca
}
func (_beff *CT_CommonSlideViewProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_beff.CViewPr = NewCT_CommonViewProperties()
	for _, _ceg := range start.Attr {
		if _ceg.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_bad, _ega := _e.ParseBool(_ceg.Value)
			if _ega != nil {
				return _ega
			}
			_beff.SnapToGridAttr = &_bad
			continue
		}
		if _ceg.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_daec, _bacf := _e.ParseBool(_ceg.Value)
			if _bacf != nil {
				return _bacf
			}
			_beff.SnapToObjectsAttr = &_daec
			continue
		}
		if _ceg.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_dga, _ecfe := _e.ParseBool(_ceg.Value)
			if _ecfe != nil {
				return _ecfe
			}
			_beff.ShowGuidesAttr = &_dga
			continue
		}
	}
_feb:
	for {
		_edfd, _bfa := d.Token()
		if _bfa != nil {
			return _bfa
		}
		switch _gce := _edfd.(type) {
		case _b.StartElement:
			switch _gce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dbcd := d.DecodeElement(_beff.CViewPr, &_gce); _dbcd != nil {
					return _dbcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_beff.GuideLst = NewCT_GuideList()
				if _dbcde := d.DecodeElement(_beff.GuideLst, &_gce); _dbcde != nil {
					return _dbcde
				}
			default:
				_ea.Log.Debug("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _gce.Name)
				if _eadc := d.Skip(); _eadc != nil {
					return _eadc
				}
			}
		case _b.EndElement:
			break _feb
		case _b.CharData:
		}
	}
	return nil
}
func (_fbgdb ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _fbgdb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _c.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbgdb))
	}
	return nil
}

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _ac.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _ac.Time
	ExtLst                 *CT_ExtensionList
}

func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_dcfef := &CT_TLTimeNodeParallel{}
	_dcfef.CTn = NewCT_TLCommonTimeNodeData()
	return _dcfef
}
func (_bafda ST_TLBehaviorAccumulateType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bafda.String(), start)
}

type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr                   uint32
	TLShapeTargetElementChoice *CT_TLShapeTargetElementChoice
}

func (_bfbadf *CT_TLOleChartTargetElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfbadf.TypeAttr = ST_TLChartSubelementType(1)
	for _, _gaeda := range start.Attr {
		if _gaeda.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bfbadf.TypeAttr.UnmarshalXMLAttr(_gaeda)
			continue
		}
		if _gaeda.Name.Local == "\u006c\u0076\u006c" {
			_dbad, _aacg := _e.ParseUint(_gaeda.Value, 10, 32)
			if _aacg != nil {
				return _aacg
			}
			_ggcd := uint32(_dbad)
			_bfbadf.LvlAttr = &_ggcd
			continue
		}
	}
	for {
		_debea, _dggcb := d.Token()
		if _dggcb != nil {
			return _c.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _dggcb)
		}
		if _added, _cfcg := _debea.(_b.EndElement); _cfcg && _added.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbeea *CT_TLIterateIntervalTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgfdbb := range start.Attr {
		if _fgfdbb.Name.Local == "\u0076\u0061\u006c" {
			_dgaf, _cbcc := ParseUnionST_TLTime(_fgfdbb.Value)
			if _cbcc != nil {
				return _cbcc
			}
			_bbeea.ValAttr = _dgaf
			continue
		}
	}
	for {
		_cgef, _fgcce := d.Token()
		if _fgcce != nil {
			return _c.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _fgcce)
		}
		if _dceab, _eggge := _cgef.(_b.EndElement); _eggge && _dceab.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_dffe *CT_ExtensionList) ValidateWithPath(path string) error {
	for _abgg, _afgdg := range _dffe.Ext {
		if _cagd := _afgdg.ValidateWithPath(_c.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _abgg)); _cagd != nil {
			return _cagd
		}
	}
	return nil
}
func NewCT_Slide() *CT_Slide {
	_dgfaa := &CT_Slide{}
	_dgfaa.CSld = NewCT_CommonSlideData()
	return _dgfaa
}

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

type ST_TLBehaviorTransformType byte

func NewNotes() *Notes { _dfea := &Notes{}; _dfea.CT_NotesSlide = *NewCT_NotesSlide(); return _dfea }
func NewEG_ChildSlide() *EG_ChildSlide {
	_feggf := &EG_ChildSlide{}
	return _feggf
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_gecb *CT_NotesSlide) ValidateWithPath(path string) error {
	if _eadbf := _gecb.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _eadbf != nil {
		return _eadbf
	}
	if _gecb.ClrMapOvr != nil {
		if _afee := _gecb.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _afee != nil {
			return _afee
		}
	}
	if _gecb.ExtLst != nil {
		if _efac := _gecb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efac != nil {
			return _efac
		}
	}
	return nil
}
func (_gegfc ST_WebColorType) Validate() error { return _gegfc.ValidateWithPath("") }

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_bgae *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _afac := _bgae.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _afac != nil {
		return _afac
	}
	if _bgae.Regular != nil {
		if _eadb := _bgae.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _eadb != nil {
			return _eadb
		}
	}
	if _bgae.Bold != nil {
		if _aggd := _bgae.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _aggd != nil {
			return _aggd
		}
	}
	if _bgae.Italic != nil {
		if _efag := _bgae.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _efag != nil {
			return _efag
		}
	}
	if _bgae.BoldItalic != nil {
		if _ffg := _bgae.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _ffg != nil {
			return _ffg
		}
	}
	return nil
}
func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_ecaff := &CT_TLTimeAnimateValue{}
	return _ecaff
}

type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}
type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_d.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

func (_gegfg ST_TLParaBuildType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gegfg.String(), start)
}

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr             *uint32
	SlideTransitionChoice *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_egaff *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _aegc := _egaff.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aegc != nil {
		return _aegc
	}
	if _fage := _egaff.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _fage != nil {
		return _fage
	}
	if _aceb := _egaff.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _aceb != nil {
		return _aceb
	}
	return nil
}
func (_ecdeag *EG_TopLevelSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_egcdd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_ecdeag.ClrMap, _egcdd)
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_ccfd *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }

type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_d.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}
type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_TLSubShapeId and its children
func (_bfggc *CT_TLSubShapeId) Validate() error {
	return _bfggc.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}
func NewCT_WebProperties() *CT_WebProperties { _cface := &CT_WebProperties{}; return _cface }

// Validate validates the EG_ExtensionList and its children
func (_fedgg *EG_ExtensionList) Validate() error {
	return _fedgg.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_ddec *CT_OutlineViewSlideList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ecceg:
	for {
		_dbffg, _eddg := d.Token()
		if _eddg != nil {
			return _eddg
		}
		switch _acff := _dbffg.(type) {
		case _b.StartElement:
			switch _acff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_eccgc := NewCT_OutlineViewSlideEntry()
				if _daba := d.DecodeElement(_eccgc, &_acff); _daba != nil {
					return _daba
				}
				_ddec.Sld = append(_ddec.Sld, _eccgc)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _acff.Name)
				if _ceebb := d.Skip(); _ceebb != nil {
					return _ceebb
				}
			}
		case _b.EndElement:
			break _ecceg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLSetBehavior and its children
func (_egfc *CT_TLSetBehavior) Validate() error {
	return _egfc.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}
func NewCT_Empty() *CT_Empty { _fcaa := &CT_Empty{}; return _fcaa }

// Validate validates the CT_ExtensionListModify and its children
func (_dded *CT_ExtensionListModify) Validate() error {
	return _dded.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}
func (_ebcff *CT_SlideMaster) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebcff.CSld = NewCT_CommonSlideData()
	_ebcff.ClrMap = _d.NewCT_ColorMapping()
	for _, _gbbg := range start.Attr {
		if _gbbg.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_adge, _debgf := _e.ParseBool(_gbbg.Value)
			if _debgf != nil {
				return _debgf
			}
			_ebcff.PreserveAttr = &_adge
			continue
		}
	}
_cbeb:
	for {
		_aacb, _gdcfg := d.Token()
		if _gdcfg != nil {
			return _gdcfg
		}
		switch _dddbc := _aacb.(type) {
		case _b.StartElement:
			switch _dddbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ecbd := d.DecodeElement(_ebcff.CSld, &_dddbc); _ecbd != nil {
					return _ecbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _agfaf := d.DecodeElement(_ebcff.ClrMap, &_dddbc); _agfaf != nil {
					return _agfaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_ebcff.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _eaaf := d.DecodeElement(_ebcff.SldLayoutIdLst, &_dddbc); _eaaf != nil {
					return _eaaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_ebcff.Transition = NewCT_SlideTransition()
				if _dcde := d.DecodeElement(_ebcff.Transition, &_dddbc); _dcde != nil {
					return _dcde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_ebcff.Timing = NewCT_SlideTiming()
				if _bfgf := d.DecodeElement(_ebcff.Timing, &_dddbc); _bfgf != nil {
					return _bfgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_ebcff.Hf = NewCT_HeaderFooter()
				if _bgadd := d.DecodeElement(_ebcff.Hf, &_dddbc); _bgadd != nil {
					return _bgadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_ebcff.TxStyles = NewCT_SlideMasterTextStyles()
				if _eedac := d.DecodeElement(_ebcff.TxStyles, &_dddbc); _eedac != nil {
					return _eedac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebcff.ExtLst = NewCT_ExtensionListModify()
				if _fbade := d.DecodeElement(_ebcff.ExtLst, &_dddbc); _fbade != nil {
					return _fbade
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _dddbc.Name)
				if _ggdgd := d.Skip(); _ggdgd != nil {
					return _ggdgd
				}
			}
		case _b.EndElement:
			break _cbeb
		case _b.CharData:
		}
	}
	return nil
}
func (_bffe *CT_ExtensionListModify) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdaf := range start.Attr {
		if _gdaf.Name.Local == "\u006d\u006f\u0064" {
			_geeff, _cef := _e.ParseBool(_gdaf.Value)
			if _cef != nil {
				return _cef
			}
			_bffe.ModAttr = &_geeff
			continue
		}
	}
_eacg:
	for {
		_daed, _fdbg := d.Token()
		if _fdbg != nil {
			return _fdbg
		}
		switch _cagc := _daed.(type) {
		case _b.StartElement:
			switch _cagc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fddcf := NewCT_Extension()
				if _aeff := d.DecodeElement(_fddcf, &_cagc); _aeff != nil {
					return _aeff
				}
				_bffe.Ext = append(_bffe.Ext, _fddcf)
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _cagc.Name)
				if _gdab := d.Skip(); _gdab != nil {
					return _gdab
				}
			}
		case _b.EndElement:
			break _eacg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_beeg := &CT_SlideViewProperties{}
	_beeg.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _beeg
}
func (_gggcb ST_PlaceholderType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdacc := _b.Attr{}
	_gdacc.Name = name
	switch _gggcb {
	case ST_PlaceholderTypeUnset:
		_gdacc.Value = ""
	case ST_PlaceholderTypeTitle:
		_gdacc.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_gdacc.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_gdacc.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_gdacc.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_gdacc.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_gdacc.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_gdacc.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_gdacc.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_gdacc.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_gdacc.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_gdacc.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_gdacc.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_gdacc.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_gdacc.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_gdacc.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_gdacc.Value = "\u0070\u0069\u0063"
	}
	return _gdacc, nil
}
func (_dbfe *CT_CustomShow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbfe.SldLst = NewCT_SlideRelationshipList()
	for _, _dag := range start.Attr {
		if _dag.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcdf := _dag.Value
			_dbfe.NameAttr = _gcdf
			continue
		}
		if _dag.Name.Local == "\u0069\u0064" {
			_aca, _bbf := _e.ParseUint(_dag.Value, 10, 32)
			if _bbf != nil {
				return _bbf
			}
			_dbfe.IdAttr = uint32(_aca)
			continue
		}
	}
_eabb:
	for {
		_eceg, _eff := d.Token()
		if _eff != nil {
			return _eff
		}
		switch _edac := _eceg.(type) {
		case _b.StartElement:
			switch _edac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _ebef := d.DecodeElement(_dbfe.SldLst, &_edac); _ebef != nil {
					return _ebef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbfe.ExtLst = NewCT_ExtensionList()
				if _gbg := d.DecodeElement(_dbfe.ExtLst, &_edac); _gbg != nil {
					return _gbg
				}
			default:
				_ea.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _edac.Name)
				if _ggfg := d.Skip(); _ggfg != nil {
					return _ggfg
				}
			}
		case _b.EndElement:
			break _eabb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

func (_dgbf *CT_NotesSlide) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgbf.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_dgbf.ShowMasterSpAttr))})
	}
	if _dgbf.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _c.Sprintf("\u0025\u0064", _gbgd(*_dgbf.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_cccd := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_dgbf.CSld, _cccd)
	if _dgbf.ClrMapOvr != nil {
		_cgfa := _b.StartElement{Name: _b.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_dgbf.ClrMapOvr, _cgfa)
	}
	if _dgbf.ExtLst != nil {
		_fgde := _b.StartElement{Name: _b.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgbf.ExtLst, _fgde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_daag := &CT_TLAnimateRotationBehavior{}
	_daag.CBhvr = NewCT_TLCommonBehaviorData()
	return _daag
}

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func (_cbfa *CT_NotesMasterIdList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cbfa.NotesMasterId != nil {
		_gfab := _b.StartElement{Name: _b.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_cbfa.NotesMasterId, _gfab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_fcae *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	if _fcae.Sp != nil {
		if _dgce := _fcae.Sp.ValidateWithPath(path + "\u002f\u0053\u0070"); _dgce != nil {
			return _dgce
		}
	}
	if _fcae.GrpSp != nil {
		if _ggbd := _fcae.GrpSp.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070"); _ggbd != nil {
			return _ggbd
		}
	}
	if _fcae.GraphicFrame != nil {
		if _cdaff := _fcae.GraphicFrame.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"); _cdaff != nil {
			return _cdaff
		}
	}
	if _fcae.CxnSp != nil {
		if _cedf := _fcae.CxnSp.ValidateWithPath(path + "\u002f\u0043\u0078\u006e\u0053\u0070"); _cedf != nil {
			return _cedf
		}
	}
	if _fcae.Pic != nil {
		if _feeb := _fcae.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _feeb != nil {
			return _feeb
		}
	}
	if _fcae.ContentPart != nil {
		if _cdec := _fcae.ContentPart.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"); _cdec != nil {
			return _cdec
		}
	}
	return nil
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func init() {
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
