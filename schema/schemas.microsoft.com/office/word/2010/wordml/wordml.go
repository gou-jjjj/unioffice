//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wordml

import (
	_f "encoding/xml"
	_aa "fmt"
	_ae "strconv"
	_a "time"
	_g "unioffice"
	_fd "unioffice/common/logger"
	_d "unioffice/schema/soo/dml"
	_dd "unioffice/schema/soo/ofc/sharedTypes"
	_b "unioffice/schema/soo/wml"
)

func (_ccbg ST_PenAlignment) ValidateWithPath(path string) error {
	switch _ccbg {
	case 0, 1, 2:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccbg))
	}
	return nil
}

// ValidateWithPath validates the EG_FillPropertiesChoice and its children, prefixing error messages with path
func (_egcda *EG_FillPropertiesChoice) ValidateWithPath(path string) error {
	if _egcda.NoFill != nil {
		if _eefc := _egcda.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eefc != nil {
			return _eefc
		}
	}
	if _egcda.SolidFill != nil {
		if _bbcc := _egcda.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _bbcc != nil {
			return _bbcc
		}
	}
	if _egcda.GradFill != nil {
		if _bgfa := _egcda.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bgfa != nil {
			return _bgfa
		}
	}
	return nil
}

func (_bc *CT_FillTextEffect) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_bc.FillPropertiesChoice.MarshalXML(e, _f.StartElement{})
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the DefaultImageDpi and its children
func (_gecd *DefaultImageDpi) Validate() error {
	return _gecd.ValidateWithPath("\u0044e\u0066a\u0075\u006c\u0074\u0049\u006d\u0061\u0067\u0065\u0044\u0070\u0069")
}

func (_dcfe *EG_ColorTransformChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dcfe.Tint != nil {
		_cfgc := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_dcfe.Tint, _cfgc)
	} else if _dcfe.Shade != nil {
		_feba := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0073\u0068\u0061\u0064e"}}
		e.EncodeElement(_dcfe.Shade, _feba)
	} else if _dcfe.Alpha != nil {
		_abbe := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0061\u006c\u0070\u0068a"}}
		e.EncodeElement(_dcfe.Alpha, _abbe)
	} else if _dcfe.HueMod != nil {
		_fdbg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_dcfe.HueMod, _fdbg)
	} else if _dcfe.Sat != nil {
		_cdf := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0073\u0061\u0074"}}
		e.EncodeElement(_dcfe.Sat, _cdf)
	} else if _dcfe.SatOff != nil {
		_agef := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_dcfe.SatOff, _agef)
	} else if _dcfe.SatMod != nil {
		_faee := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_dcfe.SatMod, _faee)
	} else if _dcfe.Lum != nil {
		_caab := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006c\u0075\u006d"}}
		e.EncodeElement(_dcfe.Lum, _caab)
	} else if _dcfe.LumOff != nil {
		_dcbf := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_dcfe.LumOff, _dcbf)
	} else if _dcfe.LumMod != nil {
		_gdba := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_dcfe.LumMod, _gdba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dfbb *CT_Shadow) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _dfbb.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0062\u006c\u0075\u0072\u0052\u0061\u0064"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.BlurRadAttr)})
	}
	if _dfbb.DistAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0064\u0069\u0073\u0074"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.DistAttr)})
	}
	if _dfbb.DirAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0064\u0069\u0072"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.DirAttr)})
	}
	if _dfbb.SxAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0078"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.SxAttr)})
	}
	if _dfbb.SyAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0079"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.SyAttr)})
	}
	if _dfbb.KxAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006b\u0078"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.KxAttr)})
	}
	if _dfbb.KyAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006b\u0079"}, Value: _aa.Sprintf("\u0025\u0076", *_dfbb.KyAttr)})
	}
	if _dfbb.AlgnAttr != ST_RectAlignmentUnset {
		_cbfc, _abgb := _dfbb.AlgnAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0061\u006c\u0067\u006e"})
		if _abgb != nil {
			return _abgb
		}
		start.Attr = append(start.Attr, _cbfc)
	}
	e.EncodeToken(start)
	if _dfbb.SrgbClr != nil {
		_edb := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbb.SrgbClr, _edb)
	}
	if _dfbb.SchemeClr != nil {
		_cedd := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dfbb.SchemeClr, _cedd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_gedd *CT_LineJoinMiterProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _feff := range start.Attr {
		if _feff.Name.Local == "\u006c\u0069\u006d" {
			_fbgc, _dfc := ParseUnionST_PositivePercentage(_feff.Value)
			if _dfc != nil {
				return _dfc
			}
			_gedd.LimAttr = &_fbgc
			continue
		}
	}
	for {
		_edgc, _cefd := d.Token()
		if _cefd != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _cefd)
		}
		if _fac, _dcd := _edgc.(_f.EndElement); _dcd && _fac.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ggce *CT_SdtCheckboxSymbol) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ggce.FontAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0066\u006f\u006e\u0074"}, Value: _aa.Sprintf("\u0025\u0076", *_ggce.FontAttr)})
	}
	if _ggce.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", *_ggce.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}

func (_fbdg ST_LightRigType) String() string {
	switch _fbdg {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}

func (_fggg *ST_CompoundLine) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cbcfc, _fefe := d.Token()
	if _fefe != nil {
		return _fefe
	}
	if _edbb, _fbde := _cbcfc.(_f.EndElement); _fbde && _edbb.Name == start.Name {
		*_fggg = 1
		return nil
	}
	if _eadg, _ffbg := _cbcfc.(_f.CharData); !_ffbg {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbcfc)
	} else {
		switch string(_eadg) {
		case "":
			*_fggg = 0
		case "\u0073\u006e\u0067":
			*_fggg = 1
		case "\u0064\u0062\u006c":
			*_fggg = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_fggg = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_fggg = 4
		case "\u0074\u0072\u0069":
			*_fggg = 5
		}
	}
	_cbcfc, _fefe = d.Token()
	if _fefe != nil {
		return _fefe
	}
	if _aceee, _egbd := _cbcfc.(_f.EndElement); _egbd && _aceee.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbcfc)
}

func (_gef *CT_DefaultImageDpi) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _gef.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_StyleSet and its children, prefixing error messages with path
func (_afg *CT_StyleSet) ValidateWithPath(path string) error {
	if _cdge := _afg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cdge != nil {
		return _cdge
	}
	return nil
}

type CT_NumSpacing struct {
	ValAttr ST_NumSpacing
}

func NewCT_Scene3D() *CT_Scene3D {
	_eead := &CT_Scene3D{}
	_eead.Camera = NewCT_Camera()
	_eead.LightRig = NewCT_LightRig()
	return _eead
}

func (_gagd *EG_LineJoinProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_gagd.LineJoinPropertiesChoice.MarshalXML(e, _f.StartElement{})
	return nil
}

// ValidateWithPath validates the CT_FillTextEffect and its children, prefixing error messages with path
func (_fbg *CT_FillTextEffect) ValidateWithPath(path string) error {
	if _bge := _fbg.FillPropertiesChoice.ValidateWithPath(path + "/\u0046\u0069\u006c\u006cPr\u006fp\u0065\u0072\u0074\u0069\u0065s\u0043\u0068\u006f\u0069\u0063\u0065"); _bge != nil {
		return _bge
	}
	return nil
}

func (_gda *CT_NumSpacing) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_dbd, _deb := _gda.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
	if _deb != nil {
		return _deb
	}
	start.Attr = append(start.Attr, _dbd)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Ligatures and its children
func (_cddg *CT_Ligatures) Validate() error {
	return _cddg.ValidateWithPath("\u0043\u0054\u005fL\u0069\u0067\u0061\u0074\u0075\u0072\u0065\u0073")
}

type ConflictMode struct{ CT_OnOff }

func (_bffga *ST_PathShadeType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ffa, _gfee := d.Token()
	if _gfee != nil {
		return _gfee
	}
	if _beac, _fdgcd := _ffa.(_f.EndElement); _fdgcd && _beac.Name == start.Name {
		*_bffga = 1
		return nil
	}
	if _aadb, _fbaa := _ffa.(_f.CharData); !_fbaa {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffa)
	} else {
		switch string(_aadb) {
		case "":
			*_bffga = 0
		case "\u0073\u0068\u0061p\u0065":
			*_bffga = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_bffga = 2
		case "\u0072\u0065\u0063\u0074":
			*_bffga = 3
		}
	}
	_ffa, _gfee = d.Token()
	if _gfee != nil {
		return _gfee
	}
	if _efec, _bafd := _ffa.(_f.EndElement); _bafd && _efec.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffa)
}

func (_abbb ST_NumForm) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_abbb.String(), start)
}

// Validate validates the EG_ColorChoice and its children
func (_ffbe *EG_ColorChoice) Validate() error {
	return _ffbe.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

func NewCT_Ligatures() *CT_Ligatures {
	_ecbc := &CT_Ligatures{}
	_ecbc.ValAttr = ST_Ligatures(1)
	return _ecbc
}

// Validate validates the EG_FillPropertiesChoice and its children
func (_cfec *EG_FillPropertiesChoice) Validate() error {
	return _cfec.ValidateWithPath("\u0045\u0047\u005fFi\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_edbc *ST_LightRigDirection) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cefe, _ebgf := d.Token()
	if _ebgf != nil {
		return _ebgf
	}
	if _gafa, _acgg := _cefe.(_f.EndElement); _acgg && _gafa.Name == start.Name {
		*_edbc = 1
		return nil
	}
	if _fgbd, _agae := _cefe.(_f.CharData); !_agae {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cefe)
	} else {
		switch string(_fgbd) {
		case "":
			*_edbc = 0
		case "\u0074\u006c":
			*_edbc = 1
		case "\u0074":
			*_edbc = 2
		case "\u0074\u0072":
			*_edbc = 3
		case "\u006c":
			*_edbc = 4
		case "\u0072":
			*_edbc = 5
		case "\u0062\u006c":
			*_edbc = 6
		case "\u0062":
			*_edbc = 7
		case "\u0062\u0072":
			*_edbc = 8
		}
	}
	_cefe, _ebgf = d.Token()
	if _ebgf != nil {
		return _ebgf
	}
	if _fageg, _febd := _cefe.(_f.EndElement); _febd && _fageg.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cefe)
}

func (_edeg *DocId) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edeg.CT_LongHexNumber = *NewCT_LongHexNumber()
	for _, _ddcb := range start.Attr {
		if _ddcb.Name.Local == "\u0076\u0061\u006c" {
			_gff := _ddcb.Value
			_edeg.ValAttr = _gff
			continue
		}
	}
	for {
		_ggfee, _gbe := d.Token()
		if _gbe != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0044\u006f\u0063\u0049d\u003a\u0020\u0025\u0073", _gbe)
		}
		if _cbdfd, _bdg := _ggfee.(_f.EndElement); _bdg && _cbdfd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_dbfbe ST_RectAlignment) ValidateWithPath(path string) error {
	switch _dbfbe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbfbe))
	}
	return nil
}

// Validate validates the EG_LineDashProperties and its children
func (_abgag *EG_LineDashProperties) Validate() error {
	return _abgag.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

type EG_RunLevelConflicts struct {
	ConflictIns *_b.CT_RunTrackChange
	ConflictDel *_b.CT_RunTrackChange
}

func (_dcef *EG_ShadePropertiesChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dagba := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0069\u006e"}:
		_dcef.Lin = NewCT_LinearShadeProperties()
		if _bbbf := d.DecodeElement(_dcef.Lin, &_dagba); _bbbf != nil {
			return _bbbf
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0061\u0074\u0068"}:
		_dcef.Path = NewCT_PathShadeProperties()
		if _fffb := d.DecodeElement(_dcef.Path, &_dagba); _fffb != nil {
			return _fffb
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _dagba.Name)
		if _ggcae := d.Skip(); _ggcae != nil {
			return _ggcae
		}
	}
	return nil
}

func (_ebca ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _ebca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebca))
	}
	return nil
}

// Validate validates the CT_PositiveFixedPercentage and its children
func (_caca *CT_PositiveFixedPercentage) Validate() error {
	return _caca.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

type CT_OnOff struct {
	ValAttr ST_OnOff
}

// ValidateWithPath validates the CT_Reflection and its children, prefixing error messages with path
func (_afd *CT_Reflection) ValidateWithPath(path string) error {
	if _afd.BlurRadAttr != nil {
		if *_afd.BlurRadAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_afd.BlurRadAttr)
		}
		if *_afd.BlurRadAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_afd.BlurRadAttr)
		}
	}
	if _afd.StAAttr != nil {
		if _gdb := _afd.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _gdb != nil {
			return _gdb
		}
	}
	if _afd.StPosAttr != nil {
		if _cde := _afd.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cde != nil {
			return _cde
		}
	}
	if _afd.EndAAttr != nil {
		if _debg := _afd.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _debg != nil {
			return _debg
		}
	}
	if _afd.EndPosAttr != nil {
		if _fded := _afd.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _fded != nil {
			return _fded
		}
	}
	if _afd.DistAttr != nil {
		if *_afd.DistAttr < 0 {
			return _aa.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_afd.DistAttr)
		}
		if *_afd.DistAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_afd.DistAttr)
		}
	}
	if _afd.DirAttr != nil {
		if *_afd.DirAttr < 0 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_afd.DirAttr)
		}
		if *_afd.DirAttr >= 21600000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_afd.DirAttr)
		}
	}
	if _afd.FadeDirAttr != nil {
		if *_afd.FadeDirAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_afd.FadeDirAttr)
		}
		if *_afd.FadeDirAttr >= 21600000 {
			return _aa.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_afd.FadeDirAttr)
		}
	}
	if _afd.SxAttr != nil {
		if _eddb := _afd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _eddb != nil {
			return _eddb
		}
	}
	if _afd.SyAttr != nil {
		if _ffba := _afd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _ffba != nil {
			return _ffba
		}
	}
	if _afd.KxAttr != nil {
		if *_afd.KxAttr <= -5400000 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_afd.KxAttr)
		}
		if *_afd.KxAttr >= 5400000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_afd.KxAttr)
		}
	}
	if _afd.KyAttr != nil {
		if *_afd.KyAttr <= -5400000 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_afd.KyAttr)
		}
		if *_afd.KyAttr >= 5400000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_afd.KyAttr)
		}
	}
	if _bab := _afd.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bab != nil {
		return _bab
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_deed *CT_GradientStop) ValidateWithPath(path string) error {
	if _gfb := _deed.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _gfb != nil {
		return _gfb
	}
	if _deed.SrgbClr != nil {
		if _cdda := _deed.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cdda != nil {
			return _cdda
		}
	}
	if _deed.SchemeClr != nil {
		if _edgf := _deed.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _edgf != nil {
			return _edgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_eb *CT_Color) ValidateWithPath(path string) error {
	if _eb.SrgbClr != nil {
		if _gd := _eb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gd != nil {
			return _gd
		}
	}
	if _eb.SchemeClr != nil {
		if _fed := _eb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fed != nil {
			return _fed
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_fefc *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _fefc.AngAttr != nil {
		if *_fefc.AngAttr < 0 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fefc.AngAttr)
		}
		if *_fefc.AngAttr >= 21600000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fefc.AngAttr)
		}
	}
	if _fcb := _fefc.ScaledAttr.ValidateWithPath(path + "/\u0053\u0063\u0061\u006c\u0065\u0064\u0041\u0074\u0074\u0072"); _fcb != nil {
		return _fcb
	}
	return nil
}

type ST_PathShadeType byte

func ParseUnionST_Percentage(s string) (_d.ST_Percentage, error) {
	return _d.ParseUnionST_Percentage(s)
}

// ValidateWithPath validates the CT_Props3D and its children, prefixing error messages with path
func (_bfgb *CT_Props3D) ValidateWithPath(path string) error {
	if _bfgb.ExtrusionHAttr != nil {
		if *_bfgb.ExtrusionHAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfgb.ExtrusionHAttr)
		}
		if *_bfgb.ExtrusionHAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfgb.ExtrusionHAttr)
		}
	}
	if _bfgb.ContourWAttr != nil {
		if *_bfgb.ContourWAttr < 0 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_bfgb.ContourWAttr)
		}
		if *_bfgb.ContourWAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bfgb.ContourWAttr)
		}
	}
	if _fcd := _bfgb.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _fcd != nil {
		return _fcd
	}
	if _bfgb.BevelT != nil {
		if _ecg := _bfgb.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _ecg != nil {
			return _ecg
		}
	}
	if _bfgb.BevelB != nil {
		if _bgb := _bfgb.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _bgb != nil {
			return _bgb
		}
	}
	if _bfgb.ExtrusionClr != nil {
		if _ebfa := _bfgb.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _ebfa != nil {
			return _ebfa
		}
	}
	if _bfgb.ContourClr != nil {
		if _bcgc := _bfgb.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _bcgc != nil {
			return _bcgc
		}
	}
	return nil
}

type CT_SdtCheckbox struct {
	Checked        *CT_OnOff
	CheckedState   *CT_SdtCheckboxSymbol
	UncheckedState *CT_SdtCheckboxSymbol
}

func NewCT_SdtCheckboxSymbol() *CT_SdtCheckboxSymbol { _egf := &CT_SdtCheckboxSymbol{}; return _egf }

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_cddc *EG_ColorTransform) ValidateWithPath(path string) error {
	if _fgged := _cddc.ColorTransformChoice.ValidateWithPath(path + "/\u0043\u006f\u006c\u006frT\u0072a\u006e\u0073\u0066\u006f\u0072m\u0043\u0068\u006f\u0069\u0063\u0065"); _fgged != nil {
		return _fgged
	}
	return nil
}

// ValidateWithPath validates the CT_Ligatures and its children, prefixing error messages with path
func (_dcg *CT_Ligatures) ValidateWithPath(path string) error {
	if _dcg.ValAttr == ST_LigaturesUnset {
		return _aa.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cdb := _dcg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cdb != nil {
		return _cdb
	}
	return nil
}

// Validate validates the CT_DefaultImageDpi and its children
func (_af *CT_DefaultImageDpi) Validate() error {
	return _af.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0061\u0075\u006ct\u0049\u006da\u0067\u0065\u0044\u0070\u0069")
}

type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

// ValidateWithPath validates the CT_LongHexNumber and its children, prefixing error messages with path
func (_ccd *CT_LongHexNumber) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_SchemeColor and its children
func (_cfc *CT_SchemeColor) Validate() error {
	return _cfc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}

func (_acdf *CT_SdtCheckbox) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _acdf.Checked != nil {
		_aeba := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0063\u0068\u0065\u0063\u006b\u0065\u0064"}}
		e.EncodeElement(_acdf.Checked, _aeba)
	}
	if _acdf.CheckedState != nil {
		_bfa := _f.StartElement{Name: _f.Name{Local: "\u0077\u006fr\u003a\u0063\u0068e\u0063\u006b\u0065\u0064\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_acdf.CheckedState, _bfa)
	}
	if _acdf.UncheckedState != nil {
		_caaa := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0075\u006e\u0063\u0068\u0065c\u006b\u0065d\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_acdf.UncheckedState, _caaa)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_ColorTransform and its children
func (_aeeg *EG_ColorTransform) Validate() error {
	return _aeeg.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

func (_bfbd *CT_StylisticSets) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fbae:
	for {
		_geaf, _fgea := d.Token()
		if _fgea != nil {
			return _fgea
		}
		switch _begb := _geaf.(type) {
		case _f.StartElement:
			switch _begb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0074\u0079\u006c\u0065\u0053\u0065\u0074"}:
				_egcd := NewCT_StyleSet()
				if _afba := d.DecodeElement(_egcd, &_begb); _afba != nil {
					return _afba
				}
				_bfbd.StyleSet = append(_bfbd.StyleSet, _egcd)
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0069\u0073\u0074\u0069\u0063\u0053\u0065\u0074\u0073\u0020\u0025v", _begb.Name)
				if _ddga := d.Skip(); _ddga != nil {
					return _ddga
				}
			}
		case _f.EndElement:
			break _fbae
		case _f.CharData:
		}
	}
	return nil
}

func NewEG_FillProperties() *EG_FillProperties {
	_dgfa := &EG_FillProperties{}
	_dgfa.FillPropertiesChoice = NewEG_FillPropertiesChoice()
	return _dgfa
}

// ValidateWithPath validates the CT_Shadow and its children, prefixing error messages with path
func (_gdc *CT_Shadow) ValidateWithPath(path string) error {
	if _gdc.BlurRadAttr != nil {
		if *_gdc.BlurRadAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gdc.BlurRadAttr)
		}
		if *_gdc.BlurRadAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gdc.BlurRadAttr)
		}
	}
	if _gdc.DistAttr != nil {
		if *_gdc.DistAttr < 0 {
			return _aa.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gdc.DistAttr)
		}
		if *_gdc.DistAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_gdc.DistAttr)
		}
	}
	if _gdc.DirAttr != nil {
		if *_gdc.DirAttr < 0 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gdc.DirAttr)
		}
		if *_gdc.DirAttr >= 21600000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gdc.DirAttr)
		}
	}
	if _gdc.SxAttr != nil {
		if _aafg := _gdc.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _aafg != nil {
			return _aafg
		}
	}
	if _gdc.SyAttr != nil {
		if _fadea := _gdc.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _fadea != nil {
			return _fadea
		}
	}
	if _gdc.KxAttr != nil {
		if *_gdc.KxAttr <= -5400000 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gdc.KxAttr)
		}
		if *_gdc.KxAttr >= 5400000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gdc.KxAttr)
		}
	}
	if _gdc.KyAttr != nil {
		if *_gdc.KyAttr <= -5400000 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gdc.KyAttr)
		}
		if *_gdc.KyAttr >= 5400000 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gdc.KyAttr)
		}
	}
	if _dbbf := _gdc.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _dbbf != nil {
		return _dbbf
	}
	if _gdc.SrgbClr != nil {
		if _ggcee := _gdc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ggcee != nil {
			return _ggcee
		}
	}
	if _gdc.SchemeClr != nil {
		if _ccg := _gdc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ccg != nil {
			return _ccg
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShadePropertiesChoice and its children, prefixing error messages with path
func (_bggb *EG_ShadePropertiesChoice) ValidateWithPath(path string) error {
	if _bggb.Lin != nil {
		if _ggbfa := _bggb.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _ggbfa != nil {
			return _ggbfa
		}
	}
	if _bggb.Path != nil {
		if _feef := _bggb.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _feef != nil {
			return _feef
		}
	}
	return nil
}

func (_ccgf *CustomXmlConflictInsRangeStart) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ccgf.CT_TrackChange = *_b.NewCT_TrackChange()
	for {
		_dgeb, _cgd := d.Token()
		if _cgd != nil {
			return _aa.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073\u0052\u0061\u006e\u0067\u0065S\u0074\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _cgd)
		}
		if _edfe, _edfeg := _dgeb.(_f.EndElement); _edfeg && _edfe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fde *CT_LightRig) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_eba, _eggba := _fde.RigAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0072\u0069\u0067"})
	if _eggba != nil {
		return _eggba
	}
	start.Attr = append(start.Attr, _eba)
	_eba, _eggba = _fde.DirAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0064\u0069\u0072"})
	if _eggba != nil {
		return _eggba
	}
	start.Attr = append(start.Attr, _eba)
	e.EncodeToken(start)
	if _fde.Rot != nil {
		_ddceb := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0072\u006f\u0074"}}
		e.EncodeElement(_fde.Rot, _ddceb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_gfbe *ST_BevelPresetType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bbdc, _ebfb := d.Token()
	if _ebfb != nil {
		return _ebfb
	}
	if _gbfef, _aae := _bbdc.(_f.EndElement); _aae && _gbfef.Name == start.Name {
		*_gfbe = 1
		return nil
	}
	if _bffdc, _agfee := _bbdc.(_f.CharData); !_agfee {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbdc)
	} else {
		switch string(_bffdc) {
		case "":
			*_gfbe = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_gfbe = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_gfbe = 2
		case "\u0073\u006c\u006fp\u0065":
			*_gfbe = 3
		case "\u0063\u0072\u006fs\u0073":
			*_gfbe = 4
		case "\u0061\u006e\u0067l\u0065":
			*_gfbe = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_gfbe = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_gfbe = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_gfbe = 8
		case "\u0064\u0069\u0076o\u0074":
			*_gfbe = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_gfbe = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_gfbe = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_gfbe = 12
		}
	}
	_bbdc, _ebfb = d.Token()
	if _ebfb != nil {
		return _ebfb
	}
	if _dgaae, _dgdae := _bbdc.(_f.EndElement); _dgdae && _dgaae.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbdc)
}

type CT_StylisticSets struct {
	StyleSet []*CT_StyleSet
}

func NewEG_ColorTransformChoice() *EG_ColorTransformChoice {
	_befbb := &EG_ColorTransformChoice{}
	return _befbb
}

type DocId struct{ CT_LongHexNumber }

func (_ebdc *EG_Conflicts) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u0077\u006fr\u003a\u0045\u0047_\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0073"
	_ebdc.ConflictsChoice.MarshalXML(e, _f.StartElement{})
	return nil
}

type EG_RPrTextEffects struct {
	Glow        *CT_Glow
	Shadow      *CT_Shadow
	Reflection  *CT_Reflection
	TextOutline *CT_TextOutlineEffect
	TextFill    *CT_FillTextEffect
	Scene3d     *CT_Scene3D
	Props3d     *CT_Props3D
}

func (_geg *CustomXmlConflictInsRangeStart) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072:c\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006ef\u006ci\u0063t\u0049\u006e\u0073\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074"
	return _geg.CT_TrackChange.MarshalXML(e, start)
}

// Validate validates the CT_SphereCoords and its children
func (_gbbge *CT_SphereCoords) Validate() error {
	return _gbbge.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}

// Validate validates the EG_LineJoinPropertiesChoice and its children
func (_bffe *EG_LineJoinPropertiesChoice) Validate() error {
	return _bffe.ValidateWithPath("E\u0047\u005f\u004c\u0069\u006e\u0065J\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073C\u0068o\u0069\u0063\u0065")
}

func (_bfaa ST_PresetCameraType) Validate() error { return _bfaa.ValidateWithPath("") }

type CT_SolidColorFillProperties struct {
	SrgbClr   *CT_SRgbColor
	SchemeClr *CT_SchemeColor
}

// ValidateWithPath validates the CT_StylisticSets and its children, prefixing error messages with path
func (_fbf *CT_StylisticSets) ValidateWithPath(path string) error {
	for _fgda, _agbc := range _fbf.StyleSet {
		if _gag := _agbc.ValidateWithPath(_aa.Sprintf("\u0025s\u002fS\u0074\u0079\u006c\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _fgda)); _gag != nil {
			return _gag
		}
	}
	return nil
}

func (_agfe ST_PresetLineDashVal) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_eegda := _f.Attr{}
	_eegda.Name = name
	switch _agfe {
	case ST_PresetLineDashValUnset:
		_eegda.Value = ""
	case ST_PresetLineDashValSolid:
		_eegda.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_eegda.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValSysDot:
		_eegda.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValDash:
		_eegda.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDash:
		_eegda.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_eegda.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_eegda.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_eegda.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_eegda.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_eegda.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_eegda.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _eegda, nil
}

func (_cfge *CT_RelativeRect) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _fbce := range start.Attr {
		if _fbce.Name.Local == "\u006c" {
			_aecb, _fgc := ParseUnionST_Percentage(_fbce.Value)
			if _fgc != nil {
				return _fgc
			}
			_cfge.LAttr = &_aecb
			continue
		}
		if _fbce.Name.Local == "\u0074" {
			_eged, _fcf := ParseUnionST_Percentage(_fbce.Value)
			if _fcf != nil {
				return _fcf
			}
			_cfge.TAttr = &_eged
			continue
		}
		if _fbce.Name.Local == "\u0072" {
			_gbbd, _aca := ParseUnionST_Percentage(_fbce.Value)
			if _aca != nil {
				return _aca
			}
			_cfge.RAttr = &_gbbd
			continue
		}
		if _fbce.Name.Local == "\u0062" {
			_fcc, _dfb := ParseUnionST_Percentage(_fbce.Value)
			if _dfb != nil {
				return _dfb
			}
			_cfge.BAttr = &_fcc
			continue
		}
	}
	for {
		_cagg, _fcfa := d.Token()
		if _fcfa != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _fcfa)
		}
		if _aggg, _bdee := _cagg.(_f.EndElement); _bdee && _aggg.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_ColorTransform struct{ ColorTransformChoice *EG_ColorTransformChoice }

func (_ggabc *ST_NumSpacing) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agdg, _fgfab := d.Token()
	if _fgfab != nil {
		return _fgfab
	}
	if _aada, _aade := _agdg.(_f.EndElement); _aade && _aada.Name == start.Name {
		*_ggabc = 1
		return nil
	}
	if _agce, _eabb := _agdg.(_f.CharData); !_eabb {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdg)
	} else {
		switch string(_agce) {
		case "":
			*_ggabc = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_ggabc = 1
		case "\u0070\u0072\u006fp\u006f\u0072\u0074\u0069\u006f\u006e\u0061\u006c":
			*_ggabc = 2
		case "\u0074a\u0062\u0075\u006c\u0061\u0072":
			*_ggabc = 3
		}
	}
	_agdg, _fgfab = d.Token()
	if _fgfab != nil {
		return _fgfab
	}
	if _eaea, _fgac := _agdg.(_f.EndElement); _fgac && _eaea.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdg)
}

func (_edged *CT_SolidColorFillProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _edged.SrgbClr != nil {
		_bbcg := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_edged.SrgbClr, _bbcg)
	}
	if _edged.SchemeClr != nil {
		_abe := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_edged.SchemeClr, _abe)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_afa := &CT_PositiveFixedPercentage{}
	return _afa
}

type ST_RectAlignment byte

func NewCT_Reflection() *CT_Reflection { _gbf := &CT_Reflection{}; return _gbf }

// Validate validates the CT_SRgbColor and its children
func (_fbgcf *CT_SRgbColor) Validate() error {
	return _fbgcf.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}

func (_eeaac *EG_FillPropertiesChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _eeaac.NoFill != nil {
		_gbd := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeaac.NoFill, _gbd)
	} else if _eeaac.SolidFill != nil {
		_cgeb := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeaac.SolidFill, _cgeb)
	} else if _eeaac.GradFill != nil {
		_gcba := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eeaac.GradFill, _gcba)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fbc *CT_Glow) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ddg := range start.Attr {
		if _ddg.Name.Local == "\u0072\u0061\u0064" {
			_efa, _acf := _ae.ParseInt(_ddg.Value, 10, 64)
			if _acf != nil {
				return _acf
			}
			_fbc.RadAttr = &_efa
			continue
		}
	}
_gca:
	for {
		_efe, _feb := d.Token()
		if _feb != nil {
			return _feb
		}
		switch _bgd := _efe.(type) {
		case _f.StartElement:
			switch _bgd.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fbc.SrgbClr = NewCT_SRgbColor()
				if _bfd := d.DecodeElement(_fbc.SrgbClr, &_bgd); _bfd != nil {
					return _bfd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fbc.SchemeClr = NewCT_SchemeColor()
				if _acb := d.DecodeElement(_fbc.SchemeClr, &_bgd); _acb != nil {
					return _acb
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u006c\u006f\u0077\u0020\u0025\u0076", _bgd.Name)
				if _fef := d.Skip(); _fef != nil {
					return _fef
				}
			}
		case _f.EndElement:
			break _gca
		case _f.CharData:
		}
	}
	return nil
}

func (_bdb *CT_Reflection) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bdb.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0062\u006c\u0075\u0072\u0052\u0061\u0064"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.BlurRadAttr)})
	}
	if _bdb.StAAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0073\u0074\u0041"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.StAAttr)})
	}
	if _bdb.StPosAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0073\u0074\u0050\u006fs"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.StPosAttr)})
	}
	if _bdb.EndAAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0065\u006e\u0064\u0041"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.EndAAttr)})
	}
	if _bdb.EndPosAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.EndPosAttr)})
	}
	if _bdb.DistAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0064\u0069\u0073\u0074"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.DistAttr)})
	}
	if _bdb.DirAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0064\u0069\u0072"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.DirAttr)})
	}
	if _bdb.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0066\u0061\u0064\u0065\u0044\u0069\u0072"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.FadeDirAttr)})
	}
	if _bdb.SxAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0078"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.SxAttr)})
	}
	if _bdb.SyAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0079"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.SyAttr)})
	}
	if _bdb.KxAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006b\u0078"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.KxAttr)})
	}
	if _bdb.KyAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006b\u0079"}, Value: _aa.Sprintf("\u0025\u0076", *_bdb.KyAttr)})
	}
	if _bdb.AlgnAttr != ST_RectAlignmentUnset {
		_ffe, _cfbc := _bdb.AlgnAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0061\u006c\u0067\u006e"})
		if _cfbc != nil {
			return _cfbc
		}
		start.Attr = append(start.Attr, _ffe)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_TextOutlineEffect() *CT_TextOutlineEffect {
	_bffg := &CT_TextOutlineEffect{}
	_bffg.FillPropertiesChoice = NewEG_FillPropertiesChoice()
	_bffg.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
	return _bffg
}

func NewConflictMode() *ConflictMode {
	_cgac := &ConflictMode{}
	_cgac.CT_OnOff = *NewCT_OnOff()
	return _cgac
}

func (_aaff ST_Ligatures) Validate() error { return _aaff.ValidateWithPath("") }

func NewCT_Glow() *CT_Glow { _aeb := &CT_Glow{}; return _aeb }

// ValidateWithPath validates the EG_RunLevelConflicts and its children, prefixing error messages with path
func (_bccc *EG_RunLevelConflicts) ValidateWithPath(path string) error {
	if _bccc.ConflictIns != nil {
		if _abcg := _bccc.ConflictIns.ValidateWithPath(path + "\u002f\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"); _abcg != nil {
			return _abcg
		}
	}
	if _bccc.ConflictDel != nil {
		if _ecad := _bccc.ConflictDel.ValidateWithPath(path + "\u002f\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"); _ecad != nil {
			return _ecad
		}
	}
	return nil
}

func (_ddgg *EG_ColorTransform) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
_cafe:
	for {
		_afddd, _edaf := d.Token()
		if _edaf != nil {
			return _edaf
		}
		switch _eecg := _afddd.(type) {
		case _f.StartElement:
			switch _eecg.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0074\u0069\u006e\u0074"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _bbgf := d.DecodeElement(&_ddgg.ColorTransformChoice.Tint, &_eecg); _bbgf != nil {
					return _bbgf
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0068\u0061d\u0065"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _degb := d.DecodeElement(&_ddgg.ColorTransformChoice.Shade, &_eecg); _degb != nil {
					return _degb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0061\u006c\u0070h\u0061"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _efgc := d.DecodeElement(&_ddgg.ColorTransformChoice.Alpha, &_eecg); _efgc != nil {
					return _efgc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _aedd := d.DecodeElement(&_ddgg.ColorTransformChoice.HueMod, &_eecg); _aedd != nil {
					return _aedd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _befb := d.DecodeElement(&_ddgg.ColorTransformChoice.Sat, &_eecg); _befb != nil {
					return _befb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _fdfe := d.DecodeElement(&_ddgg.ColorTransformChoice.SatOff, &_eecg); _fdfe != nil {
					return _fdfe
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _gcee := d.DecodeElement(&_ddgg.ColorTransformChoice.SatMod, &_eecg); _gcee != nil {
					return _gcee
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _cebbe := d.DecodeElement(&_ddgg.ColorTransformChoice.Lum, &_eecg); _cebbe != nil {
					return _cebbe
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _dbdec := d.DecodeElement(&_ddgg.ColorTransformChoice.LumOff, &_eecg); _dbdec != nil {
					return _dbdec
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_ddgg.ColorTransformChoice = NewEG_ColorTransformChoice()
				if _agggb := d.DecodeElement(&_ddgg.ColorTransformChoice.LumMod, &_eecg); _agggb != nil {
					return _agggb
				}
			default:
				_fd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _eecg.Name)
				if _fdcf := d.Skip(); _fdcf != nil {
					return _fdcf
				}
			}
		case _f.EndElement:
			break _cafe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SdtCheckbox and its children
func (_ggbd *CT_SdtCheckbox) Validate() error {
	return _ggbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0064\u0074\u0043\u0068\u0065c\u006b\u0062\u006f\u0078")
}

// ValidateWithPath validates the EG_RPrOpenType and its children, prefixing error messages with path
func (_ffee *EG_RPrOpenType) ValidateWithPath(path string) error {
	if _ffee.Ligatures != nil {
		if _ccec := _ffee.Ligatures.ValidateWithPath(path + "\u002f\u004c\u0069\u0067\u0061\u0074\u0075\u0072\u0065\u0073"); _ccec != nil {
			return _ccec
		}
	}
	if _ffee.NumForm != nil {
		if _fada := _ffee.NumForm.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006f\u0072\u006d"); _fada != nil {
			return _fada
		}
	}
	if _ffee.NumSpacing != nil {
		if _adaa := _ffee.NumSpacing.ValidateWithPath(path + "/\u004e\u0075\u006d\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _adaa != nil {
			return _adaa
		}
	}
	if _ffee.StylisticSets != nil {
		if _ggded := _ffee.StylisticSets.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0069\u0073\u0074\u0069c\u0053\u0065\u0074\u0073"); _ggded != nil {
			return _ggded
		}
	}
	if _ffee.CntxtAlts != nil {
		if _cegc := _ffee.CntxtAlts.ValidateWithPath(path + "\u002f\u0043\u006e\u0074\u0078\u0074\u0041\u006c\u0074\u0073"); _cegc != nil {
			return _cegc
		}
	}
	return nil
}

func (_db *CT_FillTextEffect) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_db.FillPropertiesChoice = NewEG_FillPropertiesChoice()
_ff:
	for {
		_gfg, _ecb := d.Token()
		if _ecb != nil {
			return _ecb
		}
		switch _da := _gfg.(type) {
		case _f.StartElement:
			switch _da.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_db.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _bga := d.DecodeElement(&_db.FillPropertiesChoice.NoFill, &_da); _bga != nil {
					return _bga
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_db.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _cdd := d.DecodeElement(&_db.FillPropertiesChoice.SolidFill, &_da); _cdd != nil {
					return _cdd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_db.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _agc := d.DecodeElement(&_db.FillPropertiesChoice.GradFill, &_da); _agc != nil {
					return _agc
				}
			default:
				_fd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0054\u0065\u0078\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _da.Name)
				if _eeaa := d.Skip(); _eeaa != nil {
					return _eeaa
				}
			}
		case _f.EndElement:
			break _ff
		case _f.CharData:
		}
	}
	return nil
}

func (_bdcec *CT_SphereCoords) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006c\u0061\u0074"}, Value: _aa.Sprintf("\u0025\u0076", _bdcec.LatAttr)})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006c\u006f\u006e"}, Value: _aa.Sprintf("\u0025\u0076", _bdcec.LonAttr)})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0072\u0065\u0076"}, Value: _aa.Sprintf("\u0025\u0076", _bdcec.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewCT_NumSpacing() *CT_NumSpacing {
	_edgcg := &CT_NumSpacing{}
	_edgcg.ValAttr = ST_NumSpacing(1)
	return _edgcg
}

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_efaf *CT_Percentage) ValidateWithPath(path string) error {
	if _fcbe := _efaf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fcbe != nil {
		return _fcbe
	}
	return nil
}

func (_adbf *CT_PathShadeProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _adbf.PathAttr != ST_PathShadeTypeUnset {
		_fea, _gde := _adbf.PathAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0070\u0061\u0074\u0068"})
		if _gde != nil {
			return _gde
		}
		start.Attr = append(start.Attr, _fea)
	}
	e.EncodeToken(start)
	if _adbf.FillToRect != nil {
		_fcg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0066\u0069\u006c\u006c\u0054o\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_adbf.FillToRect, _fcg)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PositivePercentage and its children
func (_efda *CT_PositivePercentage) Validate() error {
	return _efda.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}

func NewEG_RPrTextEffects() *EG_RPrTextEffects {
	_bafa := &EG_RPrTextEffects{}
	return _bafa
}

type CT_GradientFillProperties struct {
	GsLst                 *CT_GradientStopList
	ShadePropertiesChoice *EG_ShadePropertiesChoice
}

func NewCT_Bevel() *CT_Bevel { _fe := &CT_Bevel{}; return _fe }

func (_fdfb *CustomXmlConflictInsRangeEnd) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006fn\u0066l\u0069\u0063\u0074\u0049\u006e\u0073\u0052\u0061\u006e\u0067\u0065\u0045\u006e\u0064"
	return _fdfb.CT_Markup.MarshalXML(e, start)
}

type CT_PositiveFixedPercentage struct {
	ValAttr _d.ST_PositiveFixedPercentage
}

func (_gfe *CT_Reflection) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _eda := range start.Attr {
		if _eda.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_bce, _cfbd := _ae.ParseInt(_eda.Value, 10, 64)
			if _cfbd != nil {
				return _cfbd
			}
			_gfe.BlurRadAttr = &_bce
			continue
		}
		if _eda.Name.Local == "\u0073\u0074\u0041" {
			_dfe, _dgg := ParseUnionST_PositiveFixedPercentage(_eda.Value)
			if _dgg != nil {
				return _dgg
			}
			_gfe.StAAttr = &_dfe
			continue
		}
		if _eda.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_afbe, _edc := ParseUnionST_PositiveFixedPercentage(_eda.Value)
			if _edc != nil {
				return _edc
			}
			_gfe.StPosAttr = &_afbe
			continue
		}
		if _eda.Name.Local == "\u0065\u006e\u0064\u0041" {
			_bcf, _aab := ParseUnionST_PositiveFixedPercentage(_eda.Value)
			if _aab != nil {
				return _aab
			}
			_gfe.EndAAttr = &_bcf
			continue
		}
		if _eda.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_bgc, _fbcb := ParseUnionST_PositiveFixedPercentage(_eda.Value)
			if _fbcb != nil {
				return _fbcb
			}
			_gfe.EndPosAttr = &_bgc
			continue
		}
		if _eda.Name.Local == "\u0064\u0069\u0073\u0074" {
			_dcaf, _cbbc := _ae.ParseInt(_eda.Value, 10, 64)
			if _cbbc != nil {
				return _cbbc
			}
			_gfe.DistAttr = &_dcaf
			continue
		}
		if _eda.Name.Local == "\u0064\u0069\u0072" {
			_bdd, _eaed := _ae.ParseInt(_eda.Value, 10, 32)
			if _eaed != nil {
				return _eaed
			}
			_ebd := int32(_bdd)
			_gfe.DirAttr = &_ebd
			continue
		}
		if _eda.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_efcf, _fdff := _ae.ParseInt(_eda.Value, 10, 32)
			if _fdff != nil {
				return _fdff
			}
			_cgg := int32(_efcf)
			_gfe.FadeDirAttr = &_cgg
			continue
		}
		if _eda.Name.Local == "\u0073\u0078" {
			_cbdf, _bcga := ParseUnionST_Percentage(_eda.Value)
			if _bcga != nil {
				return _bcga
			}
			_gfe.SxAttr = &_cbdf
			continue
		}
		if _eda.Name.Local == "\u0073\u0079" {
			_deefb, _bfe := ParseUnionST_Percentage(_eda.Value)
			if _bfe != nil {
				return _bfe
			}
			_gfe.SyAttr = &_deefb
			continue
		}
		if _eda.Name.Local == "\u006b\u0078" {
			_eaa, _dbfg := _ae.ParseInt(_eda.Value, 10, 32)
			if _dbfg != nil {
				return _dbfg
			}
			_eeag := int32(_eaa)
			_gfe.KxAttr = &_eeag
			continue
		}
		if _eda.Name.Local == "\u006b\u0079" {
			_gceag, _ffdc := _ae.ParseInt(_eda.Value, 10, 32)
			if _ffdc != nil {
				return _ffdc
			}
			_dcf := int32(_gceag)
			_gfe.KyAttr = &_dcf
			continue
		}
		if _eda.Name.Local == "\u0061\u006c\u0067\u006e" {
			_gfe.AlgnAttr.UnmarshalXMLAttr(_eda)
			continue
		}
	}
	for {
		_agag, _fgdg := d.Token()
		if _fgdg != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052e\u0066l\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _fgdg)
		}
		if _eeef, _egc := _agag.(_f.EndElement); _egc && _eeef.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gccc *ST_OnOff) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gfca, _ebcgf := d.Token()
	if _ebcgf != nil {
		return _ebcgf
	}
	if _becc, _ebcf := _gfca.(_f.EndElement); _ebcf && _becc.Name == start.Name {
		*_gccc = 1
		return nil
	}
	if _cbacc, _cgda := _gfca.(_f.CharData); !_cgda {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfca)
	} else {
		switch string(_cbacc) {
		case "":
			*_gccc = 0
		case "\u0074\u0072\u0075\u0065":
			*_gccc = 1
		case "\u0066\u0061\u006cs\u0065":
			*_gccc = 2
		case "\u0030":
			*_gccc = 3
		case "\u0031":
			*_gccc = 4
		}
	}
	_gfca, _ebcgf = d.Token()
	if _ebcgf != nil {
		return _ebcgf
	}
	if _cfbcb, _adcg := _gfca.(_f.EndElement); _adcg && _cfbcb.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfca)
}

// ValidateWithPath validates the CustomXmlConflictDelRangeEnd and its children, prefixing error messages with path
func (_affc *CustomXmlConflictDelRangeEnd) ValidateWithPath(path string) error {
	if _fccb := _affc.CT_Markup.ValidateWithPath(path); _fccb != nil {
		return _fccb
	}
	return nil
}

func ParseUnionST_FixedPercentage(s string) (_d.ST_FixedPercentage, error) {
	return _d.ParseUnionST_FixedPercentage(s)
}

func (_ceea ST_PresetMaterialType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_edde := _f.Attr{}
	_edde.Name = name
	switch _ceea {
	case ST_PresetMaterialTypeUnset:
		_edde.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_edde.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_edde.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_edde.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_edde.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_edde.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_edde.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_edde.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_edde.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_edde.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_edde.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_edde.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_edde.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_edde.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_edde.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_edde.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	case ST_PresetMaterialTypeNone:
		_edde.Value = "\u006e\u006f\u006e\u0065"
	}
	return _edde, nil
}

func NewCT_Percentage() *CT_Percentage { _gcdc := &CT_Percentage{}; return _gcdc }

func (_caba ST_Ligatures) String() string {
	switch _caba {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064"
	case 3:
		return "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c"
	case 4:
		return "\u0068\u0069\u0073\u0074\u006f\u0072\u0069\u0063\u0061\u006c"
	case 5:
		return "\u0064\u0069\u0073c\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case 6:
		return "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0043o\u006e\u0074e\u0078\u0074\u0075\u0061\u006c"
	case 7:
		return "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0048i\u0073\u0074o\u0072\u0069\u0063\u0061\u006c"
	case 8:
		return "c\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048i\u0073\u0074\u006f\u0072ic\u0061\u006c"
	case 9:
		return "s\u0074a\u006e\u0064\u0061\u0072\u0064\u0044\u0069\u0073c\u0072\u0065\u0074\u0069on\u0061\u006c"
	case 10:
		return "\u0063\u006f\u006e\u0074ex\u0074\u0075\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c"
	case 11:
		return "\u0068\u0069\u0073\u0074or\u0069\u0063\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c"
	case 12:
		return "\u0073\u0074\u0061\u006ed\u0061\u0072\u0064\u0043\u006f\u006e\u0074\u0065\u0078\u0074u\u0061l\u0048\u0069\u0073\u0074\u006f\u0072\u0069c\u0061\u006c"
	case 13:
		return "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0043\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case 14:
		return "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0048\u0069s\u0074\u006f\u0072\u0069\u0063\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048\u0069\u0073\u0074\u006fr\u0069c\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case 16:
		return "\u0061\u006c\u006c"
	}
	return ""
}

func (_efeb *CT_PositivePercentage) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ebcg := range start.Attr {
		if _ebcg.Name.Local == "\u0076\u0061\u006c" {
			_beg, _bgdd := ParseUnionST_PositivePercentage(_ebcg.Value)
			if _bgdd != nil {
				return _bgdd
			}
			_efeb.ValAttr = _beg
			continue
		}
	}
	for {
		_dda, _agd := d.Token()
		if _agd != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _agd)
		}
		if _fbgd, _eec := _dda.(_f.EndElement); _eec && _fbgd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_bgg *ConflictMode) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006fr\u003a\u0063\u006fn\u0066\u006c\u0069\u0063\u0074\u004d\u006f\u0064\u0065"
	return _bgg.CT_OnOff.MarshalXML(e, start)
}

type EG_LineJoinPropertiesChoice struct {
	Round *_b.CT_Empty
	Bevel *_b.CT_Empty
	Miter *CT_LineJoinMiterProperties
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

func NewCT_FillTextEffect() *CT_FillTextEffect {
	_dca := &CT_FillTextEffect{}
	_dca.FillPropertiesChoice = NewEG_FillPropertiesChoice()
	return _dca
}

func NewCT_RelativeRect() *CT_RelativeRect { _eceg := &CT_RelativeRect{}; return _eceg }

// Validate validates the CT_LongHexNumber and its children
func (_bba *CT_LongHexNumber) Validate() error {
	return _bba.ValidateWithPath("\u0043\u0054_\u004c\u006f\u006eg\u0048\u0065\u0078\u004e\u0075\u006d\u0062\u0065\u0072")
}

func NewCT_Color() *CT_Color { _gf := &CT_Color{}; return _gf }

func (_cbfg ST_Ligatures) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_bcdg := _f.Attr{}
	_bcdg.Name = name
	switch _cbfg {
	case ST_LigaturesUnset:
		_bcdg.Value = ""
	case ST_LigaturesNone:
		_bcdg.Value = "\u006e\u006f\u006e\u0065"
	case ST_LigaturesStandard:
		_bcdg.Value = "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064"
	case ST_LigaturesContextual:
		_bcdg.Value = "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c"
	case ST_LigaturesHistorical:
		_bcdg.Value = "\u0068\u0069\u0073\u0074\u006f\u0072\u0069\u0063\u0061\u006c"
	case ST_LigaturesDiscretional:
		_bcdg.Value = "\u0064\u0069\u0073c\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case ST_LigaturesStandardContextual:
		_bcdg.Value = "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0043o\u006e\u0074e\u0078\u0074\u0075\u0061\u006c"
	case ST_LigaturesStandardHistorical:
		_bcdg.Value = "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0048i\u0073\u0074o\u0072\u0069\u0063\u0061\u006c"
	case ST_LigaturesContextualHistorical:
		_bcdg.Value = "c\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048i\u0073\u0074\u006f\u0072ic\u0061\u006c"
	case ST_LigaturesStandardDiscretional:
		_bcdg.Value = "s\u0074a\u006e\u0064\u0061\u0072\u0064\u0044\u0069\u0073c\u0072\u0065\u0074\u0069on\u0061\u006c"
	case ST_LigaturesContextualDiscretional:
		_bcdg.Value = "\u0063\u006f\u006e\u0074ex\u0074\u0075\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c"
	case ST_LigaturesHistoricalDiscretional:
		_bcdg.Value = "\u0068\u0069\u0073\u0074or\u0069\u0063\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c"
	case ST_LigaturesStandardContextualHistorical:
		_bcdg.Value = "\u0073\u0074\u0061\u006ed\u0061\u0072\u0064\u0043\u006f\u006e\u0074\u0065\u0078\u0074u\u0061l\u0048\u0069\u0073\u0074\u006f\u0072\u0069c\u0061\u006c"
	case ST_LigaturesStandardContextualDiscretional:
		_bcdg.Value = "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0043\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case ST_LigaturesStandardHistoricalDiscretional:
		_bcdg.Value = "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0048\u0069s\u0074\u006f\u0072\u0069\u0063\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case ST_LigaturesContextualHistoricalDiscretional:
		_bcdg.Value = "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048\u0069\u0073\u0074\u006fr\u0069c\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c"
	case ST_LigaturesAll:
		_bcdg.Value = "\u0061\u006c\u006c"
	}
	return _bcdg, nil
}

func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_aabag := &EG_LineJoinProperties{}
	_aabag.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
	return _aabag
}

func (_gagdd ST_PenAlignment) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gagdd.String(), start)
}

func (_ecbb *ConflictMode) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ecbb.CT_OnOff = *NewCT_OnOff()
	for _, _ddad := range start.Attr {
		if _ddad.Name.Local == "\u0076\u0061\u006c" {
			_ecbb.ValAttr.UnmarshalXMLAttr(_ddad)
			continue
		}
	}
	for {
		_age, _fcbed := d.Token()
		if _fcbed != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006e\u0066\u006ci\u0063\u0074\u004d\u006f\u0064\u0065\u003a\u0020\u0025\u0073", _fcbed)
		}
		if _dffc, _egff := _age.(_f.EndElement); _egff && _dffc.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCustomXmlConflictDelRangeEnd() *CustomXmlConflictDelRangeEnd {
	_bgfc := &CustomXmlConflictDelRangeEnd{}
	_bgfc.CT_Markup = *_b.NewCT_Markup()
	return _bgfc
}

// Validate validates the EG_RPrTextEffects and its children
func (_bbee *EG_RPrTextEffects) Validate() error {
	return _bbee.ValidateWithPath("\u0045\u0047\u005f\u0052\u0050\u0072\u0054\u0065\u0078\u0074\u0045\u0066f\u0065\u0063\u0074\u0073")
}

func (_agcbc *EntityPicker) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agcbc.CT_Empty = *_b.NewCT_Empty()
	for {
		_bac, _agcfa := d.Token()
		if _agcfa != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0045\u006e\u0074\u0069\u0074y\u0050\u0069\u0063\u006b\u0065\u0072\u003a\u0020\u0025\u0073", _agcfa)
		}
		if _bbada, _fagd := _bac.(_f.EndElement); _fagd && _bbada.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fgfg ST_PresetMaterialType) Validate() error { return _fgfg.ValidateWithPath("") }

func (_acae *EG_RunLevelConflicts) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u0077o\u0072\u003a\u0045\u0047\u005f\u0052\u0075\u006e\u004c\u0065\u0076e\u006c\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0073"
	if _acae.ConflictIns != nil {
		_dbee := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0063\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"}}
		e.EncodeElement(_acae.ConflictIns, _dbee)
	}
	if _acae.ConflictDel != nil {
		_dbfb := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0063\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"}}
		e.EncodeElement(_acae.ConflictDel, _dbfb)
	}
	return nil
}

func (_daf *CT_Props3D) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dgaa := range start.Attr {
		if _dgaa.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_edge, _deg := _ae.ParseInt(_dgaa.Value, 10, 64)
			if _deg != nil {
				return _deg
			}
			_daf.ExtrusionHAttr = &_edge
			continue
		}
		if _dgaa.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_ebeb, _egbg := _ae.ParseInt(_dgaa.Value, 10, 64)
			if _egbg != nil {
				return _egbg
			}
			_daf.ContourWAttr = &_ebeb
			continue
		}
		if _dgaa.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_daf.PrstMaterialAttr.UnmarshalXMLAttr(_dgaa)
			continue
		}
	}
_aegc:
	for {
		_dbde, _gcaf := d.Token()
		if _gcaf != nil {
			return _gcaf
		}
		switch _cfb := _dbde.(type) {
		case _f.StartElement:
			switch _cfb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_daf.BevelT = NewCT_Bevel()
				if _deef := d.DecodeElement(_daf.BevelT, &_cfb); _deef != nil {
					return _deef
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_daf.BevelB = NewCT_Bevel()
				if _bca := d.DecodeElement(_daf.BevelB, &_cfb); _bca != nil {
					return _bca
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_daf.ExtrusionClr = NewCT_Color()
				if _dgfg := d.DecodeElement(_daf.ExtrusionClr, &_cfb); _dgfg != nil {
					return _dgfg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_daf.ContourClr = NewCT_Color()
				if _dddd := d.DecodeElement(_daf.ContourClr, &_cfb); _dddd != nil {
					return _dddd
				}
			default:
				_fd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0072\u006f\u0070\u0073\u0033\u0044\u0020\u0025\u0076", _cfb.Name)
				if _aad := d.Skip(); _aad != nil {
					return _aad
				}
			}
		case _f.EndElement:
			break _aegc
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_PositivePercentage() *CT_PositivePercentage {
	_gcbb := &CT_PositivePercentage{}
	return _gcbb
}

func (_cbbb *EG_ColorChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dbbda := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
		_cbbb.SrgbClr = NewCT_SRgbColor()
		if _caf := d.DecodeElement(_cbbb.SrgbClr, &_dbbda); _caf != nil {
			return _caf
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
		_cbbb.SchemeClr = NewCT_SchemeColor()
		if _edab := d.DecodeElement(_cbbb.SchemeClr, &_dbbda); _edab != nil {
			return _edab
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _dbbda.Name)
		if _dagg := d.Skip(); _dagg != nil {
			return _dagg
		}
	}
	return nil
}

func (_fgca *EG_ShadeProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_fgca.ShadePropertiesChoice.MarshalXML(e, _f.StartElement{})
	return nil
}

func (_acfd *EG_LineJoinProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_acfd.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
_cdeg:
	for {
		_bdbd, _afeg := d.Token()
		if _afeg != nil {
			return _afeg
		}
		switch _aacb := _bdbd.(type) {
		case _f.StartElement:
			switch _aacb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0072\u006f\u0075n\u0064"}:
				_acfd.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _dgbe := d.DecodeElement(&_acfd.LineJoinPropertiesChoice.Round, &_aacb); _dgbe != nil {
					return _dgbe
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0062\u0065\u0076e\u006c"}:
				_acfd.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _caaf := d.DecodeElement(&_acfd.LineJoinPropertiesChoice.Bevel, &_aacb); _caaf != nil {
					return _caaf
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006d\u0069\u0074e\u0072"}:
				_acfd.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _agcb := d.DecodeElement(&_acfd.LineJoinPropertiesChoice.Miter, &_aacb); _agcb != nil {
					return _agcb
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aacb.Name)
				if _dfd := d.Skip(); _dfd != nil {
					return _dfd
				}
			}
		case _f.EndElement:
			break _cdeg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the EntityPicker and its children
func (_gbcga *EntityPicker) Validate() error {
	return _gbcga.ValidateWithPath("\u0045\u006e\u0074i\u0074\u0079\u0050\u0069\u0063\u006b\u0065\u0072")
}

func (_ceaa ST_BevelPresetType) String() string {
	switch _ceaa {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}

func (_afada ST_LineCap) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_gcca := _f.Attr{}
	_gcca.Name = name
	switch _afada {
	case ST_LineCapUnset:
		_gcca.Value = ""
	case ST_LineCapRnd:
		_gcca.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_gcca.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_gcca.Value = "\u0066\u006c\u0061\u0074"
	}
	return _gcca, nil
}

type CT_RelativeRect struct {
	LAttr *_d.ST_Percentage
	TAttr *_d.ST_Percentage
	RAttr *_d.ST_Percentage
	BAttr *_d.ST_Percentage
}

type DefaultImageDpi struct{ CT_DefaultImageDpi }

type CustomXmlConflictInsRangeStart struct{ _b.CT_TrackChange }

// ValidateWithPath validates the EG_ColorTransformChoice and its children, prefixing error messages with path
func (_eced *EG_ColorTransformChoice) ValidateWithPath(path string) error {
	if _eced.Tint != nil {
		if _fbfa := _eced.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _fbfa != nil {
			return _fbfa
		}
	}
	if _eced.Shade != nil {
		if _egcge := _eced.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _egcge != nil {
			return _egcge
		}
	}
	if _eced.Alpha != nil {
		if _gbge := _eced.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _gbge != nil {
			return _gbge
		}
	}
	if _eced.HueMod != nil {
		if _fdfd := _eced.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _fdfd != nil {
			return _fdfd
		}
	}
	if _eced.Sat != nil {
		if _gbed := _eced.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _gbed != nil {
			return _gbed
		}
	}
	if _eced.SatOff != nil {
		if _bcffb := _eced.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _bcffb != nil {
			return _bcffb
		}
	}
	if _eced.SatMod != nil {
		if _dbfgd := _eced.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _dbfgd != nil {
			return _dbfgd
		}
	}
	if _eced.Lum != nil {
		if _cafb := _eced.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _cafb != nil {
			return _cafb
		}
	}
	if _eced.LumOff != nil {
		if _cfea := _eced.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _cfea != nil {
			return _cfea
		}
	}
	if _eced.LumMod != nil {
		if _acfbb := _eced.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _acfbb != nil {
			return _acfbb
		}
	}
	return nil
}

func (_ffad ST_PathShadeType) Validate() error { return _ffad.ValidateWithPath("") }

type CT_Percentage struct{ ValAttr _d.ST_Percentage }

// Validate validates the CT_GradientStop and its children
func (_ea *CT_GradientStop) Validate() error {
	return _ea.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

func NewEG_ConflictsChoice() *EG_ConflictsChoice { _eeaec := &EG_ConflictsChoice{}; return _eeaec }

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_eedg *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _eedg.GsLst != nil {
		if _ba := _eedg.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _ba != nil {
			return _ba
		}
	}
	if _aebe := _eedg.ShadePropertiesChoice.ValidateWithPath(path + "\u002f\u0053\u0068\u0061de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069c\u0065"); _aebe != nil {
		return _aebe
	}
	return nil
}

type ST_LightRigDirection byte

func (_fae *CT_DefaultImageDpi) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dg := range start.Attr {
		if _dg.Name.Local == "\u0076\u0061\u006c" {
			_abb, _bb := _ae.ParseInt(_dg.Value, 10, 64)
			if _bb != nil {
				return _bb
			}
			_fae.ValAttr = _abb
			continue
		}
	}
	for {
		_bef, _acc := d.Token()
		if _acc != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0044\u0065\u0066\u0061\u0075\u006c\u0074I\u006d\u0061\u0067\u0065\u0044\u0070\u0069\u003a\u0020\u0025\u0073", _acc)
		}
		if _gaa, _ddd := _bef.(_f.EndElement); _ddd && _gaa.Name == start.Name {
			break
		}
	}
	return nil
}

func (_debca *ST_PresetLineDashVal) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dfafg, _abaf := d.Token()
	if _abaf != nil {
		return _abaf
	}
	if _cdege, _dabea := _dfafg.(_f.EndElement); _dabea && _cdege.Name == start.Name {
		*_debca = 1
		return nil
	}
	if _cdce, _daec := _dfafg.(_f.CharData); !_daec {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfafg)
	} else {
		switch string(_cdce) {
		case "":
			*_debca = 0
		case "\u0073\u006f\u006ci\u0064":
			*_debca = 1
		case "\u0064\u006f\u0074":
			*_debca = 2
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_debca = 3
		case "\u0064\u0061\u0073\u0068":
			*_debca = 4
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_debca = 5
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_debca = 6
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_debca = 7
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_debca = 8
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_debca = 9
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_debca = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_debca = 11
		}
	}
	_dfafg, _abaf = d.Token()
	if _abaf != nil {
		return _abaf
	}
	if _aacbe, _cgga := _dfafg.(_f.EndElement); _cgga && _aacbe.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfafg)
}

func (_afab *EG_RPrTextEffects) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_gefe:
	for {
		_cdcdf, _deag := d.Token()
		if _deag != nil {
			return _deag
		}
		switch _cfba := _cdcdf.(type) {
		case _f.StartElement:
			switch _cfba.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u006c\u006f\u0077"}:
				_afab.Glow = NewCT_Glow()
				if _cedfa := d.DecodeElement(_afab.Glow, &_cfba); _cedfa != nil {
					return _cedfa
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_afab.Shadow = NewCT_Shadow()
				if _aefe := d.DecodeElement(_afab.Shadow, &_cfba); _aefe != nil {
					return _aefe
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_afab.Reflection = NewCT_Reflection()
				if _gabb := d.DecodeElement(_afab.Reflection, &_cfba); _gabb != nil {
					return _gabb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "t\u0065\u0078\u0074\u004f\u0075\u0074\u006c\u0069\u006e\u0065"}:
				_afab.TextOutline = NewCT_TextOutlineEffect()
				if _agcc := d.DecodeElement(_afab.TextOutline, &_cfba); _agcc != nil {
					return _agcc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u006c\u006c"}:
				_afab.TextFill = NewCT_FillTextEffect()
				if _dcac := d.DecodeElement(_afab.TextFill, &_cfba); _dcac != nil {
					return _dcac
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_afab.Scene3d = NewCT_Scene3D()
				if _cffg := d.DecodeElement(_afab.Scene3d, &_cfba); _cffg != nil {
					return _cffg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070r\u006f\u0070\u0073\u0033\u0064"}:
				_afab.Props3d = NewCT_Props3D()
				if _dggg := d.DecodeElement(_afab.Props3d, &_cfba); _dggg != nil {
					return _dggg
				}
			default:
				_fd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0052\u0050\u0072\u0054\u0065\u0078\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _cfba.Name)
				if _cadg := d.Skip(); _cadg != nil {
					return _cadg
				}
			}
		case _f.EndElement:
			break _gefe
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_dfbe *CT_SphereCoords) ValidateWithPath(path string) error {
	if _dfbe.LatAttr < 0 {
		return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dfbe.LatAttr)
	}
	if _dfbe.LatAttr >= 21600000 {
		return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dfbe.LatAttr)
	}
	if _dfbe.LonAttr < 0 {
		return _aa.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dfbe.LonAttr)
	}
	if _dfbe.LonAttr >= 21600000 {
		return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dfbe.LonAttr)
	}
	if _dfbe.RevAttr < 0 {
		return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dfbe.RevAttr)
	}
	if _dfbe.RevAttr >= 21600000 {
		return _aa.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dfbe.RevAttr)
	}
	return nil
}

func (_bfgef *ST_LineCap) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bfgef = 0
	case "\u0072\u006e\u0064":
		*_bfgef = 1
	case "\u0073\u0071":
		*_bfgef = 2
	case "\u0066\u006c\u0061\u0074":
		*_bfgef = 3
	}
	return nil
}

func (_gcag *EG_Conflicts) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcag.ConflictsChoice = NewEG_ConflictsChoice()
_dcebf:
	for {
		_eef, _fadd := d.Token()
		if _fadd != nil {
			return _fadd
		}
		switch _cgae := _eef.(type) {
		case _f.StartElement:
			switch _cgae.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"}:
				_gcag.ConflictsChoice = NewEG_ConflictsChoice()
				if _dgdc := d.DecodeElement(&_gcag.ConflictsChoice.ConflictIns, &_cgae); _dgdc != nil {
					return _dgdc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"}:
				_gcag.ConflictsChoice = NewEG_ConflictsChoice()
				if _eefa := d.DecodeElement(&_gcag.ConflictsChoice.ConflictDel, &_cgae); _eefa != nil {
					return _eefa
				}
			default:
				_fd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047_C\u006f\u006ef\u006c\u0069\u0063\u0074\u0073\u0020\u0025\u0076", _cgae.Name)
				if _add := d.Skip(); _add != nil {
					return _add
				}
			}
		case _f.EndElement:
			break _dcebf
		case _f.CharData:
		}
	}
	return nil
}

type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

type EntityPicker struct{ _b.CT_Empty }

func (_dbac *Checkbox) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dbac.CT_SdtCheckbox = *NewCT_SdtCheckbox()
_cabea:
	for {
		_gefc, _efg := d.Token()
		if _efg != nil {
			return _efg
		}
		switch _aced := _gefc.(type) {
		case _f.StartElement:
			switch _aced.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063h\u0065\u0063\u006b\u0065\u0064"}:
				_dbac.Checked = NewCT_OnOff()
				if _fegd := d.DecodeElement(_dbac.Checked, &_aced); _fegd != nil {
					return _fegd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063\u0068\u0065c\u006b\u0065\u0064\u0053\u0074\u0061\u0074\u0065"}:
				_dbac.CheckedState = NewCT_SdtCheckboxSymbol()
				if _bgdc := d.DecodeElement(_dbac.CheckedState, &_aced); _bgdc != nil {
					return _bgdc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0075\u006e\u0063\u0068\u0065\u0063\u006b\u0065\u0064S\u0074\u0061\u0074\u0065"}:
				_dbac.UncheckedState = NewCT_SdtCheckboxSymbol()
				if _ddbac := d.DecodeElement(_dbac.UncheckedState, &_aced); _ddbac != nil {
					return _ddbac
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0065\u0063\u006b\u0062\u006f\u0078\u0020\u0025\u0076", _aced.Name)
				if _cfag := d.Skip(); _cfag != nil {
					return _cfag
				}
			}
		case _f.EndElement:
			break _cabea
		case _f.CharData:
		}
	}
	return nil
}

type EG_ShadeProperties struct{ ShadePropertiesChoice *EG_ShadePropertiesChoice }

type CT_StyleSet struct {
	IdAttr  uint64
	ValAttr ST_OnOff
}

// Validate validates the EG_RunLevelConflicts and its children
func (_efgg *EG_RunLevelConflicts) Validate() error {
	return _efgg.ValidateWithPath("E\u0047_\u0052\u0075\u006e\u004c\u0065\u0076\u0065\u006cC\u006f\u006e\u0066\u006cic\u0074\u0073")
}

func (_eaaa *CT_Shadow) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _eegd := range start.Attr {
		if _eegd.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_acffb, _edba := _ae.ParseInt(_eegd.Value, 10, 64)
			if _edba != nil {
				return _edba
			}
			_eaaa.BlurRadAttr = &_acffb
			continue
		}
		if _eegd.Name.Local == "\u0064\u0069\u0073\u0074" {
			_bgce, _fbgg := _ae.ParseInt(_eegd.Value, 10, 64)
			if _fbgg != nil {
				return _fbgg
			}
			_eaaa.DistAttr = &_bgce
			continue
		}
		if _eegd.Name.Local == "\u0064\u0069\u0072" {
			_eag, _bdce := _ae.ParseInt(_eegd.Value, 10, 32)
			if _bdce != nil {
				return _bdce
			}
			_cbcb := int32(_eag)
			_eaaa.DirAttr = &_cbcb
			continue
		}
		if _eegd.Name.Local == "\u0073\u0078" {
			_ecdf, _gfa := ParseUnionST_Percentage(_eegd.Value)
			if _gfa != nil {
				return _gfa
			}
			_eaaa.SxAttr = &_ecdf
			continue
		}
		if _eegd.Name.Local == "\u0073\u0079" {
			_cbbcg, _ddba := ParseUnionST_Percentage(_eegd.Value)
			if _ddba != nil {
				return _ddba
			}
			_eaaa.SyAttr = &_cbbcg
			continue
		}
		if _eegd.Name.Local == "\u006b\u0078" {
			_eaab, _ffbb := _ae.ParseInt(_eegd.Value, 10, 32)
			if _ffbb != nil {
				return _ffbb
			}
			_dfg := int32(_eaab)
			_eaaa.KxAttr = &_dfg
			continue
		}
		if _eegd.Name.Local == "\u006b\u0079" {
			_dbb, _edeb := _ae.ParseInt(_eegd.Value, 10, 32)
			if _edeb != nil {
				return _edeb
			}
			_afc := int32(_dbb)
			_eaaa.KyAttr = &_afc
			continue
		}
		if _eegd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_eaaa.AlgnAttr.UnmarshalXMLAttr(_eegd)
			continue
		}
	}
_gfbad:
	for {
		_eeefg, _geag := d.Token()
		if _geag != nil {
			return _geag
		}
		switch _cbdb := _eeefg.(type) {
		case _f.StartElement:
			switch _cbdb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eaaa.SrgbClr = NewCT_SRgbColor()
				if _abbcb := d.DecodeElement(_eaaa.SrgbClr, &_cbdb); _abbcb != nil {
					return _abbcb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eaaa.SchemeClr = NewCT_SchemeColor()
				if _bgea := d.DecodeElement(_eaaa.SchemeClr, &_cbdb); _bgea != nil {
					return _bgea
				}
			default:
				_fd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0061d\u006f\u0077 \u0025\u0076", _cbdb.Name)
				if _cgf := d.Skip(); _cgf != nil {
					return _cgf
				}
			}
		case _f.EndElement:
			break _gfbad
		case _f.CharData:
		}
	}
	return nil
}

func (_fdfff ST_PresetMaterialType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_fdfff.String(), start)
}

func (_ebbc ST_BevelPresetType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_bbgfc := _f.Attr{}
	_bbgfc.Name = name
	switch _ebbc {
	case ST_BevelPresetTypeUnset:
		_bbgfc.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_bbgfc.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_bbgfc.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_bbgfc.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_bbgfc.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_bbgfc.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_bbgfc.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_bbgfc.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_bbgfc.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_bbgfc.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_bbgfc.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_bbgfc.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_bbgfc.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _bbgfc, nil
}

func (_bggc ST_NumForm) String() string {
	switch _bggc {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u006c\u0069\u006e\u0069\u006e\u0067"
	case 3:
		return "\u006f\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

func (_efdd ST_PathShadeType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fdgd := _f.Attr{}
	_fdgd.Name = name
	switch _efdd {
	case ST_PathShadeTypeUnset:
		_fdgd.Value = ""
	case ST_PathShadeTypeShape:
		_fdgd.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_fdgd.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_fdgd.Value = "\u0072\u0065\u0063\u0074"
	}
	return _fdgd, nil
}

// Validate validates the CT_Camera and its children
func (_bee *CT_Camera) Validate() error {
	return _bee.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}

func (_abeb *ST_PresetMaterialType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gfbf, _bdff := d.Token()
	if _bdff != nil {
		return _bdff
	}
	if _egd, _gdga := _gfbf.(_f.EndElement); _gdga && _egd.Name == start.Name {
		*_abeb = 1
		return nil
	}
	if _fdgad, _ebddc := _gfbf.(_f.CharData); !_ebddc {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfbf)
	} else {
		switch string(_fdgad) {
		case "":
			*_abeb = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_abeb = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_abeb = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_abeb = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_abeb = 4
		case "\u006d\u0061\u0074t\u0065":
			*_abeb = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_abeb = 6
		case "\u006d\u0065\u0074a\u006c":
			*_abeb = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_abeb = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_abeb = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_abeb = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_abeb = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_abeb = 12
		case "\u0063\u006c\u0065a\u0072":
			*_abeb = 13
		case "\u0066\u006c\u0061\u0074":
			*_abeb = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_abeb = 15
		case "\u006e\u006f\u006e\u0065":
			*_abeb = 16
		}
	}
	_gfbf, _bdff = d.Token()
	if _bdff != nil {
		return _bdff
	}
	if _fbaf, _ccdf := _gfbf.(_f.EndElement); _ccdf && _fbaf.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfbf)
}

func NewEG_FillPropertiesChoice() *EG_FillPropertiesChoice {
	_cadb := &EG_FillPropertiesChoice{}
	return _cadb
}

func (_ge *CT_Bevel) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cf := range start.Attr {
		if _cf.Name.Local == "\u0077" {
			_fdg, _geb := _ae.ParseInt(_cf.Value, 10, 64)
			if _geb != nil {
				return _geb
			}
			_ge.WAttr = &_fdg
			continue
		}
		if _cf.Name.Local == "\u0068" {
			_de, _dee := _ae.ParseInt(_cf.Value, 10, 64)
			if _dee != nil {
				return _dee
			}
			_ge.HAttr = &_de
			continue
		}
		if _cf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ge.PrstAttr.UnmarshalXMLAttr(_cf)
			continue
		}
	}
	for {
		_gb, _eee := d.Token()
		if _eee != nil {
			return _aa.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _eee)
		}
		if _eed, _dcb := _gb.(_f.EndElement); _dcb && _eed.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextOutlineEffect and its children, prefixing error messages with path
func (_ega *CT_TextOutlineEffect) ValidateWithPath(path string) error {
	if _ega.WAttr != nil {
		if *_ega.WAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_ega.WAttr)
		}
		if *_ega.WAttr > 20116800 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ega.WAttr)
		}
	}
	if _beee := _ega.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _beee != nil {
		return _beee
	}
	if _cea := _ega.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _cea != nil {
		return _cea
	}
	if _dfcad := _ega.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _dfcad != nil {
		return _dfcad
	}
	if _ggg := _ega.FillPropertiesChoice.ValidateWithPath(path + "/\u0046\u0069\u006c\u006cPr\u006fp\u0065\u0072\u0074\u0069\u0065s\u0043\u0068\u006f\u0069\u0063\u0065"); _ggg != nil {
		return _ggg
	}
	if _ega.PrstDash != nil {
		if _ggda := _ega.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _ggda != nil {
			return _ggda
		}
	}
	if _ebfc := _ega.LineJoinPropertiesChoice.ValidateWithPath(path + "\u002fL\u0069\u006e\u0065\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065r\u0074i\u0065\u0073\u0043\u0068\u006f\u0069\u0063e"); _ebfc != nil {
		return _ebfc
	}
	return nil
}

func (_edef *EG_RPrOpenType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_acee:
	for {
		_cdea, _gbgb := d.Token()
		if _gbgb != nil {
			return _gbgb
		}
		switch _dgdd := _cdea.(type) {
		case _f.StartElement:
			switch _dgdd.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006ci\u0067\u0061\u0074\u0075\u0072\u0065s"}:
				_edef.Ligatures = NewCT_Ligatures()
				if _cabd := d.DecodeElement(_edef.Ligatures, &_dgdd); _cabd != nil {
					return _cabd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006eu\u006d\u0046\u006f\u0072\u006d"}:
				_edef.NumForm = NewCT_NumForm()
				if _cfdf := d.DecodeElement(_edef.NumForm, &_dgdd); _cfdf != nil {
					return _cfdf
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006e\u0075\u006d\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_edef.NumSpacing = NewCT_NumSpacing()
				if _abedf := d.DecodeElement(_edef.NumSpacing, &_dgdd); _abedf != nil {
					return _abedf
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0074\u0079\u006c\u0069\u0073\u0074\u0069\u0063\u0053\u0065\u0074\u0073"}:
				_edef.StylisticSets = NewCT_StylisticSets()
				if _edafc := d.DecodeElement(_edef.StylisticSets, &_dgdd); _edafc != nil {
					return _edafc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063n\u0074\u0078\u0074\u0041\u006c\u0074s"}:
				_edef.CntxtAlts = NewCT_OnOff()
				if _fdeb := d.DecodeElement(_edef.CntxtAlts, &_dgdd); _fdeb != nil {
					return _fdeb
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0052\u0050\u0072\u004f\u0070\u0065\u006eT\u0079p\u0065\u0020\u0025\u0076", _dgdd.Name)
				if _eggee := d.Skip(); _eggee != nil {
					return _eggee
				}
			}
		case _f.EndElement:
			break _acee
		case _f.CharData:
		}
	}
	return nil
}

func (_beca ST_OnOff) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_gged := _f.Attr{}
	_gged.Name = name
	switch _beca {
	case ST_OnOffUnset:
		_gged.Value = ""
	case ST_OnOffTrue:
		_gged.Value = "\u0074\u0072\u0075\u0065"
	case ST_OnOffFalse:
		_gged.Value = "\u0066\u0061\u006cs\u0065"
	case ST_OnOff0:
		_gged.Value = "\u0030"
	case ST_OnOff1:
		_gged.Value = "\u0031"
	}
	return _gged, nil
}

func (_gegg ST_OnOff) String() string {
	switch _gegg {
	case 0:
		return ""
	case 1:
		return "\u0074\u0072\u0075\u0065"
	case 2:
		return "\u0066\u0061\u006cs\u0065"
	case 3:
		return "\u0030"
	case 4:
		return "\u0031"
	}
	return ""
}

func (_aag *CT_Percentage) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _bcc := range start.Attr {
		if _bcc.Name.Local == "\u0076\u0061\u006c" {
			_adf, _cceb := ParseUnionST_Percentage(_bcc.Value)
			if _cceb != nil {
				return _cceb
			}
			_aag.ValAttr = _adf
			continue
		}
	}
	for {
		_agad, _aafc := d.Token()
		if _aafc != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _aafc)
		}
		if _dea, _bbg := _agad.(_f.EndElement); _bbg && _dea.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

func (_dfaf ST_RectAlignment) String() string {
	switch _dfaf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u006c"
	case 3:
		return "\u0074"
	case 4:
		return "\u0074\u0072"
	case 5:
		return "\u006c"
	case 6:
		return "\u0063\u0074\u0072"
	case 7:
		return "\u0072"
	case 8:
		return "\u0062\u006c"
	case 9:
		return "\u0062"
	case 10:
		return "\u0062\u0072"
	}
	return ""
}

func NewCustomXmlConflictDelRangeStart() *CustomXmlConflictDelRangeStart {
	_gaab := &CustomXmlConflictDelRangeStart{}
	_gaab.CT_TrackChange = *_b.NewCT_TrackChange()
	return _gaab
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_beeb *CT_Camera) ValidateWithPath(path string) error {
	if _beeb.PrstAttr == ST_PresetCameraTypeUnset {
		return _aa.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ed := _beeb.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _ed != nil {
		return _ed
	}
	return nil
}

func NewDefaultImageDpi() *DefaultImageDpi {
	_agadd := &DefaultImageDpi{}
	_agadd.CT_DefaultImageDpi = *NewCT_DefaultImageDpi()
	return _agadd
}

func (_ebe *CT_PositiveFixedPercentage) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _aeg := range start.Attr {
		if _aeg.Name.Local == "\u0076\u0061\u006c" {
			_dab, _gcab := ParseUnionST_PositiveFixedPercentage(_aeg.Value)
			if _gcab != nil {
				return _gcab
			}
			_ebe.ValAttr = _dab
			continue
		}
	}
	for {
		_gee, _ggbf := d.Token()
		if _ggbf != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _ggbf)
		}
		if _gafe, _egee := _gee.(_f.EndElement); _egee && _gafe.Name == start.Name {
			break
		}
	}
	return nil
}

func (_affd *ST_SchemeColorVal) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bfeg, _cffd := d.Token()
	if _cffd != nil {
		return _cffd
	}
	if _egcga, _fdca := _bfeg.(_f.EndElement); _fdca && _egcga.Name == start.Name {
		*_affd = 1
		return nil
	}
	if _bbgcc, _agec := _bfeg.(_f.CharData); !_agec {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfeg)
	} else {
		switch string(_bbgcc) {
		case "":
			*_affd = 0
		case "\u0062\u0067\u0031":
			*_affd = 1
		case "\u0074\u0078\u0031":
			*_affd = 2
		case "\u0062\u0067\u0032":
			*_affd = 3
		case "\u0074\u0078\u0032":
			*_affd = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_affd = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_affd = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_affd = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_affd = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_affd = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_affd = 10
		case "\u0068\u006c\u0069n\u006b":
			*_affd = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_affd = 12
		case "\u0064\u006b\u0031":
			*_affd = 13
		case "\u006c\u0074\u0031":
			*_affd = 14
		case "\u0064\u006b\u0032":
			*_affd = 15
		case "\u006c\u0074\u0032":
			*_affd = 16
		case "\u0070\u0068\u0043l\u0072":
			*_affd = 17
		}
	}
	_bfeg, _cffd = d.Token()
	if _cffd != nil {
		return _cffd
	}
	if _ffeeb, _dcafa := _bfeg.(_f.EndElement); _dcafa && _ffeeb.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfeg)
}

func (_dcefd ST_NumSpacing) String() string {
	switch _dcefd {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u0072\u006fp\u006f\u0072\u0074\u0069\u006f\u006e\u0061\u006c"
	case 3:
		return "\u0074a\u0062\u0075\u006c\u0061\u0072"
	}
	return ""
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_caac *CT_SolidColorFillProperties) Validate() error {
	return _caac.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

type CT_DefaultImageDpi struct {
	ValAttr int64
}

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_ceg *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _ceg.LimAttr != nil {
		if _bdeb := _ceg.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _bdeb != nil {
			return _bdeb
		}
	}
	return nil
}

// Validate validates the DiscardImageEditingData and its children
func (_fgbf *DiscardImageEditingData) Validate() error {
	return _fgbf.ValidateWithPath("\u0044\u0069\u0073ca\u0072\u0064\u0049\u006d\u0061\u0067\u0065\u0045\u0064\u0069\u0074\u0069\u006e\u0067\u0044\u0061\u0074\u0061")
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

func (_dgfc *CT_OnOff) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _dgfc.ValAttr != ST_OnOffUnset {
		_fce, _bcb := _dgfc.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
		if _bcb != nil {
			return _bcb
		}
		start.Attr = append(start.Attr, _fce)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_cacd *CT_TextOutlineEffect) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cacd.WAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0077"}, Value: _aa.Sprintf("\u0025\u0076", *_cacd.WAttr)})
	}
	if _cacd.CapAttr != ST_LineCapUnset {
		_dgad, _efb := _cacd.CapAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0063\u0061\u0070"})
		if _efb != nil {
			return _efb
		}
		start.Attr = append(start.Attr, _dgad)
	}
	if _cacd.CmpdAttr != ST_CompoundLineUnset {
		_gcfb, _fgag := _cacd.CmpdAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0063\u006d\u0070\u0064"})
		if _fgag != nil {
			return _fgag
		}
		start.Attr = append(start.Attr, _gcfb)
	}
	if _cacd.AlgnAttr != ST_PenAlignmentUnset {
		_gbcdb, _bda := _cacd.AlgnAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0061\u006c\u0067\u006e"})
		if _bda != nil {
			return _bda
		}
		start.Attr = append(start.Attr, _gbcdb)
	}
	e.EncodeToken(start)
	_cacd.FillPropertiesChoice.MarshalXML(e, _f.StartElement{})
	if _cacd.PrstDash != nil {
		_ecga := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_cacd.PrstDash, _ecga)
	}
	_cacd.LineJoinPropertiesChoice.MarshalXML(e, _f.StartElement{})
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CustomXmlConflictInsRangeStart and its children
func (_bgdda *CustomXmlConflictInsRangeStart) Validate() error {
	return _bgdda.ValidateWithPath("\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006e\u0066\u006c\u0069\u0063\u0074\u0049n\u0073\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074")
}

type ST_PresetLineDashVal byte

func (_facf *DiscardImageEditingData) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "w\u006f\u0072\u003a\u0064\u0069\u0073c\u0061\u0072\u0064\u0049\u006d\u0061\u0067\u0065\u0045d\u0069\u0074\u0069n\u0067D\u0061\u0074\u0061"
	return _facf.CT_OnOff.MarshalXML(e, start)
}

func (_gefa *EG_LineJoinPropertiesChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gefa.Round != nil {
		_bdcf := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0072\u006f\u0075\u006ed"}}
		e.EncodeElement(_gefa.Round, _bdcf)
	} else if _gefa.Bevel != nil {
		_gga := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0062\u0065\u0076\u0065l"}}
		e.EncodeElement(_gefa.Bevel, _gga)
	} else if _gefa.Miter != nil {
		_adfb := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006d\u0069\u0074\u0065r"}}
		e.EncodeElement(_gefa.Miter, _adfb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_abgg *EG_ColorTransform) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_abgg.ColorTransformChoice.MarshalXML(e, _f.StartElement{})
	return nil
}

type EG_ColorTransformChoice struct {
	Tint   *CT_PositiveFixedPercentage
	Shade  *CT_PositiveFixedPercentage
	Alpha  *CT_PositiveFixedPercentage
	HueMod *CT_PositivePercentage
	Sat    *CT_Percentage
	SatOff *CT_Percentage
	SatMod *CT_Percentage
	Lum    *CT_Percentage
	LumOff *CT_Percentage
	LumMod *CT_Percentage
}

type CT_Glow struct {
	RadAttr   *int64
	SrgbClr   *CT_SRgbColor
	SchemeClr *CT_SchemeColor
}

func NewCustomXmlConflictInsRangeEnd() *CustomXmlConflictInsRangeEnd {
	_gdgf := &CustomXmlConflictInsRangeEnd{}
	_gdgf.CT_Markup = *_b.NewCT_Markup()
	return _gdgf
}

// ValidateWithPath validates the EG_LineJoinPropertiesChoice and its children, prefixing error messages with path
func (_cca *EG_LineJoinPropertiesChoice) ValidateWithPath(path string) error {
	if _cca.Round != nil {
		if _ebbd := _cca.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _ebbd != nil {
			return _ebbd
		}
	}
	if _cca.Bevel != nil {
		if _gdbg := _cca.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _gdbg != nil {
			return _gdbg
		}
	}
	if _cca.Miter != nil {
		if _fage := _cca.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _fage != nil {
			return _fage
		}
	}
	return nil
}

// ValidateWithPath validates the CustomXmlConflictDelRangeStart and its children, prefixing error messages with path
func (_cfee *CustomXmlConflictDelRangeStart) ValidateWithPath(path string) error {
	if _adag := _cfee.CT_TrackChange.ValidateWithPath(path); _adag != nil {
		return _adag
	}
	return nil
}

func (_gfbb ST_RectAlignment) Validate() error { return _gfbb.ValidateWithPath("") }

func (_cfaf *CT_LightRig) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfaf.RigAttr = ST_LightRigType(1)
	_cfaf.DirAttr = ST_LightRigDirection(1)
	for _, _dec := range start.Attr {
		if _dec.Name.Local == "\u0072\u0069\u0067" {
			_cfaf.RigAttr.UnmarshalXMLAttr(_dec)
			continue
		}
		if _dec.Name.Local == "\u0064\u0069\u0072" {
			_cfaf.DirAttr.UnmarshalXMLAttr(_dec)
			continue
		}
	}
_cab:
	for {
		_cff, _befa := d.Token()
		if _befa != nil {
			return _befa
		}
		switch _gaed := _cff.(type) {
		case _f.StartElement:
			switch _gaed.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0072\u006f\u0074"}:
				_cfaf.Rot = NewCT_SphereCoords()
				if _gfd := d.DecodeElement(_cfaf.Rot, &_gaed); _gfd != nil {
					return _gfd
				}
			default:
				_fd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _gaed.Name)
				if _bded := d.Skip(); _bded != nil {
					return _bded
				}
			}
		case _f.EndElement:
			break _cab
		case _f.CharData:
		}
	}
	return nil
}

func ParseUnionST_AnimationChartBuildType(s string) (_d.ST_AnimationChartBuildType, error) {
	return _d.ParseUnionST_AnimationChartBuildType(s)
}

func (_cfa *CT_GradientFillProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfa.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
_feg:
	for {
		_gaf, _fge := d.Token()
		if _fge != nil {
			return _fge
		}
		switch _aac := _gaf.(type) {
		case _f.StartElement:
			switch _aac.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0073\u004cs\u0074"}:
				_cfa.GsLst = NewCT_GradientStopList()
				if _fgef := d.DecodeElement(_cfa.GsLst, &_aac); _fgef != nil {
					return _fgef
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0069\u006e"}:
				_cfa.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
				if _cdc := d.DecodeElement(&_cfa.ShadePropertiesChoice.Lin, &_aac); _cdc != nil {
					return _cdc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0061\u0074\u0068"}:
				_cfa.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
				if _bed := d.DecodeElement(&_cfa.ShadePropertiesChoice.Path, &_aac); _bed != nil {
					return _bed
				}
			default:
				_fd.Log.Debug("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _aac.Name)
				if _abg := d.Skip(); _abg != nil {
					return _abg
				}
			}
		case _f.EndElement:
			break _feg
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Color and its children
func (_cce *CT_Color) Validate() error {
	return _cce.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_affa *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _fbbd := _affa.ShadePropertiesChoice.ValidateWithPath(path + "\u002f\u0053\u0068\u0061de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069c\u0065"); _fbbd != nil {
		return _fbbd
	}
	return nil
}

func (_fdfbc *ST_RectAlignment) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gcabd, _ddcef := d.Token()
	if _ddcef != nil {
		return _ddcef
	}
	if _edcdg, _bfgbc := _gcabd.(_f.EndElement); _bfgbc && _edcdg.Name == start.Name {
		*_fdfbc = 1
		return nil
	}
	if _dafd, _egca := _gcabd.(_f.CharData); !_egca {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcabd)
	} else {
		switch string(_dafd) {
		case "":
			*_fdfbc = 0
		case "\u006e\u006f\u006e\u0065":
			*_fdfbc = 1
		case "\u0074\u006c":
			*_fdfbc = 2
		case "\u0074":
			*_fdfbc = 3
		case "\u0074\u0072":
			*_fdfbc = 4
		case "\u006c":
			*_fdfbc = 5
		case "\u0063\u0074\u0072":
			*_fdfbc = 6
		case "\u0072":
			*_fdfbc = 7
		case "\u0062\u006c":
			*_fdfbc = 8
		case "\u0062":
			*_fdfbc = 9
		case "\u0062\u0072":
			*_fdfbc = 10
		}
	}
	_gcabd, _ddcef = d.Token()
	if _ddcef != nil {
		return _ddcef
	}
	if _cgbf, _ccbc := _gcabd.(_f.EndElement); _ccbc && _cgbf.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcabd)
}

type ST_SchemeColorVal byte

type ST_PresetMaterialType byte

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_aggec *CT_SchemeColor) ValidateWithPath(path string) error {
	if _aggec.ValAttr == ST_SchemeColorValUnset {
		return _aa.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gdac := _aggec.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gdac != nil {
		return _gdac
	}
	for _eegf, _fca := range _aggec.EG_ColorTransform {
		if _daff := _fca.ValidateWithPath(_aa.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _eegf)); _daff != nil {
			return _daff
		}
	}
	return nil
}

func (_acdd *CT_StyleSet) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0069\u0064"}, Value: _aa.Sprintf("\u0025\u0076", _acdd.IdAttr)})
	if _acdd.ValAttr != ST_OnOffUnset {
		_fga, _gdbd := _acdd.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
		if _gdbd != nil {
			return _gdbd
		}
		start.Attr = append(start.Attr, _fga)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type EG_ColorChoice struct {
	SrgbClr   *CT_SRgbColor
	SchemeClr *CT_SchemeColor
}

func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_aaae := &CT_PathShadeProperties{}
	return _aaae
}

func (_bbd *ST_CompoundLine) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bbd = 0
	case "\u0073\u006e\u0067":
		*_bbd = 1
	case "\u0064\u0062\u006c":
		*_bbd = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_bbd = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_bbd = 4
	case "\u0074\u0072\u0069":
		*_bbd = 5
	}
	return nil
}

// ValidateWithPath validates the CT_SdtCheckbox and its children, prefixing error messages with path
func (_fcec *CT_SdtCheckbox) ValidateWithPath(path string) error {
	if _fcec.Checked != nil {
		if _cabb := _fcec.Checked.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0064"); _cabb != nil {
			return _cabb
		}
	}
	if _fcec.CheckedState != nil {
		if _ddcf := _fcec.CheckedState.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0064\u0053\u0074\u0061\u0074\u0065"); _ddcf != nil {
			return _ddcf
		}
	}
	if _fcec.UncheckedState != nil {
		if _aeea := _fcec.UncheckedState.ValidateWithPath(path + "\u002fU\u006ec\u0068\u0065\u0063\u006b\u0065\u0064\u0053\u0074\u0061\u0074\u0065"); _aeea != nil {
			return _aeea
		}
	}
	return nil
}

func (_fbb *CT_SolidColorFillProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgcc:
	for {
		_gcg, _aaba := d.Token()
		if _aaba != nil {
			return _aaba
		}
		switch _eeeb := _gcg.(type) {
		case _f.StartElement:
			switch _eeeb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_fbb.SrgbClr = NewCT_SRgbColor()
				if _ffda := d.DecodeElement(_fbb.SrgbClr, &_eeeb); _ffda != nil {
					return _ffda
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_fbb.SchemeClr = NewCT_SchemeColor()
				if _ffcf := d.DecodeElement(_fbb.SchemeClr, &_eeeb); _ffcf != nil {
					return _ffcf
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eeeb.Name)
				if _edbg := d.Skip(); _edbg != nil {
					return _edbg
				}
			}
		case _f.EndElement:
			break _fgcc
		case _f.CharData:
		}
	}
	return nil
}

func (_dddc *CT_Scene3D) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dddc.Camera = NewCT_Camera()
	_dddc.LightRig = NewCT_LightRig()
_cbe:
	for {
		_bff, _afef := d.Token()
		if _afef != nil {
			return _afef
		}
		switch _aee := _bff.(type) {
		case _f.StartElement:
			switch _aee.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _acfb := d.DecodeElement(_dddc.Camera, &_aee); _acfb != nil {
					return _acfb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _cage := d.DecodeElement(_dddc.LightRig, &_aee); _cage != nil {
					return _cage
				}
			default:
				_fd.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _aee.Name)
				if _bad := d.Skip(); _bad != nil {
					return _bad
				}
			}
		case _f.EndElement:
			break _cbe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SdtCheckboxSymbol and its children
func (_afbb *CT_SdtCheckboxSymbol) Validate() error {
	return _afbb.ValidateWithPath("C\u0054_\u0053\u0064\u0074\u0043\u0068\u0065\u0063\u006bb\u006f\u0078\u0053\u0079mb\u006f\u006c")
}

func (_deba ST_LightRigType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_deba.String(), start)
}

// Validate validates the CT_FillTextEffect and its children
func (_bbf *CT_FillTextEffect) Validate() error {
	return _bbf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0054\u0065\u0078\u0074\u0045f\u0066\u0065\u0063\u0074")
}

func (_bced *EG_FillProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_bced.FillPropertiesChoice.MarshalXML(e, _f.StartElement{})
	return nil
}

func (_bfbf ST_PenAlignment) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_abcgg := _f.Attr{}
	_abcgg.Name = name
	switch _bfbf {
	case ST_PenAlignmentUnset:
		_abcgg.Value = ""
	case ST_PenAlignmentCtr:
		_abcgg.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_abcgg.Value = "\u0069\u006e"
	}
	return _abcgg, nil
}

// Validate validates the EG_Conflicts and its children
func (_bbgc *EG_Conflicts) Validate() error {
	return _bbgc.ValidateWithPath("\u0045\u0047\u005fC\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0073")
}

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
}

func (_baa *CT_NumForm) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_baa.ValAttr = ST_NumForm(1)
	for _, _gbcd := range start.Attr {
		if _gbcd.Name.Local == "\u0076\u0061\u006c" {
			_baa.ValAttr.UnmarshalXMLAttr(_gbcd)
			continue
		}
	}
	for {
		_cebb, _fdga := d.Token()
		if _fdga != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006f\u0072\u006d\u003a\u0020%\u0073", _fdga)
		}
		if _dgb, _aedb := _cebb.(_f.EndElement); _aedb && _dgb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RelativeRect and its children
func (_cbgb *CT_RelativeRect) Validate() error {
	return _cbgb.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}

// Validate validates the CT_Glow and its children
func (_df *CT_Glow) Validate() error {
	return _df.ValidateWithPath("\u0043T\u005f\u0047\u006c\u006f\u0077")
}

func (_cabe *CT_NumSpacing) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cabe.ValAttr = ST_NumSpacing(1)
	for _, _ebf := range start.Attr {
		if _ebf.Name.Local == "\u0076\u0061\u006c" {
			_cabe.ValAttr.UnmarshalXMLAttr(_ebf)
			continue
		}
	}
	for {
		_dcab, _dgd := d.Token()
		if _dgd != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u004eu\u006dS\u0070a\u0063\u0069\u006e\u0067\u003a\u0020\u0025s", _dgd)
		}
		if _faf, _edf := _dcab.(_f.EndElement); _edf && _faf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the EG_ConflictsChoice and its children
func (_cfdb *EG_ConflictsChoice) Validate() error {
	return _cfdb.ValidateWithPath("\u0045G\u005fC\u006f\u006e\u0066\u006c\u0069c\u0074\u0073C\u0068\u006f\u0069\u0063\u0065")
}

func (_ee *AG_Parids) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _c := range start.Attr {
		if _c.Name.Local == "\u0070\u0061\u0072\u0061\u0049\u0064" {
			_ca := _c.Value
			_ee.ParaIdAttr = &_ca
			continue
		}
		if _c.Name.Local == "\u0074\u0065\u0078\u0074\u0049\u0064" {
			_eea := _c.Value
			_ee.TextIdAttr = &_eea
			continue
		}
	}
	for {
		_ad, _adb := d.Token()
		if _adb != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069ng\u0020A\u0047\u005f\u0050\u0061\u0072i\u0064\u0073\u003a\u0020\u0025\u0073", _adb)
		}
		if _gg, _bf := _ad.(_f.EndElement); _bf && _gg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr ST_OnOff
}

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_cbcfb *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _cbcfb.PrstDash != nil {
		if _daggc := _cbcfb.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _daggc != nil {
			return _daggc
		}
	}
	return nil
}

func (_bdge ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _bdge {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdge))
	}
	return nil
}

// Validate validates the Checkbox and its children
func (_cec *Checkbox) Validate() error {
	return _cec.ValidateWithPath("\u0043\u0068\u0065\u0063\u006b\u0062\u006f\u0078")
}

// ValidateWithPath validates the DocId and its children, prefixing error messages with path
func (_gdgfd *DocId) ValidateWithPath(path string) error {
	if _ffef := _gdgfd.CT_LongHexNumber.ValidateWithPath(path); _ffef != nil {
		return _ffef
	}
	return nil
}

func (_egbfe ST_OnOff) ValidateWithPath(path string) error {
	switch _egbfe {
	case 0, 1, 2, 3, 4:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egbfe))
	}
	return nil
}

type CT_Props3D struct {
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
}

func (_dfga ST_PresetCameraType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_dfga.String(), start)
}

func (_fgga ST_PathShadeType) ValidateWithPath(path string) error {
	switch _fgga {
	case 0, 1, 2, 3:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgga))
	}
	return nil
}

func (_faad ST_LightRigDirection) Validate() error { return _faad.ValidateWithPath("") }

type CustomXmlConflictDelRangeStart struct{ _b.CT_TrackChange }

func ParseUnionST_OnOff(s string) (_dd.ST_OnOff, error) { return _dd.ST_OnOff{}, nil }

func _baeg(_bgef bool) uint8 {
	if _bgef {
		return 1
	}
	return 0
}

func ParseUnionST_PositiveFixedPercentage(s string) (_d.ST_PositiveFixedPercentage, error) {
	return _d.ParseUnionST_PositiveFixedPercentage(s)
}

func (_begfg *ST_PresetMaterialType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_begfg = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_begfg = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_begfg = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_begfg = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_begfg = 4
	case "\u006d\u0061\u0074t\u0065":
		*_begfg = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_begfg = 6
	case "\u006d\u0065\u0074a\u006c":
		*_begfg = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_begfg = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_begfg = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_begfg = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_begfg = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_begfg = 12
	case "\u0063\u006c\u0065a\u0072":
		*_begfg = 13
	case "\u0066\u006c\u0061\u0074":
		*_begfg = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_begfg = 15
	case "\u006e\u006f\u006e\u0065":
		*_begfg = 16
	}
	return nil
}

type CT_Ligatures struct {
	ValAttr ST_Ligatures
}

func NewEG_ShadePropertiesChoice() *EG_ShadePropertiesChoice {
	_cacfc := &EG_ShadePropertiesChoice{}
	return _cacfc
}

// ValidateWithPath validates the EG_Conflicts and its children, prefixing error messages with path
func (_babg *EG_Conflicts) ValidateWithPath(path string) error {
	if _aaaad := _babg.ConflictsChoice.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006ci\u0063\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065"); _aaaad != nil {
		return _aaaad
	}
	return nil
}

func (_fgfb *EG_RPrTextEffects) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "w\u006f\u0072\u003a\u0045G_\u0052P\u0072\u0054\u0065\u0078\u0074E\u0066\u0066\u0065\u0063\u0074\u0073"
	if _fgfb.Glow != nil {
		_dfcbg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_fgfb.Glow, _dfcbg)
	}
	if _fgfb.Shadow != nil {
		_deeb := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0068\u0061\u0064\u006f\u0077"}}
		e.EncodeElement(_fgfb.Shadow, _deeb)
	}
	if _fgfb.Reflection != nil {
		_babd := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0072\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fgfb.Reflection, _babd)
	}
	if _fgfb.TextOutline != nil {
		_abac := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0074\u0065\u0078\u0074\u004f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_fgfb.TextOutline, _abac)
	}
	if _fgfb.TextFill != nil {
		_bcffd := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0074\u0065\u0078\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fgfb.TextFill, _bcffd)
	}
	if _fgfb.Scene3d != nil {
		_caafd := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0063\u0065\u006e\u0065\u0033\u0064"}}
		e.EncodeElement(_fgfb.Scene3d, _caafd)
	}
	if _fgfb.Props3d != nil {
		_ccbf := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0070\u0072\u006f\u0070\u0073\u0033\u0064"}}
		e.EncodeElement(_fgfb.Props3d, _ccbf)
	}
	return nil
}

func (_ced *CT_NumForm) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_dgf, _cbdg := _ced.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
	if _cbdg != nil {
		return _cbdg
	}
	start.Attr = append(start.Attr, _dgf)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_badd *ST_PenAlignment) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fcee, _efbc := d.Token()
	if _efbc != nil {
		return _efbc
	}
	if _eefg, _eccd := _fcee.(_f.EndElement); _eccd && _eefg.Name == start.Name {
		*_badd = 1
		return nil
	}
	if _eage, _dfcg := _fcee.(_f.CharData); !_dfcg {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcee)
	} else {
		switch string(_eage) {
		case "":
			*_badd = 0
		case "\u0063\u0074\u0072":
			*_badd = 1
		case "\u0069\u006e":
			*_badd = 2
		}
	}
	_fcee, _efbc = d.Token()
	if _efbc != nil {
		return _efbc
	}
	if _ebgb, _eccda := _fcee.(_f.EndElement); _eccda && _ebgb.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcee)
}

func (_bbeg ST_NumForm) ValidateWithPath(path string) error {
	switch _bbeg {
	case 0, 1, 2, 3:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbeg))
	}
	return nil
}

func (_cbgba *ST_Ligatures) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cbgba = 0
	case "\u006e\u006f\u006e\u0065":
		*_cbgba = 1
	case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064":
		*_cbgba = 2
	case "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c":
		*_cbgba = 3
	case "\u0068\u0069\u0073\u0074\u006f\u0072\u0069\u0063\u0061\u006c":
		*_cbgba = 4
	case "\u0064\u0069\u0073c\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
		*_cbgba = 5
	case "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0043o\u006e\u0074e\u0078\u0074\u0075\u0061\u006c":
		*_cbgba = 6
	case "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0048i\u0073\u0074o\u0072\u0069\u0063\u0061\u006c":
		*_cbgba = 7
	case "c\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048i\u0073\u0074\u006f\u0072ic\u0061\u006c":
		*_cbgba = 8
	case "s\u0074a\u006e\u0064\u0061\u0072\u0064\u0044\u0069\u0073c\u0072\u0065\u0074\u0069on\u0061\u006c":
		*_cbgba = 9
	case "\u0063\u006f\u006e\u0074ex\u0074\u0075\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c":
		*_cbgba = 10
	case "\u0068\u0069\u0073\u0074or\u0069\u0063\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c":
		*_cbgba = 11
	case "\u0073\u0074\u0061\u006ed\u0061\u0072\u0064\u0043\u006f\u006e\u0074\u0065\u0078\u0074u\u0061l\u0048\u0069\u0073\u0074\u006f\u0072\u0069c\u0061\u006c":
		*_cbgba = 12
	case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0043\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
		*_cbgba = 13
	case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0048\u0069s\u0074\u006f\u0072\u0069\u0063\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
		*_cbgba = 14
	case "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048\u0069\u0073\u0074\u006fr\u0069c\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
		*_cbgba = 15
	case "\u0061\u006c\u006c":
		*_cbgba = 16
	}
	return nil
}

func (_fgge *CustomXmlConflictDelRangeStart) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072:c\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006ef\u006ci\u0063t\u0044\u0065\u006c\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074"
	return _fgge.CT_TrackChange.MarshalXML(e, start)
}

type CT_SdtCheckboxSymbol struct {
	FontAttr *string
	ValAttr  *string
}

func (_ecae ST_OnOff) Validate() error { return _ecae.ValidateWithPath("") }

func (_ec *CT_Camera) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ec.PrstAttr = ST_PresetCameraType(1)
	for _, _ag := range start.Attr {
		if _ag.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ec.PrstAttr.UnmarshalXMLAttr(_ag)
			continue
		}
	}
	for {
		_fa, _bd := d.Token()
		if _bd != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006de\u0072\u0061\u003a\u0020\u0025\u0073", _bd)
		}
		if _fda, _ged := _fa.(_f.EndElement); _ged && _fda.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbgf ST_RectAlignment) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gbgf.String(), start)
}

func NewEG_Conflicts() *EG_Conflicts {
	_aecg := &EG_Conflicts{}
	_aecg.ConflictsChoice = NewEG_ConflictsChoice()
	return _aecg
}

func (_gecb ST_PathShadeType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gecb.String(), start)
}

type ST_NumSpacing byte

func NewCT_SdtCheckbox() *CT_SdtCheckbox {
	_eabd := &CT_SdtCheckbox{}
	return _eabd
}

type EG_LineJoinProperties struct{ LineJoinPropertiesChoice *EG_LineJoinPropertiesChoice }

// Validate validates the ConflictMode and its children
func (_fgcd *ConflictMode) Validate() error {
	return _fgcd.ValidateWithPath("\u0043\u006f\u006ef\u006c\u0069\u0063\u0074\u004d\u006f\u0064\u0065")
}

func (_ecf *CT_Props3D) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ecf.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0065\u0078\u0074\u0072\u0075s\u0069\u006f\u006e\u0048"}, Value: _aa.Sprintf("\u0025\u0076", *_ecf.ExtrusionHAttr)})
	}
	if _ecf.ContourWAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _aa.Sprintf("\u0025\u0076", *_ecf.ContourWAttr)})
	}
	if _ecf.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_aaaa, _eae := _ecf.PrstMaterialAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006fr\u003a\u0070\u0072s\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _eae != nil {
			return _eae
		}
		start.Attr = append(start.Attr, _aaaa)
	}
	e.EncodeToken(start)
	if _ecf.BevelT != nil {
		_aebg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_ecf.BevelT, _aebg)
	}
	if _ecf.BevelB != nil {
		_dbdg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_ecf.BevelB, _dbdg)
	}
	if _ecf.ExtrusionClr != nil {
		_beb := _f.StartElement{Name: _f.Name{Local: "\u0077\u006fr\u003a\u0065\u0078t\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_ecf.ExtrusionClr, _beb)
	}
	if _ecf.ContourClr != nil {
		_ffd := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0063\u006f\u006e\u0074\u006fu\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_ecf.ContourClr, _ffd)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_LineJoinMiterProperties struct{ LimAttr *_d.ST_PositivePercentage }

func (_eg *CT_Camera) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_fg, _ga := _eg.PrstAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0070\u0072\u0073\u0074"})
	if _ga != nil {
		return _ga
	}
	start.Attr = append(start.Attr, _fg)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fafe ST_NumSpacing) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fbcbd := _f.Attr{}
	_fbcbd.Name = name
	switch _fafe {
	case ST_NumSpacingUnset:
		_fbcbd.Value = ""
	case ST_NumSpacingDefault:
		_fbcbd.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_NumSpacingProportional:
		_fbcbd.Value = "\u0070\u0072\u006fp\u006f\u0072\u0074\u0069\u006f\u006e\u0061\u006c"
	case ST_NumSpacingTabular:
		_fbcbd.Value = "\u0074a\u0062\u0075\u006c\u0061\u0072"
	}
	return _fbcbd, nil
}

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentNone  ST_RectAlignment = 1
	ST_RectAlignmentTl    ST_RectAlignment = 2
	ST_RectAlignmentT     ST_RectAlignment = 3
	ST_RectAlignmentTr    ST_RectAlignment = 4
	ST_RectAlignmentL     ST_RectAlignment = 5
	ST_RectAlignmentCtr   ST_RectAlignment = 6
	ST_RectAlignmentR     ST_RectAlignment = 7
	ST_RectAlignmentBl    ST_RectAlignment = 8
	ST_RectAlignmentB     ST_RectAlignment = 9
	ST_RectAlignmentBr    ST_RectAlignment = 10
)

func (_bdea *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bdea = 0
	case "\u0073\u006f\u006ci\u0064":
		*_bdea = 1
	case "\u0064\u006f\u0074":
		*_bdea = 2
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_bdea = 3
	case "\u0064\u0061\u0073\u0068":
		*_bdea = 4
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_bdea = 5
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_bdea = 6
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_bdea = 7
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_bdea = 8
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_bdea = 9
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_bdea = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_bdea = 11
	}
	return nil
}

func NewEG_ShadeProperties() *EG_ShadeProperties {
	_dagb := &EG_ShadeProperties{}
	_dagb.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
	return _dagb
}

// Validate validates the EG_LineJoinProperties and its children
func (_eeeg *EG_LineJoinProperties) Validate() error {
	return _eeeg.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_GradientStop struct {
	PosAttr   _d.ST_PositiveFixedPercentage
	SrgbClr   *CT_SRgbColor
	SchemeClr *CT_SchemeColor
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_cedf *CT_RelativeRect) ValidateWithPath(path string) error {
	if _cedf.LAttr != nil {
		if _agff := _cedf.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _agff != nil {
			return _agff
		}
	}
	if _cedf.TAttr != nil {
		if _aecbd := _cedf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _aecbd != nil {
			return _aecbd
		}
	}
	if _cedf.RAttr != nil {
		if _begf := _cedf.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _begf != nil {
			return _begf
		}
	}
	if _cedf.BAttr != nil {
		if _bbac := _cedf.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _bbac != nil {
			return _bbac
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_dbegb *EG_ColorChoice) ValidateWithPath(path string) error {
	if _dbegb.SrgbClr != nil {
		if _cbgbc := _dbegb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cbgbc != nil {
			return _cbgbc
		}
	}
	if _dbegb.SchemeClr != nil {
		if _gcbd := _dbegb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gcbd != nil {
			return _gcbd
		}
	}
	return nil
}

func (_cbca ST_PenAlignment) String() string {
	switch _cbca {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

func (_adgg ST_OnOff) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_adgg.String(), start)
}

func (_dabe *CT_RelativeRect) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _dabe.LAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u006c"}, Value: _aa.Sprintf("\u0025\u0076", *_dabe.LAttr)})
	}
	if _dabe.TAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0074"}, Value: _aa.Sprintf("\u0025\u0076", *_dabe.TAttr)})
	}
	if _dabe.RAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0072"}, Value: _aa.Sprintf("\u0025\u0076", *_dabe.RAttr)})
	}
	if _dabe.BAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0062"}, Value: _aa.Sprintf("\u0025\u0076", *_dabe.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_bdae *EG_LineDashProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _bdae.PrstDash != nil {
		_ebaa := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_bdae.PrstDash, _ebaa)
	}
	return nil
}

func NewEG_ColorTransform() *EG_ColorTransform {
	_aea := &EG_ColorTransform{}
	_aea.ColorTransformChoice = NewEG_ColorTransformChoice()
	return _aea
}

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_eaca := &CT_SolidColorFillProperties{}
	return _eaca
}

func (_aaddf *EG_ShadeProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_aaddf.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
_debc:
	for {
		_cfeb, _fedg := d.Token()
		if _fedg != nil {
			return _fedg
		}
		switch _eeed := _cfeb.(type) {
		case _f.StartElement:
			switch _eeed.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0069\u006e"}:
				_aaddf.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
				if _acba := d.DecodeElement(&_aaddf.ShadePropertiesChoice.Lin, &_eeed); _acba != nil {
					return _acba
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0061\u0074\u0068"}:
				_aaddf.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
				if _ddee := d.DecodeElement(&_aaddf.ShadePropertiesChoice.Path, &_eeed); _ddee != nil {
					return _ddee
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eeed.Name)
				if _bdba := d.Skip(); _bdba != nil {
					return _bdba
				}
			}
		case _f.EndElement:
			break _debc
		case _f.CharData:
		}
	}
	return nil
}

func NewCT_Camera() *CT_Camera {
	_cc := &CT_Camera{}
	_cc.PrstAttr = ST_PresetCameraType(1)
	return _cc
}

func ParseUnionST_AnimationDgmBuildType(s string) (_d.ST_AnimationDgmBuildType, error) {
	return _d.ParseUnionST_AnimationDgmBuildType(s)
}

func (_cfecg ST_SchemeColorVal) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_cfecg.String(), start)
}

func NewCT_StylisticSets() *CT_StylisticSets { _dgbg := &CT_StylisticSets{}; return _dgbg }

type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}

type CT_Shadow struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	SxAttr      *_d.ST_Percentage
	SyAttr      *_d.ST_Percentage
	KxAttr      *int32
	KyAttr      *int32
	AlgnAttr    ST_RectAlignment
	SrgbClr     *CT_SRgbColor
	SchemeClr   *CT_SchemeColor
}

func NewCustomXmlConflictInsRangeStart() *CustomXmlConflictInsRangeStart {
	_edcd := &CustomXmlConflictInsRangeStart{}
	_edcd.CT_TrackChange = *_b.NewCT_TrackChange()
	return _edcd
}

func NewCT_LightRig() *CT_LightRig {
	_bde := &CT_LightRig{}
	_bde.RigAttr = ST_LightRigType(1)
	_bde.DirAttr = ST_LightRigDirection(1)
	return _bde
}

// ValidateWithPath validates the CT_NumSpacing and its children, prefixing error messages with path
func (_fadg *CT_NumSpacing) ValidateWithPath(path string) error {
	if _fadg.ValAttr == ST_NumSpacingUnset {
		return _aa.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bcg := _fadg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bcg != nil {
		return _bcg
	}
	return nil
}

func (_ede *CT_Ligatures) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ede.ValAttr = ST_Ligatures(1)
	for _, _ada := range start.Attr {
		if _ada.Name.Local == "\u0076\u0061\u006c" {
			_ede.ValAttr.UnmarshalXMLAttr(_ada)
			continue
		}
	}
	for {
		_bedc, _cge := d.Token()
		if _cge != nil {
			return _aa.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069g\u0061\u0074\u0075\u0072\u0065\u0073\u003a\u0020\u0025\u0073", _cge)
		}
		if _ebc, _gcea := _bedc.(_f.EndElement); _gcea && _ebc.Name == start.Name {
			break
		}
	}
	return nil
}

func ParseUnionST_Coordinate(s string) (_d.ST_Coordinate, error) {
	return _d.ParseUnionST_Coordinate(s)
}

type EG_Conflicts struct {
	ConflictsChoice *EG_ConflictsChoice
}

type ST_PenAlignment byte

func (_bbca *EntityPicker) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006fr\u003a\u0065\u006et\u0069\u0074\u0079\u0050\u0069\u0063\u006b\u0065\u0072"
	return _bbca.CT_Empty.MarshalXML(e, start)
}

func (_bcfb *ST_SchemeColorVal) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bcfb = 0
	case "\u0062\u0067\u0031":
		*_bcfb = 1
	case "\u0074\u0078\u0031":
		*_bcfb = 2
	case "\u0062\u0067\u0032":
		*_bcfb = 3
	case "\u0074\u0078\u0032":
		*_bcfb = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_bcfb = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_bcfb = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_bcfb = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_bcfb = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_bcfb = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_bcfb = 10
	case "\u0068\u006c\u0069n\u006b":
		*_bcfb = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_bcfb = 12
	case "\u0064\u006b\u0031":
		*_bcfb = 13
	case "\u006c\u0074\u0031":
		*_bcfb = 14
	case "\u0064\u006b\u0032":
		*_bcfb = 15
	case "\u006c\u0074\u0032":
		*_bcfb = 16
	case "\u0070\u0068\u0043l\u0072":
		*_bcfb = 17
	}
	return nil
}

type EG_FillPropertiesChoice struct {
	NoFill    *_b.CT_Empty
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
}

// Validate validates the CT_OnOff and its children
func (_efd *CT_OnOff) Validate() error {
	return _efd.ValidateWithPath("\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066")
}

type CT_Reflection struct {
	BlurRadAttr *int64
	StAAttr     *_d.ST_PositiveFixedPercentage
	StPosAttr   *_d.ST_PositiveFixedPercentage
	EndAAttr    *_d.ST_PositiveFixedPercentage
	EndPosAttr  *_d.ST_PositiveFixedPercentage
	DistAttr    *int64
	DirAttr     *int32
	FadeDirAttr *int32
	SxAttr      *_d.ST_Percentage
	SyAttr      *_d.ST_Percentage
	KxAttr      *int32
	KyAttr      *int32
	AlgnAttr    ST_RectAlignment
}

// ValidateWithPath validates the CT_NumForm and its children, prefixing error messages with path
func (_gfba *CT_NumForm) ValidateWithPath(path string) error {
	if _gfba.ValAttr == ST_NumFormUnset {
		return _aa.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cace := _gfba.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cace != nil {
		return _cace
	}
	return nil
}

func (_bfcb ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _bfcb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfcb))
	}
	return nil
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)

// Validate validates the CT_PresetLineDashProperties and its children
func (_cbb *CT_PresetLineDashProperties) Validate() error {
	return _cbb.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

type ST_LightRigType byte

func (_fcef *ST_PresetCameraType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_fcef = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_fcef = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_fcef = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_fcef = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_fcef = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_fcef = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcef = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_fcef = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_fcef = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_fcef = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_fcef = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_fcef = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_fcef = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_fcef = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcef = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_fcef = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_fcef = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_fcef = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_fcef = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_fcef = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_fcef = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_fcef = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_fcef = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_fcef = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_fcef = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_fcef = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_fcef = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_fcef = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_fcef = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_fcef = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_fcef = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_fcef = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_fcef = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcef = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_fcef = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_fcef = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcef = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_fcef = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_fcef = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_fcef = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_fcef = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcef = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_fcef = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_fcef = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_fcef = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_fcef = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_fcef = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_fcef = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_fcef = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_fcef = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_fcef = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_fcef = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_fcef = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_fcef = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_fcef = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_fcef = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_fcef = 62
	}
	return nil
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
}

func (_cee *CT_PositivePercentage) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _cee.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the DefaultImageDpi and its children, prefixing error messages with path
func (_cgaa *DefaultImageDpi) ValidateWithPath(path string) error {
	if _afad := _cgaa.CT_DefaultImageDpi.ValidateWithPath(path); _afad != nil {
		return _afad
	}
	return nil
}

func (_bdde *ST_LightRigType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_bdde = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_bdde = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_bdde = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_bdde = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_bdde = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_bdde = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_bdde = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_bdde = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_bdde = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_bdde = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_bdde = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_bdde = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_bdde = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_bdde = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_bdde = 14
	case "\u0073\u006f\u0066\u0074":
		*_bdde = 15
	case "\u0068\u0061\u0072s\u0068":
		*_bdde = 16
	case "\u0066\u006c\u006fo\u0064":
		*_bdde = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_bdde = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_bdde = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_bdde = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_bdde = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_bdde = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_bdde = 23
	case "\u0066\u006c\u0061\u0074":
		*_bdde = 24
	case "\u0074\u0077\u006fP\u0074":
		*_bdde = 25
	case "\u0067\u006c\u006f\u0077":
		*_bdde = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_bdde = 27
	}
	return nil
}

func NewCT_GradientStopList() *CT_GradientStopList {
	_daa := &CT_GradientStopList{}
	return _daa
}

// Validate validates the CT_Bevel and its children
func (_caa *CT_Bevel) Validate() error {
	return _caa.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

type CT_PositivePercentage struct{ ValAttr _d.ST_PositivePercentage }

func (_feeff ST_SchemeColorVal) Validate() error { return _feeff.ValidateWithPath("") }

func NewEG_RunLevelConflicts() *EG_RunLevelConflicts {
	_fccbg := &EG_RunLevelConflicts{}
	return _fccbg
}

func (_cac *CT_Color) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_ac:
	for {
		_cb, _gea := d.Token()
		if _gea != nil {
			return _gea
		}
		switch _gbb := _cb.(type) {
		case _f.StartElement:
			switch _gbb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cac.SrgbClr = NewCT_SRgbColor()
				if _ef := d.DecodeElement(_cac.SrgbClr, &_gbb); _ef != nil {
					return _ef
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cac.SchemeClr = NewCT_SchemeColor()
				if _cef := d.DecodeElement(_cac.SchemeClr, &_gbb); _cef != nil {
					return _cef
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _gbb.Name)
				if _egg := d.Skip(); _egg != nil {
					return _egg
				}
			}
		case _f.EndElement:
			break _ac
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GradientStopList and its children
func (_cacf *CT_GradientStopList) Validate() error {
	return _cacf.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

func (_ccf *CT_SchemeColor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ccf.ValAttr = ST_SchemeColorVal(1)
	for _, _dff := range start.Attr {
		if _dff.Name.Local == "\u0076\u0061\u006c" {
			_ccf.ValAttr.UnmarshalXMLAttr(_dff)
			continue
		}
	}
_cdcf:
	for {
		_ebdf, _gafg := d.Token()
		if _gafg != nil {
			return _gafg
		}
		switch _deee := _ebdf.(type) {
		case _f.StartElement:
			switch _deee.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0074\u0069\u006e\u0074"}:
				_ebea := NewEG_ColorTransform()
				_ebea.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _ebea)
				if _cba := d.DecodeElement(&_ebea.ColorTransformChoice.Tint, &_deee); _cba != nil {
					return _cba
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0068\u0061d\u0065"}:
				_befcc := NewEG_ColorTransform()
				_befcc.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _befcc)
				if _fade := d.DecodeElement(&_befcc.ColorTransformChoice.Shade, &_deee); _fade != nil {
					return _fade
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0061\u006c\u0070h\u0061"}:
				_bcff := NewEG_ColorTransform()
				_bcff.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _bcff)
				if _gcafa := d.DecodeElement(&_bcff.ColorTransformChoice.Alpha, &_deee); _gcafa != nil {
					return _gcafa
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_cbbgb := NewEG_ColorTransform()
				_cbbgb.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _cbbgb)
				if _edgb := d.DecodeElement(&_cbbgb.ColorTransformChoice.HueMod, &_deee); _edgb != nil {
					return _edgb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074"}:
				_acd := NewEG_ColorTransform()
				_acd.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _acd)
				if _baaa := d.DecodeElement(&_acd.ColorTransformChoice.Sat, &_deee); _baaa != nil {
					return _baaa
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_eecc := NewEG_ColorTransform()
				_eecc.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _eecc)
				if _bccd := d.DecodeElement(&_eecc.ColorTransformChoice.SatOff, &_deee); _bccd != nil {
					return _bccd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_gbcg := NewEG_ColorTransform()
				_gbcg.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _gbcg)
				if _cedgg := d.DecodeElement(&_gbcg.ColorTransformChoice.SatMod, &_deee); _cedgg != nil {
					return _cedgg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d"}:
				_fdc := NewEG_ColorTransform()
				_fdc.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _fdc)
				if _geeg := d.DecodeElement(&_fdc.ColorTransformChoice.Lum, &_deee); _geeg != nil {
					return _geeg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_aage := NewEG_ColorTransform()
				_aage.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _aage)
				if _fag := d.DecodeElement(&_aage.ColorTransformChoice.LumOff, &_deee); _fag != nil {
					return _fag
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_ade := NewEG_ColorTransform()
				_ade.ColorTransformChoice = NewEG_ColorTransformChoice()
				_ccf.EG_ColorTransform = append(_ccf.EG_ColorTransform, _ade)
				if _bbef := d.DecodeElement(&_ade.ColorTransformChoice.LumMod, &_deee); _bbef != nil {
					return _bbef
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _deee.Name)
				if _egcg := d.Skip(); _egcg != nil {
					return _egcg
				}
			}
		case _f.EndElement:
			break _cdcf
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the AG_Parids and its children, prefixing error messages with path
func (_be *AG_Parids) ValidateWithPath(path string) error { return nil }

const (
	ST_NumSpacingUnset        ST_NumSpacing = 0
	ST_NumSpacingDefault      ST_NumSpacing = 1
	ST_NumSpacingProportional ST_NumSpacing = 2
	ST_NumSpacingTabular      ST_NumSpacing = 3
)

func (_edda ST_PathShadeType) String() string {
	switch _edda {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}

func (_gae *CT_GradientFillProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _gae.GsLst != nil {
		_ggc := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0067\u0073\u004c\u0073t"}}
		e.EncodeElement(_gae.GsLst, _ggc)
	}
	_gae.ShadePropertiesChoice.MarshalXML(e, _f.StartElement{})
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientFillProperties and its children
func (_aga *CT_GradientFillProperties) Validate() error {
	return _aga.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

func (_ecdb *CT_SphereCoords) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ecdb.LatAttr = 0
	_ecdb.LonAttr = 0
	_ecdb.RevAttr = 0
	for _, _cfaa := range start.Attr {
		if _cfaa.Name.Local == "\u006c\u0061\u0074" {
			_fdee, _cfff := _ae.ParseInt(_cfaa.Value, 10, 32)
			if _cfff != nil {
				return _cfff
			}
			_ecdb.LatAttr = int32(_fdee)
			continue
		}
		if _cfaa.Name.Local == "\u006c\u006f\u006e" {
			_ffdf, _dgca := _ae.ParseInt(_cfaa.Value, 10, 32)
			if _dgca != nil {
				return _dgca
			}
			_ecdb.LonAttr = int32(_ffdf)
			continue
		}
		if _cfaa.Name.Local == "\u0072\u0065\u0076" {
			_gdbc, _cddd := _ae.ParseInt(_cfaa.Value, 10, 32)
			if _cddd != nil {
				return _cddd
			}
			_ecdb.RevAttr = int32(_gdbc)
			continue
		}
	}
	for {
		_caaca, _bfc := d.Token()
		if _bfc != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _bfc)
		}
		if _fbcf, _caea := _caaca.(_f.EndElement); _caea && _fbcf.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gbgbg ST_NumForm) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_bgefe := _f.Attr{}
	_bgefe.Name = name
	switch _gbgbg {
	case ST_NumFormUnset:
		_bgefe.Value = ""
	case ST_NumFormDefault:
		_bgefe.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_NumFormLining:
		_bgefe.Value = "\u006c\u0069\u006e\u0069\u006e\u0067"
	case ST_NumFormOldStyle:
		_bgefe.Value = "\u006f\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _bgefe, nil
}

func (_gacba ST_CompoundLine) String() string {
	switch _gacba {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}

func (_afb *CT_OnOff) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _eeae := range start.Attr {
		if _eeae.Name.Local == "\u0076\u0061\u006c" {
			_afb.ValAttr.UnmarshalXMLAttr(_eeae)
			continue
		}
	}
	for {
		_gcc, _cddgf := d.Token()
		if _cddgf != nil {
			return _aa.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fO\u006e\u004f\u0066\u0066: \u0025\u0073", _cddgf)
		}
		if _gcd, _ecc := _gcc.(_f.EndElement); _ecc && _gcd.Name == start.Name {
			break
		}
	}
	return nil
}

func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_edg := &CT_GradientFillProperties{}
	_edg.ShadePropertiesChoice = NewEG_ShadePropertiesChoice()
	return _edg
}

func (_ggfef *ST_NumForm) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cdbd, _ecgf := d.Token()
	if _ecgf != nil {
		return _ecgf
	}
	if _cfaga, _aeaf := _cdbd.(_f.EndElement); _aeaf && _cfaga.Name == start.Name {
		*_ggfef = 1
		return nil
	}
	if _eddg, _cabbe := _cdbd.(_f.CharData); !_cabbe {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdbd)
	} else {
		switch string(_eddg) {
		case "":
			*_ggfef = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_ggfef = 1
		case "\u006c\u0069\u006e\u0069\u006e\u0067":
			*_ggfef = 2
		case "\u006f\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_ggfef = 3
		}
	}
	_cdbd, _ecgf = d.Token()
	if _ecgf != nil {
		return _ecgf
	}
	if _cgdg, _agecg := _cdbd.(_f.EndElement); _agecg && _cgdg.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdbd)
}

// Validate validates the EG_RPrOpenType and its children
func (_dcdf *EG_RPrOpenType) Validate() error {
	return _dcdf.ValidateWithPath("\u0045\u0047\u005f\u0052\u0050\u0072\u004f\u0070\u0065n\u0054\u0079\u0070\u0065")
}

func NewCT_Props3D() *CT_Props3D { _gcce := &CT_Props3D{}; return _gcce }

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

type EG_RPrOpenType struct {
	Ligatures     *CT_Ligatures
	NumForm       *CT_NumForm
	NumSpacing    *CT_NumSpacing
	StylisticSets *CT_StylisticSets
	CntxtAlts     *CT_OnOff
}

func (_aggb *CT_Ligatures) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_gaag, _gebd := _aggb.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
	if _gebd != nil {
		return _gebd
	}
	start.Attr = append(start.Attr, _gaag)
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dfef ST_CompoundLine) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_dfef.String(), start)
}

func (_ceb *CT_LongHexNumber) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dddf := range start.Attr {
		if _dddf.Name.Local == "\u0076\u0061\u006c" {
			_cacb := _dddf.Value
			_ceb.ValAttr = _cacb
			continue
		}
	}
	for {
		_dcdb, _aaabd := d.Token()
		if _aaabd != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u006e\u0067H\u0065x\u004e\u0075\u006d\u0062\u0065\u0072\u003a \u0025\u0073", _aaabd)
		}
		if _ceffd, _gaee := _dcdb.(_f.EndElement); _gaee && _ceffd.Name == start.Name {
			break
		}
	}
	return nil
}

func (_cfg *CT_LineJoinMiterProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cfg.LimAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006c\u0069\u006d"}, Value: _aa.Sprintf("\u0025\u0076", *_cfg.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_ffae *ST_NumForm) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_ffae = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_ffae = 1
	case "\u006c\u0069\u006e\u0069\u006e\u0067":
		*_ffae = 2
	case "\u006f\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_ffae = 3
	}
	return nil
}

func (_ccge ST_SchemeColorVal) String() string {
	switch _ccge {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0064\u006b\u0031"
	case 14:
		return "\u006c\u0074\u0031"
	case 15:
		return "\u0064\u006b\u0032"
	case 16:
		return "\u006c\u0074\u0032"
	case 17:
		return "\u0070\u0068\u0043l\u0072"
	}
	return ""
}

// Validate validates the CT_TextOutlineEffect and its children
func (_becg *CT_TextOutlineEffect) Validate() error {
	return _becg.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004f\u0075\u0074\u006ci\u006e\u0065\u0045\u0066fe\u0063\u0074")
}

func ParseUnionST_TextPoint(s string) (_d.ST_TextPoint, error) {
	return _d.ParseUnionST_TextPoint(s)
}

func NewCT_LongHexNumber() *CT_LongHexNumber { _bdc := &CT_LongHexNumber{}; return _bdc }

func (_cfcc *DiscardImageEditingData) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfcc.CT_OnOff = *NewCT_OnOff()
	for _, _egcb := range start.Attr {
		if _egcb.Name.Local == "\u0076\u0061\u006c" {
			_cfcc.ValAttr.UnmarshalXMLAttr(_egcb)
			continue
		}
	}
	for {
		_dgae, _eeab := d.Token()
		if _eeab != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0044\u0069\u0073\u0063\u0061\u0072d\u0049\u006d\u0061\u0067\u0065\u0045\u0064i\u0074\u0069\u006e\u0067\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _eeab)
		}
		if _egad, _gbfg := _dgae.(_f.EndElement); _gbfg && _egad.Name == start.Name {
			break
		}
	}
	return nil
}

func (_eaf *CT_Scene3D) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_fba := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_eaf.Camera, _fba)
	_fcde := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_eaf.LightRig, _fcde)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_efcd *ST_OnOff) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_efcd = 0
	case "\u0074\u0072\u0075\u0065":
		*_efcd = 1
	case "\u0066\u0061\u006cs\u0065":
		*_efcd = 2
	case "\u0030":
		*_efcd = 3
	case "\u0031":
		*_efcd = 4
	}
	return nil
}

// ValidateWithPath validates the CT_Glow and its children, prefixing error messages with path
func (_fgd *CT_Glow) ValidateWithPath(path string) error {
	if _fgd.RadAttr != nil {
		if *_fgd.RadAttr < 0 {
			return _aa.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fgd.RadAttr)
		}
		if *_fgd.RadAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_fgd.RadAttr)
		}
	}
	if _fgd.SrgbClr != nil {
		if _ece := _fgd.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ece != nil {
			return _ece
		}
	}
	if _fgd.SchemeClr != nil {
		if _aaa := _fgd.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _aaa != nil {
			return _aaa
		}
	}
	return nil
}

func (_dcff ST_PresetMaterialType) String() string {
	switch _dcff {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	case 16:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

type ST_OnOff byte

// Validate validates the CT_Reflection and its children
func (_aggd *CT_Reflection) Validate() error {
	return _aggd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_aecag *CT_SRgbColor) ValidateWithPath(path string) error {
	for _ceged, _aggc := range _aecag.EG_ColorTransform {
		if _dbfgg := _aggc.ValidateWithPath(_aa.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _ceged)); _dbfgg != nil {
			return _dbfgg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_aebf *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _baf := _aebf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _baf != nil {
		return _baf
	}
	return nil
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
	ST_PresetMaterialTypeNone              ST_PresetMaterialType = 16
)

func (_ebbbg ST_LightRigDirection) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ebbbg.String(), start)
}

func (_ddc *CT_Bevel) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ddc.WAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0077"}, Value: _aa.Sprintf("\u0025\u0076", *_ddc.WAttr)})
	}
	if _ddc.HAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0068"}, Value: _aa.Sprintf("\u0025\u0076", *_ddc.HAttr)})
	}
	if _ddc.PrstAttr != ST_BevelPresetTypeUnset {
		_ggf, _ce := _ddc.PrstAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0070\u0072\u0073\u0074"})
		if _ce != nil {
			return _ce
		}
		start.Attr = append(start.Attr, _ggf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CustomXmlConflictInsRangeStart and its children, prefixing error messages with path
func (_agaf *CustomXmlConflictInsRangeStart) ValidateWithPath(path string) error {
	if _abed := _agaf.CT_TrackChange.ValidateWithPath(path); _abed != nil {
		return _abed
	}
	return nil
}

func (_cfdd *CT_SchemeColor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	_gceb, _adff := _cfdd.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
	if _adff != nil {
		return _adff
	}
	start.Attr = append(start.Attr, _gceb)
	e.EncodeToken(start)
	if _cfdd.EG_ColorTransform != nil {
		for _, _dgbf := range _cfdd.EG_ColorTransform {
			_dgbf.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewEG_LineJoinPropertiesChoice() *EG_LineJoinPropertiesChoice {
	_dbaf := &EG_LineJoinPropertiesChoice{}
	return _dbaf
}

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_dabf *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _febed := _dabf.LineJoinPropertiesChoice.ValidateWithPath(path + "\u002fL\u0069\u006e\u0065\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065r\u0074i\u0065\u0073\u0043\u0068\u006f\u0069\u0063e"); _febed != nil {
		return _febed
	}
	return nil
}

func (_egcc ST_LineCap) String() string {
	switch _egcc {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}

// Validate validates the CT_NumSpacing and its children
func (_cegg *CT_NumSpacing) Validate() error {
	return _cegg.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0053\u0070\u0061\u0063\u0069\u006e\u0067")
}

func (_afdd *Checkbox) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072:\u0063\u0068\u0065\u0063\u006b\u0062\u006f\u0078"
	return _afdd.CT_SdtCheckbox.MarshalXML(e, start)
}

// Validate validates the CT_PathShadeProperties and its children
func (_eded *CT_PathShadeProperties) Validate() error {
	return _eded.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

func (_bedbd *EG_LineJoinPropertiesChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgag := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0072\u006f\u0075n\u0064"}:
		_bedbd.Round = _b.NewCT_Empty()
		if _dcba := d.DecodeElement(_bedbd.Round, &_cgag); _dcba != nil {
			return _dcba
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0062\u0065\u0076e\u006c"}:
		_bedbd.Bevel = _b.NewCT_Empty()
		if _dffb := d.DecodeElement(_bedbd.Bevel, &_cgag); _dffb != nil {
			return _dffb
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006d\u0069\u0074e\u0072"}:
		_bedbd.Miter = NewCT_LineJoinMiterProperties()
		if _afed := d.DecodeElement(_bedbd.Miter, &_cgag); _afed != nil {
			return _afed
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047_\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _cgag.Name)
		if _febgc := d.Skip(); _febgc != nil {
			return _febgc
		}
	}
	return nil
}

// Validate validates the EG_ShadeProperties and its children
func (_gfcb *EG_ShadeProperties) Validate() error {
	return _gfcb.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

func (_eeca *ST_LightRigDirection) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_eeca = 0
	case "\u0074\u006c":
		*_eeca = 1
	case "\u0074":
		*_eeca = 2
	case "\u0074\u0072":
		*_eeca = 3
	case "\u006c":
		*_eeca = 4
	case "\u0072":
		*_eeca = 5
	case "\u0062\u006c":
		*_eeca = 6
	case "\u0062":
		*_eeca = 7
	case "\u0062\u0072":
		*_eeca = 8
	}
	return nil
}

func NewCT_SphereCoords() *CT_SphereCoords {
	_egge := &CT_SphereCoords{}
	_egge.LatAttr = 0
	_egge.LonAttr = 0
	_egge.RevAttr = 0
	return _egge
}

type CT_LongHexNumber struct{ ValAttr string }

type CT_TextOutlineEffect struct {
	WAttr                    *int32
	CapAttr                  ST_LineCap
	CmpdAttr                 ST_CompoundLine
	AlgnAttr                 ST_PenAlignment
	FillPropertiesChoice     *EG_FillPropertiesChoice
	PrstDash                 *CT_PresetLineDashProperties
	LineJoinPropertiesChoice *EG_LineJoinPropertiesChoice
}

func (_fcda ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _fcda {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcda))
	}
	return nil
}

func NewCT_GradientStop() *CT_GradientStop { _aaab := &CT_GradientStop{}; return _aaab }

func ParseUnionST_Coordinate32(s string) (_d.ST_Coordinate32, error) {
	return _d.ParseUnionST_Coordinate32(s)
}

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_bg *CT_Bevel) ValidateWithPath(path string) error {
	if _bg.WAttr != nil {
		if *_bg.WAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bg.WAttr)
		}
		if *_bg.WAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bg.WAttr)
		}
	}
	if _bg.HAttr != nil {
		if *_bg.HAttr < 0 {
			return _aa.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_bg.HAttr)
		}
		if *_bg.HAttr > 27273042316900 {
			return _aa.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bg.HAttr)
		}
	}
	if _cd := _bg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _cd != nil {
		return _cd
	}
	return nil
}

func (_befc *CT_GradientStop) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _afe := range start.Attr {
		if _afe.Name.Local == "\u0070\u006f\u0073" {
			_cdg, _gce := ParseUnionST_PositiveFixedPercentage(_afe.Value)
			if _gce != nil {
				return _gce
			}
			_befc.PosAttr = _cdg
			continue
		}
	}
_fgf:
	for {
		_eedgd, _aaf := d.Token()
		if _aaf != nil {
			return _aaf
		}
		switch _eggb := _eedgd.(type) {
		case _f.StartElement:
			switch _eggb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_befc.SrgbClr = NewCT_SRgbColor()
				if _gge := d.DecodeElement(_befc.SrgbClr, &_eggb); _gge != nil {
					return _gge
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_befc.SchemeClr = NewCT_SchemeColor()
				if _cag := d.DecodeElement(_befc.SchemeClr, &_eggb); _cag != nil {
					return _cag
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _eggb.Name)
				if _fegb := d.Skip(); _fegb != nil {
					return _fegb
				}
			}
		case _f.EndElement:
			break _fgf
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DefaultImageDpi and its children, prefixing error messages with path
func (_cae *CT_DefaultImageDpi) ValidateWithPath(path string) error { return nil }

func (_ebdg *EG_FillPropertiesChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_agcf := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
		_ebdg.NoFill = _b.NewCT_Empty()
		if _bgcb := d.DecodeElement(_ebdg.NoFill, &_agcf); _bgcb != nil {
			return _bgcb
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
		_ebdg.SolidFill = NewCT_SolidColorFillProperties()
		if _cagd := d.DecodeElement(_ebdg.SolidFill, &_agcf); _cagd != nil {
			return _cagd
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
		_ebdg.GradFill = NewCT_GradientFillProperties()
		if _adeb := d.DecodeElement(_ebdg.GradFill, &_agcf); _adeb != nil {
			return _adeb
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _agcf.Name)
		if _dggd := d.Skip(); _dggd != nil {
			return _dggd
		}
	}
	return nil
}

// Validate validates the DocId and its children
func (_dabb *DocId) Validate() error { return _dabb.ValidateWithPath("\u0044\u006f\u0063I\u0064") }

func NewCT_StyleSet() *CT_StyleSet { _fddb := &CT_StyleSet{}; return _fddb }

func ParseStdlibTime(s string) (_a.Time, error) { return _dd.ParseStdlibTime(s) }

const (
	ST_LigaturesUnset                            ST_Ligatures = 0
	ST_LigaturesNone                             ST_Ligatures = 1
	ST_LigaturesStandard                         ST_Ligatures = 2
	ST_LigaturesContextual                       ST_Ligatures = 3
	ST_LigaturesHistorical                       ST_Ligatures = 4
	ST_LigaturesDiscretional                     ST_Ligatures = 5
	ST_LigaturesStandardContextual               ST_Ligatures = 6
	ST_LigaturesStandardHistorical               ST_Ligatures = 7
	ST_LigaturesContextualHistorical             ST_Ligatures = 8
	ST_LigaturesStandardDiscretional             ST_Ligatures = 9
	ST_LigaturesContextualDiscretional           ST_Ligatures = 10
	ST_LigaturesHistoricalDiscretional           ST_Ligatures = 11
	ST_LigaturesStandardContextualHistorical     ST_Ligatures = 12
	ST_LigaturesStandardContextualDiscretional   ST_Ligatures = 13
	ST_LigaturesStandardHistoricalDiscretional   ST_Ligatures = 14
	ST_LigaturesContextualHistoricalDiscretional ST_Ligatures = 15
	ST_LigaturesAll                              ST_Ligatures = 16
)

// Validate validates the CustomXmlConflictDelRangeEnd and its children
func (_acbe *CustomXmlConflictDelRangeEnd) Validate() error {
	return _acbe.ValidateWithPath("\u0043\u0075\u0073\u0074o\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069c\u0074D\u0065\u006c\u0052\u0061\u006e\u0067\u0065E\u006e\u0064")
}

type Checkbox struct{ CT_SdtCheckbox }

type CT_Camera struct{ PrstAttr ST_PresetCameraType }

func (_aabad *DocId) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077o\u0072\u003a\u0064\u006f\u0063\u0049d"
	return _aabad.CT_LongHexNumber.MarshalXML(e, start)
}

func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_eab := &CT_PresetLineDashProperties{}
	return _eab
}

func (_dfa *EG_RunLevelConflicts) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_efbd:
	for {
		_dabbb, _gdbga := d.Token()
		if _gdbga != nil {
			return _gdbga
		}
		switch _fgbg := _dabbb.(type) {
		case _f.StartElement:
			switch _fgbg.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"}:
				_dfa.ConflictIns = _b.NewCT_RunTrackChange()
				if _aefd := d.DecodeElement(_dfa.ConflictIns, &_fgbg); _aefd != nil {
					return _aefd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"}:
				_dfa.ConflictDel = _b.NewCT_RunTrackChange()
				if _gebdd := d.DecodeElement(_dfa.ConflictDel, &_fgbg); _gebdd != nil {
					return _gebdd
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0052\u0075\u006e\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0073\u0020\u0025\u0076", _fgbg.Name)
				if _fbdb := d.Skip(); _fbdb != nil {
					return _fbdb
				}
			}
		case _f.EndElement:
			break _efbd
		case _f.CharData:
		}
	}
	return nil
}

func (_cddf ST_BevelPresetType) Validate() error { return _cddf.ValidateWithPath("") }

func (_fbcfe *ST_PresetCameraType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cdgee, _ddab := d.Token()
	if _ddab != nil {
		return _ddab
	}
	if _ccecg, _gfef := _cdgee.(_f.EndElement); _gfef && _ccecg.Name == start.Name {
		*_fbcfe = 1
		return nil
	}
	if _adgd, _fbda := _cdgee.(_f.CharData); !_fbda {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdgee)
	} else {
		switch string(_adgd) {
		case "":
			*_fbcfe = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_fbcfe = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_fbcfe = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_fbcfe = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_fbcfe = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_fbcfe = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_fbcfe = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_fbcfe = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_fbcfe = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_fbcfe = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_fbcfe = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_fbcfe = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_fbcfe = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_fbcfe = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_fbcfe = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_fbcfe = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_fbcfe = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_fbcfe = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_fbcfe = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_fbcfe = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_fbcfe = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_fbcfe = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_fbcfe = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_fbcfe = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_fbcfe = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_fbcfe = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_fbcfe = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_fbcfe = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_fbcfe = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_fbcfe = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_fbcfe = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_fbcfe = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_fbcfe = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_fbcfe = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_fbcfe = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_fbcfe = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_fbcfe = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_fbcfe = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_fbcfe = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_fbcfe = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_fbcfe = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_fbcfe = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_fbcfe = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_fbcfe = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_fbcfe = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_fbcfe = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_fbcfe = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_fbcfe = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_fbcfe = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_fbcfe = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_fbcfe = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_fbcfe = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_fbcfe = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_fbcfe = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_fbcfe = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_fbcfe = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_fbcfe = 62
		}
	}
	_cdgee, _ddab = d.Token()
	if _ddab != nil {
		return _ddab
	}
	if _cdaf, _bcag := _cdgee.(_f.EndElement); _bcag && _cdaf.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdgee)
}

// ValidateWithPath validates the Checkbox and its children, prefixing error messages with path
func (_cbac *Checkbox) ValidateWithPath(path string) error {
	if _decag := _cbac.CT_SdtCheckbox.ValidateWithPath(path); _decag != nil {
		return _decag
	}
	return nil
}

func (_ggbb *CustomXmlConflictDelRangeStart) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ggbb.CT_TrackChange = *_b.NewCT_TrackChange()
	for {
		_eabe, _edgbd := d.Token()
		if _edgbd != nil {
			return _aa.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c\u0052\u0061\u006e\u0067\u0065S\u0074\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _edgbd)
		}
		if _dceb, _cdbb := _eabe.(_f.EndElement); _cdbb && _dceb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_fdffe ST_NumForm) Validate() error { return _fdffe.ValidateWithPath("") }

func NewEG_RPrOpenType() *EG_RPrOpenType {
	_ggab := &EG_RPrOpenType{}
	return _ggab
}

func NewCT_NumForm() *CT_NumForm { _dbga := &CT_NumForm{}; _dbga.ValAttr = ST_NumForm(1); return _dbga }

func (_gaaa ST_BevelPresetType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gaaa.String(), start)
}

// Validate validates the CT_Scene3D and its children
func (_ead *CT_Scene3D) Validate() error {
	return _ead.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}

func (_gfc *CT_SdtCheckbox) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fgec:
	for {
		_ggde, _ccb := d.Token()
		if _ccb != nil {
			return _ccb
		}
		switch _cgb := _ggde.(type) {
		case _f.StartElement:
			switch _cgb.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063h\u0065\u0063\u006b\u0065\u0064"}:
				_gfc.Checked = NewCT_OnOff()
				if _abc := d.DecodeElement(_gfc.Checked, &_cgb); _abc != nil {
					return _abc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063\u0068\u0065c\u006b\u0065\u0064\u0053\u0074\u0061\u0074\u0065"}:
				_gfc.CheckedState = NewCT_SdtCheckboxSymbol()
				if _fgb := d.DecodeElement(_gfc.CheckedState, &_cgb); _fgb != nil {
					return _fgb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0075\u006e\u0063\u0068\u0065\u0063\u006b\u0065\u0064S\u0074\u0061\u0074\u0065"}:
				_gfc.UncheckedState = NewCT_SdtCheckboxSymbol()
				if _deaa := d.DecodeElement(_gfc.UncheckedState, &_cgb); _deaa != nil {
					return _deaa
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0064\u0074\u0043\u0068\u0065\u0063k\u0062o\u0078\u0020\u0025\u0076", _cgb.Name)
				if _febe := d.Skip(); _febe != nil {
					return _febe
				}
			}
		case _f.EndElement:
			break _fgec
		case _f.CharData:
		}
	}
	return nil
}

func (_cdafa *ST_BevelPresetType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cdafa = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_cdafa = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_cdafa = 2
	case "\u0073\u006c\u006fp\u0065":
		*_cdafa = 3
	case "\u0063\u0072\u006fs\u0073":
		*_cdafa = 4
	case "\u0061\u006e\u0067l\u0065":
		*_cdafa = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_cdafa = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_cdafa = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_cdafa = 8
	case "\u0064\u0069\u0076o\u0074":
		*_cdafa = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_cdafa = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_cdafa = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_cdafa = 12
	}
	return nil
}

// ValidateWithPath validates the EntityPicker and its children, prefixing error messages with path
func (_acgb *EntityPicker) ValidateWithPath(path string) error {
	if _bebg := _acgb.CT_Empty.ValidateWithPath(path); _bebg != nil {
		return _bebg
	}
	return nil
}

func (_ccbag *EG_ShadePropertiesChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ccbag.Lin != nil {
		_fggb := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072\u003a\u006c\u0069\u006e"}}
		e.EncodeElement(_ccbag.Lin, _fggb)
	} else if _ccbag.Path != nil {
		_afgf := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_ccbag.Path, _afgf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_ffff *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _gadb := _ffff.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gadb != nil {
		return _gadb
	}
	return nil
}

func (_ceba *EG_FillProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ceba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
_dcca:
	for {
		_aeeb, _bbgcg := d.Token()
		if _bbgcg != nil {
			return _bbgcg
		}
		switch _ffgf := _aeeb.(type) {
		case _f.StartElement:
			switch _ffgf.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ceba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _dgef := d.DecodeElement(&_ceba.FillPropertiesChoice.NoFill, &_ffgf); _dgef != nil {
					return _dgef
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ceba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _aegf := d.DecodeElement(&_ceba.FillPropertiesChoice.SolidFill, &_ffgf); _aegf != nil {
					return _aegf
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ceba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _gceg := d.DecodeElement(&_ceba.FillPropertiesChoice.GradFill, &_ffgf); _gceg != nil {
					return _gceg
				}
			default:
				_fd.Log.Debug("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ffgf.Name)
				if _bgdg := d.Skip(); _bgdg != nil {
					return _bgdg
				}
			}
		case _f.EndElement:
			break _dcca
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Shadow and its children
func (_fgdb *CT_Shadow) Validate() error {
	return _fgdb.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0061\u0064\u006fw")
}

// Validate validates the CT_Percentage and its children
func (_dba *CT_Percentage) Validate() error {
	return _dba.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

// ValidateWithPath validates the EG_RPrTextEffects and its children, prefixing error messages with path
func (_ecede *EG_RPrTextEffects) ValidateWithPath(path string) error {
	if _ecede.Glow != nil {
		if _bgbf := _ecede.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _bgbf != nil {
			return _bgbf
		}
	}
	if _ecede.Shadow != nil {
		if _ccba := _ecede.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _ccba != nil {
			return _ccba
		}
	}
	if _ecede.Reflection != nil {
		if _gdaac := _ecede.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _gdaac != nil {
			return _gdaac
		}
	}
	if _ecede.TextOutline != nil {
		if _gcbc := _ecede.TextOutline.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _gcbc != nil {
			return _gcbc
		}
	}
	if _ecede.TextFill != nil {
		if _cegec := _ecede.TextFill.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0046\u0069\u006cl"); _cegec != nil {
			return _cegec
		}
	}
	if _ecede.Scene3d != nil {
		if _ebbg := _ecede.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _ebbg != nil {
			return _ebbg
		}
	}
	if _ecede.Props3d != nil {
		if _fffa := _ecede.Props3d.ValidateWithPath(path + "\u002f\u0050\u0072\u006f\u0070\u0073\u0033\u0064"); _fffa != nil {
			return _fffa
		}
	}
	return nil
}

func (_aadd *DefaultImageDpi) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072\u003ade\u0066\u0061\u0075\u006c\u0074\u0049\u006d\u0061\u0067\u0065\u0044\u0070\u0069"
	return _aadd.CT_DefaultImageDpi.MarshalXML(e, start)
}

func (_cgaca ST_PresetLineDashVal) Validate() error { return _cgaca.ValidateWithPath("") }

func (_gfde ST_PenAlignment) Validate() error { return _gfde.ValidateWithPath("") }

func (_adcf *ST_LightRigType) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edgff, _fgdba := d.Token()
	if _fgdba != nil {
		return _fgdba
	}
	if _feea, _egbc := _edgff.(_f.EndElement); _egbc && _feea.Name == start.Name {
		*_adcf = 1
		return nil
	}
	if _adad, _cdfb := _edgff.(_f.CharData); !_cdfb {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edgff)
	} else {
		switch string(_adad) {
		case "":
			*_adcf = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_adcf = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_adcf = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_adcf = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_adcf = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_adcf = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_adcf = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_adcf = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_adcf = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_adcf = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_adcf = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_adcf = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_adcf = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_adcf = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_adcf = 14
		case "\u0073\u006f\u0066\u0074":
			*_adcf = 15
		case "\u0068\u0061\u0072s\u0068":
			*_adcf = 16
		case "\u0066\u006c\u006fo\u0064":
			*_adcf = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_adcf = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_adcf = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_adcf = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_adcf = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_adcf = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_adcf = 23
		case "\u0066\u006c\u0061\u0074":
			*_adcf = 24
		case "\u0074\u0077\u006fP\u0074":
			*_adcf = 25
		case "\u0067\u006c\u006f\u0077":
			*_adcf = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_adcf = 27
		}
	}
	_edgff, _fgdba = d.Token()
	if _fgdba != nil {
		return _fgdba
	}
	if _gbcf, _dfbga := _edgff.(_f.EndElement); _dfbga && _gbcf.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edgff)
}

type CT_FillTextEffect struct{ FillPropertiesChoice *EG_FillPropertiesChoice }

func (_caaab ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _caaab {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_caaab))
	}
	return nil
}

func NewCheckbox() *Checkbox {
	_cfe := &Checkbox{}
	_cfe.CT_SdtCheckbox = *NewCT_SdtCheckbox()
	return _cfe
}

// ValidateWithPath validates the CustomXmlConflictInsRangeEnd and its children, prefixing error messages with path
func (_ebcgg *CustomXmlConflictInsRangeEnd) ValidateWithPath(path string) error {
	if _ccfe := _ebcgg.CT_Markup.ValidateWithPath(path); _ccfe != nil {
		return _ccfe
	}
	return nil
}

type ST_LineCap byte

func (_fcefc ST_LightRigDirection) String() string {
	switch _fcefc {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}

func (_bag ST_PresetLineDashVal) String() string {
	switch _bag {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 4:
		return "\u0064\u0061\u0073\u0068"
	case 5:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 6:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 7:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 8:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 9:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 10:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

func NewCT_SRgbColor() *CT_SRgbColor { _faca := &CT_SRgbColor{}; return _faca }

// Validate validates the EG_ShadePropertiesChoice and its children
func (_ecbf *EG_ShadePropertiesChoice) Validate() error {
	return _ecbf.ValidateWithPath("\u0045G\u005f\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}

// ValidateWithPath validates the DiscardImageEditingData and its children, prefixing error messages with path
func (_cfab *DiscardImageEditingData) ValidateWithPath(path string) error {
	if _bgda := _cfab.CT_OnOff.ValidateWithPath(path); _bgda != nil {
		return _bgda
	}
	return nil
}

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

func (_cgde *EG_ColorChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _cgde.SrgbClr != nil {
		_dbbe := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cgde.SrgbClr, _dbbe)
	} else if _cgde.SchemeClr != nil {
		_bfaf := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cgde.SchemeClr, _bfaf)
	}
	return nil
}

func (_cbbf *ST_NumSpacing) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_cbbf = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_cbbf = 1
	case "\u0070\u0072\u006fp\u006f\u0072\u0074\u0069\u006f\u006e\u0061\u006c":
		*_cbbf = 2
	case "\u0074a\u0062\u0075\u006c\u0061\u0072":
		*_cbbf = 3
	}
	return nil
}

func (_baee ST_LightRigType) ValidateWithPath(path string) error {
	switch _baee {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baee))
	}
	return nil
}

func NewCT_OnOff() *CT_OnOff { _agge := &CT_OnOff{}; return _agge }

func ParseUnionST_AdjCoordinate(s string) (_d.ST_AdjCoordinate, error) {
	return _d.ParseUnionST_AdjCoordinate(s)
}

func (_gbg *CT_LinearShadeProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _bfg := range start.Attr {
		if _bfg.Name.Local == "\u0061\u006e\u0067" {
			_cbd, _daaf := _ae.ParseInt(_bfg.Value, 10, 32)
			if _daaf != nil {
				return _daaf
			}
			_cbf := int32(_cbd)
			_gbg.AngAttr = &_cbf
			continue
		}
		if _bfg.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_gbg.ScaledAttr.UnmarshalXMLAttr(_bfg)
			continue
		}
	}
	for {
		_bcd, _ggcb := d.Token()
		if _ggcb != nil {
			return _aa.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _ggcb)
		}
		if _cdbf, _deca := _bcd.(_f.EndElement); _deca && _cdbf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_ggd *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _ebag := _ggd.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _ebag != nil {
		return _ebag
	}
	if _ggd.FillToRect != nil {
		if _cebba := _ggd.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _cebba != nil {
			return _cebba
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_cbgg *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _egbe := _cbgg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _egbe != nil {
		return _egbe
	}
	return nil
}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_decc *CT_Scene3D) ValidateWithPath(path string) error {
	if _cbbg := _decc.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _cbbg != nil {
		return _cbbg
	}
	if _febg := _decc.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _febg != nil {
		return _febg
	}
	return nil
}

func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_ceff := &CT_LineJoinMiterProperties{}
	return _ceff
}

// ValidateWithPath validates the CT_SdtCheckboxSymbol and its children, prefixing error messages with path
func (_bffd *CT_SdtCheckboxSymbol) ValidateWithPath(path string) error { return nil }

func (_fegda ST_SchemeColorVal) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_bdef := _f.Attr{}
	_bdef.Name = name
	switch _fegda {
	case ST_SchemeColorValUnset:
		_bdef.Value = ""
	case ST_SchemeColorValBg1:
		_bdef.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_bdef.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_bdef.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_bdef.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_bdef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_bdef.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_bdef.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValDk1:
		_bdef.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_bdef.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_bdef.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_bdef.Value = "\u006c\u0074\u0032"
	case ST_SchemeColorValPhClr:
		_bdef.Value = "\u0070\u0068\u0043l\u0072"
	}
	return _bdef, nil
}

// Validate validates the CT_StyleSet and its children
func (_bea *CT_StyleSet) Validate() error {
	return _bea.ValidateWithPath("C\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0053\u0065\u0074")
}

func (_dfcfa ST_CompoundLine) ValidateWithPath(path string) error {
	switch _dfcfa {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfcfa))
	}
	return nil
}

func (_cegd ST_LineCap) Validate() error { return _cegd.ValidateWithPath("") }

// ValidateWithPath validates the EG_ConflictsChoice and its children, prefixing error messages with path
func (_afbba *EG_ConflictsChoice) ValidateWithPath(path string) error {
	if _afbba.ConflictIns != nil {
		if _agfad := _afbba.ConflictIns.ValidateWithPath(path + "\u002f\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"); _agfad != nil {
			return _agfad
		}
	}
	if _afbba.ConflictDel != nil {
		if _deaf := _afbba.ConflictDel.ValidateWithPath(path + "\u002f\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"); _deaf != nil {
			return _deaf
		}
	}
	return nil
}

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_dfgg *EG_FillProperties) ValidateWithPath(path string) error {
	if _eecd := _dfgg.FillPropertiesChoice.ValidateWithPath(path + "/\u0046\u0069\u006c\u006cPr\u006fp\u0065\u0072\u0074\u0069\u0065s\u0043\u0068\u006f\u0069\u0063\u0065"); _eecd != nil {
		return _eecd
	}
	return nil
}

type ST_BevelPresetType byte

func ParseUnionST_AdjAngle(s string) (_d.ST_AdjAngle, error) { return _d.ParseUnionST_AdjAngle(s) }

func ParseUnionST_TextFontScalePercentOrPercentString(s string) (_d.ST_TextFontScalePercentOrPercentString, error) {
	return _d.ParseUnionST_TextFontScalePercentOrPercentString(s)
}

func NewDocId() *DocId { _acg := &DocId{}; _acg.CT_LongHexNumber = *NewCT_LongHexNumber(); return _acg }

// Validate validates the CT_LightRig and its children
func (_dbg *CT_LightRig) Validate() error {
	return _dbg.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}

type CT_NumForm struct{ ValAttr ST_NumForm }

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

func (_ddea *EG_LineDashProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fcdf:
	for {
		_aaaba, _dgcaf := d.Token()
		if _dgcaf != nil {
			return _dgcaf
		}
		switch _bccdc := _aaaba.(type) {
		case _f.StartElement:
			switch _bccdc.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_ddea.PrstDash = NewCT_PresetLineDashProperties()
				if _acaf := d.DecodeElement(_ddea.PrstDash, &_bccdc); _acaf != nil {
					return _acaf
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bccdc.Name)
				if _ddgd := d.Skip(); _ddgd != nil {
					return _ddgd
				}
			}
		case _f.EndElement:
			break _fcdf
		case _f.CharData:
		}
	}
	return nil
}

func ParseUnionST_TextSpacingPercentOrPercentString(s string) (_d.ST_TextSpacingPercentOrPercentString, error) {
	return _d.ParseUnionST_TextSpacingPercentOrPercentString(s)
}

// Validate validates the EG_FillProperties and its children
func (_cbdc *EG_FillProperties) Validate() error {
	return _cbdc.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Props3D and its children
func (_gebe *CT_Props3D) Validate() error {
	return _gebe.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0070\u0073\u0033\u0044")
}

func (_eddc *EG_ColorTransformChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gbff := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0074\u0069\u006e\u0074"}:
		_eddc.Tint = NewCT_PositiveFixedPercentage()
		if _gebde := d.DecodeElement(_eddc.Tint, &_gbff); _gebde != nil {
			return _gebde
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0068\u0061d\u0065"}:
		_eddc.Shade = NewCT_PositiveFixedPercentage()
		if _gdaa := d.DecodeElement(_eddc.Shade, &_gbff); _gdaa != nil {
			return _gdaa
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0061\u006c\u0070h\u0061"}:
		_eddc.Alpha = NewCT_PositiveFixedPercentage()
		if _fcdd := d.DecodeElement(_eddc.Alpha, &_gbff); _fcdd != nil {
			return _fcdd
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
		_eddc.HueMod = NewCT_PositivePercentage()
		if _adaf := d.DecodeElement(_eddc.HueMod, &_gbff); _adaf != nil {
			return _adaf
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074"}:
		_eddc.Sat = NewCT_Percentage()
		if _agcad := d.DecodeElement(_eddc.Sat, &_gbff); _agcad != nil {
			return _agcad
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
		_eddc.SatOff = NewCT_Percentage()
		if _fadf := d.DecodeElement(_eddc.SatOff, &_gbff); _fadf != nil {
			return _fadf
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
		_eddc.SatMod = NewCT_Percentage()
		if _bbad := d.DecodeElement(_eddc.SatMod, &_gbff); _bbad != nil {
			return _bbad
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d"}:
		_eddc.Lum = NewCT_Percentage()
		if _gdcg := d.DecodeElement(_eddc.Lum, &_gbff); _gdcg != nil {
			return _gdcg
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
		_eddc.LumOff = NewCT_Percentage()
		if _bbba := d.DecodeElement(_eddc.LumOff, &_gbff); _bbba != nil {
			return _bbba
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
		_eddc.LumMod = NewCT_Percentage()
		if _dfgb := d.DecodeElement(_eddc.LumMod, &_gbff); _dfgb != nil {
			return _dfgb
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _gbff.Name)
		if _dceg := d.Skip(); _dceg != nil {
			return _dceg
		}
	}
	return nil
}

func (_bgf *CT_StylisticSets) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _bgf.StyleSet != nil {
		_cbcg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072:\u0073\u0074\u0079\u006c\u0065\u0053\u0065\u0074"}}
		for _, _geff := range _bgf.StyleSet {
			e.EncodeElement(_geff, _cbcg)
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aegg ST_LightRigType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_dgefd := _f.Attr{}
	_dgefd.Name = name
	switch _aegg {
	case ST_LightRigTypeUnset:
		_dgefd.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_dgefd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_dgefd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_dgefd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_dgefd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_dgefd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_dgefd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_dgefd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_dgefd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_dgefd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_dgefd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_dgefd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_dgefd.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_dgefd.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_dgefd.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_dgefd.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_dgefd.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_dgefd.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_dgefd.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_dgefd.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_dgefd.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_dgefd.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_dgefd.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_dgefd.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_dgefd.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_dgefd.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_dgefd.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_dgefd.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _dgefd, nil
}

// ValidateWithPath validates the CT_OnOff and its children, prefixing error messages with path
func (_egb *CT_OnOff) ValidateWithPath(path string) error {
	if _bbc := _egb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bbc != nil {
		return _bbc
	}
	return nil
}

func NewCT_Shadow() *CT_Shadow {
	_babc := &CT_Shadow{}
	return _babc
}

func (_fbcee *ST_RectAlignment) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_fbcee = 0
	case "\u006e\u006f\u006e\u0065":
		*_fbcee = 1
	case "\u0074\u006c":
		*_fbcee = 2
	case "\u0074":
		*_fbcee = 3
	case "\u0074\u0072":
		*_fbcee = 4
	case "\u006c":
		*_fbcee = 5
	case "\u0063\u0074\u0072":
		*_fbcee = 6
	case "\u0072":
		*_fbcee = 7
	case "\u0062\u006c":
		*_fbcee = 8
	case "\u0062":
		*_fbcee = 9
	case "\u0062\u0072":
		*_fbcee = 10
	}
	return nil
}

func (_gcgc ST_CompoundLine) Validate() error { return _gcgc.ValidateWithPath("") }

type EG_ShadePropertiesChoice struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

// Validate validates the CustomXmlConflictInsRangeEnd and its children
func (_fdgac *CustomXmlConflictInsRangeEnd) Validate() error {
	return _fdgac.ValidateWithPath("\u0043\u0075\u0073\u0074o\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069c\u0074I\u006e\u0073\u0052\u0061\u006e\u0067\u0065E\u006e\u0064")
}

type CustomXmlConflictDelRangeEnd struct{ _b.CT_Markup }

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

func (_debad *ST_Ligatures) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_feffd, _gcafb := d.Token()
	if _gcafb != nil {
		return _gcafb
	}
	if _ddcfg, _abf := _feffd.(_f.EndElement); _abf && _ddcfg.Name == start.Name {
		*_debad = 1
		return nil
	}
	if _dgfe, _bafg := _feffd.(_f.CharData); !_bafg {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feffd)
	} else {
		switch string(_dgfe) {
		case "":
			*_debad = 0
		case "\u006e\u006f\u006e\u0065":
			*_debad = 1
		case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064":
			*_debad = 2
		case "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c":
			*_debad = 3
		case "\u0068\u0069\u0073\u0074\u006f\u0072\u0069\u0063\u0061\u006c":
			*_debad = 4
		case "\u0064\u0069\u0073c\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
			*_debad = 5
		case "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0043o\u006e\u0074e\u0078\u0074\u0075\u0061\u006c":
			*_debad = 6
		case "\u0073t\u0061n\u0064\u0061\u0072\u0064\u0048i\u0073\u0074o\u0072\u0069\u0063\u0061\u006c":
			*_debad = 7
		case "c\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048i\u0073\u0074\u006f\u0072ic\u0061\u006c":
			*_debad = 8
		case "s\u0074a\u006e\u0064\u0061\u0072\u0064\u0044\u0069\u0073c\u0072\u0065\u0074\u0069on\u0061\u006c":
			*_debad = 9
		case "\u0063\u006f\u006e\u0074ex\u0074\u0075\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c":
			*_debad = 10
		case "\u0068\u0069\u0073\u0074or\u0069\u0063\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006ea\u006c":
			*_debad = 11
		case "\u0073\u0074\u0061\u006ed\u0061\u0072\u0064\u0043\u006f\u006e\u0074\u0065\u0078\u0074u\u0061l\u0048\u0069\u0073\u0074\u006f\u0072\u0069c\u0061\u006c":
			*_debad = 12
		case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0043\u006fn\u0074\u0065\u0078\u0074\u0075\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
			*_debad = 13
		case "\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064\u0048\u0069s\u0074\u006f\u0072\u0069\u0063\u0061\u006cD\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
			*_debad = 14
		case "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0075\u0061\u006c\u0048\u0069\u0073\u0074\u006fr\u0069c\u0061\u006c\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0069\u006f\u006e\u0061\u006c":
			*_debad = 15
		case "\u0061\u006c\u006c":
			*_debad = 16
		}
	}
	_feffd, _gcafb = d.Token()
	if _gcafb != nil {
		return _gcafb
	}
	if _abebd, _fbcff := _feffd.(_f.EndElement); _fbcff && _abebd.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feffd)
}

func (_cgaf *ST_LineCap) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cfgf, _fdda := d.Token()
	if _fdda != nil {
		return _fdda
	}
	if _cacff, _ebg := _cfgf.(_f.EndElement); _ebg && _cacff.Name == start.Name {
		*_cgaf = 1
		return nil
	}
	if _fagdc, _gefcg := _cfgf.(_f.CharData); !_gefcg {
		return _aa.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cfgf)
	} else {
		switch string(_fagdc) {
		case "":
			*_cgaf = 0
		case "\u0072\u006e\u0064":
			*_cgaf = 1
		case "\u0073\u0071":
			*_cgaf = 2
		case "\u0066\u006c\u0061\u0074":
			*_cgaf = 3
		}
	}
	_cfgf, _fdda = d.Token()
	if _fdda != nil {
		return _fdda
	}
	if _cafg, _ecgc := _cfgf.(_f.EndElement); _ecgc && _cafg.Name == start.Name {
		return nil
	}
	return _aa.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cfgf)
}

func (_facd ST_PresetCameraType) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_gfdb := _f.Attr{}
	_gfdb.Name = name
	switch _facd {
	case ST_PresetCameraTypeUnset:
		_gfdb.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_gfdb.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_gfdb.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_gfdb.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_gfdb.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_gfdb.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_gfdb.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_gfdb.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_gfdb.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_gfdb.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_gfdb.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_gfdb.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_gfdb.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_gfdb.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_gfdb.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_gfdb.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_gfdb.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_gfdb.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_gfdb.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_gfdb.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_gfdb.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_gfdb.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_gfdb.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_gfdb.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_gfdb.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_gfdb.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_gfdb.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_gfdb.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_gfdb.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_gfdb.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_gfdb.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_gfdb.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_gfdb.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_gfdb.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_gfdb.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_gfdb.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_gfdb.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_gfdb.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_gfdb.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_gfdb.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_gfdb.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_gfdb.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_gfdb.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_gfdb.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_gfdb.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_gfdb.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_gfdb.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_gfdb.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_gfdb.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_gfdb.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_gfdb.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_gfdb.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_gfdb.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_gfdb.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_gfdb.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_gfdb.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_gfdb.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_gfdb.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_gfdb.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_gfdb.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_gfdb.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_gfdb.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_gfdb.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _gfdb, nil
}

func (_gacb *CT_SRgbColor) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _acfa := range start.Attr {
		if _acfa.Name.Local == "\u0076\u0061\u006c" {
			_bfb := _acfa.Value
			_gacb.ValAttr = _bfb
			continue
		}
	}
_afaf:
	for {
		_dgdb, _bfgg := d.Token()
		if _bfgg != nil {
			return _bfgg
		}
		switch _cdcd := _dgdb.(type) {
		case _f.StartElement:
			switch _cdcd.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0074\u0069\u006e\u0074"}:
				_dag := NewEG_ColorTransform()
				_dag.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _dag)
				if _facae := d.DecodeElement(&_dag.ColorTransformChoice.Tint, &_cdcd); _facae != nil {
					return _facae
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0068\u0061d\u0065"}:
				_fee := NewEG_ColorTransform()
				_fee.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _fee)
				if _gdd := d.DecodeElement(&_fee.ColorTransformChoice.Shade, &_cdcd); _gdd != nil {
					return _gdd
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0061\u006c\u0070h\u0061"}:
				_dbfd := NewEG_ColorTransform()
				_dbfd.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _dbfd)
				if _acff := d.DecodeElement(&_dbfd.ColorTransformChoice.Alpha, &_cdcd); _acff != nil {
					return _acff
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_bbacc := NewEG_ColorTransform()
				_bbacc.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _bbacc)
				if _acab := d.DecodeElement(&_bbacc.ColorTransformChoice.HueMod, &_cdcd); _acab != nil {
					return _acab
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074"}:
				_adc := NewEG_ColorTransform()
				_adc.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _adc)
				if _egeda := d.DecodeElement(&_adc.ColorTransformChoice.Sat, &_cdcd); _egeda != nil {
					return _egeda
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_bdf := NewEG_ColorTransform()
				_bdf.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _bdf)
				if _aefg := d.DecodeElement(&_bdf.ColorTransformChoice.SatOff, &_cdcd); _aefg != nil {
					return _aefg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_gdgb := NewEG_ColorTransform()
				_gdgb.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _gdgb)
				if _ddb := d.DecodeElement(&_gdgb.ColorTransformChoice.SatMod, &_cdcd); _ddb != nil {
					return _ddb
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d"}:
				_fdd := NewEG_ColorTransform()
				_fdd.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _fdd)
				if _bbe := d.DecodeElement(&_fdd.ColorTransformChoice.Lum, &_cdcd); _bbe != nil {
					return _bbe
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ecde := NewEG_ColorTransform()
				_ecde.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _ecde)
				if _dafg := d.DecodeElement(&_ecde.ColorTransformChoice.LumOff, &_cdcd); _dafg != nil {
					return _dafg
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_beeg := NewEG_ColorTransform()
				_beeg.ColorTransformChoice = NewEG_ColorTransformChoice()
				_gacb.EG_ColorTransform = append(_gacb.EG_ColorTransform, _beeg)
				if _ebcc := d.DecodeElement(&_beeg.ColorTransformChoice.LumMod, &_cdcd); _ebcc != nil {
					return _ebcc
				}
			default:
				_fd.Log.Debug("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _cdcd.Name)
				if _eac := d.Skip(); _eac != nil {
					return _eac
				}
			}
		case _f.EndElement:
			break _afaf
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CustomXmlConflictDelRangeStart and its children
func (_deedf *CustomXmlConflictDelRangeStart) Validate() error {
	return _deedf.ValidateWithPath("\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006e\u0066\u006c\u0069\u0063\u0074\u0044e\u006c\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074")
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValDk1      ST_SchemeColorVal = 13
	ST_SchemeColorValLt1      ST_SchemeColorVal = 14
	ST_SchemeColorValDk2      ST_SchemeColorVal = 15
	ST_SchemeColorValLt2      ST_SchemeColorVal = 16
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 17
)

func (_afaa *CustomXmlConflictInsRangeEnd) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_afaa.CT_Markup = *_b.NewCT_Markup()
	for {
		_dggc, _degg := d.Token()
		if _degg != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073\u0052\u0061ng\u0065\u0045\u006ed\u003a \u0025\u0073", _degg)
		}
		if _dfcb, _bbb := _dggc.(_f.EndElement); _bbb && _dfcb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gddc ST_NumSpacing) ValidateWithPath(path string) error {
	switch _gddc {
	case 0, 1, 2, 3:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gddc))
	}
	return nil
}

func (_ege *CT_LongHexNumber) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _ege.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dccf ST_PresetCameraType) String() string {
	switch _dccf {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}

func (_abbc *CT_LinearShadeProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _abbc.AngAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0061\u006e\u0067"}, Value: _aa.Sprintf("\u0025\u0076", *_abbc.AngAttr)})
	}
	if _abbc.ScaledAttr != ST_OnOffUnset {
		_abga, _eca := _abbc.ScaledAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0061\u006c\u0065\u0064"})
		if _eca != nil {
			return _eca
		}
		start.Attr = append(start.Attr, _abga)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_LineJoinMiterProperties and its children
func (_aacd *CT_LineJoinMiterProperties) Validate() error {
	return _aacd.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

func (_dfbg *ST_PathShadeType) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_dfbg = 0
	case "\u0073\u0068\u0061p\u0065":
		*_dfbg = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_dfbg = 2
	case "\u0072\u0065\u0063\u0074":
		*_dfbg = 3
	}
	return nil
}

type EG_ConflictsChoice struct {
	ConflictIns *_b.CT_TrackChange
	ConflictDel *_b.CT_TrackChange
}

func (_efcdc *ST_PenAlignment) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_efcdc = 0
	case "\u0063\u0074\u0072":
		*_efcdc = 1
	case "\u0069\u006e":
		*_efcdc = 2
	}
	return nil
}

type DiscardImageEditingData struct{ CT_OnOff }

func (_debd ST_LineCap) ValidateWithPath(path string) error {
	switch _debd {
	case 0, 1, 2, 3:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_debd))
	}
	return nil
}

type CustomXmlConflictInsRangeEnd struct{ _b.CT_Markup }

type CT_Color struct {
	SrgbClr   *CT_SRgbColor
	SchemeClr *CT_SchemeColor
}

func (_fb *AG_Parids) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fb.ParaIdAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0070\u0061\u0072\u0061\u0049\u0064"}, Value: _aa.Sprintf("\u0025\u0076", *_fb.ParaIdAttr)})
	}
	if _fb.TextIdAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0074\u0065\u0078\u0074\u0049\u0064"}, Value: _aa.Sprintf("\u0025\u0076", *_fb.TextIdAttr)})
	}
	start.Name.Local = "\u0077\u006f\u0072\u003a\u0041\u0047\u005f\u0050\u0061\u0072\u0069\u0064\u0073"
	return nil
}

func NewEntityPicker() *EntityPicker {
	_afde := &EntityPicker{}
	_afde.CT_Empty = *_b.NewCT_Empty()
	return _afde
}

func (_caacc *EG_RPrOpenType) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Name.Local = "\u0077o\u0072:\u0045\u0047\u005f\u0052\u0050r\u004f\u0070e\u006e\u0054\u0079\u0070\u0065"
	if _caacc.Ligatures != nil {
		_egec := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006c\u0069\u0067\u0061\u0074\u0075\u0072\u0065\u0073"}}
		e.EncodeElement(_caacc.Ligatures, _egec)
	}
	if _caacc.NumForm != nil {
		_eagf := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u006e\u0075\u006d\u0046\u006f\u0072\u006d"}}
		e.EncodeElement(_caacc.NumForm, _eagf)
	}
	if _caacc.NumSpacing != nil {
		_dgac := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u006e\u0075\u006d\u0053\u0070a\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_caacc.NumSpacing, _dgac)
	}
	if _caacc.StylisticSets != nil {
		_abba := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0074\u0079\u006c\u0069\u0073\u0074\u0069c\u0053\u0065\u0074\u0073"}}
		e.EncodeElement(_caacc.StylisticSets, _abba)
	}
	if _caacc.CntxtAlts != nil {
		_eegdf := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0063\u006e\u0074\u0078\u0074\u0041\u006c\u0074\u0073"}}
		e.EncodeElement(_caacc.CntxtAlts, _eegdf)
	}
	return nil
}

type ST_Ligatures byte

type ST_PresetCameraType byte

func NewCT_DefaultImageDpi() *CT_DefaultImageDpi { _ded := &CT_DefaultImageDpi{}; return _ded }

func (_gedfb ST_NumSpacing) Validate() error { return _gedfb.ValidateWithPath("") }

func (_dfcf ST_CompoundLine) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_gebf := _f.Attr{}
	_gebf.Name = name
	switch _dfcf {
	case ST_CompoundLineUnset:
		_gebf.Value = ""
	case ST_CompoundLineSng:
		_gebf.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_gebf.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_gebf.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_gebf.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_gebf.Value = "\u0074\u0072\u0069"
	}
	return _gebf, nil
}

type AG_Parids struct {
	ParaIdAttr *string
	TextIdAttr *string
}

type ST_NumForm byte

func NewAG_Parids() *AG_Parids { _gc := &AG_Parids{}; return _gc }

type EG_FillProperties struct{ FillPropertiesChoice *EG_FillPropertiesChoice }

// Validate validates the CT_NumForm and its children
func (_ggb *CT_NumForm) Validate() error {
	return _ggb.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006f\u0072\u006d")
}

func (_cbfe *CT_SRgbColor) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _cbfe.ValAttr)})
	e.EncodeToken(start)
	if _cbfe.EG_ColorTransform != nil {
		for _, _faa := range _cbfe.EG_ColorTransform {
			_faa.MarshalXML(e, _f.StartElement{})
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_aaga ST_Ligatures) ValidateWithPath(path string) error {
	switch _aaga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaga))
	}
	return nil
}

func (_accg *CT_PresetLineDashProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _befd := range start.Attr {
		if _befd.Name.Local == "\u0076\u0061\u006c" {
			_accg.ValAttr.UnmarshalXMLAttr(_befd)
			continue
		}
	}
	for {
		_ace, _dde := d.Token()
		if _dde != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _dde)
		}
		if _fgg, _feaa := _ace.(_f.EndElement); _feaa && _fgg.Name == start.Name {
			break
		}
	}
	return nil
}

func (_ecfg ST_Ligatures) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_ecfg.String(), start)
}

func (_ecda *EG_ConflictsChoice) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ecda.ConflictIns != nil {
		_acbg := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0063\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"}}
		e.EncodeElement(_ecda.ConflictIns, _acbg)
	} else if _ecda.ConflictDel != nil {
		_bae := _f.StartElement{Name: _f.Name{Local: "\u0077o\u0072:\u0063\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"}}
		e.EncodeElement(_ecda.ConflictDel, _bae)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fff *CT_PresetLineDashProperties) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fff.ValAttr != ST_PresetLineDashValUnset {
		_cade, _ffb := _fff.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"})
		if _ffb != nil {
			return _ffb
		}
		start.Attr = append(start.Attr, _cade)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dccd *CustomXmlConflictDelRangeEnd) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077\u006fr"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u0072\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006fn\u0066l\u0069\u0063\u0074\u0044\u0065\u006c\u0052\u0061\u006e\u0067\u0065\u0045\u006e\u0064"
	return _dccd.CT_Markup.MarshalXML(e, start)
}

type ST_CompoundLine byte

func (_deea *CT_GradientStop) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0070\u006f\u0073"}, Value: _aa.Sprintf("\u0025\u0076", _deea.PosAttr)})
	e.EncodeToken(start)
	if _deea.SrgbClr != nil {
		_gac := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_deea.SrgbClr, _gac)
	}
	if _deea.SchemeClr != nil {
		_aff := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_deea.SchemeClr, _aff)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func NewEG_LineDashProperties() *EG_LineDashProperties {
	_bddf := &EG_LineDashProperties{}
	return _bddf
}

func (_agac ST_RectAlignment) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_fbac := _f.Attr{}
	_fbac.Name = name
	switch _agac {
	case ST_RectAlignmentUnset:
		_fbac.Value = ""
	case ST_RectAlignmentNone:
		_fbac.Value = "\u006e\u006f\u006e\u0065"
	case ST_RectAlignmentTl:
		_fbac.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_fbac.Value = "\u0074"
	case ST_RectAlignmentTr:
		_fbac.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_fbac.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_fbac.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_fbac.Value = "\u0072"
	case ST_RectAlignmentBl:
		_fbac.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_fbac.Value = "\u0062"
	case ST_RectAlignmentBr:
		_fbac.Value = "\u0062\u0072"
	}
	return _fbac, nil
}

func (_eeabb *EG_ConflictsChoice) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bdaf := start
	switch start.Name {
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0049\u006e\u0073"}:
		_eeabb.ConflictIns = _b.NewCT_TrackChange()
		if _efdg := d.DecodeElement(_eeabb.ConflictIns, &_bdaf); _efdg != nil {
			return _efdg
		}
	case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "c\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c"}:
		_eeabb.ConflictDel = _b.NewCT_TrackChange()
		if _bgga := d.DecodeElement(_eeabb.ConflictDel, &_bdaf); _bgga != nil {
			return _bgga
		}
	default:
		_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006e\u0066\u006c\u0069c\u0074\u0073\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bdaf.Name)
		if _def := d.Skip(); _def != nil {
			return _def
		}
	}
	return nil
}

func (_bbab *DefaultImageDpi) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_bbab.CT_DefaultImageDpi = *NewCT_DefaultImageDpi()
	for _, _cfed := range start.Attr {
		if _cfed.Name.Local == "\u0076\u0061\u006c" {
			_eeb, _faae := _ae.ParseInt(_cfed.Value, 10, 64)
			if _faae != nil {
				return _faae
			}
			_bbab.ValAttr = _eeb
			continue
		}
	}
	for {
		_ebdd, _gbfc := d.Token()
		if _gbfc != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0049\u006da\u0067\u0065\u0044p\u0069:\u0020\u0025\u0073", _gbfc)
		}
		if _gegb, _eaeg := _ebdd.(_f.EndElement); _eaeg && _gegb.Name == start.Name {
			break
		}
	}
	return nil
}

func (_feag *CT_Percentage) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _feag.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fbab *CustomXmlConflictDelRangeEnd) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fbab.CT_Markup = *_b.NewCT_Markup()
	for {
		_egbf, _aacg := d.Token()
		if _aacg != nil {
			return _aa.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043\u006fn\u0066\u006c\u0069\u0063\u0074\u0044\u0065\u006c\u0052\u0061ng\u0065\u0045\u006ed\u003a \u0025\u0073", _aacg)
		}
		if _fgbb, _bedb := _egbf.(_f.EndElement); _bedb && _fgbb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_gdgg *CT_LightRig) ValidateWithPath(path string) error {
	if _gdgg.RigAttr == ST_LightRigTypeUnset {
		return _aa.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _agca := _gdgg.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _agca != nil {
		return _agca
	}
	if _gdgg.DirAttr == ST_LightRigDirectionUnset {
		return _aa.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edee := _gdgg.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _edee != nil {
		return _edee
	}
	if _gdgg.Rot != nil {
		if _befe := _gdgg.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _befe != nil {
			return _befe
		}
	}
	return nil
}

// Validate validates the CT_StylisticSets and its children
func (_gcf *CT_StylisticSets) Validate() error {
	return _gcf.ValidateWithPath("\u0043\u0054_\u0053\u0074\u0079l\u0069\u0073\u0074\u0069\u0063\u0053\u0065\u0074\u0073")
}

// Validate validates the EG_ColorTransformChoice and its children
func (_caae *EG_ColorTransformChoice) Validate() error {
	return _caae.ValidateWithPath("\u0045\u0047\u005fCo\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0043\u0068\u006f\u0069\u0063\u0065")
}

func (_ffc *CT_GradientStopList) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_agg:
	for {
		_efed, _cbg := d.Token()
		if _cbg != nil {
			return _cbg
		}
		switch _dgc := _efed.(type) {
		case _f.StartElement:
			switch _dgc.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0073"}:
				_cda := NewCT_GradientStop()
				if _cg := d.DecodeElement(_cda, &_dgc); _cg != nil {
					return _cg
				}
				_ffc.Gs = append(_ffc.Gs, _cda)
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dgc.Name)
				if _fdge := d.Skip(); _fdge != nil {
					return _fdge
				}
			}
		case _f.EndElement:
			break _agg
		case _f.CharData:
		}
	}
	return nil
}

func (_afcc *CT_StyleSet) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ebcd := range start.Attr {
		if _ebcd.Name.Local == "\u0069\u0064" {
			_bfcf, _afbef := _ae.ParseUint(_ebcd.Value, 10, 64)
			if _afbef != nil {
				return _afbef
			}
			_afcc.IdAttr = _bfcf
			continue
		}
		if _ebcd.Name.Local == "\u0076\u0061\u006c" {
			_afcc.ValAttr.UnmarshalXMLAttr(_ebcd)
			continue
		}
	}
	for {
		_cadf, _dcfd := d.Token()
		if _dcfd != nil {
			return _aa.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _dcfd)
		}
		if _egeec, _aeeag := _cadf.(_f.EndElement); _aeeag && _egeec.Name == start.Name {
			break
		}
	}
	return nil
}

func (_gcdd ST_NumSpacing) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_gcdd.String(), start)
}

func (_afgd ST_LineCap) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_afgd.String(), start)
}

func (_dbf *CT_PathShadeProperties) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cedg := range start.Attr {
		if _cedg.Name.Local == "\u0070\u0061\u0074\u0068" {
			_dbf.PathAttr.UnmarshalXMLAttr(_cedg)
			continue
		}
	}
_ebb:
	for {
		_fdf, _edfg := d.Token()
		if _edfg != nil {
			return _edfg
		}
		switch _cad := _fdf.(type) {
		case _f.StartElement:
			switch _cad.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_dbf.FillToRect = NewCT_RelativeRect()
				if _aeca := d.DecodeElement(_dbf.FillToRect, &_cad); _aeca != nil {
					return _aeca
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cad.Name)
				if _adg := d.Skip(); _adg != nil {
					return _adg
				}
			}
		case _f.EndElement:
			break _ebb
		case _f.CharData:
		}
	}
	return nil
}

func (_fad *CT_GradientStopList) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	_agf := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0067\u0073"}}
	for _, _caef := range _fad.Gs {
		e.EncodeElement(_caef, _agf)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_gedf *CT_GradientStopList) ValidateWithPath(path string) error {
	for _aed, _gbc := range _gedf.Gs {
		if _gdg := _gbc.ValidateWithPath(_aa.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _aed)); _gdg != nil {
			return _gdg
		}
	}
	return nil
}

func (_edeba *CT_TextOutlineEffect) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edeba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
	_edeba.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
	for _, _cfcd := range start.Attr {
		if _cfcd.Name.Local == "\u0077" {
			_bafc, _fbd := _ae.ParseInt(_cfcd.Value, 10, 32)
			if _fbd != nil {
				return _fbd
			}
			_gbbf := int32(_bafc)
			_edeba.WAttr = &_gbbf
			continue
		}
		if _cfcd.Name.Local == "\u0063\u0061\u0070" {
			_edeba.CapAttr.UnmarshalXMLAttr(_cfcd)
			continue
		}
		if _cfcd.Name.Local == "\u0063\u006d\u0070\u0064" {
			_edeba.CmpdAttr.UnmarshalXMLAttr(_cfcd)
			continue
		}
		if _cfcd.Name.Local == "\u0061\u006c\u0067\u006e" {
			_edeba.AlgnAttr.UnmarshalXMLAttr(_cfcd)
			continue
		}
	}
_dfce:
	for {
		_gdec, _dfcd := d.Token()
		if _dfcd != nil {
			return _dfcd
		}
		switch _cadc := _gdec.(type) {
		case _f.StartElement:
			switch _cadc.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_edeba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _gaea := d.DecodeElement(&_edeba.FillPropertiesChoice.NoFill, &_cadc); _gaea != nil {
					return _gaea
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_edeba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _dcc := d.DecodeElement(&_edeba.FillPropertiesChoice.SolidFill, &_cadc); _dcc != nil {
					return _dcc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_edeba.FillPropertiesChoice = NewEG_FillPropertiesChoice()
				if _afbea := d.DecodeElement(&_edeba.FillPropertiesChoice.GradFill, &_cadc); _afbea != nil {
					return _afbea
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_edeba.PrstDash = NewCT_PresetLineDashProperties()
				if _fdgc := d.DecodeElement(_edeba.PrstDash, &_cadc); _fdgc != nil {
					return _fdgc
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0072\u006f\u0075n\u0064"}:
				_edeba.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _dge := d.DecodeElement(&_edeba.LineJoinPropertiesChoice.Round, &_cadc); _dge != nil {
					return _dge
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0062\u0065\u0076e\u006c"}:
				_edeba.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _dfca := d.DecodeElement(&_edeba.LineJoinPropertiesChoice.Bevel, &_cadc); _dfca != nil {
					return _dfca
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u006d\u0069\u0074e\u0072"}:
				_edeba.LineJoinPropertiesChoice = NewEG_LineJoinPropertiesChoice()
				if _dfbc := d.DecodeElement(&_edeba.LineJoinPropertiesChoice.Miter, &_cadc); _dfbc != nil {
					return _dfbc
				}
			default:
				_fd.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cadc.Name)
				if _ddda := d.Skip(); _ddda != nil {
					return _ddda
				}
			}
		case _f.EndElement:
			break _dfce
		case _f.CharData:
		}
	}
	return nil
}

func (_fec ST_LightRigType) Validate() error { return _fec.ValidateWithPath("") }

type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}

func (_dac ST_LightRigDirection) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_cfebd := _f.Attr{}
	_cfebd.Name = name
	switch _dac {
	case ST_LightRigDirectionUnset:
		_cfebd.Value = ""
	case ST_LightRigDirectionTl:
		_cfebd.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_cfebd.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_cfebd.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_cfebd.Value = "\u006c"
	case ST_LightRigDirectionR:
		_cfebd.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_cfebd.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_cfebd.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_cfebd.Value = "\u0062\u0072"
	}
	return _cfebd, nil
}

const (
	ST_NumFormUnset    ST_NumForm = 0
	ST_NumFormDefault  ST_NumForm = 1
	ST_NumFormLining   ST_NumForm = 2
	ST_NumFormOldStyle ST_NumForm = 3
)

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_dce *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _dce.SrgbClr != nil {
		if _ggca := _dce.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ggca != nil {
			return _ggca
		}
	}
	if _dce.SchemeClr != nil {
		if _dbbd := _dce.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dbbd != nil {
			return _dbbd
		}
	}
	return nil
}

func NewCT_SchemeColor() *CT_SchemeColor {
	_gbga := &CT_SchemeColor{}
	_gbga.ValAttr = ST_SchemeColorVal(1)
	return _gbga
}

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 3
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 4
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 6
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 8
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 9
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

type Any interface {
	MarshalXML(_ccea *_f.Encoder, _gage _f.StartElement) error
	UnmarshalXML(_cbfee *_f.Decoder, _fcgc _f.StartElement) error
}

func (_ddce *CT_Color) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ddce.SrgbClr != nil {
		_bec := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ddce.SrgbClr, _bec)
	}
	if _ddce.SchemeClr != nil {
		_agb := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ddce.SchemeClr, _agb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_dcdg ST_PresetLineDashVal) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_dcdg.String(), start)
}

func ParseUnionST_PositivePercentage(s string) (_d.ST_PositivePercentage, error) {
	return _d.ParseUnionST_PositivePercentage(s)
}

func NewDiscardImageEditingData() *DiscardImageEditingData {
	_agfa := &DiscardImageEditingData{}
	_agfa.CT_OnOff = *NewCT_OnOff()
	return _agfa
}

func (_eaag *CT_SdtCheckboxSymbol) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _adbfc := range start.Attr {
		if _adbfc.Name.Local == "\u0066\u006f\u006e\u0074" {
			_cebbae := _adbfc.Value
			_eaag.FontAttr = &_cebbae
			continue
		}
		if _adbfc.Name.Local == "\u0076\u0061\u006c" {
			_dae := _adbfc.Value
			_eaag.ValAttr = &_dae
			continue
		}
	}
	for {
		_gaaf, _ecba := d.Token()
		if _ecba != nil {
			return _aa.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0064\u0074\u0043h\u0065c\u006b\u0062\u006f\u0078\u0053\u0079\u006d\u0062\u006f\u006c\u003a\u0020\u0025\u0073", _ecba)
		}
		if _dgda, _cffc := _gaaf.(_f.EndElement); _cffc && _dgda.Name == start.Name {
			break
		}
	}
	return nil
}

func NewEG_ColorChoice() *EG_ColorChoice { _gab := &EG_ColorChoice{}; return _gab }

func (_fcfe ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _fcfe {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _aa.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfe))
	}
	return nil
}

// Validate validates the CT_LinearShadeProperties and its children
func (_edd *CT_LinearShadeProperties) Validate() error {
	return _edd.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

const (
	ST_OnOffUnset ST_OnOff = 0
	ST_OnOffTrue  ST_OnOff = 1
	ST_OnOffFalse ST_OnOff = 2
	ST_OnOff0     ST_OnOff = 3
	ST_OnOff1     ST_OnOff = 4
)

// Validate validates the AG_Parids and its children
func (_dc *AG_Parids) Validate() error {
	return _dc.ValidateWithPath("\u0041G\u005f\u0050\u0061\u0072\u0069\u0064s")
}

func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_cagc := &CT_LinearShadeProperties{}
	return _cagc
}

// ValidateWithPath validates the ConflictMode and its children, prefixing error messages with path
func (_ccff *ConflictMode) ValidateWithPath(path string) error {
	if _fdb := _ccff.CT_OnOff.ValidateWithPath(path); _fdb != nil {
		return _fdb
	}
	return nil
}

func (_aba *CT_PositiveFixedPercentage) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0076\u0061\u006c"}, Value: _aa.Sprintf("\u0025\u0076", _aba.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func (_fc *CT_Glow) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _fc.RadAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u0072\u003a\u0072\u0061\u0064"}, Value: _aa.Sprintf("\u0025\u0076", *_fc.RadAttr)})
	}
	e.EncodeToken(start)
	if _fc.SrgbClr != nil {
		_efc := _f.StartElement{Name: _f.Name{Local: "w\u006f\u0072\u003a\u0073\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fc.SrgbClr, _efc)
	}
	if _fc.SchemeClr != nil {
		_gcb := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u0072\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fc.SchemeClr, _gcb)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

func init() {
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054_\u004c\u006f\u006eg\u0048\u0065\u0078\u004e\u0075\u006d\u0062\u0065\u0072", NewCT_LongHexNumber)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u004f\u006e\u004f\u0066\u0066", NewCT_OnOff)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0047\u006c\u006f\u0077", NewCT_Glow)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0053\u0068\u0061\u0064\u006fw", NewCT_Shadow)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Reflection)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0054\u0065\u0078\u0074\u0045f\u0066\u0065\u0063\u0074", NewCT_FillTextEffect)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054_\u0054\u0065\u0078\u0074\u004f\u0075\u0074\u006ci\u006e\u0065\u0045\u0066fe\u0063\u0074", NewCT_TextOutlineEffect)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0050\u0072\u006f\u0070\u0073\u0033\u0044", NewCT_Props3D)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005fL\u0069\u0067\u0061\u0074\u0075\u0072\u0065\u0073", NewCT_Ligatures)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006f\u0072\u006d", NewCT_NumForm)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u004e\u0075\u006d\u0053\u0070\u0061\u0063\u0069\u006e\u0067", NewCT_NumSpacing)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0053\u0065\u0074", NewCT_StyleSet)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054_\u0053\u0074\u0079l\u0069\u0073\u0074\u0069\u0063\u0053\u0065\u0074\u0073", NewCT_StylisticSets)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005fD\u0065\u0066\u0061\u0075\u006ct\u0049\u006da\u0067\u0065\u0044\u0070\u0069", NewCT_DefaultImageDpi)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054_\u0053\u0064\u0074\u0043\u0068\u0065\u0063\u006bb\u006f\u0078\u0053\u0079mb\u006f\u006c", NewCT_SdtCheckboxSymbol)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0053\u0064\u0074\u0043\u0068\u0065c\u006b\u0062\u006f\u0078", NewCT_SdtCheckbox)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0064\u006f\u0063I\u0064", NewDocId)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u006f\u006ef\u006c\u0069\u0063\u0074\u004d\u006f\u0064\u0065", NewConflictMode)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006e\u0066\u006c\u0069\u0063\u0074\u0049n\u0073\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074", NewCustomXmlConflictInsRangeStart)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u0075\u0073\u0074o\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069c\u0074I\u006e\u0073\u0052\u0061\u006e\u0067\u0065E\u006e\u0064", NewCustomXmlConflictInsRangeEnd)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u0075\u0073\u0074\u006f\u006d\u0058\u006d\u006c\u0043o\u006e\u0066\u006c\u0069\u0063\u0074\u0044e\u006c\u0052\u0061\u006e\u0067\u0065\u0053\u0074\u0061\u0072\u0074", NewCustomXmlConflictDelRangeStart)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u0075\u0073\u0074o\u006d\u0058\u006d\u006c\u0043\u006f\u006e\u0066\u006c\u0069c\u0074D\u0065\u006c\u0052\u0061\u006e\u0067\u0065E\u006e\u0064", NewCustomXmlConflictDelRangeEnd)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0064\u0069\u0073ca\u0072\u0064\u0049\u006d\u0061\u0067\u0065\u0045\u0064\u0069\u0074\u0069\u006e\u0067\u0044\u0061\u0074\u0061", NewDiscardImageEditingData)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0064e\u0066a\u0075\u006c\u0074\u0049\u006d\u0061\u0067\u0065\u0044\u0070\u0069", NewDefaultImageDpi)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0065\u006e\u0074i\u0074\u0079\u0050\u0069\u0063\u006b\u0065\u0072", NewEntityPicker)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u0068\u0065\u0063\u006b\u0062\u006f\u0078", NewCheckbox)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "E\u0047_\u0052\u0075\u006e\u004c\u0065\u0076\u0065\u006cC\u006f\u006e\u0066\u006cic\u0074\u0073", NewEG_RunLevelConflicts)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005fC\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u0073", NewEG_Conflicts)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005f\u0052\u0050\u0072\u0054\u0065\u0078\u0074\u0045\u0066f\u0065\u0063\u0074\u0073", NewEG_RPrTextEffects)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0045\u0047\u005f\u0052\u0050\u0072\u004f\u0070\u0065n\u0054\u0079\u0070\u0065", NewEG_RPrOpenType)
	_g.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0030\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0041G\u005f\u0050\u0061\u0072\u0069\u0064s", NewAG_Parids)
}
