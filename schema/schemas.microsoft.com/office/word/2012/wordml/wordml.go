//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wordml

import (
	_f "encoding/xml"
	_e "fmt"
	_c "regexp"
	_df "time"

	_a "github.com/gou-jjjj/unioffice"
	_ae "github.com/gou-jjjj/unioffice/common/logger"
	_b "github.com/gou-jjjj/unioffice/schema/soo/dml"
	_ea "github.com/gou-jjjj/unioffice/schema/soo/ofc/sharedTypes"
	_fc "github.com/gou-jjjj/unioffice/schema/soo/wml"
)

func NewCT_CommentEx() *CT_CommentEx { _ff := &CT_CommentEx{}; return _ff }
func (_cab *RepeatingSectionItem) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003are\u0070\u0065\u0061\u0074\u0069\u006e\u0067\u0053\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0074\u0065\u006d"
	return _cab.CT_Empty.MarshalXML(e, start)
}

// ValidateWithPath validates the FootnoteColumns and its children, prefixing error messages with path
func (_bbg *FootnoteColumns) ValidateWithPath(path string) error {
	if _ebb := _bbg.CT_DecimalNumber.ValidateWithPath(path); _ebb != nil {
		return _ebb
	}
	return nil
}

// ValidateWithPath validates the Appearance and its children, prefixing error messages with path
func (_ef *Appearance) ValidateWithPath(path string) error {
	if _ddb := _ef.CT_SdtAppearance.ValidateWithPath(path); _ddb != nil {
		return _ddb
	}
	return nil
}

// ValidateWithPath validates the CT_PresenceInfo and its children, prefixing error messages with path
func (_ede *CT_PresenceInfo) ValidateWithPath(path string) error { return nil }

type People struct{ CT_People }

func (_edee *People) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_edee.CT_People = *NewCT_People()
_dcd:
	for {
		_cadd, _eecg := d.Token()
		if _eecg != nil {
			return _eecg
		}
		switch _afe := _cadd.(type) {
		case _f.StartElement:
			switch _afe.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0065\u0072\u0073\u006f\u006e"}:
				_aaf := NewCT_Person()
				if _bdb := d.DecodeElement(_aaf, &_afe); _bdb != nil {
					return _bdb
				}
				_edee.Person = append(_edee.Person, _aaf)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0065\u006f\u0070\u006c\u0065\u0020\u0025\u0076", _afe.Name)
				if _bae := d.Skip(); _bae != nil {
					return _bae
				}
			}
		case _f.EndElement:
			break _dcd
		case _f.CharData:
		}
	}
	return nil
}
func (_ebc *CT_Guid) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _ebc.ValAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u003a\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_ebc.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_dfgb *CT_People) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bbb:
	for {
		_ddc, _dae := d.Token()
		if _dae != nil {
			return _dae
		}
		switch _bbd := _ddc.(type) {
		case _f.StartElement:
			switch _bbd.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0065\u0072\u0073\u006f\u006e"}:
				_af := NewCT_Person()
				if _fgb := d.DecodeElement(_af, &_bbd); _fgb != nil {
					return _fgb
				}
				_dfgb.Person = append(_dfgb.Person, _af)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0065\u006fp\u006c\u0065 \u0025\u0076", _bbd.Name)
				if _dag := d.Skip(); _dag != nil {
					return _dag
				}
			}
		case _f.EndElement:
			break _bbb
		case _f.CharData:
		}
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (_b.ST_PositivePercentage, error) {
	return _b.ParseUnionST_PositivePercentage(s)
}
func ParseUnionST_TextFontScalePercentOrPercentString(s string) (_b.ST_TextFontScalePercentOrPercentString, error) {
	return _b.ParseUnionST_TextFontScalePercentOrPercentString(s)
}
func (_acb *CT_Guid) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ec := range start.Attr {
		if _ec.Name.Local == "\u0076\u0061\u006c" {
			_aae := _ec.Value
			_acb.ValAttr = &_aae
			continue
		}
	}
	for {
		_gbf, _ffe := d.Token()
		if _ffe != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u003a\u0020\u0025\u0073", _ffe)
		}
		if _ggf, _dfg := _gbf.(_f.EndElement); _dfg && _ggf.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseUnionST_TextSpacingPercentOrPercentString(s string) (_b.ST_TextSpacingPercentOrPercentString, error) {
	return _b.ParseUnionST_TextSpacingPercentOrPercentString(s)
}

type CT_People struct {
	Person []*CT_Person
}

func ParseUnionST_Coordinate32(s string) (_b.ST_Coordinate32, error) {
	return _b.ParseUnionST_Coordinate32(s)
}
func NewCT_CommentsEx() *CT_CommentsEx { _efb := &CT_CommentsEx{}; return _efb }
func NewDocId() *DocId {
	_gee := &DocId{}
	_gee.CT_Guid = *NewCT_Guid()
	return _gee
}
func NewCT_Guid() *CT_Guid { _ded := &CT_Guid{}; return _ded }

type ChartTrackingRefBased struct{ _fc.CT_OnOff }

func (_ebgc *RepeatingSection) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ebgc.CT_SdtRepeatedSection = *NewCT_SdtRepeatedSection()
_cdf:
	for {
		_efcb, _bac := d.Token()
		if _bac != nil {
			return _bac
		}
		switch _gdg := _efcb.(type) {
		case _f.StartElement:
			switch _gdg.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0065\u0063t\u0069\u006f\u006e\u0054\u0069\u0074\u006c\u0065"}:
				_ebgc.SectionTitle = _fc.NewCT_String()
				if _bgee := d.DecodeElement(_ebgc.SectionTitle, &_gdg); _bgee != nil {
					return _bgee
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0064\u006fN\u006f\u0074\u0041\u006c\u006c\u006f\u0077\u0049\u006e\u0073\u0065\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065\u0053\u0065\u0063ti\u006f\u006e"}:
				_ebgc.DoNotAllowInsertDeleteSection = _fc.NewCT_OnOff()
				if _bcb := d.DecodeElement(_ebgc.DoNotAllowInsertDeleteSection, &_gdg); _bcb != nil {
					return _bcb
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0052\u0065\u0070\u0065\u0061\u0074\u0069\u006e\u0067\u0053\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025v", _gdg.Name)
				if _fgd := d.Skip(); _fgd != nil {
					return _fgd
				}
			}
		case _f.EndElement:
			break _cdf
		case _f.CharData:
		}
	}
	return nil
}
func (_gec *CT_SdtAppearance) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	if _gec.ValAttr != ST_SdtAppearanceUnset {
		_eeg, _gdbd := _gec.ValAttr.MarshalXMLAttr(_f.Name{Local: "\u0077\u006f\u003a\u0076\u0061\u006c"})
		if _gdbd != nil {
			return _gdbd
		}
		start.Attr = append(start.Attr, _eeg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

type CT_Person struct {
	AuthorAttr   string
	PresenceInfo *CT_PresenceInfo
}

func NewColor() *Color {
	_bef := &Color{}
	_bef.CT_Color = *_fc.NewCT_Color()
	return _bef
}
func (_ggb *CT_People) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _ggb.Person != nil {
		_ad := _f.StartElement{Name: _f.Name{Local: "\u0077o\u003a\u0070\u0065\u0072\u0073\u006fn"}}
		for _, _gda := range _ggb.Person {
			e.EncodeElement(_gda, _ad)
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_People and its children
func (_efe *CT_People) Validate() error {
	return _efe.ValidateWithPath("\u0043T\u005f\u0050\u0065\u006f\u0070\u006ce")
}
func (_cbg *WebExtensionCreated) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cbg.CT_OnOff = *_fc.NewCT_OnOff()
	for {
		_ccd, _faa := d.Token()
		if _faa != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020W\u0065\u0062\u0045\u0078\u0074\u0065\u006es\u0069\u006f\u006e\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u003a\u0020\u0025\u0073", _faa)
		}
		if _dcff, _afbd := _ccd.(_f.EndElement); _afbd && _dcff.Name == start.Name {
			break
		}
	}
	return nil
}

type Appearance struct{ CT_SdtAppearance }

func (_cfcb *Collapsed) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003ac\u006f\u006c\u006c\u0061\u0070\u0073\u0065\u0064"
	return _cfcb.CT_OnOff.MarshalXML(e, start)
}
func (_fcd *CT_CommentEx) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u003a\u0070\u0061\u0072\u0061\u0049d"}, Value: _e.Sprintf("\u0025\u0076", _fcd.ParaIdAttr)})
	if _fcd.ParaIdParentAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u003ap\u0061\u0072\u0061\u0049\u0064\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_fcd.ParaIdParentAttr)})
	}
	if _fcd.DoneAttr != nil {
		start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u003a\u0064\u006f\u006e\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_fcd.DoneAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewFootnoteColumns() *FootnoteColumns {
	_eegb := &FootnoteColumns{}
	_eegb.CT_DecimalNumber = *_fc.NewCT_DecimalNumber()
	return _eegb
}

// ValidateWithPath validates the CT_CommentsEx and its children, prefixing error messages with path
func (_gd *CT_CommentsEx) ValidateWithPath(path string) error {
	for _cb, _dg := range _gd.CommentEx {
		if _fff := _dg.ValidateWithPath(_e.Sprintf("\u0025\u0073/\u0043\u006f\u006dm\u0065\u006e\u0074\u0045\u0078\u005b\u0025\u0064\u005d", path, _cb)); _fff != nil {
			return _fff
		}
	}
	return nil
}

// Validate validates the RepeatingSectionItem and its children
func (_dfcf *RepeatingSectionItem) Validate() error {
	return _dfcf.ValidateWithPath("R\u0065p\u0065\u0061\u0074\u0069\u006e\u0067\u0053\u0065c\u0074\u0069\u006f\u006eIt\u0065\u006d")
}

// Validate validates the Collapsed and its children
func (_gecb *Collapsed) Validate() error {
	return _gecb.ValidateWithPath("\u0043o\u006c\u006c\u0061\u0070\u0073\u0065d")
}
func NewCT_People() *CT_People { _fa := &CT_People{}; return _fa }

type CT_PresenceInfo struct {
	ProviderIdAttr string
	UserIdAttr     string
}
type FootnoteColumns struct{ _fc.CT_DecimalNumber }

func (_g *Appearance) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_g.CT_SdtAppearance = *NewCT_SdtAppearance()
	for _, _dc := range start.Attr {
		if _dc.Name.Local == "\u0076\u0061\u006c" {
			_g.ValAttr.UnmarshalXMLAttr(_dc)
			continue
		}
	}
	for {
		_ca, _cg := d.Token()
		if _cg != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u003a\u0020%\u0073", _cg)
		}
		if _ga, _eb := _ca.(_f.EndElement); _eb && _ga.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PresenceInfo and its children
func (_dce *CT_PresenceInfo) Validate() error {
	return _dce.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0063\u0065\u0049\u006e\u0066\u006f")
}
func NewAppearance() *Appearance {
	_dd := &Appearance{}
	_dd.CT_SdtAppearance = *NewCT_SdtAppearance()
	return _dd
}

// Validate validates the Color and its children
func (_dcea *Color) Validate() error { return _dcea.ValidateWithPath("\u0043\u006f\u006co\u0072") }
func (_dca *CT_SdtRepeatedSection) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _dca.SectionTitle != nil {
		_fbb := _f.StartElement{Name: _f.Name{Local: "\u0077o\u003as\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0069\u0074\u006c\u0065"}}
		e.EncodeElement(_dca.SectionTitle, _fbb)
	}
	if _dca.DoNotAllowInsertDeleteSection != nil {
		_cad := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u003a\u0064\u006f\u004e\u006f\u0074\u0041\u006c\u006c\u006f\u0077\u0049\u006es\u0065r\u0074\u0044\u0065\u006c\u0065\u0074\u0065\u0053\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dca.DoNotAllowInsertDeleteSection, _cad)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func NewRepeatingSection() *RepeatingSection {
	_dbdd := &RepeatingSection{}
	_dbdd.CT_SdtRepeatedSection = *NewCT_SdtRepeatedSection()
	return _dbdd
}

// Validate validates the CT_SdtRepeatedSection and its children
func (_eeb *CT_SdtRepeatedSection) Validate() error {
	return _eeb.ValidateWithPath("C\u0054\u005f\u0053\u0064tR\u0065p\u0065\u0061\u0074\u0065\u0064S\u0065\u0063\u0074\u0069\u006f\u006e")
}
func NewCT_SdtRepeatedSection() *CT_SdtRepeatedSection {
	_bgc := &CT_SdtRepeatedSection{}
	return _bgc
}
func (_dcg *CT_SdtRepeatedSection) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_bfba:
	for {
		_eg, _bged := d.Token()
		if _bged != nil {
			return _bged
		}
		switch _bcg := _eg.(type) {
		case _f.StartElement:
			switch _bcg.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0073\u0065\u0063t\u0069\u006f\u006e\u0054\u0069\u0074\u006c\u0065"}:
				_dcg.SectionTitle = _fc.NewCT_String()
				if _dec := d.DecodeElement(_dcg.SectionTitle, &_bcg); _dec != nil {
					return _dec
				}
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0064\u006fN\u006f\u0074\u0041\u006c\u006c\u006f\u0077\u0049\u006e\u0073\u0065\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065\u0053\u0065\u0063ti\u006f\u006e"}:
				_dcg.DoNotAllowInsertDeleteSection = _fc.NewCT_OnOff()
				if _cbd := d.DecodeElement(_dcg.DoNotAllowInsertDeleteSection, &_bcg); _cbd != nil {
					return _cbd
				}
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0053\u0064\u0074\u0052\u0065\u0070\u0065\u0061\u0074\u0065\u0064\u0053\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _bcg.Name)
				if _ada := d.Skip(); _ada != nil {
					return _ada
				}
			}
		case _f.EndElement:
			break _bfba
		case _f.CharData:
		}
	}
	return nil
}
func (_ba *CT_Person) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dfbc := range start.Attr {
		if _dfbc.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_bbbf := _dfbc.Value
			_ba.AuthorAttr = _bbbf
			continue
		}
	}
_bbe:
	for {
		_ecc, _dge := d.Token()
		if _dge != nil {
			return _dge
		}
		switch _bfd := _ecc.(type) {
		case _f.StartElement:
			switch _bfd.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0070\u0072\u0065s\u0065\u006e\u0063\u0065\u0049\u006e\u0066\u006f"}:
				_ba.PresenceInfo = NewCT_PresenceInfo()
				if _gdb := d.DecodeElement(_ba.PresenceInfo, &_bfd); _gdb != nil {
					return _gdb
				}
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0065\u0072s\u006f\u006e \u0025\u0076", _bfd.Name)
				if _bd := d.Skip(); _bd != nil {
					return _bd
				}
			}
		case _f.EndElement:
			break _bbe
		case _f.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CommentsEx and its children
func (_dfd *CT_CommentsEx) Validate() error {
	return _dfd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078")
}

// ValidateWithPath validates the Color and its children, prefixing error messages with path
func (_faba *Color) ValidateWithPath(path string) error {
	if _geg := _faba.CT_Color.ValidateWithPath(path); _geg != nil {
		return _geg
	}
	return nil
}
func (_be *ChartTrackingRefBased) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_be.CT_OnOff = *_fc.NewCT_OnOff()
	for {
		_eeba, _fba := d.Token()
		if _fba != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0068\u0061\u0072\u0074\u0054\u0072\u0061\u0063\u006b\u0069\u006eg\u0052\u0065\u0066\u0042\u0061\u0073\u0065d\u003a\u0020\u0025\u0073", _fba)
		}
		if _adf, _fdd := _eeba.(_f.EndElement); _fdd && _adf.Name == start.Name {
			break
		}
	}
	return nil
}

type RepeatingSectionItem struct{ _fc.CT_Empty }

// ValidateWithPath validates the CT_CommentEx and its children, prefixing error messages with path
func (_aa *CT_CommentEx) ValidateWithPath(path string) error {
	if _aa.DoneAttr != nil {
		if _ebf := _aa.DoneAttr.ValidateWithPath(path + "\u002fD\u006f\u006e\u0065\u0041\u0074\u0074r"); _ebf != nil {
			return _ebf
		}
	}
	return nil
}
func (_fgef *ChartTrackingRefBased) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077o\u003a\u0063\u0068\u0061\u0072\u0074\u0054\u0072\u0061\u0063\u006bi\u006e\u0067\u0052\u0065\u0066\u0042\u0061\u0073\u0065\u0064"
	return _fgef.CT_OnOff.MarshalXML(e, start)
}
func ParseUnionST_AdjAngle(s string) (_b.ST_AdjAngle, error) { return _b.ParseUnionST_AdjAngle(s) }
func NewCT_Person() *CT_Person                               { _ffd := &CT_Person{}; return _ffd }
func (_dga *RepeatingSectionItem) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_dga.CT_Empty = *_fc.NewCT_Empty()
	for {
		_feag, _ffec := d.Token()
		if _ffec != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0052\u0065\u0070\u0065\u0061\u0074\u0069n\u0067S\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _ffec)
		}
		if _ffea, _baf := _feag.(_f.EndElement); _baf && _ffea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fd *CT_CommentsEx) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
_fg:
	for {
		_ee, _bf := d.Token()
		if _bf != nil {
			return _bf
		}
		switch _bff := _ee.(type) {
		case _f.StartElement:
			switch _bff.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0045x"}:
				_cag := NewCT_CommentEx()
				if _gb := d.DecodeElement(_cag, &_bff); _gb != nil {
					return _gb
				}
				_fd.CommentEx = append(_fd.CommentEx, _cag)
			default:
				_ae.Log.Debug("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078 \u0025\u0076", _bff.Name)
				if _de := d.Skip(); _de != nil {
					return _de
				}
			}
		case _f.EndElement:
			break _fg
		case _f.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CommentsEx and its children, prefixing error messages with path
func (_bgb *CommentsEx) ValidateWithPath(path string) error {
	if _eaeg := _bgb.CT_CommentsEx.ValidateWithPath(path); _eaeg != nil {
		return _eaeg
	}
	return nil
}
func (_cbb *DataBinding) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0064\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"
	return _cbb.CT_DataBinding.MarshalXML(e, start)
}

// Validate validates the CT_Guid and its children
func (_deb *CT_Guid) Validate() error {
	return _deb.ValidateWithPath("\u0043T\u005f\u0047\u0075\u0069\u0064")
}

// ValidateWithPath validates the CT_People and its children, prefixing error messages with path
func (_gdc *CT_People) ValidateWithPath(path string) error {
	for _eef, _dea := range _gdc.Person {
		if _gc := _dea.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0050\u0065\u0072\u0073\u006f\u006e\u005b\u0025\u0064\u005d", path, _eef)); _gc != nil {
			return _gc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Guid and its children, prefixing error messages with path
func (_bb *CT_Guid) ValidateWithPath(path string) error {
	if _bb.ValAttr != nil {
		if !ST_GuidPatternRe.MatchString(*_bb.ValAttr) {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_GuidPatternRe, *_bb.ValAttr)
		}
	}
	return nil
}
func (_abgb ST_SdtAppearance) MarshalXMLAttr(name _f.Name) (_f.Attr, error) {
	_egg := _f.Attr{}
	_egg.Name = name
	switch _abgb {
	case ST_SdtAppearanceUnset:
		_egg.Value = ""
	case ST_SdtAppearanceBoundingBox:
		_egg.Value = "b\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078"
	case ST_SdtAppearanceTags:
		_egg.Value = "\u0074\u0061\u0067\u0073"
	case ST_SdtAppearanceHidden:
		_egg.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _egg, nil
}
func (_feb *DataBinding) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_feb.CT_DataBinding = *_fc.NewCT_DataBinding()
	for {
		_gga, _afb := d.Token()
		if _afb != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0044\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0073", _afb)
		}
		if _dee, _cbc := _gga.(_f.EndElement); _cbc && _dee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fef *FootnoteColumns) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_fef.CT_DecimalNumber = *_fc.NewCT_DecimalNumber()
	for {
		_cagd, _ageb := d.Token()
		if _ageb != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0046\u006f\u006f\u0074\u006e\u006f\u0074\u0065\u0043o\u006c\u0075\u006dn\u0073:\u0020\u0025\u0073", _ageb)
		}
		if _bce, _aabg := _cagd.(_f.EndElement); _aabg && _bce.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the People and its children
func (_cbe *People) Validate() error {
	return _cbe.ValidateWithPath("\u0050\u0065\u006f\u0070\u006c\u0065")
}
func ParseUnionST_AnimationDgmBuildType(s string) (_b.ST_AnimationDgmBuildType, error) {
	return _b.ParseUnionST_AnimationDgmBuildType(s)
}

// ValidateWithPath validates the RepeatingSection and its children, prefixing error messages with path
func (_gea *RepeatingSection) ValidateWithPath(path string) error {
	if _gef := _gea.CT_SdtRepeatedSection.ValidateWithPath(path); _gef != nil {
		return _gef
	}
	return nil
}
func ParseStdlibTime(s string) (_df.Time, error) { return _ea.ParseStdlibTime(s) }

type CT_CommentEx struct {
	ParaIdAttr       string
	ParaIdParentAttr *string
	DoneAttr         *_ea.ST_OnOff
}

var ST_GuidPatternRe = _c.MustCompile(ST_GuidPattern)

func NewCommentsEx() *CommentsEx {
	_adb := &CommentsEx{}
	_adb.CT_CommentsEx = *NewCT_CommentsEx()
	return _adb
}
func (_fdce *ST_SdtAppearance) UnmarshalXMLAttr(attr _f.Attr) error {
	switch attr.Value {
	case "":
		*_fdce = 0
	case "b\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078":
		*_fdce = 1
	case "\u0074\u0061\u0067\u0073":
		*_fdce = 2
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_fdce = 3
	}
	return nil
}

type WebExtensionLinked struct{ _fc.CT_OnOff }

func NewWebExtensionLinked() *WebExtensionLinked {
	_cebe := &WebExtensionLinked{}
	_cebe.CT_OnOff = *_fc.NewCT_OnOff()
	return _cebe
}
func NewRepeatingSectionItem() *RepeatingSectionItem {
	_decb := &RepeatingSectionItem{}
	_decb.CT_Empty = *_fc.NewCT_Empty()
	return _decb
}

// ValidateWithPath validates the CT_Person and its children, prefixing error messages with path
func (_fdc *CT_Person) ValidateWithPath(path string) error {
	if _fdc.PresenceInfo != nil {
		if _ab := _fdc.PresenceInfo.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0063\u0065\u0049\u006e\u0066\u006f"); _ab != nil {
			return _ab
		}
	}
	return nil
}

// Validate validates the RepeatingSection and its children
func (_efaf *RepeatingSection) Validate() error {
	return _efaf.ValidateWithPath("\u0052\u0065p\u0065\u0061\u0074i\u006e\u0067\u0053\u0065\u0063\u0074\u0069\u006f\u006e")
}
func NewCT_SdtAppearance() *CT_SdtAppearance { _eda := &CT_SdtAppearance{}; return _eda }

type RepeatingSection struct{ CT_SdtRepeatedSection }

// Validate validates the DataBinding and its children
func (_gdec *DataBinding) Validate() error {
	return _gdec.ValidateWithPath("D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067")
}

type WebExtensionCreated struct{ _fc.CT_OnOff }

// ValidateWithPath validates the People and its children, prefixing error messages with path
func (_fad *People) ValidateWithPath(path string) error {
	if _edf := _fad.CT_People.ValidateWithPath(path); _edf != nil {
		return _edf
	}
	return nil
}
func (_dfe *WebExtensionLinked) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "w\u006f\u003a\u0077\u0065bE\u0078t\u0065\u006e\u0073\u0069\u006fn\u004c\u0069\u006e\u006b\u0065\u0064"
	return _dfe.CT_OnOff.MarshalXML(e, start)
}
func (_dfa *DocId) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0064\u006f\u0063\u0049\u0064"
	return _dfa.CT_Guid.MarshalXML(e, start)
}
func ParseUnionST_OnOff(s string) (_ea.ST_OnOff, error) { return _ea.ST_OnOff{}, nil }

// ValidateWithPath validates the CT_SdtRepeatedSection and its children, prefixing error messages with path
func (_bde *CT_SdtRepeatedSection) ValidateWithPath(path string) error {
	if _bde.SectionTitle != nil {
		if _cge := _bde.SectionTitle.ValidateWithPath(path + "\u002f\u0053\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0069\u0074\u006c\u0065"); _cge != nil {
			return _cge
		}
	}
	if _bde.DoNotAllowInsertDeleteSection != nil {
		if _aace := _bde.DoNotAllowInsertDeleteSection.ValidateWithPath(path + "\u002f\u0044\u006f\u004e\u006f\u0074\u0041\u006c\u006c\u006fw\u0049\u006e\u0073\u0065\u0072\u0074\u0044e\u006c\u0065\u0074\u0065\u0053\u0065\u0063\u0074\u0069\u006f\u006e"); _aace != nil {
			return _aace
		}
	}
	return nil
}
func (_cgd *CommentsEx) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_cgd.CT_CommentsEx = *NewCT_CommentsEx()
_bdd:
	for {
		_fag, _fca := d.Token()
		if _fca != nil {
			return _fca
		}
		switch _gbc := _fag.(type) {
		case _f.StartElement:
			switch _gbc.Name {
			case _f.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0045x"}:
				_ecf := NewCT_CommentEx()
				if _fga := d.DecodeElement(_ecf, &_gbc); _fga != nil {
					return _fga
				}
				_cgd.CommentEx = append(_cgd.CommentEx, _ecf)
			default:
				_ae.Log.Debug("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006dm\u0065\u006e\u0074\u0073\u0045\u0078\u0020\u0025\u0076", _gbc.Name)
				if _ffbc := d.Skip(); _ffbc != nil {
					return _ffbc
				}
			}
		case _f.EndElement:
			break _bdd
		case _f.CharData:
		}
	}
	return nil
}

type CT_CommentsEx struct{ CommentEx []*CT_CommentEx }

// ValidateWithPath validates the DocId and its children, prefixing error messages with path
func (_cea *DocId) ValidateWithPath(path string) error {
	if _fddc := _cea.CT_Guid.ValidateWithPath(path); _fddc != nil {
		return _fddc
	}
	return nil
}
func ParseUnionST_Coordinate(s string) (_b.ST_Coordinate, error) {
	return _b.ParseUnionST_Coordinate(s)
}

type Any interface {
	MarshalXML(_gce *_f.Encoder, _ddf _f.StartElement) error
	UnmarshalXML(_gfd *_f.Decoder, _cba _f.StartElement) error
}

func NewCT_PresenceInfo() *CT_PresenceInfo { _ffdb := &CT_PresenceInfo{}; return _ffdb }
func (_ebg *CT_SdtAppearance) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _dcf := range start.Attr {
		if _dcf.Name.Local == "\u0076\u0061\u006c" {
			_ebg.ValAttr.UnmarshalXMLAttr(_dcf)
			continue
		}
	}
	for {
		_ecg, _aac := d.Token()
		if _aac != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0064\u0074\u0041p\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u003a \u0025\u0073", _aac)
		}
		if _dgf, _ag := _ecg.(_f.EndElement); _ag && _dgf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the DataBinding and its children, prefixing error messages with path
func (_efc *DataBinding) ValidateWithPath(path string) error {
	if _age := _efc.CT_DataBinding.ValidateWithPath(path); _age != nil {
		return _age
	}
	return nil
}

// ValidateWithPath validates the WebExtensionLinked and its children, prefixing error messages with path
func (_bgd *WebExtensionLinked) ValidateWithPath(path string) error {
	if _aec := _bgd.CT_OnOff.ValidateWithPath(path); _aec != nil {
		return _aec
	}
	return nil
}

// ValidateWithPath validates the ChartTrackingRefBased and its children, prefixing error messages with path
func (_bfe *ChartTrackingRefBased) ValidateWithPath(path string) error {
	if _dbdg := _bfe.CT_OnOff.ValidateWithPath(path); _dbdg != nil {
		return _dbdg
	}
	return nil
}
func (_dafb *CT_PresenceInfo) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077\u006f\u003a\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0049\u0064"}, Value: _e.Sprintf("\u0025\u0076", _dafb.ProviderIdAttr)})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u003a\u0075\u0073\u0065\u0072\u0049d"}, Value: _e.Sprintf("\u0025\u0076", _dafb.UserIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func ParseUnionST_FixedPercentage(s string) (_b.ST_FixedPercentage, error) {
	return _b.ParseUnionST_FixedPercentage(s)
}
func (_gdd *Color) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gdd.CT_Color = *_fc.NewCT_Color()
	for {
		_afc, _ebe := d.Token()
		if _ebe != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u003a\u0020\u0025\u0073", _ebe)
		}
		if _bbda, _adg := _afc.(_f.EndElement); _adg && _bbda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the Collapsed and its children, prefixing error messages with path
func (_bea *Collapsed) ValidateWithPath(path string) error {
	if _bbc := _bea.CT_OnOff.ValidateWithPath(path); _bbc != nil {
		return _bbc
	}
	return nil
}

// Validate validates the Appearance and its children
func (_bg *Appearance) Validate() error {
	return _bg.ValidateWithPath("\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065")
}
func (_cae ST_SdtAppearance) String() string {
	switch _cae {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078"
	case 2:
		return "\u0074\u0061\u0067\u0073"
	case 3:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_SdtAppearance and its children, prefixing error messages with path
func (_caa *CT_SdtAppearance) ValidateWithPath(path string) error {
	if _aab := _caa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aab != nil {
		return _aab
	}
	return nil
}

// Validate validates the ChartTrackingRefBased and its children
func (_fab *ChartTrackingRefBased) Validate() error {
	return _fab.ValidateWithPath("C\u0068\u0061\u0072\u0074Tr\u0061c\u006b\u0069\u006e\u0067\u0052e\u0066\u0042\u0061\u0073\u0065\u0064")
}
func (_dgfd ST_SdtAppearance) ValidateWithPath(path string) error {
	switch _dgfd {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfd))
	}
	return nil
}

// Validate validates the CT_SdtAppearance and its children
func (_cfb *CT_SdtAppearance) Validate() error {
	return _cfb.ValidateWithPath("\u0043\u0054_\u0053\u0064\u0074A\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065")
}
func (_gaa *Collapsed) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_gaa.CT_OnOff = *_fc.NewCT_OnOff()
	for {
		_bad, _bgef := d.Token()
		if _bgef != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u006f\u006c\u006c\u0061\u0070s\u0065\u0064\u003a\u0020\u0025\u0073", _bgef)
		}
		if _bcaf, _eff := _bad.(_f.EndElement); _eff && _bcaf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewChartTrackingRefBased() *ChartTrackingRefBased {
	_bcf := &ChartTrackingRefBased{}
	_bcf.CT_OnOff = *_fc.NewCT_OnOff()
	return _bcf
}
func (_bc *CT_PresenceInfo) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _ffb := range start.Attr {
		if _ffb.Name.Local == "\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0049\u0064" {
			_fge := _ffb.Value
			_bc.ProviderIdAttr = _fge
			continue
		}
		if _ffb.Name.Local == "\u0075\u0073\u0065\u0072\u0049\u0064" {
			_bge := _ffb.Value
			_bc.UserIdAttr = _bge
			continue
		}
	}
	for {
		_ged, _bfg := d.Token()
		if _bfg != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006ec\u0065\u0049\u006ef\u006f:\u0020\u0025\u0073", _bfg)
		}
		if _gcd, _fcf := _ged.(_f.EndElement); _fcf && _gcd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the DocId and its children
func (_abg *DocId) Validate() error { return _abg.ValidateWithPath("\u0044\u006f\u0063I\u0064") }

type CT_SdtRepeatedSection struct {
	SectionTitle                  *_fc.CT_String
	DoNotAllowInsertDeleteSection *_fc.CT_OnOff
}
type ST_SdtAppearance byte
type Color struct{ _fc.CT_Color }

// Validate validates the WebExtensionLinked and its children
func (_ebcd *WebExtensionLinked) Validate() error {
	return _ebcd.ValidateWithPath("\u0057e\u0062E\u0078\u0074\u0065\u006e\u0073i\u006f\u006eL\u0069\u006e\u006b\u0065\u0064")
}
func ParseUnionST_TextPoint(s string) (_b.ST_TextPoint, error) { return _b.ParseUnionST_TextPoint(s) }

// ValidateWithPath validates the RepeatingSectionItem and its children, prefixing error messages with path
func (_bab *RepeatingSectionItem) ValidateWithPath(path string) error {
	if _gdde := _bab.CT_Empty.ValidateWithPath(path); _gdde != nil {
		return _gdde
	}
	return nil
}

type Collapsed struct{ _fc.CT_OnOff }

// Validate validates the CT_CommentEx and its children
func (_gg *CT_CommentEx) Validate() error {
	return _gg.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078")
}
func (_da *CT_CommentEx) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	for _, _cf := range start.Attr {
		if _cf.Name.Local == "\u0070\u0061\u0072\u0061\u0049\u0064" {
			_ed := _cf.Value
			_da.ParaIdAttr = _ed
			continue
		}
		if _cf.Name.Local == "\u0070\u0061\u0072a\u0049\u0064\u0050\u0061\u0072\u0065\u006e\u0074" {
			_fe := _cf.Value
			_da.ParaIdParentAttr = &_fe
			continue
		}
		if _cf.Name.Local == "\u0064\u006f\u006e\u0065" {
			_cc, _eae := ParseUnionST_OnOff(_cf.Value)
			if _eae != nil {
				return _eae
			}
			_da.DoneAttr = &_cc
			continue
		}
	}
	for {
		_ge, _cfc := d.Token()
		if _cfc != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006fm\u006d\u0065\u006e\u0074\u0045\u0078\u003a\u0020\u0025\u0073", _cfc)
		}
		if _daf, _fea := _ge.(_f.EndElement); _fea && _daf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccgg ST_SdtAppearance) Validate() error { return _ccgg.ValidateWithPath("") }
func NewCollapsed() *Collapsed {
	_bca := &Collapsed{}
	_bca.CT_OnOff = *_fc.NewCT_OnOff()
	return _bca
}
func (_befd *RepeatingSection) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0072ep\u0065\u0061\u0074\u0069\u006e\u0067\u0053\u0065\u0063\u0074\u0069\u006f\u006e"
	return _befd.CT_SdtRepeatedSection.MarshalXML(e, start)
}
func ParseUnionST_AdjCoordinate(s string) (_b.ST_AdjCoordinate, error) {
	return _b.ParseUnionST_AdjCoordinate(s)
}

// Validate validates the CommentsEx and its children
func (_eaac *CommentsEx) Validate() error {
	return _eaac.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078")
}
func ParseUnionST_Percentage(s string) (_b.ST_Percentage, error) {
	return _b.ParseUnionST_Percentage(s)
}

const ST_GuidPattern = "\u005c\u007b\u005b\u0030\u002d\u0039\u0041\u002d\u0046\u005d\u007b\u0038\u007d\u002d\u005b\u0030\u002d9\u0041\u002d\u0046\u005d\u007b\u0034\u007d\u002d\u005b\u0030-\u0039\u0041\u002d\u0046\u005d\u007b\u0034\u007d\u002d\u005b\u0030\u002d\u0039\u0041\u002d\u0046\u005d\u007b4\u007d\u002d\u005b\u0030\u002d\u0039A\u002d\u0046]\u007b\u00312\u007d\\\u007d"

// Validate validates the CT_Person and its children
func (_ce *CT_Person) Validate() error {
	return _ce.ValidateWithPath("\u0043T\u005f\u0050\u0065\u0072\u0073\u006fn")
}
func NewWebExtensionCreated() *WebExtensionCreated {
	_efd := &WebExtensionCreated{}
	_efd.CT_OnOff = *_fc.NewCT_OnOff()
	return _efd
}
func (_eec *DocId) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_eec.CT_Guid = *NewCT_Guid()
	for _, _cd := range start.Attr {
		if _cd.Name.Local == "\u0076\u0061\u006c" {
			_aba := _cd.Value
			_eec.ValAttr = &_aba
			continue
		}
	}
	for {
		_acf, _dgc := d.Token()
		if _dgc != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0044\u006f\u0063\u0049d\u003a\u0020\u0025\u0073", _dgc)
		}
		if _cfcg, _dfc := _acf.(_f.EndElement); _dfc && _cfcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccdd *WebExtensionLinked) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_ccdd.CT_OnOff = *_fc.NewCT_OnOff()
	for {
		_deed, _dgab := d.Token()
		if _dgab != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0057\u0065b\u0045\u0078\u0074\u0065\u006e\u0073\u0069o\u006e\u004c\u0069\u006e\u006b\u0065\u0064\u003a\u0020\u0025\u0073", _dgab)
		}
		if _eea, _edeg := _deed.(_f.EndElement); _edeg && _eea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afd *ST_SdtAppearance) UnmarshalXML(d *_f.Decoder, start _f.StartElement) error {
	_efg, _efgf := d.Token()
	if _efgf != nil {
		return _efgf
	}
	if _dgff, _cgda := _efg.(_f.EndElement); _cgda && _dgff.Name == start.Name {
		*_afd = 1
		return nil
	}
	if _gadf, _efce := _efg.(_f.CharData); !_efce {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efg)
	} else {
		switch string(_gadf) {
		case "":
			*_afd = 0
		case "b\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0042\u006f\u0078":
			*_afd = 1
		case "\u0074\u0061\u0067\u0073":
			*_afd = 2
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_afd = 3
		}
	}
	_efg, _efgf = d.Token()
	if _efgf != nil {
		return _efgf
	}
	if _cdd, _abd := _efg.(_f.EndElement); _abd && _cdd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efg)
}
func (_ceb *FootnoteColumns) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077o\u003af\u006f\u006f\u0074\u006e\u006ft\u0065\u0043o\u006c\u0075\u006d\u006e\u0073"
	return _ceb.CT_DecimalNumber.MarshalXML(e, start)
}

// ValidateWithPath validates the WebExtensionCreated and its children, prefixing error messages with path
func (_abb *WebExtensionCreated) ValidateWithPath(path string) error {
	if _bbed := _abb.CT_OnOff.ValidateWithPath(path); _bbed != nil {
		return _bbed
	}
	return nil
}
func NewDataBinding() *DataBinding {
	_fgaa := &DataBinding{}
	_fgaa.CT_DataBinding = *_fc.NewCT_DataBinding()
	return _fgaa
}
func _dgfg(_ccg bool) uint8 {
	if _ccg {
		return 1
	}
	return 0
}
func (_debc *CT_Person) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0077o\u003a\u0061\u0075\u0074\u0068\u006fr"}, Value: _e.Sprintf("\u0025\u0076", _debc.AuthorAttr)})
	e.EncodeToken(start)
	if _debc.PresenceInfo != nil {
		_eed := _f.StartElement{Name: _f.Name{Local: "\u0077o\u003ap\u0072\u0065\u0073\u0065\u006e\u0063\u0065\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_debc.PresenceInfo, _eed)
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SdtAppearanceUnset       ST_SdtAppearance = 0
	ST_SdtAppearanceBoundingBox ST_SdtAppearance = 1
	ST_SdtAppearanceTags        ST_SdtAppearance = 2
	ST_SdtAppearanceHidden      ST_SdtAppearance = 3
)

type DocId struct{ CT_Guid }

func (_gaag *People) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077o\u003a\u0070\u0065\u006f\u0070\u006ce"
	return _gaag.CT_People.MarshalXML(e, start)
}
func (_bfge ST_SdtAppearance) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	return e.EncodeElement(_bfge.String(), start)
}

type CommentsEx struct{ CT_CommentsEx }

func (_efa *CT_CommentsEx) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	e.EncodeToken(start)
	if _efa.CommentEx != nil {
		_ebfg := _f.StartElement{Name: _f.Name{Local: "\u0077\u006f\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078"}}
		for _, _db := range _efa.CommentEx {
			e.EncodeElement(_db, _ebfg)
		}
	}
	e.EncodeToken(_f.EndElement{Name: start.Name})
	return nil
}
func (_gf *WebExtensionCreated) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0077eb\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0043\u0072\u0065\u0061\u0074e\u0064"
	return _gf.CT_OnOff.MarshalXML(e, start)
}
func ParseUnionST_AnimationChartBuildType(s string) (_b.ST_AnimationChartBuildType, error) {
	return _b.ParseUnionST_AnimationChartBuildType(s)
}

type CT_SdtAppearance struct{ ValAttr ST_SdtAppearance }
type DataBinding struct{ _fc.CT_DataBinding }

// Validate validates the WebExtensionCreated and its children
func (_ege *WebExtensionCreated) Validate() error {
	return _ege.ValidateWithPath("\u0057\u0065\u0062\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u0043\u0072\u0065\u0061\u0074\u0065\u0064")
}
func (_gde *CommentsEx) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078"
	return _gde.CT_CommentsEx.MarshalXML(e, start)
}
func NewPeople() *People { _cdc := &People{}; _cdc.CT_People = *NewCT_People(); return _cdc }
func ParseUnionST_PositiveFixedPercentage(s string) (_b.ST_PositiveFixedPercentage, error) {
	return _b.ParseUnionST_PositiveFixedPercentage(s)
}

type CT_Guid struct{ ValAttr *string }

func (_cfbb *Color) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0063\u006f\u006c\u006f\u0072"
	return _cfbb.CT_Color.MarshalXML(e, start)
}
func (_ac *Appearance) MarshalXML(e *_f.Encoder, start _f.StartElement) error {
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0077"}, Value: "ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0077\u006f\u0072\u0064\u0070\u0072\u006f\u0063\u0065s\u0073i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u00306\u002fm\u0061\u0069n"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0077\u006f"}, Value: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c"})
	start.Attr = append(start.Attr, _f.Attr{Name: _f.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0077\u006f\u003a\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065"
	return _ac.CT_SdtAppearance.MarshalXML(e, start)
}

// Validate validates the FootnoteColumns and its children
func (_bbbb *FootnoteColumns) Validate() error {
	return _bbbb.ValidateWithPath("\u0046o\u006ft\u006e\u006f\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}
func init() {
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054_\u0053\u0064\u0074A\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065", NewCT_SdtAppearance)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078", NewCT_CommentsEx)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0045\u0078", NewCT_CommentEx)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0050\u0065\u006f\u0070\u006ce", NewCT_People)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0063\u0065\u0049\u006e\u0066\u006f", NewCT_PresenceInfo)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0050\u0065\u0072\u0073\u006fn", NewCT_Person)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "C\u0054\u005f\u0053\u0064tR\u0065p\u0065\u0061\u0074\u0065\u0064S\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_SdtRepeatedSection)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0043T\u005f\u0047\u0075\u0069\u0064", NewCT_Guid)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u006f\u006co\u0072", NewColor)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "d\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067", NewDataBinding)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065", NewAppearance)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0045\u0078", NewCommentsEx)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0070\u0065\u006f\u0070\u006c\u0065", NewPeople)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0072\u0065p\u0065\u0061\u0074i\u006e\u0067\u0053\u0065\u0063\u0074\u0069\u006f\u006e", NewRepeatingSection)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "r\u0065p\u0065\u0061\u0074\u0069\u006e\u0067\u0053\u0065c\u0074\u0069\u006f\u006eIt\u0065\u006d", NewRepeatingSectionItem)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "c\u0068\u0061\u0072\u0074Tr\u0061c\u006b\u0069\u006e\u0067\u0052e\u0066\u0042\u0061\u0073\u0065\u0064", NewChartTrackingRefBased)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d", NewCollapsed)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0064\u006f\u0063I\u0064", NewDocId)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0066o\u006ft\u006e\u006f\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewFootnoteColumns)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0077e\u0062E\u0078\u0074\u0065\u006e\u0073i\u006f\u006eL\u0069\u006e\u006b\u0065\u0064", NewWebExtensionLinked)
	_a.RegisterConstructor("\u0068\u0074t\u0070\u003a\u002f\u002f\u0073c\u0068\u0065\u006d\u0061\u0073.\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002e\u0063\u006f\u006d\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u002f\u0077\u006f\u0072\u0064\u002f\u0032\u0030\u0031\u0032\u002f\u0077\u006f\u0072\u0064\u006d\u006c", "\u0077\u0065\u0062\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u0043\u0072\u0065\u0061\u0074\u0065\u0064", NewWebExtensionCreated)
}
